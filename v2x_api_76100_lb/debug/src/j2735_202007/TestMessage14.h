/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).
 */
#ifndef TESTMESSAGE14_H
#define TESTMESSAGE14_H

#include <stdio.h>
#include <stdlib.h>
#include "rtpersrc/asn1PerCppTypes.h"
#include "rtsrc/asn1CppTypes.h"
#include "rtsrc/rtPrintToStream.h"
#include "rtsrc/asn1type.h"
#include "rtxmlsrc/asn1xml.h"
#include "rtxmlsrc/rtXmlCppMsgBuf.h"
#include "rtsrc/asn1type.h"
#include "rtjsonsrc/asn1json.h"
#include "rtjsonsrc/rtJsonCppMsgBuf.h"

/**
 * Header file for ASN.1 module TestMessage14
 */
/**************************************************************/
/*                                                            */
/*  TestMessage14_regional                                    */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'TestMessage14'
*/
struct EXTERN ASN1T_TestMessage14_regional {
   OSUINT8 regionId;
   ASN1TOpenType regExtValue;
} ;

EXTERN int asn1PE_TestMessage14_regional (OSCTXT* pctxt, ASN1T_TestMessage14_regional* pvalue);

EXTERN int asn1PD_TestMessage14_regional (OSCTXT* pctxt, ASN1T_TestMessage14_regional* pvalue);

EXTERN int XmlEnc_TestMessage14_regional (OSCTXT* pctxt, 
   ASN1T_TestMessage14_regional* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_TestMessage14_regional (OSCTXT* pctxt, 
   ASN1T_TestMessage14_regional* pvalue);

EXTERN int asn1JsonEnc_TestMessage14_regional (OSCTXT *pctxt, ASN1T_TestMessage14_regional *pvalue);

EXTERN int asn1JsonDec_TestMessage14_regional (OSCTXT *pctxt, ASN1T_TestMessage14_regional *pvalue);

EXTERN int asn1PrtToStrm_TestMessage14_regional (OSCTXT *pctxt, 
   const char* name, const ASN1T_TestMessage14_regional* pvalue);

EXTERN ASN1T_TestMessage14_regional* 
   new_ASN1T_TestMessage14_regional (ASN1CType& ccobj);

EXTERN int asn1Init_TestMessage14_regional (ASN1T_TestMessage14_regional* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_TestMessage14_regional (OSCTXT *pctxt, 
   ASN1T_TestMessage14_regional* pvalue);

/**************************************************************/
/*                                                            */
/*  TestMessage14                                             */
/*                                                            */
/**************************************************************/
/*
TestMessage14 ::= SEQUENCE {
   header [0] Header OPTIONAL,
   regional [1] SEQUENCE {
      regionId [0] REG-EXT-ID-AND-TYPE.&id ({Reg-TestMessage14}),
      regExtValue [1] EXPLICIT REG-EXT-ID-AND-TYPE.&Type ({Reg-TestMessage14}{@regionId})
   } OPTIONAL,
   ...
}
*/
struct EXTERN ASN1T_TestMessage14 {
   struct {
      unsigned headerPresent : 1;
      unsigned regionalPresent : 1;
   } m;
   struct ASN1T_Header *header;
   ASN1T_TestMessage14_regional regional;
   ASN1TSeqExt extElem1;
   ASN1T_TestMessage14 ();
} ;

EXTERN int asn1PE_TestMessage14 (OSCTXT* pctxt, ASN1T_TestMessage14* pvalue);

EXTERN int asn1PD_TestMessage14 (OSCTXT* pctxt, ASN1T_TestMessage14* pvalue);

EXTERN int XmlEnc_TestMessage14 (OSCTXT* pctxt, ASN1T_TestMessage14* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_TestMessage14 (OSCTXT* pctxt, ASN1T_TestMessage14* pvalue);

EXTERN int asn1JsonEnc_TestMessage14 (OSCTXT *pctxt, ASN1T_TestMessage14 *pvalue);

EXTERN int asn1JsonDec_TestMessage14 (OSCTXT *pctxt, ASN1T_TestMessage14 *pvalue);

EXTERN int asn1PrtToStrm_TestMessage14 (OSCTXT *pctxt, 
   const char* name, const ASN1T_TestMessage14* pvalue);

EXTERN ASN1T_TestMessage14* new_ASN1T_TestMessage14 (ASN1CType& ccobj);

EXTERN int asn1Init_TestMessage14 (ASN1T_TestMessage14* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_TestMessage14 (OSCTXT *pctxt, ASN1T_TestMessage14* pvalue);

#endif
