/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).
 */
#ifndef PROBEDATAMANAGEMENT_H
#define PROBEDATAMANAGEMENT_H

#include <stdio.h>
#include <stdlib.h>
#include "rtpersrc/asn1PerCppTypes.h"
#include "rtsrc/asn1CppTypes.h"
#include "rtsrc/rtPrintToStream.h"
#include "rtsrc/asn1type.h"
#include "rtxmlsrc/asn1xml.h"
#include "rtxmlsrc/rtXmlCppMsgBuf.h"
#include "rtsrc/asn1type.h"
#include "rtjsonsrc/asn1json.h"
#include "rtjsonsrc/rtJsonCppMsgBuf.h"

#include "rtsrc/ASN1CSeqOfList.h"

/**
 * Header file for ASN.1 module ProbeDataManagement
 */
/**************************************************************/
/*                                                            */
/*  Sample                                                    */
/*                                                            */
/**************************************************************/
/*
Sample ::= SEQUENCE {
   sampleStart [0] INTEGER (0..255), --  Sample Starting Point
   sampleEnd [1] INTEGER (0..255) --  Sample Ending Point
}
*/
struct EXTERN ASN1T_Sample {
   OSUINT8 sampleStart;
   OSUINT8 sampleEnd;
} ;

EXTERN int asn1PE_Sample (OSCTXT* pctxt, ASN1T_Sample* pvalue);

EXTERN int asn1PD_Sample (OSCTXT* pctxt, ASN1T_Sample* pvalue);

EXTERN int XmlEnc_Sample (OSCTXT* pctxt, ASN1T_Sample* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Sample (OSCTXT* pctxt, ASN1T_Sample* pvalue);

EXTERN int asn1JsonEnc_Sample (OSCTXT *pctxt, ASN1T_Sample *pvalue);

EXTERN int asn1JsonDec_Sample (OSCTXT *pctxt, ASN1T_Sample *pvalue);

EXTERN int asn1PrtToStrm_Sample (OSCTXT *pctxt, 
   const char* name, const ASN1T_Sample* pvalue);

EXTERN ASN1T_Sample* new_ASN1T_Sample (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  TermTime                                                  */
/*                                                            */
/**************************************************************/
/*
TermTime ::= INTEGER (1..1800)
                                units of sec

*/
typedef OSUINT16 ASN1T_TermTime;

EXTERN int asn1PE_TermTime (OSCTXT* pctxt, ASN1T_TermTime value);

EXTERN int asn1PD_TermTime (OSCTXT* pctxt, ASN1T_TermTime* pvalue);

EXTERN int XmlEnc_TermTime (OSCTXT* pctxt, ASN1T_TermTime value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_TermTime (OSCTXT* pctxt, ASN1T_TermTime* pvalue);

EXTERN int asn1JsonEnc_TermTime (OSCTXT *pctxt, ASN1T_TermTime *pvalue);

EXTERN int asn1JsonDec_TermTime (OSCTXT *pctxt, ASN1T_TermTime *pvalue);

EXTERN int asn1PrtToStrm_TermTime (OSCTXT *pctxt, 
   const char* name, const ASN1T_TermTime* pvalue);

EXTERN ASN1T_TermTime* new_ASN1T_TermTime (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  TermDistance                                              */
/*                                                            */
/**************************************************************/
/*
TermDistance ::= INTEGER (1..30000)
                                       units in meters

*/
typedef OSUINT16 ASN1T_TermDistance;

EXTERN int asn1PE_TermDistance (OSCTXT* pctxt, ASN1T_TermDistance value);

EXTERN int asn1PD_TermDistance (OSCTXT* pctxt, ASN1T_TermDistance* pvalue);

EXTERN int XmlEnc_TermDistance (OSCTXT* pctxt, ASN1T_TermDistance value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_TermDistance (OSCTXT* pctxt, ASN1T_TermDistance* pvalue);

EXTERN int asn1JsonEnc_TermDistance (OSCTXT *pctxt, ASN1T_TermDistance *pvalue);

EXTERN int asn1JsonDec_TermDistance (OSCTXT *pctxt, ASN1T_TermDistance *pvalue);

EXTERN int asn1PrtToStrm_TermDistance (OSCTXT *pctxt, 
   const char* name, const ASN1T_TermDistance* pvalue);

EXTERN ASN1T_TermDistance* new_ASN1T_TermDistance (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  ProbeDataManagement_term                                  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ProbeDataManagement'
*/
/* Choice tag constants */

#define T_ProbeDataManagement_term_termtime 1
#define T_ProbeDataManagement_term_termDistance 2

struct EXTERN ASN1T_ProbeDataManagement_term {
   OSINT32 t;
   union {
      /* t = 1 */
      ASN1T_TermTime termtime;
      /* t = 2 */
      ASN1T_TermDistance termDistance;
   } u;
   ASN1T_ProbeDataManagement_term () { t = 0; OSCRTLMEMSET (&u, 0, sizeof(u)); }
} ;

EXTERN int asn1PE_ProbeDataManagement_term (OSCTXT* pctxt, ASN1T_ProbeDataManagement_term* pvalue);

EXTERN int asn1PD_ProbeDataManagement_term (OSCTXT* pctxt, ASN1T_ProbeDataManagement_term* pvalue);

EXTERN int XmlEnc_ProbeDataManagement_term (OSCTXT* pctxt, 
   ASN1T_ProbeDataManagement_term* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ProbeDataManagement_term (OSCTXT* pctxt, 
   ASN1T_ProbeDataManagement_term* pvalue);

EXTERN int asn1JsonEnc_ProbeDataManagement_term (OSCTXT *pctxt, ASN1T_ProbeDataManagement_term *pvalue);

EXTERN int asn1JsonDec_ProbeDataManagement_term (OSCTXT *pctxt, ASN1T_ProbeDataManagement_term *pvalue);

EXTERN int asn1PrtToStrm_ProbeDataManagement_term (OSCTXT *pctxt, 
   const char* name, const ASN1T_ProbeDataManagement_term* pvalue);

EXTERN ASN1T_ProbeDataManagement_term* 
   new_ASN1T_ProbeDataManagement_term (ASN1CType& ccobj);

EXTERN int asn1Init_ProbeDataManagement_term (ASN1T_ProbeDataManagement_term* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

/**************************************************************/
/*                                                            */
/*  SecondOfTime                                              */
/*                                                            */
/**************************************************************/
/*
SecondOfTime ::= INTEGER (0..61)
                                   units of seconds
     The value 60 shall be used for leap seconds
     or to indicate a full minute.
     The value 61 indicates that the value is unavailable

*/
typedef OSUINT8 ASN1T_SecondOfTime;

EXTERN int asn1PE_SecondOfTime (OSCTXT* pctxt, ASN1T_SecondOfTime value);

EXTERN int asn1PD_SecondOfTime (OSCTXT* pctxt, ASN1T_SecondOfTime* pvalue);

EXTERN int XmlEnc_SecondOfTime (OSCTXT* pctxt, ASN1T_SecondOfTime value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_SecondOfTime (OSCTXT* pctxt, ASN1T_SecondOfTime* pvalue);

EXTERN int asn1JsonEnc_SecondOfTime (OSCTXT *pctxt, ASN1T_SecondOfTime *pvalue);

EXTERN int asn1JsonDec_SecondOfTime (OSCTXT *pctxt, ASN1T_SecondOfTime *pvalue);

EXTERN int asn1PrtToStrm_SecondOfTime (OSCTXT *pctxt, 
   const char* name, const ASN1T_SecondOfTime* pvalue);

EXTERN ASN1T_SecondOfTime* new_ASN1T_SecondOfTime (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  SnapshotTime                                              */
/*                                                            */
/**************************************************************/
/*
SnapshotTime ::= SEQUENCE {
   speed1 [0] GrossSpeed, -- meters/sec - the instantaneous speed  
                           -- when the calculation is performed
   time1 [1] SecondOfTime, -- in seconds
   speed2 [2] GrossSpeed, -- meters/sec - the instantaneous speed 
                           -- when the calculation is performed
   time2 [3] SecondOfTime -- in seconds
}
*/
struct EXTERN ASN1T_SnapshotTime {
   OSUINT8 speed1;
   ASN1T_SecondOfTime time1;
   OSUINT8 speed2;
   ASN1T_SecondOfTime time2;
} ;

EXTERN int asn1PE_SnapshotTime (OSCTXT* pctxt, ASN1T_SnapshotTime* pvalue);

EXTERN int asn1PD_SnapshotTime (OSCTXT* pctxt, ASN1T_SnapshotTime* pvalue);

EXTERN int XmlEnc_SnapshotTime (OSCTXT* pctxt, ASN1T_SnapshotTime* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_SnapshotTime (OSCTXT* pctxt, ASN1T_SnapshotTime* pvalue);

EXTERN int asn1JsonEnc_SnapshotTime (OSCTXT *pctxt, ASN1T_SnapshotTime *pvalue);

EXTERN int asn1JsonDec_SnapshotTime (OSCTXT *pctxt, ASN1T_SnapshotTime *pvalue);

EXTERN int asn1PrtToStrm_SnapshotTime (OSCTXT *pctxt, 
   const char* name, const ASN1T_SnapshotTime* pvalue);

EXTERN ASN1T_SnapshotTime* new_ASN1T_SnapshotTime (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  GrossDistance                                             */
/*                                                            */
/**************************************************************/
/*
GrossDistance ::= INTEGER (0..1023)
                                     Units of 1.00 meters
    The value 1023 shall indicate unavailable

*/
typedef OSUINT16 ASN1T_GrossDistance;

EXTERN int asn1PE_GrossDistance (OSCTXT* pctxt, ASN1T_GrossDistance value);

EXTERN int asn1PD_GrossDistance (OSCTXT* pctxt, ASN1T_GrossDistance* pvalue);

EXTERN int XmlEnc_GrossDistance (OSCTXT* pctxt, ASN1T_GrossDistance value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_GrossDistance (OSCTXT* pctxt, ASN1T_GrossDistance* pvalue);

EXTERN int asn1JsonEnc_GrossDistance (OSCTXT *pctxt, ASN1T_GrossDistance *pvalue);

EXTERN int asn1JsonDec_GrossDistance (OSCTXT *pctxt, ASN1T_GrossDistance *pvalue);

EXTERN int asn1PrtToStrm_GrossDistance (OSCTXT *pctxt, 
   const char* name, const ASN1T_GrossDistance* pvalue);

EXTERN ASN1T_GrossDistance* new_ASN1T_GrossDistance (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  SnapshotDistance                                          */
/*                                                            */
/**************************************************************/
/*
SnapshotDistance ::= SEQUENCE {
   distance1 [0] GrossDistance, -- meters
   speed1 [1] GrossSpeed, -- meters/second
   distance2 [2] GrossDistance, -- meters
   speed2 [3] GrossSpeed -- meters/second
}
*/
struct EXTERN ASN1T_SnapshotDistance {
   ASN1T_GrossDistance distance1;
   OSUINT8 speed1;
   ASN1T_GrossDistance distance2;
   OSUINT8 speed2;
} ;

EXTERN int asn1PE_SnapshotDistance (OSCTXT* pctxt, ASN1T_SnapshotDistance* pvalue);

EXTERN int asn1PD_SnapshotDistance (OSCTXT* pctxt, ASN1T_SnapshotDistance* pvalue);

EXTERN int XmlEnc_SnapshotDistance (OSCTXT* pctxt, 
   ASN1T_SnapshotDistance* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_SnapshotDistance (OSCTXT* pctxt, 
   ASN1T_SnapshotDistance* pvalue);

EXTERN int asn1JsonEnc_SnapshotDistance (OSCTXT *pctxt, ASN1T_SnapshotDistance *pvalue);

EXTERN int asn1JsonDec_SnapshotDistance (OSCTXT *pctxt, ASN1T_SnapshotDistance *pvalue);

EXTERN int asn1PrtToStrm_SnapshotDistance (OSCTXT *pctxt, 
   const char* name, const ASN1T_SnapshotDistance* pvalue);

EXTERN ASN1T_SnapshotDistance* new_ASN1T_SnapshotDistance (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  ProbeDataManagement_snapshot                              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ProbeDataManagement'
*/
/* Choice tag constants */

#define T_ProbeDataManagement_snapshot_snapshotTime 1
#define T_ProbeDataManagement_snapshot_snapshotDistance 2

struct EXTERN ASN1T_ProbeDataManagement_snapshot {
   OSINT32 t;
   union {
      /* t = 1 */
      ASN1T_SnapshotTime *snapshotTime;
      /* t = 2 */
      ASN1T_SnapshotDistance *snapshotDistance;
   } u;
   ASN1T_ProbeDataManagement_snapshot () { t = 0; OSCRTLMEMSET (&u, 0, sizeof(u)); }
} ;

EXTERN int asn1PE_ProbeDataManagement_snapshot (OSCTXT* pctxt, ASN1T_ProbeDataManagement_snapshot* pvalue);

EXTERN int asn1PD_ProbeDataManagement_snapshot (OSCTXT* pctxt, ASN1T_ProbeDataManagement_snapshot* pvalue);

EXTERN int XmlEnc_ProbeDataManagement_snapshot (OSCTXT* pctxt, 
   ASN1T_ProbeDataManagement_snapshot* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ProbeDataManagement_snapshot (OSCTXT* pctxt, 
   ASN1T_ProbeDataManagement_snapshot* pvalue);

EXTERN int asn1JsonEnc_ProbeDataManagement_snapshot (OSCTXT *pctxt, ASN1T_ProbeDataManagement_snapshot *pvalue);

EXTERN int asn1JsonDec_ProbeDataManagement_snapshot (OSCTXT *pctxt, ASN1T_ProbeDataManagement_snapshot *pvalue);

EXTERN int asn1PrtToStrm_ProbeDataManagement_snapshot (OSCTXT *pctxt, 
   const char* name, const ASN1T_ProbeDataManagement_snapshot* pvalue);

EXTERN ASN1T_ProbeDataManagement_snapshot* 
   new_ASN1T_ProbeDataManagement_snapshot (ASN1CType& ccobj);

EXTERN int asn1Init_ProbeDataManagement_snapshot (
   ASN1T_ProbeDataManagement_snapshot* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ProbeDataManagement_snapshot (OSCTXT *pctxt, 
   ASN1T_ProbeDataManagement_snapshot* pvalue);

/**************************************************************/
/*                                                            */
/*  VehicleStatusDeviceTypeTag                                */
/*                                                            */
/**************************************************************/
/*
VehicleStatusDeviceTypeTag ::= ENUMERATED { unknown(0), lights(1), wipers(2), brakes(3), stab(4), trac(5), abs(6), sunS(7), rainS(8), airTemp(9), steering(10), vertAccelThres(11), vertAccel(12), hozAccelLong(13), hozAccelLat(14), hozAccelCon(15), accel4way(16), confidenceSet(17), obDist(18), obDirect(19), yaw(20), yawRateCon(21), dateTime(22), fullPos(23), position2D(24), position3D(25), vehicle(26), speedHeadC(27), speedC(28), ... }
*/
struct EXTERN VehicleStatusDeviceTypeTag {
   enum Root {
      unknown = 0,
      lights = 1,
      wipers = 2,
      brakes = 3,
      stab = 4,
      trac = 5,
      abs_ = 6,
      sunS = 7,
      rainS = 8,
      airTemp = 9,
      steering = 10,
      vertAccelThres = 11,
      vertAccel = 12,
      hozAccelLong = 13,
      hozAccelLat = 14,
      hozAccelCon = 15,
      accel4way = 16,
      confidenceSet = 17,
      obDist = 18,
      obDirect = 19,
      yaw = 20,
      yawRateCon = 21,
      dateTime = 22,
      fullPos = 23,
      position2D = 24,
      position3D = 25,
      vehicle = 26,
      speedHeadC = 27,
      speedC = 28
   } ;
} ;

typedef OSUINT32 ASN1T_VehicleStatusDeviceTypeTag;

EXTERN int asn1PE_VehicleStatusDeviceTypeTag (OSCTXT* pctxt, ASN1T_VehicleStatusDeviceTypeTag value);

EXTERN int asn1PD_VehicleStatusDeviceTypeTag (OSCTXT* pctxt, ASN1T_VehicleStatusDeviceTypeTag* pvalue);

EXTERN int XmlEnc_VehicleStatusDeviceTypeTag (OSCTXT* pctxt, 
   ASN1T_VehicleStatusDeviceTypeTag value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_VehicleStatusDeviceTypeTag (OSCTXT* pctxt, 
   ASN1T_VehicleStatusDeviceTypeTag* pvalue);

EXTERN int asn1JsonEnc_VehicleStatusDeviceTypeTag (OSCTXT *pctxt, ASN1T_VehicleStatusDeviceTypeTag *pvalue);

EXTERN int asn1JsonDec_VehicleStatusDeviceTypeTag (OSCTXT *pctxt, ASN1T_VehicleStatusDeviceTypeTag *pvalue);

EXTERN int asn1PrtToStrm_VehicleStatusDeviceTypeTag (OSCTXT *pctxt, 
   const char* name, const ASN1T_VehicleStatusDeviceTypeTag* pvalue);

EXTERN ASN1T_VehicleStatusDeviceTypeTag* 
   new_ASN1T_VehicleStatusDeviceTypeTag (ASN1CType& ccobj);

EXTERN extern const OSEnumItem ASN1T_VehicleStatusDeviceTypeTag_ENUMTAB[];
#define ASN1T_VehicleStatusDeviceTypeTag_ENUMTABSIZE 29

EXTERN const OSUTF8CHAR* ASN1T_VehicleStatusDeviceTypeTag_ToString (OSINT32 value);

EXTERN int ASN1T_VehicleStatusDeviceTypeTag_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, ASN1T_VehicleStatusDeviceTypeTag* pvalue);

EXTERN int ASN1T_VehicleStatusDeviceTypeTag_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      ASN1T_VehicleStatusDeviceTypeTag* pvalue);

/**************************************************************/
/*                                                            */
/*  VehicleStatusRequest                                      */
/*                                                            */
/**************************************************************/
/*
VehicleStatusRequest ::= SEQUENCE {
   dataType [0] VehicleStatusDeviceTypeTag,
   subType [1] INTEGER (1..15) OPTIONAL,
   sendOnLessThenValue [2] INTEGER (-32767..32767) OPTIONAL,
   sendOnMoreThenValue [3] INTEGER (-32767..32767) OPTIONAL,
   sendAll [4] BOOLEAN OPTIONAL,
   ...
}
*/
struct EXTERN ASN1T_VehicleStatusRequest {
   struct {
      unsigned subTypePresent : 1;
      unsigned sendOnLessThenValuePresent : 1;
      unsigned sendOnMoreThenValuePresent : 1;
      unsigned sendAllPresent : 1;
   } m;
   ASN1T_VehicleStatusDeviceTypeTag dataType;
   OSUINT8 subType;
   OSINT16 sendOnLessThenValue;
   OSINT16 sendOnMoreThenValue;
   OSBOOL sendAll;
   ASN1TSeqExt extElem1;
   ASN1T_VehicleStatusRequest ();
} ;

EXTERN int asn1PE_VehicleStatusRequest (OSCTXT* pctxt, ASN1T_VehicleStatusRequest* pvalue);

EXTERN int asn1PD_VehicleStatusRequest (OSCTXT* pctxt, ASN1T_VehicleStatusRequest* pvalue);

EXTERN int XmlEnc_VehicleStatusRequest (OSCTXT* pctxt, 
   ASN1T_VehicleStatusRequest* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_VehicleStatusRequest (OSCTXT* pctxt, 
   ASN1T_VehicleStatusRequest* pvalue);

EXTERN int asn1JsonEnc_VehicleStatusRequest (OSCTXT *pctxt, ASN1T_VehicleStatusRequest *pvalue);

EXTERN int asn1JsonDec_VehicleStatusRequest (OSCTXT *pctxt, ASN1T_VehicleStatusRequest *pvalue);

EXTERN int asn1PrtToStrm_VehicleStatusRequest (OSCTXT *pctxt, 
   const char* name, const ASN1T_VehicleStatusRequest* pvalue);

EXTERN ASN1T_VehicleStatusRequest* 
   new_ASN1T_VehicleStatusRequest (ASN1CType& ccobj);

EXTERN int asn1Init_VehicleStatusRequest (ASN1T_VehicleStatusRequest* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_VehicleStatusRequest (OSCTXT *pctxt, 
   ASN1T_VehicleStatusRequest* pvalue);

/**************************************************************/
/*                                                            */
/*  VehicleStatusRequestList                                  */
/*                                                            */
/**************************************************************/
/*
VehicleStatusRequestList ::= SEQUENCE (SIZE (1..32)) OF VehicleStatusRequest
*/
/* List of ASN1T_VehicleStatusRequest */
typedef ASN1TSeqOfList ASN1T_VehicleStatusRequestList;

class EXTERN ASN1C_VehicleStatusRequestList :
public ASN1CSeqOfList
{
protected:
   ASN1T_VehicleStatusRequestList& msgData;
public:
   /**
    * Control class: ASN1C_VehicleStatusRequestList
    * Data class:    ASN1T_VehicleStatusRequestList
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_VehicleStatusRequestList (ASN1T_VehicleStatusRequestList& data);

   /**
    * Control class: ASN1C_VehicleStatusRequestList<br/>
    * Data class: ASN1T_VehicleStatusRequestList<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_VehicleStatusRequestList (OSRTMessageBufferIF& msgBuf
      , ASN1T_VehicleStatusRequestList& data);

   /**
    * Control class: ASN1C_VehicleStatusRequestList<br/>
    * Data class: ASN1T_VehicleStatusRequestList<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_VehicleStatusRequestList (ASN1CType& ccobj
      , ASN1T_VehicleStatusRequestList& data);

   virtual ~ASN1C_VehicleStatusRequestList () {}

   /**
    * Data class: ASN1T_VehicleStatusRequest<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_VehicleStatusRequest* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_VehicleStatusRequest.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_VehicleStatusRequest* NewElement ();

   /**
    * Data class: ASN1T_VehicleStatusRequest.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_VehicleStatusRequest* AppendNewElement ();

private:
   ASN1C_VehicleStatusRequestList& operator= (const ASN1C_VehicleStatusRequestList&) {return *this;}
} ;

EXTERN int asn1PE_VehicleStatusRequestList (OSCTXT* pctxt, ASN1T_VehicleStatusRequestList* pvalue);

EXTERN int asn1PD_VehicleStatusRequestList (OSCTXT* pctxt, ASN1T_VehicleStatusRequestList* pvalue);

EXTERN int XmlEnc_VehicleStatusRequestList (OSCTXT* pctxt, 
   ASN1T_VehicleStatusRequestList* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_VehicleStatusRequestList (OSCTXT* pctxt, 
   ASN1T_VehicleStatusRequestList* pvalue);

EXTERN int asn1JsonEnc_VehicleStatusRequestList (OSCTXT *pctxt, ASN1T_VehicleStatusRequestList *pvalue);

EXTERN int asn1JsonDec_VehicleStatusRequestList (OSCTXT *pctxt, ASN1T_VehicleStatusRequestList *pvalue);

EXTERN int asn1PrtToStrm_VehicleStatusRequestList (OSCTXT *pctxt, 
   const char* name, const ASN1T_VehicleStatusRequestList* pvalue);

EXTERN int asn1Init_VehicleStatusRequestList (ASN1T_VehicleStatusRequestList* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_VehicleStatusRequestList (OSCTXT *pctxt, 
   ASN1T_VehicleStatusRequestList* pvalue);

/**************************************************************/
/*                                                            */
/*  ProbeDataManagement_regional_element                      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ProbeDataManagement'
*/
struct EXTERN ASN1T_ProbeDataManagement_regional_element {
   OSUINT8 regionId;
   ASN1TOpenType regExtValue;
} ;

EXTERN int asn1PE_ProbeDataManagement_regional_element (OSCTXT* pctxt, ASN1T_ProbeDataManagement_regional_element* pvalue);

EXTERN int asn1PD_ProbeDataManagement_regional_element (OSCTXT* pctxt, ASN1T_ProbeDataManagement_regional_element* pvalue);

EXTERN int XmlEnc_ProbeDataManagement_regional_element (OSCTXT* pctxt, 
   ASN1T_ProbeDataManagement_regional_element* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ProbeDataManagement_regional_element (OSCTXT* pctxt, 
   ASN1T_ProbeDataManagement_regional_element* pvalue);

EXTERN int asn1JsonEnc_ProbeDataManagement_regional_element (OSCTXT *pctxt, ASN1T_ProbeDataManagement_regional_element *pvalue);

EXTERN int asn1JsonDec_ProbeDataManagement_regional_element (OSCTXT *pctxt, ASN1T_ProbeDataManagement_regional_element *pvalue);

EXTERN int asn1PrtToStrm_ProbeDataManagement_regional_element (OSCTXT *pctxt, 
   const char* name, const ASN1T_ProbeDataManagement_regional_element* pvalue);

EXTERN ASN1T_ProbeDataManagement_regional_element* 
   new_ASN1T_ProbeDataManagement_regional_element (ASN1CType& ccobj);

EXTERN int asn1Init_ProbeDataManagement_regional_element (
   ASN1T_ProbeDataManagement_regional_element* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ProbeDataManagement_regional_element (OSCTXT *pctxt, 
   ASN1T_ProbeDataManagement_regional_element* pvalue);

/**************************************************************/
/*                                                            */
/*  ProbeDataManagement_regional                              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ProbeDataManagement'
*/
/* List of ASN1T_ProbeDataManagement_regional_element */
typedef ASN1TSeqOfList ASN1T_ProbeDataManagement_regional;

class EXTERN ASN1C_ProbeDataManagement_regional :
public ASN1CSeqOfList
{
protected:
   ASN1T_ProbeDataManagement_regional& msgData;
public:
   /**
    * Control class: ASN1C_ProbeDataManagement_regional
    * Data class:    ASN1T_ProbeDataManagement_regional
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ProbeDataManagement_regional
       (ASN1T_ProbeDataManagement_regional& data);

   /**
    * Control class: ASN1C_ProbeDataManagement_regional<br/>
    * Data class: ASN1T_ProbeDataManagement_regional<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ProbeDataManagement_regional (OSRTMessageBufferIF& msgBuf
      , ASN1T_ProbeDataManagement_regional& data);

   /**
    * Control class: ASN1C_ProbeDataManagement_regional<br/>
    * Data class: ASN1T_ProbeDataManagement_regional<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_ProbeDataManagement_regional (ASN1CType& ccobj
      , ASN1T_ProbeDataManagement_regional& data);

   virtual ~ASN1C_ProbeDataManagement_regional () {}

   /**
    * Data class: ASN1T_ProbeDataManagement_regional_element<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_ProbeDataManagement_regional_element* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_ProbeDataManagement_regional_element.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_ProbeDataManagement_regional_element* NewElement ();

   /**
    * Data class: ASN1T_ProbeDataManagement_regional_element.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_ProbeDataManagement_regional_element* AppendNewElement ();

   /* Get IE using regionId key value */
   /* index element type is forward referenced */
   ASN1T_ProbeDataManagement_regional_element* GetIE (OSUINT8 regionId);

   /* Get all matching IEs using regionId key value */
   int GetAllIEs (OSUINT8 regionId, 
      ASN1T_ProbeDataManagement_regional* pmatches);

private:
   ASN1C_ProbeDataManagement_regional& operator= (const ASN1C_ProbeDataManagement_regional&) {return *this;}
} ;

EXTERN int asn1PE_ProbeDataManagement_regional (OSCTXT* pctxt, ASN1T_ProbeDataManagement_regional* pvalue);

EXTERN int asn1PD_ProbeDataManagement_regional (OSCTXT* pctxt, ASN1T_ProbeDataManagement_regional* pvalue);

EXTERN int XmlEnc_ProbeDataManagement_regional (OSCTXT* pctxt, 
   ASN1T_ProbeDataManagement_regional* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ProbeDataManagement_regional (OSCTXT* pctxt, 
   ASN1T_ProbeDataManagement_regional* pvalue);

EXTERN int asn1JsonEnc_ProbeDataManagement_regional (OSCTXT *pctxt, ASN1T_ProbeDataManagement_regional *pvalue);

EXTERN int asn1JsonDec_ProbeDataManagement_regional (OSCTXT *pctxt, ASN1T_ProbeDataManagement_regional *pvalue);

EXTERN int asn1PrtToStrm_ProbeDataManagement_regional (OSCTXT *pctxt, 
   const char* name, const ASN1T_ProbeDataManagement_regional* pvalue);

EXTERN int asn1Init_ProbeDataManagement_regional (
   ASN1T_ProbeDataManagement_regional* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ProbeDataManagement_regional (OSCTXT *pctxt, 
   ASN1T_ProbeDataManagement_regional* pvalue);

/**************************************************************/
/*                                                            */
/*  ProbeDataManagement                                       */
/*                                                            */
/**************************************************************/
/*
ProbeDataManagement ::= SEQUENCE {
   timeStamp [0] MinuteOfTheYear OPTIONAL,
   sample [1] Sample, -- Identifies the vehicle  
                                          -- population affected by this
   directions [2] HeadingSlice, -- Applicable headings/directions
   term [3] EXPLICIT CHOICE {
      termtime [0] TermTime, -- Terminate this management process 
                                          -- based on Time-to-Live
      termDistance [1] TermDistance
   },
   snapshot [4] EXPLICIT CHOICE {
      snapshotTime [0] SnapshotTime, -- Collect snapshots based on Time
                                          -- the value 0 indicates forever
      snapshotDistance [1] SnapshotDistance
   },
   txInterval [5] SecondOfTime, -- Time Interval at which to send snapshots
   dataElements [6] VehicleStatusRequestList OPTIONAL,
                                          -- Control data frames and associated 
                                          -- trigger thresholds to be changed 
   regional [7] SEQUENCE (SIZE (1..4)) OF SEQUENCE {
      regionId [0] REG-EXT-ID-AND-TYPE.&id ({Reg-ProbeDataManagement}),
      regExtValue [1] EXPLICIT REG-EXT-ID-AND-TYPE.&Type ({Reg-ProbeDataManagement}{@regionId})
   } OPTIONAL,
   ...
}
*/
struct EXTERN ASN1T_ProbeDataManagement {
   struct {
      unsigned timeStampPresent : 1;
      unsigned dataElementsPresent : 1;
      unsigned regionalPresent : 1;
   } m;
   OSUINT32 timeStamp;
   ASN1T_Sample sample;
   struct ASN1T_HeadingSlice *directions;
   ASN1T_ProbeDataManagement_term term;
   ASN1T_ProbeDataManagement_snapshot snapshot;
   ASN1T_SecondOfTime txInterval;
   ASN1T_VehicleStatusRequestList dataElements;
   ASN1T_ProbeDataManagement_regional regional;
   ASN1TSeqExt extElem1;
   ASN1T_ProbeDataManagement ();
} ;

EXTERN int asn1PE_ProbeDataManagement (OSCTXT* pctxt, ASN1T_ProbeDataManagement* pvalue);

EXTERN int asn1PD_ProbeDataManagement (OSCTXT* pctxt, ASN1T_ProbeDataManagement* pvalue);

EXTERN int XmlEnc_ProbeDataManagement (OSCTXT* pctxt, 
   ASN1T_ProbeDataManagement* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ProbeDataManagement (OSCTXT* pctxt, 
   ASN1T_ProbeDataManagement* pvalue);

EXTERN int asn1JsonEnc_ProbeDataManagement (OSCTXT *pctxt, ASN1T_ProbeDataManagement *pvalue);

EXTERN int asn1JsonDec_ProbeDataManagement (OSCTXT *pctxt, ASN1T_ProbeDataManagement *pvalue);

EXTERN int asn1PrtToStrm_ProbeDataManagement (OSCTXT *pctxt, 
   const char* name, const ASN1T_ProbeDataManagement* pvalue);

EXTERN ASN1T_ProbeDataManagement* 
   new_ASN1T_ProbeDataManagement (ASN1CType& ccobj);

EXTERN int asn1Init_ProbeDataManagement (ASN1T_ProbeDataManagement* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ProbeDataManagement (OSCTXT *pctxt, 
   ASN1T_ProbeDataManagement* pvalue);

#endif
