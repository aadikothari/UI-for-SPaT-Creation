/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).
 */
#ifndef ITS_CONTAINER_H
#define ITS_CONTAINER_H

#include <stdio.h>
#include <stdlib.h>
#include "rtpersrc/asn1PerCppTypes.h"
#include "rtsrc/asn1CppTypes.h"
#include "rtsrc/rtPrintToStream.h"
#include "rtsrc/asn1type.h"
#include "rtxmlsrc/asn1xml.h"
#include "rtxmlsrc/rtXmlCppMsgBuf.h"
#include "rtsrc/asn1type.h"
#include "rtjsonsrc/asn1json.h"
#include "rtjsonsrc/rtJsonCppMsgBuf.h"

#include "rtsrc/ASN1CBitStr.h"
#include "rtsrc/ASN1CSeqOfList.h"

/**
 * Header file for ASN.1 module ITS-Container
 */
/**************************************************************/
/*                                                            */
/*  ItsPduHeader_protocolVersion                              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ItsPduHeader'
*/
struct EXTERN ITS_ItsPduHeader_protocolVersion {
   enum Root {
      currentVersion = 1
   } ;
} ;

typedef OSUINT8 ASN1T_ITS_ItsPduHeader_protocolVersion;

EXTERN int asn1PE_ITS_ItsPduHeader_protocolVersion (OSCTXT* pctxt, ASN1T_ITS_ItsPduHeader_protocolVersion value);

EXTERN int asn1PD_ITS_ItsPduHeader_protocolVersion (OSCTXT* pctxt, ASN1T_ITS_ItsPduHeader_protocolVersion* pvalue);

EXTERN int XmlEnc_ITS_ItsPduHeader_protocolVersion (OSCTXT* pctxt, 
   ASN1T_ITS_ItsPduHeader_protocolVersion value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_ItsPduHeader_protocolVersion (OSCTXT* pctxt, 
   ASN1T_ITS_ItsPduHeader_protocolVersion* pvalue);

EXTERN int asn1JsonEnc_ITS_ItsPduHeader_protocolVersion (OSCTXT *pctxt, ASN1T_ITS_ItsPduHeader_protocolVersion *pvalue);

EXTERN int asn1JsonDec_ITS_ItsPduHeader_protocolVersion (OSCTXT *pctxt, ASN1T_ITS_ItsPduHeader_protocolVersion *pvalue);

EXTERN int asn1PrtToStrm_ITS_ItsPduHeader_protocolVersion (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_ItsPduHeader_protocolVersion* pvalue);

EXTERN ASN1T_ITS_ItsPduHeader_protocolVersion* 
   new_ASN1T_ITS_ItsPduHeader_protocolVersion (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  ItsPduHeader_messageID                                    */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ItsPduHeader'
*/
struct EXTERN ITS_ItsPduHeader_messageID {
   enum Root {
      denm = 1,
      cam = 2,
      poi = 3,
      spat = 4,
      map = 5,
      ivi = 6,
      ev_rsr = 7
   } ;
} ;

typedef OSUINT8 ASN1T_ITS_ItsPduHeader_messageID;

EXTERN int asn1PE_ITS_ItsPduHeader_messageID (OSCTXT* pctxt, ASN1T_ITS_ItsPduHeader_messageID value);

EXTERN int asn1PD_ITS_ItsPduHeader_messageID (OSCTXT* pctxt, ASN1T_ITS_ItsPduHeader_messageID* pvalue);

EXTERN int XmlEnc_ITS_ItsPduHeader_messageID (OSCTXT* pctxt, 
   ASN1T_ITS_ItsPduHeader_messageID value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_ItsPduHeader_messageID (OSCTXT* pctxt, 
   ASN1T_ITS_ItsPduHeader_messageID* pvalue);

EXTERN int asn1JsonEnc_ITS_ItsPduHeader_messageID (OSCTXT *pctxt, ASN1T_ITS_ItsPduHeader_messageID *pvalue);

EXTERN int asn1JsonDec_ITS_ItsPduHeader_messageID (OSCTXT *pctxt, ASN1T_ITS_ItsPduHeader_messageID *pvalue);

EXTERN int asn1PrtToStrm_ITS_ItsPduHeader_messageID (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_ItsPduHeader_messageID* pvalue);

EXTERN ASN1T_ITS_ItsPduHeader_messageID* 
   new_ASN1T_ITS_ItsPduHeader_messageID (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  StationID                                                 */
/*                                                            */
/**************************************************************/
/*
StationID ::= INTEGER (0..4294967295)
*/
typedef OSUINT32 ASN1T_ITS_StationID;

EXTERN int asn1PE_ITS_StationID (OSCTXT* pctxt, ASN1T_ITS_StationID value);

EXTERN int asn1PD_ITS_StationID (OSCTXT* pctxt, ASN1T_ITS_StationID* pvalue);

EXTERN int XmlEnc_ITS_StationID (OSCTXT* pctxt, ASN1T_ITS_StationID value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_StationID (OSCTXT* pctxt, ASN1T_ITS_StationID* pvalue);

EXTERN int asn1JsonEnc_ITS_StationID (OSCTXT *pctxt, ASN1T_ITS_StationID *pvalue);

EXTERN int asn1JsonDec_ITS_StationID (OSCTXT *pctxt, ASN1T_ITS_StationID *pvalue);

EXTERN int asn1PrtToStrm_ITS_StationID (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_StationID* pvalue);

EXTERN ASN1T_ITS_StationID* new_ASN1T_ITS_StationID (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  ItsPduHeader                                              */
/*                                                            */
/**************************************************************/
/*
ItsPduHeader ::= SEQUENCE {
   protocolVersion [0] INTEGER { currentVersion(1) } (0..255),
   messageID [1] INTEGER { denm(1), cam(2), poi(3), spat(4), map(5), ivi(6), ev-rsr(7) } (0..255),
   stationID [2] StationID
}
*/
struct EXTERN ASN1T_ITS_ItsPduHeader {
   ASN1T_ITS_ItsPduHeader_protocolVersion protocolVersion;
   ASN1T_ITS_ItsPduHeader_messageID messageID;
   ASN1T_ITS_StationID stationID;
} ;

EXTERN int asn1PE_ITS_ItsPduHeader (OSCTXT* pctxt, ASN1T_ITS_ItsPduHeader* pvalue);

EXTERN int asn1PD_ITS_ItsPduHeader (OSCTXT* pctxt, ASN1T_ITS_ItsPduHeader* pvalue);

EXTERN int XmlEnc_ITS_ItsPduHeader (OSCTXT* pctxt, 
   ASN1T_ITS_ItsPduHeader* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_ItsPduHeader (OSCTXT* pctxt, 
   ASN1T_ITS_ItsPduHeader* pvalue);

EXTERN int asn1JsonEnc_ITS_ItsPduHeader (OSCTXT *pctxt, ASN1T_ITS_ItsPduHeader *pvalue);

EXTERN int asn1JsonDec_ITS_ItsPduHeader (OSCTXT *pctxt, ASN1T_ITS_ItsPduHeader *pvalue);

EXTERN int asn1PrtToStrm_ITS_ItsPduHeader (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_ItsPduHeader* pvalue);

EXTERN ASN1T_ITS_ItsPduHeader* new_ASN1T_ITS_ItsPduHeader (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  StationType                                               */
/*                                                            */
/**************************************************************/
/*
StationType ::= INTEGER { unknown(0), pedestrian(1), cyclist(2), moped(3), motorcycle(4), passengerCar(5), bus(6), lightTruck(7), heavyTruck(8), trailer(9), specialVehicles(10), tram(11), roadSideUnit(15) } (0..255)
*/
struct EXTERN ITS_StationType {
   enum Root {
      unknown = 0,
      pedestrian = 1,
      cyclist = 2,
      moped = 3,
      motorcycle = 4,
      passengerCar = 5,
      bus = 6,
      lightTruck = 7,
      heavyTruck = 8,
      trailer = 9,
      specialVehicles = 10,
      tram = 11,
      roadSideUnit = 15
   } ;
} ;

typedef OSUINT8 ASN1T_ITS_StationType;

EXTERN int asn1PE_ITS_StationType (OSCTXT* pctxt, ASN1T_ITS_StationType value);

EXTERN int asn1PD_ITS_StationType (OSCTXT* pctxt, ASN1T_ITS_StationType* pvalue);

EXTERN int XmlEnc_ITS_StationType (OSCTXT* pctxt, ASN1T_ITS_StationType value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_StationType (OSCTXT* pctxt, ASN1T_ITS_StationType* pvalue
   );

EXTERN int asn1JsonEnc_ITS_StationType (OSCTXT *pctxt, ASN1T_ITS_StationType *pvalue);

EXTERN int asn1JsonDec_ITS_StationType (OSCTXT *pctxt, ASN1T_ITS_StationType *pvalue);

EXTERN int asn1PrtToStrm_ITS_StationType (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_StationType* pvalue);

EXTERN ASN1T_ITS_StationType* new_ASN1T_ITS_StationType (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  Latitude                                                  */
/*                                                            */
/**************************************************************/
/*
Latitude ::= INTEGER { oneMicrodegreeSouth(-10), oneMicrodegreeNorth(10), unavailable(900000001) } (-900000000..900000001)
*/
struct EXTERN ITS_Latitude {
   enum Root {
      oneMicrodegreeSouth = -10,
      oneMicrodegreeNorth = 10,
      unavailable = 900000001
   } ;
} ;

typedef OSINT32 ASN1T_ITS_Latitude;

EXTERN int asn1PE_ITS_Latitude (OSCTXT* pctxt, ASN1T_ITS_Latitude value);

EXTERN int asn1PD_ITS_Latitude (OSCTXT* pctxt, ASN1T_ITS_Latitude* pvalue);

EXTERN int XmlEnc_ITS_Latitude (OSCTXT* pctxt, ASN1T_ITS_Latitude value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_Latitude (OSCTXT* pctxt, ASN1T_ITS_Latitude* pvalue);

EXTERN int asn1JsonEnc_ITS_Latitude (OSCTXT *pctxt, ASN1T_ITS_Latitude *pvalue);

EXTERN int asn1JsonDec_ITS_Latitude (OSCTXT *pctxt, ASN1T_ITS_Latitude *pvalue);

EXTERN int asn1PrtToStrm_ITS_Latitude (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_Latitude* pvalue);

EXTERN ASN1T_ITS_Latitude* new_ASN1T_ITS_Latitude (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  Longitude                                                 */
/*                                                            */
/**************************************************************/
/*
Longitude ::= INTEGER { oneMicrodegreeWest(-10), oneMicrodegreeEast(10), unavailable(1800000001) } (-1800000000..1800000001)
*/
struct EXTERN ITS_Longitude {
   enum Root {
      oneMicrodegreeWest = -10,
      oneMicrodegreeEast = 10,
      unavailable = 1800000001
   } ;
} ;

typedef OSINT32 ASN1T_ITS_Longitude;

EXTERN int asn1PE_ITS_Longitude (OSCTXT* pctxt, ASN1T_ITS_Longitude value);

EXTERN int asn1PD_ITS_Longitude (OSCTXT* pctxt, ASN1T_ITS_Longitude* pvalue);

EXTERN int XmlEnc_ITS_Longitude (OSCTXT* pctxt, ASN1T_ITS_Longitude value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_Longitude (OSCTXT* pctxt, ASN1T_ITS_Longitude* pvalue);

EXTERN int asn1JsonEnc_ITS_Longitude (OSCTXT *pctxt, ASN1T_ITS_Longitude *pvalue);

EXTERN int asn1JsonDec_ITS_Longitude (OSCTXT *pctxt, ASN1T_ITS_Longitude *pvalue);

EXTERN int asn1PrtToStrm_ITS_Longitude (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_Longitude* pvalue);

EXTERN ASN1T_ITS_Longitude* new_ASN1T_ITS_Longitude (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  SemiAxisLength                                            */
/*                                                            */
/**************************************************************/
/*
SemiAxisLength ::= INTEGER { oneCentimeter(1), outOfRange(4094), unavailable(4095) } (0..4095)
*/
struct EXTERN ITS_SemiAxisLength {
   enum Root {
      oneCentimeter = 1,
      outOfRange = 4094,
      unavailable = 4095
   } ;
} ;

typedef OSUINT16 ASN1T_ITS_SemiAxisLength;

EXTERN int asn1PE_ITS_SemiAxisLength (OSCTXT* pctxt, ASN1T_ITS_SemiAxisLength value);

EXTERN int asn1PD_ITS_SemiAxisLength (OSCTXT* pctxt, ASN1T_ITS_SemiAxisLength* pvalue);

EXTERN int XmlEnc_ITS_SemiAxisLength (OSCTXT* pctxt, 
   ASN1T_ITS_SemiAxisLength value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_SemiAxisLength (OSCTXT* pctxt, 
   ASN1T_ITS_SemiAxisLength* pvalue);

EXTERN int asn1JsonEnc_ITS_SemiAxisLength (OSCTXT *pctxt, ASN1T_ITS_SemiAxisLength *pvalue);

EXTERN int asn1JsonDec_ITS_SemiAxisLength (OSCTXT *pctxt, ASN1T_ITS_SemiAxisLength *pvalue);

EXTERN int asn1PrtToStrm_ITS_SemiAxisLength (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_SemiAxisLength* pvalue);

EXTERN ASN1T_ITS_SemiAxisLength* 
   new_ASN1T_ITS_SemiAxisLength (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  HeadingValue                                              */
/*                                                            */
/**************************************************************/
/*
HeadingValue ::= INTEGER { wgs84North(0), wgs84East(900), wgs84South(1800), wgs84West(2700), unavailable(3601) } (0..3601)
*/
struct EXTERN ITS_HeadingValue {
   enum Root {
      wgs84North = 0,
      wgs84East = 900,
      wgs84South = 1800,
      wgs84West = 2700,
      unavailable = 3601
   } ;
} ;

typedef OSUINT16 ASN1T_ITS_HeadingValue;

EXTERN int asn1PE_ITS_HeadingValue (OSCTXT* pctxt, ASN1T_ITS_HeadingValue value);

EXTERN int asn1PD_ITS_HeadingValue (OSCTXT* pctxt, ASN1T_ITS_HeadingValue* pvalue);

EXTERN int XmlEnc_ITS_HeadingValue (OSCTXT* pctxt, 
   ASN1T_ITS_HeadingValue value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_HeadingValue (OSCTXT* pctxt, 
   ASN1T_ITS_HeadingValue* pvalue);

EXTERN int asn1JsonEnc_ITS_HeadingValue (OSCTXT *pctxt, ASN1T_ITS_HeadingValue *pvalue);

EXTERN int asn1JsonDec_ITS_HeadingValue (OSCTXT *pctxt, ASN1T_ITS_HeadingValue *pvalue);

EXTERN int asn1PrtToStrm_ITS_HeadingValue (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_HeadingValue* pvalue);

EXTERN ASN1T_ITS_HeadingValue* new_ASN1T_ITS_HeadingValue (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  PosConfidenceEllipse                                      */
/*                                                            */
/**************************************************************/
/*
PosConfidenceEllipse ::= SEQUENCE {
   semiMajorConfidence [0] SemiAxisLength,
   semiMinorConfidence [1] SemiAxisLength,
   semiMajorOrientation [2] HeadingValue
}
*/
struct EXTERN ASN1T_ITS_PosConfidenceEllipse {
   ASN1T_ITS_SemiAxisLength semiMajorConfidence;
   ASN1T_ITS_SemiAxisLength semiMinorConfidence;
   ASN1T_ITS_HeadingValue semiMajorOrientation;
} ;

EXTERN int asn1PE_ITS_PosConfidenceEllipse (OSCTXT* pctxt, ASN1T_ITS_PosConfidenceEllipse* pvalue);

EXTERN int asn1PD_ITS_PosConfidenceEllipse (OSCTXT* pctxt, ASN1T_ITS_PosConfidenceEllipse* pvalue);

EXTERN int XmlEnc_ITS_PosConfidenceEllipse (OSCTXT* pctxt, 
   ASN1T_ITS_PosConfidenceEllipse* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_PosConfidenceEllipse (OSCTXT* pctxt, 
   ASN1T_ITS_PosConfidenceEllipse* pvalue);

EXTERN int asn1JsonEnc_ITS_PosConfidenceEllipse (OSCTXT *pctxt, ASN1T_ITS_PosConfidenceEllipse *pvalue);

EXTERN int asn1JsonDec_ITS_PosConfidenceEllipse (OSCTXT *pctxt, ASN1T_ITS_PosConfidenceEllipse *pvalue);

EXTERN int asn1PrtToStrm_ITS_PosConfidenceEllipse (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_PosConfidenceEllipse* pvalue);

EXTERN ASN1T_ITS_PosConfidenceEllipse* 
   new_ASN1T_ITS_PosConfidenceEllipse (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  AltitudeValue                                             */
/*                                                            */
/**************************************************************/
/*
AltitudeValue ::= INTEGER { referenceEllipsoidSurface(0), oneCentimeter(1), unavailable(800001) } (-100000..800001)
*/
struct EXTERN ITS_AltitudeValue {
   enum Root {
      referenceEllipsoidSurface = 0,
      oneCentimeter = 1,
      unavailable = 800001
   } ;
} ;

typedef OSINT32 ASN1T_ITS_AltitudeValue;

EXTERN int asn1PE_ITS_AltitudeValue (OSCTXT* pctxt, ASN1T_ITS_AltitudeValue value);

EXTERN int asn1PD_ITS_AltitudeValue (OSCTXT* pctxt, ASN1T_ITS_AltitudeValue* pvalue);

EXTERN int XmlEnc_ITS_AltitudeValue (OSCTXT* pctxt, 
   ASN1T_ITS_AltitudeValue value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_AltitudeValue (OSCTXT* pctxt, 
   ASN1T_ITS_AltitudeValue* pvalue);

EXTERN int asn1JsonEnc_ITS_AltitudeValue (OSCTXT *pctxt, ASN1T_ITS_AltitudeValue *pvalue);

EXTERN int asn1JsonDec_ITS_AltitudeValue (OSCTXT *pctxt, ASN1T_ITS_AltitudeValue *pvalue);

EXTERN int asn1PrtToStrm_ITS_AltitudeValue (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_AltitudeValue* pvalue);

EXTERN ASN1T_ITS_AltitudeValue* new_ASN1T_ITS_AltitudeValue (ASN1CType& ccobj)
   ;

/**************************************************************/
/*                                                            */
/*  AltitudeConfidence                                        */
/*                                                            */
/**************************************************************/
/*
AltitudeConfidence ::= ENUMERATED { alt-000-01(0), alt-000-02(1), alt-000-05(2), alt-000-10(3), alt-000-20(4), alt-000-50(5), alt-001-00(6), alt-002-00(7), alt-005-00(8), alt-010-00(9), alt-020-00(10), alt-050-00(11), alt-100-00(12), alt-200-00(13), outOfRange(14), unavailable(15) }
*/
struct EXTERN ITS_AltitudeConfidence {
   enum Root {
      alt_000_01 = 0,
      alt_000_02 = 1,
      alt_000_05 = 2,
      alt_000_10 = 3,
      alt_000_20 = 4,
      alt_000_50 = 5,
      alt_001_00 = 6,
      alt_002_00 = 7,
      alt_005_00 = 8,
      alt_010_00 = 9,
      alt_020_00 = 10,
      alt_050_00 = 11,
      alt_100_00 = 12,
      alt_200_00 = 13,
      outOfRange = 14,
      unavailable = 15
   } ;
} ;

typedef OSUINT32 ASN1T_ITS_AltitudeConfidence;

EXTERN int asn1PE_ITS_AltitudeConfidence (OSCTXT* pctxt, ASN1T_ITS_AltitudeConfidence value);

EXTERN int asn1PD_ITS_AltitudeConfidence (OSCTXT* pctxt, ASN1T_ITS_AltitudeConfidence* pvalue);

EXTERN int XmlEnc_ITS_AltitudeConfidence (OSCTXT* pctxt, 
   ASN1T_ITS_AltitudeConfidence value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_AltitudeConfidence (OSCTXT* pctxt, 
   ASN1T_ITS_AltitudeConfidence* pvalue);

EXTERN int asn1JsonEnc_ITS_AltitudeConfidence (OSCTXT *pctxt, ASN1T_ITS_AltitudeConfidence *pvalue);

EXTERN int asn1JsonDec_ITS_AltitudeConfidence (OSCTXT *pctxt, ASN1T_ITS_AltitudeConfidence *pvalue);

EXTERN int asn1PrtToStrm_ITS_AltitudeConfidence (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_AltitudeConfidence* pvalue);

EXTERN ASN1T_ITS_AltitudeConfidence* 
   new_ASN1T_ITS_AltitudeConfidence (ASN1CType& ccobj);

EXTERN extern const OSEnumItem ASN1T_ITS_AltitudeConfidence_ENUMTAB[];
#define ASN1T_ITS_AltitudeConfidence_ENUMTABSIZE 16

EXTERN const OSUTF8CHAR* ASN1T_ITS_AltitudeConfidence_ToString (OSINT32 value);

EXTERN int ASN1T_ITS_AltitudeConfidence_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, ASN1T_ITS_AltitudeConfidence* pvalue);

EXTERN int ASN1T_ITS_AltitudeConfidence_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      ASN1T_ITS_AltitudeConfidence* pvalue);

/**************************************************************/
/*                                                            */
/*  Altitude                                                  */
/*                                                            */
/**************************************************************/
/*
Altitude ::= SEQUENCE {
   altitudeValue [0] AltitudeValue,
   altitudeConfidence [1] AltitudeConfidence
}
*/
struct EXTERN ASN1T_ITS_Altitude {
   ASN1T_ITS_AltitudeValue altitudeValue;
   ASN1T_ITS_AltitudeConfidence altitudeConfidence;
} ;

EXTERN int asn1PE_ITS_Altitude (OSCTXT* pctxt, ASN1T_ITS_Altitude* pvalue);

EXTERN int asn1PD_ITS_Altitude (OSCTXT* pctxt, ASN1T_ITS_Altitude* pvalue);

EXTERN int XmlEnc_ITS_Altitude (OSCTXT* pctxt, ASN1T_ITS_Altitude* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_Altitude (OSCTXT* pctxt, ASN1T_ITS_Altitude* pvalue);

EXTERN int asn1JsonEnc_ITS_Altitude (OSCTXT *pctxt, ASN1T_ITS_Altitude *pvalue);

EXTERN int asn1JsonDec_ITS_Altitude (OSCTXT *pctxt, ASN1T_ITS_Altitude *pvalue);

EXTERN int asn1PrtToStrm_ITS_Altitude (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_Altitude* pvalue);

EXTERN ASN1T_ITS_Altitude* new_ASN1T_ITS_Altitude (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  ReferencePosition                                         */
/*                                                            */
/**************************************************************/
/*
ReferencePosition ::= SEQUENCE {
   latitude [0] Latitude,
   longitude [1] Longitude,
   positionConfidenceEllipse [2] PosConfidenceEllipse,
   altitude [3] Altitude
}
*/
struct EXTERN ASN1T_ITS_ReferencePosition {
   ASN1T_ITS_Latitude latitude;
   ASN1T_ITS_Longitude longitude;
   ASN1T_ITS_PosConfidenceEllipse positionConfidenceEllipse;
   ASN1T_ITS_Altitude altitude;
} ;

EXTERN int asn1PE_ITS_ReferencePosition (OSCTXT* pctxt, ASN1T_ITS_ReferencePosition* pvalue);

EXTERN int asn1PD_ITS_ReferencePosition (OSCTXT* pctxt, ASN1T_ITS_ReferencePosition* pvalue);

EXTERN int XmlEnc_ITS_ReferencePosition (OSCTXT* pctxt, 
   ASN1T_ITS_ReferencePosition* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_ReferencePosition (OSCTXT* pctxt, 
   ASN1T_ITS_ReferencePosition* pvalue);

EXTERN int asn1JsonEnc_ITS_ReferencePosition (OSCTXT *pctxt, ASN1T_ITS_ReferencePosition *pvalue);

EXTERN int asn1JsonDec_ITS_ReferencePosition (OSCTXT *pctxt, ASN1T_ITS_ReferencePosition *pvalue);

EXTERN int asn1PrtToStrm_ITS_ReferencePosition (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_ReferencePosition* pvalue);

EXTERN ASN1T_ITS_ReferencePosition* 
   new_ASN1T_ITS_ReferencePosition (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  HeadingConfidence                                         */
/*                                                            */
/**************************************************************/
/*
HeadingConfidence ::= INTEGER { equalOrWithinZeroPointOneDegree(1), equalOrWithinOneDegree(10), outOfRange(126), unavailable(127) } (1..127)
*/
struct EXTERN ITS_HeadingConfidence {
   enum Root {
      equalOrWithinZeroPointOneDegree = 1,
      equalOrWithinOneDegree = 10,
      outOfRange = 126,
      unavailable = 127
   } ;
} ;

typedef OSUINT8 ASN1T_ITS_HeadingConfidence;

EXTERN int asn1PE_ITS_HeadingConfidence (OSCTXT* pctxt, ASN1T_ITS_HeadingConfidence value);

EXTERN int asn1PD_ITS_HeadingConfidence (OSCTXT* pctxt, ASN1T_ITS_HeadingConfidence* pvalue);

EXTERN int XmlEnc_ITS_HeadingConfidence (OSCTXT* pctxt, 
   ASN1T_ITS_HeadingConfidence value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_HeadingConfidence (OSCTXT* pctxt, 
   ASN1T_ITS_HeadingConfidence* pvalue);

EXTERN int asn1JsonEnc_ITS_HeadingConfidence (OSCTXT *pctxt, ASN1T_ITS_HeadingConfidence *pvalue);

EXTERN int asn1JsonDec_ITS_HeadingConfidence (OSCTXT *pctxt, ASN1T_ITS_HeadingConfidence *pvalue);

EXTERN int asn1PrtToStrm_ITS_HeadingConfidence (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_HeadingConfidence* pvalue);

EXTERN ASN1T_ITS_HeadingConfidence* 
   new_ASN1T_ITS_HeadingConfidence (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  Heading                                                   */
/*                                                            */
/**************************************************************/
/*
Heading ::= SEQUENCE {
   headingValue [0] HeadingValue,
   headingConfidence [1] HeadingConfidence
}
*/
struct EXTERN ASN1T_ITS_Heading {
   ASN1T_ITS_HeadingValue headingValue;
   ASN1T_ITS_HeadingConfidence headingConfidence;
} ;

EXTERN int asn1PE_ITS_Heading (OSCTXT* pctxt, ASN1T_ITS_Heading* pvalue);

EXTERN int asn1PD_ITS_Heading (OSCTXT* pctxt, ASN1T_ITS_Heading* pvalue);

EXTERN int XmlEnc_ITS_Heading (OSCTXT* pctxt, ASN1T_ITS_Heading* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_Heading (OSCTXT* pctxt, ASN1T_ITS_Heading* pvalue);

EXTERN int asn1JsonEnc_ITS_Heading (OSCTXT *pctxt, ASN1T_ITS_Heading *pvalue);

EXTERN int asn1JsonDec_ITS_Heading (OSCTXT *pctxt, ASN1T_ITS_Heading *pvalue);

EXTERN int asn1PrtToStrm_ITS_Heading (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_Heading* pvalue);

EXTERN ASN1T_ITS_Heading* new_ASN1T_ITS_Heading (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  SpeedValue                                                */
/*                                                            */
/**************************************************************/
/*
SpeedValue ::= INTEGER { standstill(0), oneCentimeterPerSec(1), unavailable(16383) } (0..16383)
*/
struct EXTERN ITS_SpeedValue {
   enum Root {
      standstill = 0,
      oneCentimeterPerSec = 1,
      unavailable = 16383
   } ;
} ;

typedef OSUINT16 ASN1T_ITS_SpeedValue;

EXTERN int asn1PE_ITS_SpeedValue (OSCTXT* pctxt, ASN1T_ITS_SpeedValue value);

EXTERN int asn1PD_ITS_SpeedValue (OSCTXT* pctxt, ASN1T_ITS_SpeedValue* pvalue);

EXTERN int XmlEnc_ITS_SpeedValue (OSCTXT* pctxt, ASN1T_ITS_SpeedValue value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_SpeedValue (OSCTXT* pctxt, ASN1T_ITS_SpeedValue* pvalue)
   ;

EXTERN int asn1JsonEnc_ITS_SpeedValue (OSCTXT *pctxt, ASN1T_ITS_SpeedValue *pvalue);

EXTERN int asn1JsonDec_ITS_SpeedValue (OSCTXT *pctxt, ASN1T_ITS_SpeedValue *pvalue);

EXTERN int asn1PrtToStrm_ITS_SpeedValue (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_SpeedValue* pvalue);

EXTERN ASN1T_ITS_SpeedValue* new_ASN1T_ITS_SpeedValue (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  SpeedConfidence                                           */
/*                                                            */
/**************************************************************/
/*
SpeedConfidence ::= INTEGER { equalOrWithinOneCentimeterPerSec(1), equalOrWithinOneMeterPerSec(100), outOfRange(126), unavailable(127) } (1..127)
*/
struct EXTERN ITS_SpeedConfidence {
   enum Root {
      equalOrWithinOneCentimeterPerSec = 1,
      equalOrWithinOneMeterPerSec = 100,
      outOfRange = 126,
      unavailable = 127
   } ;
} ;

typedef OSUINT8 ASN1T_ITS_SpeedConfidence;

EXTERN int asn1PE_ITS_SpeedConfidence (OSCTXT* pctxt, ASN1T_ITS_SpeedConfidence value);

EXTERN int asn1PD_ITS_SpeedConfidence (OSCTXT* pctxt, ASN1T_ITS_SpeedConfidence* pvalue);

EXTERN int XmlEnc_ITS_SpeedConfidence (OSCTXT* pctxt, 
   ASN1T_ITS_SpeedConfidence value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_SpeedConfidence (OSCTXT* pctxt, 
   ASN1T_ITS_SpeedConfidence* pvalue);

EXTERN int asn1JsonEnc_ITS_SpeedConfidence (OSCTXT *pctxt, ASN1T_ITS_SpeedConfidence *pvalue);

EXTERN int asn1JsonDec_ITS_SpeedConfidence (OSCTXT *pctxt, ASN1T_ITS_SpeedConfidence *pvalue);

EXTERN int asn1PrtToStrm_ITS_SpeedConfidence (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_SpeedConfidence* pvalue);

EXTERN ASN1T_ITS_SpeedConfidence* 
   new_ASN1T_ITS_SpeedConfidence (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  Speed                                                     */
/*                                                            */
/**************************************************************/
/*
Speed ::= SEQUENCE {
   speedValue [0] SpeedValue,
   speedConfidence [1] SpeedConfidence
}
*/
struct EXTERN ASN1T_ITS_Speed {
   ASN1T_ITS_SpeedValue speedValue;
   ASN1T_ITS_SpeedConfidence speedConfidence;
} ;

EXTERN int asn1PE_ITS_Speed (OSCTXT* pctxt, ASN1T_ITS_Speed* pvalue);

EXTERN int asn1PD_ITS_Speed (OSCTXT* pctxt, ASN1T_ITS_Speed* pvalue);

EXTERN int XmlEnc_ITS_Speed (OSCTXT* pctxt, ASN1T_ITS_Speed* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_Speed (OSCTXT* pctxt, ASN1T_ITS_Speed* pvalue);

EXTERN int asn1JsonEnc_ITS_Speed (OSCTXT *pctxt, ASN1T_ITS_Speed *pvalue);

EXTERN int asn1JsonDec_ITS_Speed (OSCTXT *pctxt, ASN1T_ITS_Speed *pvalue);

EXTERN int asn1PrtToStrm_ITS_Speed (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_Speed* pvalue);

EXTERN ASN1T_ITS_Speed* new_ASN1T_ITS_Speed (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  DriveDirection                                            */
/*                                                            */
/**************************************************************/
/*
DriveDirection ::= ENUMERATED { forward(0), backward(1), unavailable(2) }
*/
struct EXTERN ITS_DriveDirection {
   enum Root {
      forward = 0,
      backward = 1,
      unavailable = 2
   } ;
} ;

typedef OSUINT32 ASN1T_ITS_DriveDirection;

EXTERN int asn1PE_ITS_DriveDirection (OSCTXT* pctxt, ASN1T_ITS_DriveDirection value);

EXTERN int asn1PD_ITS_DriveDirection (OSCTXT* pctxt, ASN1T_ITS_DriveDirection* pvalue);

EXTERN int XmlEnc_ITS_DriveDirection (OSCTXT* pctxt, 
   ASN1T_ITS_DriveDirection value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_DriveDirection (OSCTXT* pctxt, 
   ASN1T_ITS_DriveDirection* pvalue);

EXTERN int asn1JsonEnc_ITS_DriveDirection (OSCTXT *pctxt, ASN1T_ITS_DriveDirection *pvalue);

EXTERN int asn1JsonDec_ITS_DriveDirection (OSCTXT *pctxt, ASN1T_ITS_DriveDirection *pvalue);

EXTERN int asn1PrtToStrm_ITS_DriveDirection (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_DriveDirection* pvalue);

EXTERN ASN1T_ITS_DriveDirection* 
   new_ASN1T_ITS_DriveDirection (ASN1CType& ccobj);

EXTERN extern const OSEnumItem ASN1T_ITS_DriveDirection_ENUMTAB[];
#define ASN1T_ITS_DriveDirection_ENUMTABSIZE 3

EXTERN const OSUTF8CHAR* ASN1T_ITS_DriveDirection_ToString (OSINT32 value);

EXTERN int ASN1T_ITS_DriveDirection_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, ASN1T_ITS_DriveDirection* pvalue);

EXTERN int ASN1T_ITS_DriveDirection_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, ASN1T_ITS_DriveDirection* pvalue)
      ;

/**************************************************************/
/*                                                            */
/*  VehicleLengthValue                                        */
/*                                                            */
/**************************************************************/
/*
VehicleLengthValue ::= INTEGER { tenCentimeters(1), outOfRange(1022), unavailable(1023) } (1..1023)
*/
struct EXTERN ITS_VehicleLengthValue {
   enum Root {
      tenCentimeters = 1,
      outOfRange = 1022,
      unavailable = 1023
   } ;
} ;

typedef OSUINT16 ASN1T_ITS_VehicleLengthValue;

EXTERN int asn1PE_ITS_VehicleLengthValue (OSCTXT* pctxt, ASN1T_ITS_VehicleLengthValue value);

EXTERN int asn1PD_ITS_VehicleLengthValue (OSCTXT* pctxt, ASN1T_ITS_VehicleLengthValue* pvalue);

EXTERN int XmlEnc_ITS_VehicleLengthValue (OSCTXT* pctxt, 
   ASN1T_ITS_VehicleLengthValue value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_VehicleLengthValue (OSCTXT* pctxt, 
   ASN1T_ITS_VehicleLengthValue* pvalue);

EXTERN int asn1JsonEnc_ITS_VehicleLengthValue (OSCTXT *pctxt, ASN1T_ITS_VehicleLengthValue *pvalue);

EXTERN int asn1JsonDec_ITS_VehicleLengthValue (OSCTXT *pctxt, ASN1T_ITS_VehicleLengthValue *pvalue);

EXTERN int asn1PrtToStrm_ITS_VehicleLengthValue (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_VehicleLengthValue* pvalue);

EXTERN ASN1T_ITS_VehicleLengthValue* 
   new_ASN1T_ITS_VehicleLengthValue (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  VehicleLengthConfidenceIndication                         */
/*                                                            */
/**************************************************************/
/*
VehicleLengthConfidenceIndication ::= ENUMERATED { noTrailerPresent(0), trailerPresentWithKnownLength(1), trailerPresentWithUnknownLength(2), trailerPresenceIsUnknown(3), unavailable(4) }
*/
struct EXTERN ITS_VehicleLengthConfidenceIndication {
   enum Root {
      noTrailerPresent = 0,
      trailerPresentWithKnownLength = 1,
      trailerPresentWithUnknownLength = 2,
      trailerPresenceIsUnknown = 3,
      unavailable = 4
   } ;
} ;

typedef OSUINT32 ASN1T_ITS_VehicleLengthConfidenceIndication;

EXTERN int asn1PE_ITS_VehicleLengthConfidenceIndication (OSCTXT* pctxt, ASN1T_ITS_VehicleLengthConfidenceIndication value);

EXTERN int asn1PD_ITS_VehicleLengthConfidenceIndication (OSCTXT* pctxt, ASN1T_ITS_VehicleLengthConfidenceIndication* pvalue);

EXTERN int XmlEnc_ITS_VehicleLengthConfidenceIndication (OSCTXT* pctxt, 
   ASN1T_ITS_VehicleLengthConfidenceIndication value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_VehicleLengthConfidenceIndication (OSCTXT* pctxt, 
   ASN1T_ITS_VehicleLengthConfidenceIndication* pvalue);

EXTERN int asn1JsonEnc_ITS_VehicleLengthConfidenceIndication (OSCTXT *pctxt, ASN1T_ITS_VehicleLengthConfidenceIndication *pvalue);

EXTERN int asn1JsonDec_ITS_VehicleLengthConfidenceIndication (OSCTXT *pctxt, ASN1T_ITS_VehicleLengthConfidenceIndication *pvalue);

EXTERN int asn1PrtToStrm_ITS_VehicleLengthConfidenceIndication (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_VehicleLengthConfidenceIndication* pvalue);

EXTERN ASN1T_ITS_VehicleLengthConfidenceIndication* 
   new_ASN1T_ITS_VehicleLengthConfidenceIndication (ASN1CType& ccobj);

EXTERN extern const OSEnumItem ASN1T_ITS_VehicleLengthConfidenceIndication_ENUMTAB[];
#define ASN1T_ITS_VehicleLengthConfidenceIndication_ENUMTABSIZE 5

EXTERN const OSUTF8CHAR* ASN1T_ITS_VehicleLengthConfidenceIndication_ToString (OSINT32 value);

EXTERN int ASN1T_ITS_VehicleLengthConfidenceIndication_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, 
      ASN1T_ITS_VehicleLengthConfidenceIndication* pvalue);

EXTERN int ASN1T_ITS_VehicleLengthConfidenceIndication_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      ASN1T_ITS_VehicleLengthConfidenceIndication* pvalue);

/**************************************************************/
/*                                                            */
/*  VehicleLength                                             */
/*                                                            */
/**************************************************************/
/*
VehicleLength ::= SEQUENCE {
   vehicleLengthValue [0] VehicleLengthValue,
   vehicleLengthConfidenceIndication [1] VehicleLengthConfidenceIndication
}
*/
struct EXTERN ASN1T_ITS_VehicleLength {
   ASN1T_ITS_VehicleLengthValue vehicleLengthValue;
   ASN1T_ITS_VehicleLengthConfidenceIndication vehicleLengthConfidenceIndication;
} ;

EXTERN int asn1PE_ITS_VehicleLength (OSCTXT* pctxt, ASN1T_ITS_VehicleLength* pvalue);

EXTERN int asn1PD_ITS_VehicleLength (OSCTXT* pctxt, ASN1T_ITS_VehicleLength* pvalue);

EXTERN int XmlEnc_ITS_VehicleLength (OSCTXT* pctxt, 
   ASN1T_ITS_VehicleLength* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_VehicleLength (OSCTXT* pctxt, 
   ASN1T_ITS_VehicleLength* pvalue);

EXTERN int asn1JsonEnc_ITS_VehicleLength (OSCTXT *pctxt, ASN1T_ITS_VehicleLength *pvalue);

EXTERN int asn1JsonDec_ITS_VehicleLength (OSCTXT *pctxt, ASN1T_ITS_VehicleLength *pvalue);

EXTERN int asn1PrtToStrm_ITS_VehicleLength (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_VehicleLength* pvalue);

EXTERN ASN1T_ITS_VehicleLength* new_ASN1T_ITS_VehicleLength (ASN1CType& ccobj)
   ;

/**************************************************************/
/*                                                            */
/*  VehicleWidth                                              */
/*                                                            */
/**************************************************************/
/*
VehicleWidth ::= INTEGER { tenCentimeters(1), outOfRange(61), unavailable(62) } (1..62)
*/
struct EXTERN ITS_VehicleWidth {
   enum Root {
      tenCentimeters = 1,
      outOfRange = 61,
      unavailable = 62
   } ;
} ;

typedef OSUINT8 ASN1T_ITS_VehicleWidth;

EXTERN int asn1PE_ITS_VehicleWidth (OSCTXT* pctxt, ASN1T_ITS_VehicleWidth value);

EXTERN int asn1PD_ITS_VehicleWidth (OSCTXT* pctxt, ASN1T_ITS_VehicleWidth* pvalue);

EXTERN int XmlEnc_ITS_VehicleWidth (OSCTXT* pctxt, 
   ASN1T_ITS_VehicleWidth value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_VehicleWidth (OSCTXT* pctxt, 
   ASN1T_ITS_VehicleWidth* pvalue);

EXTERN int asn1JsonEnc_ITS_VehicleWidth (OSCTXT *pctxt, ASN1T_ITS_VehicleWidth *pvalue);

EXTERN int asn1JsonDec_ITS_VehicleWidth (OSCTXT *pctxt, ASN1T_ITS_VehicleWidth *pvalue);

EXTERN int asn1PrtToStrm_ITS_VehicleWidth (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_VehicleWidth* pvalue);

EXTERN ASN1T_ITS_VehicleWidth* new_ASN1T_ITS_VehicleWidth (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  LongitudinalAccelerationValue                             */
/*                                                            */
/**************************************************************/
/*
LongitudinalAccelerationValue ::= INTEGER { pointOneMeterPerSecSquaredBackward(-1), pointOneMeterPerSecSquaredForward(1), unavailable(161) } (-160..161)
*/
struct EXTERN ITS_LongitudinalAccelerationValue {
   enum Root {
      pointOneMeterPerSecSquaredBackward = -1,
      pointOneMeterPerSecSquaredForward = 1,
      unavailable = 161
   } ;
} ;

typedef OSINT16 ASN1T_ITS_LongitudinalAccelerationValue;

EXTERN int asn1PE_ITS_LongitudinalAccelerationValue (OSCTXT* pctxt, ASN1T_ITS_LongitudinalAccelerationValue value);

EXTERN int asn1PD_ITS_LongitudinalAccelerationValue (OSCTXT* pctxt, ASN1T_ITS_LongitudinalAccelerationValue* pvalue);

EXTERN int XmlEnc_ITS_LongitudinalAccelerationValue (OSCTXT* pctxt, 
   ASN1T_ITS_LongitudinalAccelerationValue value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_LongitudinalAccelerationValue (OSCTXT* pctxt, 
   ASN1T_ITS_LongitudinalAccelerationValue* pvalue);

EXTERN int asn1JsonEnc_ITS_LongitudinalAccelerationValue (OSCTXT *pctxt, ASN1T_ITS_LongitudinalAccelerationValue *pvalue);

EXTERN int asn1JsonDec_ITS_LongitudinalAccelerationValue (OSCTXT *pctxt, ASN1T_ITS_LongitudinalAccelerationValue *pvalue);

EXTERN int asn1PrtToStrm_ITS_LongitudinalAccelerationValue (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_LongitudinalAccelerationValue* pvalue);

EXTERN ASN1T_ITS_LongitudinalAccelerationValue* 
   new_ASN1T_ITS_LongitudinalAccelerationValue (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  AccelerationConfidence                                    */
/*                                                            */
/**************************************************************/
/*
AccelerationConfidence ::= INTEGER { pointOneMeterPerSecSquared(1), outOfRange(101), unavailable(102) } (0..102)
*/
struct EXTERN ITS_AccelerationConfidence {
   enum Root {
      pointOneMeterPerSecSquared = 1,
      outOfRange = 101,
      unavailable = 102
   } ;
} ;

typedef OSUINT8 ASN1T_ITS_AccelerationConfidence;

EXTERN int asn1PE_ITS_AccelerationConfidence (OSCTXT* pctxt, ASN1T_ITS_AccelerationConfidence value);

EXTERN int asn1PD_ITS_AccelerationConfidence (OSCTXT* pctxt, ASN1T_ITS_AccelerationConfidence* pvalue);

EXTERN int XmlEnc_ITS_AccelerationConfidence (OSCTXT* pctxt, 
   ASN1T_ITS_AccelerationConfidence value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_AccelerationConfidence (OSCTXT* pctxt, 
   ASN1T_ITS_AccelerationConfidence* pvalue);

EXTERN int asn1JsonEnc_ITS_AccelerationConfidence (OSCTXT *pctxt, ASN1T_ITS_AccelerationConfidence *pvalue);

EXTERN int asn1JsonDec_ITS_AccelerationConfidence (OSCTXT *pctxt, ASN1T_ITS_AccelerationConfidence *pvalue);

EXTERN int asn1PrtToStrm_ITS_AccelerationConfidence (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_AccelerationConfidence* pvalue);

EXTERN ASN1T_ITS_AccelerationConfidence* 
   new_ASN1T_ITS_AccelerationConfidence (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  LongitudinalAcceleration                                  */
/*                                                            */
/**************************************************************/
/*
LongitudinalAcceleration ::= SEQUENCE {
   longitudinalAccelerationValue [0] LongitudinalAccelerationValue,
   longitudinalAccelerationConfidence [1] AccelerationConfidence
}
*/
struct EXTERN ASN1T_ITS_LongitudinalAcceleration {
   ASN1T_ITS_LongitudinalAccelerationValue longitudinalAccelerationValue;
   ASN1T_ITS_AccelerationConfidence longitudinalAccelerationConfidence;
} ;

EXTERN int asn1PE_ITS_LongitudinalAcceleration (OSCTXT* pctxt, ASN1T_ITS_LongitudinalAcceleration* pvalue);

EXTERN int asn1PD_ITS_LongitudinalAcceleration (OSCTXT* pctxt, ASN1T_ITS_LongitudinalAcceleration* pvalue);

EXTERN int XmlEnc_ITS_LongitudinalAcceleration (OSCTXT* pctxt, 
   ASN1T_ITS_LongitudinalAcceleration* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_LongitudinalAcceleration (OSCTXT* pctxt, 
   ASN1T_ITS_LongitudinalAcceleration* pvalue);

EXTERN int asn1JsonEnc_ITS_LongitudinalAcceleration (OSCTXT *pctxt, ASN1T_ITS_LongitudinalAcceleration *pvalue);

EXTERN int asn1JsonDec_ITS_LongitudinalAcceleration (OSCTXT *pctxt, ASN1T_ITS_LongitudinalAcceleration *pvalue);

EXTERN int asn1PrtToStrm_ITS_LongitudinalAcceleration (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_LongitudinalAcceleration* pvalue);

EXTERN ASN1T_ITS_LongitudinalAcceleration* 
   new_ASN1T_ITS_LongitudinalAcceleration (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  CurvatureValue                                            */
/*                                                            */
/**************************************************************/
/*
CurvatureValue ::= INTEGER { reciprocalOf1MeterRadiusToRight(-30000), straight(0), reciprocalOf1MeterRadiusToLeft(30000), unavailable(30001) } (-30000..30001)
*/
struct EXTERN ITS_CurvatureValue {
   enum Root {
      reciprocalOf1MeterRadiusToRight = -30000,
      straight = 0,
      reciprocalOf1MeterRadiusToLeft = 30000,
      unavailable = 30001
   } ;
} ;

typedef OSINT16 ASN1T_ITS_CurvatureValue;

EXTERN int asn1PE_ITS_CurvatureValue (OSCTXT* pctxt, ASN1T_ITS_CurvatureValue value);

EXTERN int asn1PD_ITS_CurvatureValue (OSCTXT* pctxt, ASN1T_ITS_CurvatureValue* pvalue);

EXTERN int XmlEnc_ITS_CurvatureValue (OSCTXT* pctxt, 
   ASN1T_ITS_CurvatureValue value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_CurvatureValue (OSCTXT* pctxt, 
   ASN1T_ITS_CurvatureValue* pvalue);

EXTERN int asn1JsonEnc_ITS_CurvatureValue (OSCTXT *pctxt, ASN1T_ITS_CurvatureValue *pvalue);

EXTERN int asn1JsonDec_ITS_CurvatureValue (OSCTXT *pctxt, ASN1T_ITS_CurvatureValue *pvalue);

EXTERN int asn1PrtToStrm_ITS_CurvatureValue (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_CurvatureValue* pvalue);

EXTERN ASN1T_ITS_CurvatureValue* 
   new_ASN1T_ITS_CurvatureValue (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  CurvatureConfidence                                       */
/*                                                            */
/**************************************************************/
/*
CurvatureConfidence ::= ENUMERATED { onePerMeter-0-00002(0), onePerMeter-0-0001(1), onePerMeter-0-0005(2), onePerMeter-0-002(3), onePerMeter-0-01(4), onePerMeter-0-1(5), outOfRange(6), unavailable(7) }
*/
struct EXTERN ITS_CurvatureConfidence {
   enum Root {
      onePerMeter_0_00002 = 0,
      onePerMeter_0_0001 = 1,
      onePerMeter_0_0005 = 2,
      onePerMeter_0_002 = 3,
      onePerMeter_0_01 = 4,
      onePerMeter_0_1 = 5,
      outOfRange = 6,
      unavailable = 7
   } ;
} ;

typedef OSUINT32 ASN1T_ITS_CurvatureConfidence;

EXTERN int asn1PE_ITS_CurvatureConfidence (OSCTXT* pctxt, ASN1T_ITS_CurvatureConfidence value);

EXTERN int asn1PD_ITS_CurvatureConfidence (OSCTXT* pctxt, ASN1T_ITS_CurvatureConfidence* pvalue);

EXTERN int XmlEnc_ITS_CurvatureConfidence (OSCTXT* pctxt, 
   ASN1T_ITS_CurvatureConfidence value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_CurvatureConfidence (OSCTXT* pctxt, 
   ASN1T_ITS_CurvatureConfidence* pvalue);

EXTERN int asn1JsonEnc_ITS_CurvatureConfidence (OSCTXT *pctxt, ASN1T_ITS_CurvatureConfidence *pvalue);

EXTERN int asn1JsonDec_ITS_CurvatureConfidence (OSCTXT *pctxt, ASN1T_ITS_CurvatureConfidence *pvalue);

EXTERN int asn1PrtToStrm_ITS_CurvatureConfidence (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_CurvatureConfidence* pvalue);

EXTERN ASN1T_ITS_CurvatureConfidence* 
   new_ASN1T_ITS_CurvatureConfidence (ASN1CType& ccobj);

EXTERN extern const OSEnumItem ASN1T_ITS_CurvatureConfidence_ENUMTAB[];
#define ASN1T_ITS_CurvatureConfidence_ENUMTABSIZE 8

EXTERN const OSUTF8CHAR* ASN1T_ITS_CurvatureConfidence_ToString (OSINT32 value);

EXTERN int ASN1T_ITS_CurvatureConfidence_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, ASN1T_ITS_CurvatureConfidence* pvalue);

EXTERN int ASN1T_ITS_CurvatureConfidence_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      ASN1T_ITS_CurvatureConfidence* pvalue);

/**************************************************************/
/*                                                            */
/*  Curvature                                                 */
/*                                                            */
/**************************************************************/
/*
Curvature ::= SEQUENCE {
   curvatureValue [0] CurvatureValue,
   curvatureConfidence [1] CurvatureConfidence
}
*/
struct EXTERN ASN1T_ITS_Curvature {
   ASN1T_ITS_CurvatureValue curvatureValue;
   ASN1T_ITS_CurvatureConfidence curvatureConfidence;
} ;

EXTERN int asn1PE_ITS_Curvature (OSCTXT* pctxt, ASN1T_ITS_Curvature* pvalue);

EXTERN int asn1PD_ITS_Curvature (OSCTXT* pctxt, ASN1T_ITS_Curvature* pvalue);

EXTERN int XmlEnc_ITS_Curvature (OSCTXT* pctxt, ASN1T_ITS_Curvature* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_Curvature (OSCTXT* pctxt, ASN1T_ITS_Curvature* pvalue);

EXTERN int asn1JsonEnc_ITS_Curvature (OSCTXT *pctxt, ASN1T_ITS_Curvature *pvalue);

EXTERN int asn1JsonDec_ITS_Curvature (OSCTXT *pctxt, ASN1T_ITS_Curvature *pvalue);

EXTERN int asn1PrtToStrm_ITS_Curvature (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_Curvature* pvalue);

EXTERN ASN1T_ITS_Curvature* new_ASN1T_ITS_Curvature (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  CurvatureCalculationMode                                  */
/*                                                            */
/**************************************************************/
/*
CurvatureCalculationMode ::= ENUMERATED { yawRateUsed(0), yawRateNotUsed(1), unavailable(2), ... }
*/
struct EXTERN ITS_CurvatureCalculationMode {
   enum Root {
      yawRateUsed = 0,
      yawRateNotUsed = 1,
      unavailable = 2
   } ;
} ;

typedef OSUINT32 ASN1T_ITS_CurvatureCalculationMode;

EXTERN int asn1PE_ITS_CurvatureCalculationMode (OSCTXT* pctxt, ASN1T_ITS_CurvatureCalculationMode value);

EXTERN int asn1PD_ITS_CurvatureCalculationMode (OSCTXT* pctxt, ASN1T_ITS_CurvatureCalculationMode* pvalue);

EXTERN int XmlEnc_ITS_CurvatureCalculationMode (OSCTXT* pctxt, 
   ASN1T_ITS_CurvatureCalculationMode value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_CurvatureCalculationMode (OSCTXT* pctxt, 
   ASN1T_ITS_CurvatureCalculationMode* pvalue);

EXTERN int asn1JsonEnc_ITS_CurvatureCalculationMode (OSCTXT *pctxt, ASN1T_ITS_CurvatureCalculationMode *pvalue);

EXTERN int asn1JsonDec_ITS_CurvatureCalculationMode (OSCTXT *pctxt, ASN1T_ITS_CurvatureCalculationMode *pvalue);

EXTERN int asn1PrtToStrm_ITS_CurvatureCalculationMode (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_CurvatureCalculationMode* pvalue);

EXTERN ASN1T_ITS_CurvatureCalculationMode* 
   new_ASN1T_ITS_CurvatureCalculationMode (ASN1CType& ccobj);

EXTERN extern const OSEnumItem ASN1T_ITS_CurvatureCalculationMode_ENUMTAB[];
#define ASN1T_ITS_CurvatureCalculationMode_ENUMTABSIZE 3

EXTERN const OSUTF8CHAR* ASN1T_ITS_CurvatureCalculationMode_ToString (OSINT32 value);

EXTERN int ASN1T_ITS_CurvatureCalculationMode_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, ASN1T_ITS_CurvatureCalculationMode* pvalue);

EXTERN int ASN1T_ITS_CurvatureCalculationMode_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      ASN1T_ITS_CurvatureCalculationMode* pvalue);

/**************************************************************/
/*                                                            */
/*  YawRateValue                                              */
/*                                                            */
/**************************************************************/
/*
YawRateValue ::= INTEGER { degSec-000-01ToRight(-1), straight(0), degSec-000-01ToLeft(1), unavailable(32767) } (-32766..32767)
*/
struct EXTERN ITS_YawRateValue {
   enum Root {
      degSec_000_01ToRight = -1,
      straight = 0,
      degSec_000_01ToLeft = 1,
      unavailable = 32767
   } ;
} ;

typedef OSINT16 ASN1T_ITS_YawRateValue;

EXTERN int asn1PE_ITS_YawRateValue (OSCTXT* pctxt, ASN1T_ITS_YawRateValue value);

EXTERN int asn1PD_ITS_YawRateValue (OSCTXT* pctxt, ASN1T_ITS_YawRateValue* pvalue);

EXTERN int XmlEnc_ITS_YawRateValue (OSCTXT* pctxt, 
   ASN1T_ITS_YawRateValue value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_YawRateValue (OSCTXT* pctxt, 
   ASN1T_ITS_YawRateValue* pvalue);

EXTERN int asn1JsonEnc_ITS_YawRateValue (OSCTXT *pctxt, ASN1T_ITS_YawRateValue *pvalue);

EXTERN int asn1JsonDec_ITS_YawRateValue (OSCTXT *pctxt, ASN1T_ITS_YawRateValue *pvalue);

EXTERN int asn1PrtToStrm_ITS_YawRateValue (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_YawRateValue* pvalue);

EXTERN ASN1T_ITS_YawRateValue* new_ASN1T_ITS_YawRateValue (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  YawRateConfidence                                         */
/*                                                            */
/**************************************************************/
/*
YawRateConfidence ::= ENUMERATED { degSec-000-01(0), degSec-000-05(1), degSec-000-10(2), degSec-001-00(3), degSec-005-00(4), degSec-010-00(5), degSec-100-00(6), outOfRange(7), unavailable(8) }
*/
struct EXTERN ITS_YawRateConfidence {
   enum Root {
      degSec_000_01 = 0,
      degSec_000_05 = 1,
      degSec_000_10 = 2,
      degSec_001_00 = 3,
      degSec_005_00 = 4,
      degSec_010_00 = 5,
      degSec_100_00 = 6,
      outOfRange = 7,
      unavailable = 8
   } ;
} ;

typedef OSUINT32 ASN1T_ITS_YawRateConfidence;

EXTERN int asn1PE_ITS_YawRateConfidence (OSCTXT* pctxt, ASN1T_ITS_YawRateConfidence value);

EXTERN int asn1PD_ITS_YawRateConfidence (OSCTXT* pctxt, ASN1T_ITS_YawRateConfidence* pvalue);

EXTERN int XmlEnc_ITS_YawRateConfidence (OSCTXT* pctxt, 
   ASN1T_ITS_YawRateConfidence value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_YawRateConfidence (OSCTXT* pctxt, 
   ASN1T_ITS_YawRateConfidence* pvalue);

EXTERN int asn1JsonEnc_ITS_YawRateConfidence (OSCTXT *pctxt, ASN1T_ITS_YawRateConfidence *pvalue);

EXTERN int asn1JsonDec_ITS_YawRateConfidence (OSCTXT *pctxt, ASN1T_ITS_YawRateConfidence *pvalue);

EXTERN int asn1PrtToStrm_ITS_YawRateConfidence (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_YawRateConfidence* pvalue);

EXTERN ASN1T_ITS_YawRateConfidence* 
   new_ASN1T_ITS_YawRateConfidence (ASN1CType& ccobj);

EXTERN extern const OSEnumItem ASN1T_ITS_YawRateConfidence_ENUMTAB[];
#define ASN1T_ITS_YawRateConfidence_ENUMTABSIZE 9

EXTERN const OSUTF8CHAR* ASN1T_ITS_YawRateConfidence_ToString (OSINT32 value);

EXTERN int ASN1T_ITS_YawRateConfidence_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, ASN1T_ITS_YawRateConfidence* pvalue);

EXTERN int ASN1T_ITS_YawRateConfidence_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      ASN1T_ITS_YawRateConfidence* pvalue);

/**************************************************************/
/*                                                            */
/*  YawRate                                                   */
/*                                                            */
/**************************************************************/
/*
YawRate ::= SEQUENCE {
   yawRateValue [0] YawRateValue,
   yawRateConfidence [1] YawRateConfidence
}
*/
struct EXTERN ASN1T_ITS_YawRate {
   ASN1T_ITS_YawRateValue yawRateValue;
   ASN1T_ITS_YawRateConfidence yawRateConfidence;
} ;

EXTERN int asn1PE_ITS_YawRate (OSCTXT* pctxt, ASN1T_ITS_YawRate* pvalue);

EXTERN int asn1PD_ITS_YawRate (OSCTXT* pctxt, ASN1T_ITS_YawRate* pvalue);

EXTERN int XmlEnc_ITS_YawRate (OSCTXT* pctxt, ASN1T_ITS_YawRate* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_YawRate (OSCTXT* pctxt, ASN1T_ITS_YawRate* pvalue);

EXTERN int asn1JsonEnc_ITS_YawRate (OSCTXT *pctxt, ASN1T_ITS_YawRate *pvalue);

EXTERN int asn1JsonDec_ITS_YawRate (OSCTXT *pctxt, ASN1T_ITS_YawRate *pvalue);

EXTERN int asn1PrtToStrm_ITS_YawRate (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_YawRate* pvalue);

EXTERN ASN1T_ITS_YawRate* new_ASN1T_ITS_YawRate (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  AccelerationControl                                       */
/*                                                            */
/**************************************************************/
/*
AccelerationControl ::= BIT STRING  { brakePedalEngaged(0), gasPedalEngaged(1), emergencyBrakeEngaged(2), collisionWarningEngaged(3), accEngaged(4), cruiseControlEngaged(5), speedLimiterEngaged(6) } (SIZE (7))
*/
struct EXTERN ASN1T_ITS_AccelerationControl {
   OSOCTET data[1];
   // ctors
   ASN1T_ITS_AccelerationControl ()  {}
   ASN1T_ITS_AccelerationControl (const OSOCTET* _data) {
      OSCRTLSAFEMEMCPY (data, 1, _data, 1);
   }
} ;

class EXTERN ASN1C_ITS_AccelerationControl :
public ASN1CBitStr
{
protected:
   ASN1T_ITS_AccelerationControl& msgData;
public:
   // named bits
   enum { brakePedalEngaged = 0, gasPedalEngaged = 1, emergencyBrakeEngaged = 2, collisionWarningEngaged = 3, accEngaged = 4, cruiseControlEngaged = 5, speedLimiterEngaged = 6 };

   /**
    * Control class: ASN1C_ITS_AccelerationControl
    * Data class:    ASN1T_ITS_AccelerationControl
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ITS_AccelerationControl (ASN1T_ITS_AccelerationControl& data);

   /**
    * Control class: ASN1C_ITS_AccelerationControl<br/>
    * Data class: ASN1T_ITS_AccelerationControl<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ITS_AccelerationControl (OSRTMessageBufferIF& msgBuf
      , ASN1T_ITS_AccelerationControl& data);

   virtual ~ASN1C_ITS_AccelerationControl () {}

private:
   ASN1C_ITS_AccelerationControl& operator= (const ASN1C_ITS_AccelerationControl&) {return *this;}
} ;

EXTERN int asn1PE_ITS_AccelerationControl (OSCTXT* pctxt, ASN1T_ITS_AccelerationControl* pvalue);

EXTERN int asn1PD_ITS_AccelerationControl (OSCTXT* pctxt, ASN1T_ITS_AccelerationControl* pvalue);

EXTERN int XmlEnc_ITS_AccelerationControl (OSCTXT* pctxt, 
   ASN1T_ITS_AccelerationControl* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_AccelerationControl (OSCTXT* pctxt, 
   ASN1T_ITS_AccelerationControl* pvalue);

EXTERN int asn1JsonEnc_ITS_AccelerationControl (OSCTXT *pctxt, ASN1T_ITS_AccelerationControl *pvalue);

EXTERN int asn1JsonDec_ITS_AccelerationControl (OSCTXT *pctxt, ASN1T_ITS_AccelerationControl *pvalue);

EXTERN int asn1PrtToStrm_ITS_AccelerationControl (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_AccelerationControl* pvalue);

extern EXTERN struct OSBitMapItem g_ASN1T_ITS_AccelerationControl_NAMEDBITTAB[8];

EXTERN ASN1T_ITS_AccelerationControl* 
   new_ASN1T_ITS_AccelerationControl (ASN1CType& ccobj);

EXTERN int asn1Init_ITS_AccelerationControl (ASN1T_ITS_AccelerationControl* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

/**************************************************************/
/*                                                            */
/*  LanePosition                                              */
/*                                                            */
/**************************************************************/
/*
LanePosition ::= INTEGER { offTheRoad(-1), hardShoulder(0), outermostDrivingLane(1), secondLaneFromOutside(2) } (-1..14)
*/
struct EXTERN ITS_LanePosition {
   enum Root {
      offTheRoad = -1,
      hardShoulder = 0,
      outermostDrivingLane = 1,
      secondLaneFromOutside = 2
   } ;
} ;

typedef OSINT8 ASN1T_ITS_LanePosition;

EXTERN int asn1PE_ITS_LanePosition (OSCTXT* pctxt, ASN1T_ITS_LanePosition value);

EXTERN int asn1PD_ITS_LanePosition (OSCTXT* pctxt, ASN1T_ITS_LanePosition* pvalue);

EXTERN int XmlEnc_ITS_LanePosition (OSCTXT* pctxt, 
   ASN1T_ITS_LanePosition value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_LanePosition (OSCTXT* pctxt, 
   ASN1T_ITS_LanePosition* pvalue);

EXTERN int asn1JsonEnc_ITS_LanePosition (OSCTXT *pctxt, ASN1T_ITS_LanePosition *pvalue);

EXTERN int asn1JsonDec_ITS_LanePosition (OSCTXT *pctxt, ASN1T_ITS_LanePosition *pvalue);

EXTERN int asn1PrtToStrm_ITS_LanePosition (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_LanePosition* pvalue);

EXTERN ASN1T_ITS_LanePosition* new_ASN1T_ITS_LanePosition (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  SteeringWheelAngleValue                                   */
/*                                                            */
/**************************************************************/
/*
SteeringWheelAngleValue ::= INTEGER { onePointFiveDegreesToRight(-1), straight(0), onePointFiveDegreesToLeft(1), unavailable(512) } (-511..512)
*/
struct EXTERN ITS_SteeringWheelAngleValue {
   enum Root {
      onePointFiveDegreesToRight = -1,
      straight = 0,
      onePointFiveDegreesToLeft = 1,
      unavailable = 512
   } ;
} ;

typedef OSINT16 ASN1T_ITS_SteeringWheelAngleValue;

EXTERN int asn1PE_ITS_SteeringWheelAngleValue (OSCTXT* pctxt, ASN1T_ITS_SteeringWheelAngleValue value);

EXTERN int asn1PD_ITS_SteeringWheelAngleValue (OSCTXT* pctxt, ASN1T_ITS_SteeringWheelAngleValue* pvalue);

EXTERN int XmlEnc_ITS_SteeringWheelAngleValue (OSCTXT* pctxt, 
   ASN1T_ITS_SteeringWheelAngleValue value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_SteeringWheelAngleValue (OSCTXT* pctxt, 
   ASN1T_ITS_SteeringWheelAngleValue* pvalue);

EXTERN int asn1JsonEnc_ITS_SteeringWheelAngleValue (OSCTXT *pctxt, ASN1T_ITS_SteeringWheelAngleValue *pvalue);

EXTERN int asn1JsonDec_ITS_SteeringWheelAngleValue (OSCTXT *pctxt, ASN1T_ITS_SteeringWheelAngleValue *pvalue);

EXTERN int asn1PrtToStrm_ITS_SteeringWheelAngleValue (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_SteeringWheelAngleValue* pvalue);

EXTERN ASN1T_ITS_SteeringWheelAngleValue* 
   new_ASN1T_ITS_SteeringWheelAngleValue (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  SteeringWheelAngleConfidence                              */
/*                                                            */
/**************************************************************/
/*
SteeringWheelAngleConfidence ::= INTEGER { equalOrWithinOnePointFiveDegree(1), outOfRange(126), unavailable(127) } (1..127)
*/
struct EXTERN ITS_SteeringWheelAngleConfidence {
   enum Root {
      equalOrWithinOnePointFiveDegree = 1,
      outOfRange = 126,
      unavailable = 127
   } ;
} ;

typedef OSUINT8 ASN1T_ITS_SteeringWheelAngleConfidence;

EXTERN int asn1PE_ITS_SteeringWheelAngleConfidence (OSCTXT* pctxt, ASN1T_ITS_SteeringWheelAngleConfidence value);

EXTERN int asn1PD_ITS_SteeringWheelAngleConfidence (OSCTXT* pctxt, ASN1T_ITS_SteeringWheelAngleConfidence* pvalue);

EXTERN int XmlEnc_ITS_SteeringWheelAngleConfidence (OSCTXT* pctxt, 
   ASN1T_ITS_SteeringWheelAngleConfidence value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_SteeringWheelAngleConfidence (OSCTXT* pctxt, 
   ASN1T_ITS_SteeringWheelAngleConfidence* pvalue);

EXTERN int asn1JsonEnc_ITS_SteeringWheelAngleConfidence (OSCTXT *pctxt, ASN1T_ITS_SteeringWheelAngleConfidence *pvalue);

EXTERN int asn1JsonDec_ITS_SteeringWheelAngleConfidence (OSCTXT *pctxt, ASN1T_ITS_SteeringWheelAngleConfidence *pvalue);

EXTERN int asn1PrtToStrm_ITS_SteeringWheelAngleConfidence (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_SteeringWheelAngleConfidence* pvalue);

EXTERN ASN1T_ITS_SteeringWheelAngleConfidence* 
   new_ASN1T_ITS_SteeringWheelAngleConfidence (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  SteeringWheelAngle                                        */
/*                                                            */
/**************************************************************/
/*
SteeringWheelAngle ::= SEQUENCE {
   steeringWheelAngleValue [0] SteeringWheelAngleValue,
   steeringWheelAngleConfidence [1] SteeringWheelAngleConfidence
}
*/
struct EXTERN ASN1T_ITS_SteeringWheelAngle {
   ASN1T_ITS_SteeringWheelAngleValue steeringWheelAngleValue;
   ASN1T_ITS_SteeringWheelAngleConfidence steeringWheelAngleConfidence;
} ;

EXTERN int asn1PE_ITS_SteeringWheelAngle (OSCTXT* pctxt, ASN1T_ITS_SteeringWheelAngle* pvalue);

EXTERN int asn1PD_ITS_SteeringWheelAngle (OSCTXT* pctxt, ASN1T_ITS_SteeringWheelAngle* pvalue);

EXTERN int XmlEnc_ITS_SteeringWheelAngle (OSCTXT* pctxt, 
   ASN1T_ITS_SteeringWheelAngle* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_SteeringWheelAngle (OSCTXT* pctxt, 
   ASN1T_ITS_SteeringWheelAngle* pvalue);

EXTERN int asn1JsonEnc_ITS_SteeringWheelAngle (OSCTXT *pctxt, ASN1T_ITS_SteeringWheelAngle *pvalue);

EXTERN int asn1JsonDec_ITS_SteeringWheelAngle (OSCTXT *pctxt, ASN1T_ITS_SteeringWheelAngle *pvalue);

EXTERN int asn1PrtToStrm_ITS_SteeringWheelAngle (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_SteeringWheelAngle* pvalue);

EXTERN ASN1T_ITS_SteeringWheelAngle* 
   new_ASN1T_ITS_SteeringWheelAngle (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  LateralAccelerationValue                                  */
/*                                                            */
/**************************************************************/
/*
LateralAccelerationValue ::= INTEGER { pointOneMeterPerSecSquaredToRight(-1), pointOneMeterPerSecSquaredToLeft(1), unavailable(161) } (-160..161)
*/
struct EXTERN ITS_LateralAccelerationValue {
   enum Root {
      pointOneMeterPerSecSquaredToRight = -1,
      pointOneMeterPerSecSquaredToLeft = 1,
      unavailable = 161
   } ;
} ;

typedef OSINT16 ASN1T_ITS_LateralAccelerationValue;

EXTERN int asn1PE_ITS_LateralAccelerationValue (OSCTXT* pctxt, ASN1T_ITS_LateralAccelerationValue value);

EXTERN int asn1PD_ITS_LateralAccelerationValue (OSCTXT* pctxt, ASN1T_ITS_LateralAccelerationValue* pvalue);

EXTERN int XmlEnc_ITS_LateralAccelerationValue (OSCTXT* pctxt, 
   ASN1T_ITS_LateralAccelerationValue value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_LateralAccelerationValue (OSCTXT* pctxt, 
   ASN1T_ITS_LateralAccelerationValue* pvalue);

EXTERN int asn1JsonEnc_ITS_LateralAccelerationValue (OSCTXT *pctxt, ASN1T_ITS_LateralAccelerationValue *pvalue);

EXTERN int asn1JsonDec_ITS_LateralAccelerationValue (OSCTXT *pctxt, ASN1T_ITS_LateralAccelerationValue *pvalue);

EXTERN int asn1PrtToStrm_ITS_LateralAccelerationValue (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_LateralAccelerationValue* pvalue);

EXTERN ASN1T_ITS_LateralAccelerationValue* 
   new_ASN1T_ITS_LateralAccelerationValue (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  LateralAcceleration                                       */
/*                                                            */
/**************************************************************/
/*
LateralAcceleration ::= SEQUENCE {
   lateralAccelerationValue [0] LateralAccelerationValue,
   lateralAccelerationConfidence [1] AccelerationConfidence
}
*/
struct EXTERN ASN1T_ITS_LateralAcceleration {
   ASN1T_ITS_LateralAccelerationValue lateralAccelerationValue;
   ASN1T_ITS_AccelerationConfidence lateralAccelerationConfidence;
} ;

EXTERN int asn1PE_ITS_LateralAcceleration (OSCTXT* pctxt, ASN1T_ITS_LateralAcceleration* pvalue);

EXTERN int asn1PD_ITS_LateralAcceleration (OSCTXT* pctxt, ASN1T_ITS_LateralAcceleration* pvalue);

EXTERN int XmlEnc_ITS_LateralAcceleration (OSCTXT* pctxt, 
   ASN1T_ITS_LateralAcceleration* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_LateralAcceleration (OSCTXT* pctxt, 
   ASN1T_ITS_LateralAcceleration* pvalue);

EXTERN int asn1JsonEnc_ITS_LateralAcceleration (OSCTXT *pctxt, ASN1T_ITS_LateralAcceleration *pvalue);

EXTERN int asn1JsonDec_ITS_LateralAcceleration (OSCTXT *pctxt, ASN1T_ITS_LateralAcceleration *pvalue);

EXTERN int asn1PrtToStrm_ITS_LateralAcceleration (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_LateralAcceleration* pvalue);

EXTERN ASN1T_ITS_LateralAcceleration* 
   new_ASN1T_ITS_LateralAcceleration (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  VerticalAccelerationValue                                 */
/*                                                            */
/**************************************************************/
/*
VerticalAccelerationValue ::= INTEGER { pointOneMeterPerSecSquaredDown(-1), pointOneMeterPerSecSquaredUp(1), unavailable(161) } (-160..161)
*/
struct EXTERN ITS_VerticalAccelerationValue {
   enum Root {
      pointOneMeterPerSecSquaredDown = -1,
      pointOneMeterPerSecSquaredUp = 1,
      unavailable = 161
   } ;
} ;

typedef OSINT16 ASN1T_ITS_VerticalAccelerationValue;

EXTERN int asn1PE_ITS_VerticalAccelerationValue (OSCTXT* pctxt, ASN1T_ITS_VerticalAccelerationValue value);

EXTERN int asn1PD_ITS_VerticalAccelerationValue (OSCTXT* pctxt, ASN1T_ITS_VerticalAccelerationValue* pvalue);

EXTERN int XmlEnc_ITS_VerticalAccelerationValue (OSCTXT* pctxt, 
   ASN1T_ITS_VerticalAccelerationValue value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_VerticalAccelerationValue (OSCTXT* pctxt, 
   ASN1T_ITS_VerticalAccelerationValue* pvalue);

EXTERN int asn1JsonEnc_ITS_VerticalAccelerationValue (OSCTXT *pctxt, ASN1T_ITS_VerticalAccelerationValue *pvalue);

EXTERN int asn1JsonDec_ITS_VerticalAccelerationValue (OSCTXT *pctxt, ASN1T_ITS_VerticalAccelerationValue *pvalue);

EXTERN int asn1PrtToStrm_ITS_VerticalAccelerationValue (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_VerticalAccelerationValue* pvalue);

EXTERN ASN1T_ITS_VerticalAccelerationValue* 
   new_ASN1T_ITS_VerticalAccelerationValue (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  VerticalAcceleration                                      */
/*                                                            */
/**************************************************************/
/*
VerticalAcceleration ::= SEQUENCE {
   verticalAccelerationValue [0] VerticalAccelerationValue,
   verticalAccelerationConfidence [1] AccelerationConfidence
}
*/
struct EXTERN ASN1T_ITS_VerticalAcceleration {
   ASN1T_ITS_VerticalAccelerationValue verticalAccelerationValue;
   ASN1T_ITS_AccelerationConfidence verticalAccelerationConfidence;
} ;

EXTERN int asn1PE_ITS_VerticalAcceleration (OSCTXT* pctxt, ASN1T_ITS_VerticalAcceleration* pvalue);

EXTERN int asn1PD_ITS_VerticalAcceleration (OSCTXT* pctxt, ASN1T_ITS_VerticalAcceleration* pvalue);

EXTERN int XmlEnc_ITS_VerticalAcceleration (OSCTXT* pctxt, 
   ASN1T_ITS_VerticalAcceleration* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_VerticalAcceleration (OSCTXT* pctxt, 
   ASN1T_ITS_VerticalAcceleration* pvalue);

EXTERN int asn1JsonEnc_ITS_VerticalAcceleration (OSCTXT *pctxt, ASN1T_ITS_VerticalAcceleration *pvalue);

EXTERN int asn1JsonDec_ITS_VerticalAcceleration (OSCTXT *pctxt, ASN1T_ITS_VerticalAcceleration *pvalue);

EXTERN int asn1PrtToStrm_ITS_VerticalAcceleration (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_VerticalAcceleration* pvalue);

EXTERN ASN1T_ITS_VerticalAcceleration* 
   new_ASN1T_ITS_VerticalAcceleration (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  PerformanceClass                                          */
/*                                                            */
/**************************************************************/
/*
PerformanceClass ::= INTEGER { unavailable(0), performanceClassA(1), performanceClassB(2) } (0..7)
*/
struct EXTERN ITS_PerformanceClass {
   enum Root {
      unavailable = 0,
      performanceClassA = 1,
      performanceClassB = 2
   } ;
} ;

typedef OSUINT8 ASN1T_ITS_PerformanceClass;

EXTERN int asn1PE_ITS_PerformanceClass (OSCTXT* pctxt, ASN1T_ITS_PerformanceClass value);

EXTERN int asn1PD_ITS_PerformanceClass (OSCTXT* pctxt, ASN1T_ITS_PerformanceClass* pvalue);

EXTERN int XmlEnc_ITS_PerformanceClass (OSCTXT* pctxt, 
   ASN1T_ITS_PerformanceClass value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_PerformanceClass (OSCTXT* pctxt, 
   ASN1T_ITS_PerformanceClass* pvalue);

EXTERN int asn1JsonEnc_ITS_PerformanceClass (OSCTXT *pctxt, ASN1T_ITS_PerformanceClass *pvalue);

EXTERN int asn1JsonDec_ITS_PerformanceClass (OSCTXT *pctxt, ASN1T_ITS_PerformanceClass *pvalue);

EXTERN int asn1PrtToStrm_ITS_PerformanceClass (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_PerformanceClass* pvalue);

EXTERN ASN1T_ITS_PerformanceClass* 
   new_ASN1T_ITS_PerformanceClass (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  ProtectedZoneID                                           */
/*                                                            */
/**************************************************************/
/*
ProtectedZoneID ::= INTEGER (0..134217727)
*/
typedef OSUINT32 ASN1T_ITS_ProtectedZoneID;

EXTERN int asn1PE_ITS_ProtectedZoneID (OSCTXT* pctxt, ASN1T_ITS_ProtectedZoneID value);

EXTERN int asn1PD_ITS_ProtectedZoneID (OSCTXT* pctxt, ASN1T_ITS_ProtectedZoneID* pvalue);

EXTERN int XmlEnc_ITS_ProtectedZoneID (OSCTXT* pctxt, 
   ASN1T_ITS_ProtectedZoneID value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_ProtectedZoneID (OSCTXT* pctxt, 
   ASN1T_ITS_ProtectedZoneID* pvalue);

EXTERN int asn1JsonEnc_ITS_ProtectedZoneID (OSCTXT *pctxt, ASN1T_ITS_ProtectedZoneID *pvalue);

EXTERN int asn1JsonDec_ITS_ProtectedZoneID (OSCTXT *pctxt, ASN1T_ITS_ProtectedZoneID *pvalue);

EXTERN int asn1PrtToStrm_ITS_ProtectedZoneID (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_ProtectedZoneID* pvalue);

EXTERN ASN1T_ITS_ProtectedZoneID* 
   new_ASN1T_ITS_ProtectedZoneID (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  CenDsrcTollingZoneID                                      */
/*                                                            */
/**************************************************************/
/*
CenDsrcTollingZoneID ::= ProtectedZoneID
*/
typedef ASN1T_ITS_ProtectedZoneID ASN1T_ITS_CenDsrcTollingZoneID;

EXTERN int asn1PE_ITS_CenDsrcTollingZoneID (OSCTXT* pctxt, ASN1T_ITS_CenDsrcTollingZoneID value);

EXTERN int asn1PD_ITS_CenDsrcTollingZoneID (OSCTXT* pctxt, ASN1T_ITS_CenDsrcTollingZoneID* pvalue);

EXTERN int XmlEnc_ITS_CenDsrcTollingZoneID (OSCTXT* pctxt, 
   ASN1T_ITS_CenDsrcTollingZoneID value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_CenDsrcTollingZoneID (OSCTXT* pctxt, 
   ASN1T_ITS_CenDsrcTollingZoneID* pvalue);

EXTERN int asn1JsonEnc_ITS_CenDsrcTollingZoneID (OSCTXT *pctxt, ASN1T_ITS_CenDsrcTollingZoneID *pvalue);

EXTERN int asn1JsonDec_ITS_CenDsrcTollingZoneID (OSCTXT *pctxt, ASN1T_ITS_CenDsrcTollingZoneID *pvalue);

EXTERN int asn1PrtToStrm_ITS_CenDsrcTollingZoneID (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_CenDsrcTollingZoneID* pvalue);

EXTERN ASN1T_ITS_CenDsrcTollingZoneID* 
   new_ASN1T_ITS_CenDsrcTollingZoneID (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  CenDsrcTollingZone                                        */
/*                                                            */
/**************************************************************/
/*
CenDsrcTollingZone ::= SEQUENCE {
   protectedZoneLatitude [0] Latitude,
   protectedZoneLongitude [1] Longitude,
   cenDsrcTollingZoneID [2] CenDsrcTollingZoneID OPTIONAL
}
*/
struct EXTERN ASN1T_ITS_CenDsrcTollingZone {
   struct {
      unsigned cenDsrcTollingZoneIDPresent : 1;
   } m;
   ASN1T_ITS_Latitude protectedZoneLatitude;
   ASN1T_ITS_Longitude protectedZoneLongitude;
   ASN1T_ITS_CenDsrcTollingZoneID cenDsrcTollingZoneID;
   ASN1T_ITS_CenDsrcTollingZone ();
} ;

EXTERN int asn1PE_ITS_CenDsrcTollingZone (OSCTXT* pctxt, ASN1T_ITS_CenDsrcTollingZone* pvalue);

EXTERN int asn1PD_ITS_CenDsrcTollingZone (OSCTXT* pctxt, ASN1T_ITS_CenDsrcTollingZone* pvalue);

EXTERN int XmlEnc_ITS_CenDsrcTollingZone (OSCTXT* pctxt, 
   ASN1T_ITS_CenDsrcTollingZone* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_CenDsrcTollingZone (OSCTXT* pctxt, 
   ASN1T_ITS_CenDsrcTollingZone* pvalue);

EXTERN int asn1JsonEnc_ITS_CenDsrcTollingZone (OSCTXT *pctxt, ASN1T_ITS_CenDsrcTollingZone *pvalue);

EXTERN int asn1JsonDec_ITS_CenDsrcTollingZone (OSCTXT *pctxt, ASN1T_ITS_CenDsrcTollingZone *pvalue);

EXTERN int asn1PrtToStrm_ITS_CenDsrcTollingZone (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_CenDsrcTollingZone* pvalue);

EXTERN ASN1T_ITS_CenDsrcTollingZone* 
   new_ASN1T_ITS_CenDsrcTollingZone (ASN1CType& ccobj);

EXTERN int asn1Init_ITS_CenDsrcTollingZone (ASN1T_ITS_CenDsrcTollingZone* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

/**************************************************************/
/*                                                            */
/*  ProtectedZoneType                                         */
/*                                                            */
/**************************************************************/
/*
ProtectedZoneType ::= ENUMERATED { cenDsrcTolling(0), ... }
*/
struct EXTERN ITS_ProtectedZoneType {
   enum Root {
      cenDsrcTolling = 0
   } ;
} ;

typedef OSUINT32 ASN1T_ITS_ProtectedZoneType;

EXTERN int asn1PE_ITS_ProtectedZoneType (OSCTXT* pctxt, ASN1T_ITS_ProtectedZoneType value);

EXTERN int asn1PD_ITS_ProtectedZoneType (OSCTXT* pctxt, ASN1T_ITS_ProtectedZoneType* pvalue);

EXTERN int XmlEnc_ITS_ProtectedZoneType (OSCTXT* pctxt, 
   ASN1T_ITS_ProtectedZoneType value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_ProtectedZoneType (OSCTXT* pctxt, 
   ASN1T_ITS_ProtectedZoneType* pvalue);

EXTERN int asn1JsonEnc_ITS_ProtectedZoneType (OSCTXT *pctxt, ASN1T_ITS_ProtectedZoneType *pvalue);

EXTERN int asn1JsonDec_ITS_ProtectedZoneType (OSCTXT *pctxt, ASN1T_ITS_ProtectedZoneType *pvalue);

EXTERN int asn1PrtToStrm_ITS_ProtectedZoneType (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_ProtectedZoneType* pvalue);

EXTERN ASN1T_ITS_ProtectedZoneType* 
   new_ASN1T_ITS_ProtectedZoneType (ASN1CType& ccobj);

EXTERN extern const OSEnumItem ASN1T_ITS_ProtectedZoneType_ENUMTAB[];
#define ASN1T_ITS_ProtectedZoneType_ENUMTABSIZE 1

EXTERN const OSUTF8CHAR* ASN1T_ITS_ProtectedZoneType_ToString (OSINT32 value);

EXTERN int ASN1T_ITS_ProtectedZoneType_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, ASN1T_ITS_ProtectedZoneType* pvalue);

EXTERN int ASN1T_ITS_ProtectedZoneType_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      ASN1T_ITS_ProtectedZoneType* pvalue);

/**************************************************************/
/*                                                            */
/*  TimestampIts                                              */
/*                                                            */
/**************************************************************/
/*
TimestampIts ::= INTEGER { utcStartOf2004(0), oneMillisecAfterUTCStartOf2004(1) } (0..4398046511103)
*/
struct EXTERN ITS_TimestampIts {
   enum Root {
      utcStartOf2004 = 0,
      oneMillisecAfterUTCStartOf2004 = 1
   } ;
} ;

typedef OSUINT64 ASN1T_ITS_TimestampIts;

EXTERN int asn1PE_ITS_TimestampIts (OSCTXT* pctxt, ASN1T_ITS_TimestampIts value);

EXTERN int asn1PD_ITS_TimestampIts (OSCTXT* pctxt, ASN1T_ITS_TimestampIts* pvalue);

EXTERN int XmlEnc_ITS_TimestampIts (OSCTXT* pctxt, 
   ASN1T_ITS_TimestampIts value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_TimestampIts (OSCTXT* pctxt, 
   ASN1T_ITS_TimestampIts* pvalue);

EXTERN int asn1JsonEnc_ITS_TimestampIts (OSCTXT *pctxt, ASN1T_ITS_TimestampIts *pvalue);

EXTERN int asn1JsonDec_ITS_TimestampIts (OSCTXT *pctxt, ASN1T_ITS_TimestampIts *pvalue);

EXTERN int asn1PrtToStrm_ITS_TimestampIts (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_TimestampIts* pvalue);

EXTERN ASN1T_ITS_TimestampIts* new_ASN1T_ITS_TimestampIts (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  ProtectedZoneRadius                                       */
/*                                                            */
/**************************************************************/
/*
ProtectedZoneRadius ::= INTEGER { oneMeter(1) } (1..255, ...)
*/
struct EXTERN ITS_ProtectedZoneRadius {
   enum Root {
      oneMeter = 1
   } ;
} ;

typedef OSUINT32 ASN1T_ITS_ProtectedZoneRadius;

EXTERN int asn1PE_ITS_ProtectedZoneRadius (OSCTXT* pctxt, ASN1T_ITS_ProtectedZoneRadius value);

EXTERN int asn1PD_ITS_ProtectedZoneRadius (OSCTXT* pctxt, ASN1T_ITS_ProtectedZoneRadius* pvalue);

EXTERN int XmlEnc_ITS_ProtectedZoneRadius (OSCTXT* pctxt, 
   ASN1T_ITS_ProtectedZoneRadius value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_ProtectedZoneRadius (OSCTXT* pctxt, 
   ASN1T_ITS_ProtectedZoneRadius* pvalue);

EXTERN int asn1JsonEnc_ITS_ProtectedZoneRadius (OSCTXT *pctxt, ASN1T_ITS_ProtectedZoneRadius *pvalue);

EXTERN int asn1JsonDec_ITS_ProtectedZoneRadius (OSCTXT *pctxt, ASN1T_ITS_ProtectedZoneRadius *pvalue);

EXTERN int asn1PrtToStrm_ITS_ProtectedZoneRadius (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_ProtectedZoneRadius* pvalue);

EXTERN ASN1T_ITS_ProtectedZoneRadius* 
   new_ASN1T_ITS_ProtectedZoneRadius (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  ProtectedCommunicationZone                                */
/*                                                            */
/**************************************************************/
/*
ProtectedCommunicationZone ::= SEQUENCE {
   protectedZoneType [0] ProtectedZoneType,
   expiryTime [1] TimestampIts OPTIONAL,
   protectedZoneLatitude [2] Latitude,
   protectedZoneLongitude [3] Longitude,
   protectedZoneRadius [4] ProtectedZoneRadius OPTIONAL,
   protectedZoneID [5] ProtectedZoneID OPTIONAL
}
*/
struct EXTERN ASN1T_ITS_ProtectedCommunicationZone {
   struct {
      unsigned expiryTimePresent : 1;
      unsigned protectedZoneRadiusPresent : 1;
      unsigned protectedZoneIDPresent : 1;
   } m;
   ASN1T_ITS_ProtectedZoneType protectedZoneType;
   ASN1T_ITS_TimestampIts expiryTime;
   ASN1T_ITS_Latitude protectedZoneLatitude;
   ASN1T_ITS_Longitude protectedZoneLongitude;
   ASN1T_ITS_ProtectedZoneRadius protectedZoneRadius;
   ASN1T_ITS_ProtectedZoneID protectedZoneID;
   ASN1T_ITS_ProtectedCommunicationZone ();
} ;

EXTERN int asn1PE_ITS_ProtectedCommunicationZone (OSCTXT* pctxt, ASN1T_ITS_ProtectedCommunicationZone* pvalue);

EXTERN int asn1PD_ITS_ProtectedCommunicationZone (OSCTXT* pctxt, ASN1T_ITS_ProtectedCommunicationZone* pvalue);

EXTERN int XmlEnc_ITS_ProtectedCommunicationZone (OSCTXT* pctxt, 
   ASN1T_ITS_ProtectedCommunicationZone* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_ProtectedCommunicationZone (OSCTXT* pctxt, 
   ASN1T_ITS_ProtectedCommunicationZone* pvalue);

EXTERN int asn1JsonEnc_ITS_ProtectedCommunicationZone (OSCTXT *pctxt, ASN1T_ITS_ProtectedCommunicationZone *pvalue);

EXTERN int asn1JsonDec_ITS_ProtectedCommunicationZone (OSCTXT *pctxt, ASN1T_ITS_ProtectedCommunicationZone *pvalue);

EXTERN int asn1PrtToStrm_ITS_ProtectedCommunicationZone (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_ProtectedCommunicationZone* pvalue);

EXTERN ASN1T_ITS_ProtectedCommunicationZone* 
   new_ASN1T_ITS_ProtectedCommunicationZone (ASN1CType& ccobj);

EXTERN int asn1Init_ITS_ProtectedCommunicationZone (
   ASN1T_ITS_ProtectedCommunicationZone* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

/**************************************************************/
/*                                                            */
/*  ProtectedCommunicationZonesRSU                            */
/*                                                            */
/**************************************************************/
/*
ProtectedCommunicationZonesRSU ::= SEQUENCE (SIZE (1..16)) OF ProtectedCommunicationZone
*/
/* List of ASN1T_ITS_ProtectedCommunicationZone */
typedef ASN1TSeqOfList ASN1T_ITS_ProtectedCommunicationZonesRSU;

class EXTERN ASN1C_ITS_ProtectedCommunicationZonesRSU :
public ASN1CSeqOfList
{
protected:
   ASN1T_ITS_ProtectedCommunicationZonesRSU& msgData;
public:
   /**
    * Control class: ASN1C_ITS_ProtectedCommunicationZonesRSU
    * Data class:    ASN1T_ITS_ProtectedCommunicationZonesRSU
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ITS_ProtectedCommunicationZonesRSU
       (ASN1T_ITS_ProtectedCommunicationZonesRSU& data);

   /**
    * Control class: ASN1C_ITS_ProtectedCommunicationZonesRSU<br/>
    * Data class: ASN1T_ITS_ProtectedCommunicationZonesRSU<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ITS_ProtectedCommunicationZonesRSU (OSRTMessageBufferIF& msgBuf
      , ASN1T_ITS_ProtectedCommunicationZonesRSU& data);

   /**
    * Control class: ASN1C_ITS_ProtectedCommunicationZonesRSU<br/>
    * Data class: ASN1T_ITS_ProtectedCommunicationZonesRSU<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_ITS_ProtectedCommunicationZonesRSU (ASN1CType& ccobj
      , ASN1T_ITS_ProtectedCommunicationZonesRSU& data);

   virtual ~ASN1C_ITS_ProtectedCommunicationZonesRSU () {}

   /**
    * Data class: ASN1T_ITS_ProtectedCommunicationZone<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_ITS_ProtectedCommunicationZone* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_ITS_ProtectedCommunicationZone.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_ITS_ProtectedCommunicationZone* NewElement ();

   /**
    * Data class: ASN1T_ITS_ProtectedCommunicationZone.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_ITS_ProtectedCommunicationZone* AppendNewElement ();

private:
   ASN1C_ITS_ProtectedCommunicationZonesRSU& operator= (const ASN1C_ITS_ProtectedCommunicationZonesRSU&) {return *this;}
} ;

EXTERN int asn1PE_ITS_ProtectedCommunicationZonesRSU (OSCTXT* pctxt, ASN1T_ITS_ProtectedCommunicationZonesRSU* pvalue);

EXTERN int asn1PD_ITS_ProtectedCommunicationZonesRSU (OSCTXT* pctxt, ASN1T_ITS_ProtectedCommunicationZonesRSU* pvalue);

EXTERN int XmlEnc_ITS_ProtectedCommunicationZonesRSU (OSCTXT* pctxt, 
   ASN1T_ITS_ProtectedCommunicationZonesRSU* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_ProtectedCommunicationZonesRSU (OSCTXT* pctxt, 
   ASN1T_ITS_ProtectedCommunicationZonesRSU* pvalue);

EXTERN int asn1JsonEnc_ITS_ProtectedCommunicationZonesRSU (OSCTXT *pctxt, ASN1T_ITS_ProtectedCommunicationZonesRSU *pvalue);

EXTERN int asn1JsonDec_ITS_ProtectedCommunicationZonesRSU (OSCTXT *pctxt, ASN1T_ITS_ProtectedCommunicationZonesRSU *pvalue);

EXTERN int asn1PrtToStrm_ITS_ProtectedCommunicationZonesRSU (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_ProtectedCommunicationZonesRSU* pvalue);

EXTERN int asn1Init_ITS_ProtectedCommunicationZonesRSU (
   ASN1T_ITS_ProtectedCommunicationZonesRSU* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ITS_ProtectedCommunicationZonesRSU (OSCTXT *pctxt, 
   ASN1T_ITS_ProtectedCommunicationZonesRSU* pvalue);

/**************************************************************/
/*                                                            */
/*  VehicleRole                                               */
/*                                                            */
/**************************************************************/
/*
VehicleRole ::= ENUMERATED { default(0), publicTransport(1), specialTransport(2), dangerousGoods(3), roadWork(4), rescue(5), emergency(6), safetyCar(7), agriculture(8), commercial(9), military(10), roadOperator(11), taxi(12), reserved1(13), reserved2(14), reserved3(15) }
*/
struct EXTERN ITS_VehicleRole {
   enum Root {
      default_ = 0,
      publicTransport = 1,
      specialTransport = 2,
      dangerousGoods = 3,
      roadWork = 4,
      rescue = 5,
      emergency = 6,
      safetyCar = 7,
      agriculture = 8,
      commercial = 9,
      military = 10,
      roadOperator = 11,
      taxi = 12,
      reserved1 = 13,
      reserved2 = 14,
      reserved3 = 15
   } ;
} ;

typedef OSUINT32 ASN1T_ITS_VehicleRole;

EXTERN int asn1PE_ITS_VehicleRole (OSCTXT* pctxt, ASN1T_ITS_VehicleRole value);

EXTERN int asn1PD_ITS_VehicleRole (OSCTXT* pctxt, ASN1T_ITS_VehicleRole* pvalue);

EXTERN int XmlEnc_ITS_VehicleRole (OSCTXT* pctxt, ASN1T_ITS_VehicleRole value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_VehicleRole (OSCTXT* pctxt, ASN1T_ITS_VehicleRole* pvalue
   );

EXTERN int asn1JsonEnc_ITS_VehicleRole (OSCTXT *pctxt, ASN1T_ITS_VehicleRole *pvalue);

EXTERN int asn1JsonDec_ITS_VehicleRole (OSCTXT *pctxt, ASN1T_ITS_VehicleRole *pvalue);

EXTERN int asn1PrtToStrm_ITS_VehicleRole (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_VehicleRole* pvalue);

EXTERN ASN1T_ITS_VehicleRole* new_ASN1T_ITS_VehicleRole (ASN1CType& ccobj);

EXTERN extern const OSEnumItem ASN1T_ITS_VehicleRole_ENUMTAB[];
#define ASN1T_ITS_VehicleRole_ENUMTABSIZE 16

EXTERN const OSUTF8CHAR* ASN1T_ITS_VehicleRole_ToString (OSINT32 value);

EXTERN int ASN1T_ITS_VehicleRole_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, ASN1T_ITS_VehicleRole* pvalue);

EXTERN int ASN1T_ITS_VehicleRole_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, ASN1T_ITS_VehicleRole* pvalue);

/**************************************************************/
/*                                                            */
/*  ExteriorLights                                            */
/*                                                            */
/**************************************************************/
/*
ExteriorLights ::= BIT STRING  { lowBeamHeadlightsOn(0), highBeamHeadlightsOn(1), leftTurnSignalOn(2), rightTurnSignalOn(3), daytimeRunningLightsOn(4), reverseLightOn(5), fogLightOn(6), parkingLightsOn(7) } (SIZE (8))
*/
struct EXTERN ASN1T_ITS_ExteriorLights {
   OSOCTET data[1];
   // ctors
   ASN1T_ITS_ExteriorLights ()  {}
   ASN1T_ITS_ExteriorLights (const OSOCTET* _data) {
      OSCRTLSAFEMEMCPY (data, 1, _data, 1);
   }
} ;

class EXTERN ASN1C_ITS_ExteriorLights :
public ASN1CBitStr
{
protected:
   ASN1T_ITS_ExteriorLights& msgData;
public:
   // named bits
   enum { lowBeamHeadlightsOn = 0, highBeamHeadlightsOn = 1, leftTurnSignalOn = 2, rightTurnSignalOn = 3, daytimeRunningLightsOn = 4, reverseLightOn = 5, fogLightOn = 6, parkingLightsOn = 7 };

   /**
    * Control class: ASN1C_ITS_ExteriorLights
    * Data class:    ASN1T_ITS_ExteriorLights
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ITS_ExteriorLights (ASN1T_ITS_ExteriorLights& data);

   /**
    * Control class: ASN1C_ITS_ExteriorLights<br/>
    * Data class: ASN1T_ITS_ExteriorLights<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ITS_ExteriorLights (OSRTMessageBufferIF& msgBuf
      , ASN1T_ITS_ExteriorLights& data);

   virtual ~ASN1C_ITS_ExteriorLights () {}

private:
   ASN1C_ITS_ExteriorLights& operator= (const ASN1C_ITS_ExteriorLights&) {return *this;}
} ;

EXTERN int asn1PE_ITS_ExteriorLights (OSCTXT* pctxt, ASN1T_ITS_ExteriorLights* pvalue);

EXTERN int asn1PD_ITS_ExteriorLights (OSCTXT* pctxt, ASN1T_ITS_ExteriorLights* pvalue);

EXTERN int XmlEnc_ITS_ExteriorLights (OSCTXT* pctxt, 
   ASN1T_ITS_ExteriorLights* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_ExteriorLights (OSCTXT* pctxt, 
   ASN1T_ITS_ExteriorLights* pvalue);

EXTERN int asn1JsonEnc_ITS_ExteriorLights (OSCTXT *pctxt, ASN1T_ITS_ExteriorLights *pvalue);

EXTERN int asn1JsonDec_ITS_ExteriorLights (OSCTXT *pctxt, ASN1T_ITS_ExteriorLights *pvalue);

EXTERN int asn1PrtToStrm_ITS_ExteriorLights (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_ExteriorLights* pvalue);

extern EXTERN struct OSBitMapItem g_ASN1T_ITS_ExteriorLights_NAMEDBITTAB[9];

EXTERN ASN1T_ITS_ExteriorLights* 
   new_ASN1T_ITS_ExteriorLights (ASN1CType& ccobj);

EXTERN int asn1Init_ITS_ExteriorLights (ASN1T_ITS_ExteriorLights* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

/**************************************************************/
/*                                                            */
/*  DeltaLatitude                                             */
/*                                                            */
/**************************************************************/
/*
DeltaLatitude ::= INTEGER { oneMicrodegreeSouth(-10), oneMicrodegreeNorth(10), unavailable(131072) } (-131071..131072)
*/
struct EXTERN ITS_DeltaLatitude {
   enum Root {
      oneMicrodegreeSouth = -10,
      oneMicrodegreeNorth = 10,
      unavailable = 131072
   } ;
} ;

typedef OSINT32 ASN1T_ITS_DeltaLatitude;

EXTERN int asn1PE_ITS_DeltaLatitude (OSCTXT* pctxt, ASN1T_ITS_DeltaLatitude value);

EXTERN int asn1PD_ITS_DeltaLatitude (OSCTXT* pctxt, ASN1T_ITS_DeltaLatitude* pvalue);

EXTERN int XmlEnc_ITS_DeltaLatitude (OSCTXT* pctxt, 
   ASN1T_ITS_DeltaLatitude value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_DeltaLatitude (OSCTXT* pctxt, 
   ASN1T_ITS_DeltaLatitude* pvalue);

EXTERN int asn1JsonEnc_ITS_DeltaLatitude (OSCTXT *pctxt, ASN1T_ITS_DeltaLatitude *pvalue);

EXTERN int asn1JsonDec_ITS_DeltaLatitude (OSCTXT *pctxt, ASN1T_ITS_DeltaLatitude *pvalue);

EXTERN int asn1PrtToStrm_ITS_DeltaLatitude (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_DeltaLatitude* pvalue);

EXTERN ASN1T_ITS_DeltaLatitude* new_ASN1T_ITS_DeltaLatitude (ASN1CType& ccobj)
   ;

/**************************************************************/
/*                                                            */
/*  DeltaLongitude                                            */
/*                                                            */
/**************************************************************/
/*
DeltaLongitude ::= INTEGER { oneMicrodegreeWest(-10), oneMicrodegreeEast(10), unavailable(131072) } (-131071..131072)
*/
struct EXTERN ITS_DeltaLongitude {
   enum Root {
      oneMicrodegreeWest = -10,
      oneMicrodegreeEast = 10,
      unavailable = 131072
   } ;
} ;

typedef OSINT32 ASN1T_ITS_DeltaLongitude;

EXTERN int asn1PE_ITS_DeltaLongitude (OSCTXT* pctxt, ASN1T_ITS_DeltaLongitude value);

EXTERN int asn1PD_ITS_DeltaLongitude (OSCTXT* pctxt, ASN1T_ITS_DeltaLongitude* pvalue);

EXTERN int XmlEnc_ITS_DeltaLongitude (OSCTXT* pctxt, 
   ASN1T_ITS_DeltaLongitude value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_DeltaLongitude (OSCTXT* pctxt, 
   ASN1T_ITS_DeltaLongitude* pvalue);

EXTERN int asn1JsonEnc_ITS_DeltaLongitude (OSCTXT *pctxt, ASN1T_ITS_DeltaLongitude *pvalue);

EXTERN int asn1JsonDec_ITS_DeltaLongitude (OSCTXT *pctxt, ASN1T_ITS_DeltaLongitude *pvalue);

EXTERN int asn1PrtToStrm_ITS_DeltaLongitude (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_DeltaLongitude* pvalue);

EXTERN ASN1T_ITS_DeltaLongitude* 
   new_ASN1T_ITS_DeltaLongitude (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  DeltaAltitude                                             */
/*                                                            */
/**************************************************************/
/*
DeltaAltitude ::= INTEGER { oneCentimeterDown(-1), oneCentimeterUp(1), unavailable(12800) } (-12700..12800)
*/
struct EXTERN ITS_DeltaAltitude {
   enum Root {
      oneCentimeterDown = -1,
      oneCentimeterUp = 1,
      unavailable = 12800
   } ;
} ;

typedef OSINT16 ASN1T_ITS_DeltaAltitude;

EXTERN int asn1PE_ITS_DeltaAltitude (OSCTXT* pctxt, ASN1T_ITS_DeltaAltitude value);

EXTERN int asn1PD_ITS_DeltaAltitude (OSCTXT* pctxt, ASN1T_ITS_DeltaAltitude* pvalue);

EXTERN int XmlEnc_ITS_DeltaAltitude (OSCTXT* pctxt, 
   ASN1T_ITS_DeltaAltitude value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_DeltaAltitude (OSCTXT* pctxt, 
   ASN1T_ITS_DeltaAltitude* pvalue);

EXTERN int asn1JsonEnc_ITS_DeltaAltitude (OSCTXT *pctxt, ASN1T_ITS_DeltaAltitude *pvalue);

EXTERN int asn1JsonDec_ITS_DeltaAltitude (OSCTXT *pctxt, ASN1T_ITS_DeltaAltitude *pvalue);

EXTERN int asn1PrtToStrm_ITS_DeltaAltitude (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_DeltaAltitude* pvalue);

EXTERN ASN1T_ITS_DeltaAltitude* new_ASN1T_ITS_DeltaAltitude (ASN1CType& ccobj)
   ;

/**************************************************************/
/*                                                            */
/*  DeltaReferencePosition                                    */
/*                                                            */
/**************************************************************/
/*
DeltaReferencePosition ::= SEQUENCE {
   deltaLatitude [0] DeltaLatitude,
   deltaLongitude [1] DeltaLongitude,
   deltaAltitude [2] DeltaAltitude
}
*/
struct EXTERN ASN1T_ITS_DeltaReferencePosition {
   ASN1T_ITS_DeltaLatitude deltaLatitude;
   ASN1T_ITS_DeltaLongitude deltaLongitude;
   ASN1T_ITS_DeltaAltitude deltaAltitude;
} ;

EXTERN int asn1PE_ITS_DeltaReferencePosition (OSCTXT* pctxt, ASN1T_ITS_DeltaReferencePosition* pvalue);

EXTERN int asn1PD_ITS_DeltaReferencePosition (OSCTXT* pctxt, ASN1T_ITS_DeltaReferencePosition* pvalue);

EXTERN int XmlEnc_ITS_DeltaReferencePosition (OSCTXT* pctxt, 
   ASN1T_ITS_DeltaReferencePosition* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_DeltaReferencePosition (OSCTXT* pctxt, 
   ASN1T_ITS_DeltaReferencePosition* pvalue);

EXTERN int asn1JsonEnc_ITS_DeltaReferencePosition (OSCTXT *pctxt, ASN1T_ITS_DeltaReferencePosition *pvalue);

EXTERN int asn1JsonDec_ITS_DeltaReferencePosition (OSCTXT *pctxt, ASN1T_ITS_DeltaReferencePosition *pvalue);

EXTERN int asn1PrtToStrm_ITS_DeltaReferencePosition (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_DeltaReferencePosition* pvalue);

EXTERN ASN1T_ITS_DeltaReferencePosition* 
   new_ASN1T_ITS_DeltaReferencePosition (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  PathDeltaTime                                             */
/*                                                            */
/**************************************************************/
/*
PathDeltaTime ::= INTEGER { tenMilliSecondsInPast(1) } (1..65535, ...)
*/
struct EXTERN ITS_PathDeltaTime {
   enum Root {
      tenMilliSecondsInPast = 1
   } ;
} ;

typedef OSUINT32 ASN1T_ITS_PathDeltaTime;

EXTERN int asn1PE_ITS_PathDeltaTime (OSCTXT* pctxt, ASN1T_ITS_PathDeltaTime value);

EXTERN int asn1PD_ITS_PathDeltaTime (OSCTXT* pctxt, ASN1T_ITS_PathDeltaTime* pvalue);

EXTERN int XmlEnc_ITS_PathDeltaTime (OSCTXT* pctxt, 
   ASN1T_ITS_PathDeltaTime value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_PathDeltaTime (OSCTXT* pctxt, 
   ASN1T_ITS_PathDeltaTime* pvalue);

EXTERN int asn1JsonEnc_ITS_PathDeltaTime (OSCTXT *pctxt, ASN1T_ITS_PathDeltaTime *pvalue);

EXTERN int asn1JsonDec_ITS_PathDeltaTime (OSCTXT *pctxt, ASN1T_ITS_PathDeltaTime *pvalue);

EXTERN int asn1PrtToStrm_ITS_PathDeltaTime (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_PathDeltaTime* pvalue);

EXTERN ASN1T_ITS_PathDeltaTime* new_ASN1T_ITS_PathDeltaTime (ASN1CType& ccobj)
   ;

/**************************************************************/
/*                                                            */
/*  PathPoint                                                 */
/*                                                            */
/**************************************************************/
/*
PathPoint ::= SEQUENCE {
   pathPosition [0] DeltaReferencePosition,
   pathDeltaTime [1] PathDeltaTime OPTIONAL
}
*/
struct EXTERN ASN1T_ITS_PathPoint {
   struct {
      unsigned pathDeltaTimePresent : 1;
   } m;
   ASN1T_ITS_DeltaReferencePosition pathPosition;
   ASN1T_ITS_PathDeltaTime pathDeltaTime;
   ASN1T_ITS_PathPoint ();
} ;

EXTERN int asn1PE_ITS_PathPoint (OSCTXT* pctxt, ASN1T_ITS_PathPoint* pvalue);

EXTERN int asn1PD_ITS_PathPoint (OSCTXT* pctxt, ASN1T_ITS_PathPoint* pvalue);

EXTERN int XmlEnc_ITS_PathPoint (OSCTXT* pctxt, ASN1T_ITS_PathPoint* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_PathPoint (OSCTXT* pctxt, ASN1T_ITS_PathPoint* pvalue);

EXTERN int asn1JsonEnc_ITS_PathPoint (OSCTXT *pctxt, ASN1T_ITS_PathPoint *pvalue);

EXTERN int asn1JsonDec_ITS_PathPoint (OSCTXT *pctxt, ASN1T_ITS_PathPoint *pvalue);

EXTERN int asn1PrtToStrm_ITS_PathPoint (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_PathPoint* pvalue);

EXTERN ASN1T_ITS_PathPoint* new_ASN1T_ITS_PathPoint (ASN1CType& ccobj);

EXTERN int asn1Init_ITS_PathPoint (ASN1T_ITS_PathPoint* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

/**************************************************************/
/*                                                            */
/*  PathHistory                                               */
/*                                                            */
/**************************************************************/
/*
PathHistory ::= SEQUENCE (SIZE (0..40)) OF PathPoint
*/
/* List of ASN1T_ITS_PathPoint */
typedef ASN1TSeqOfList ASN1T_ITS_PathHistory;

class EXTERN ASN1C_ITS_PathHistory :
public ASN1CSeqOfList
{
protected:
   ASN1T_ITS_PathHistory& msgData;
public:
   /**
    * Control class: ASN1C_ITS_PathHistory
    * Data class:    ASN1T_ITS_PathHistory
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ITS_PathHistory (ASN1T_ITS_PathHistory& data);

   /**
    * Control class: ASN1C_ITS_PathHistory<br/>
    * Data class: ASN1T_ITS_PathHistory<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ITS_PathHistory (OSRTMessageBufferIF& msgBuf
      , ASN1T_ITS_PathHistory& data);

   /**
    * Control class: ASN1C_ITS_PathHistory<br/>
    * Data class: ASN1T_ITS_PathHistory<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_ITS_PathHistory (ASN1CType& ccobj, ASN1T_ITS_PathHistory& data);

   virtual ~ASN1C_ITS_PathHistory () {}

   /**
    * Data class: ASN1T_ITS_PathPoint<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_ITS_PathPoint* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_ITS_PathPoint.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_ITS_PathPoint* NewElement ();

   /**
    * Data class: ASN1T_ITS_PathPoint.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_ITS_PathPoint* AppendNewElement ();

private:
   ASN1C_ITS_PathHistory& operator= (const ASN1C_ITS_PathHistory&) {return *this;}
} ;

EXTERN int asn1PE_ITS_PathHistory (OSCTXT* pctxt, ASN1T_ITS_PathHistory* pvalue);

EXTERN int asn1PD_ITS_PathHistory (OSCTXT* pctxt, ASN1T_ITS_PathHistory* pvalue);

EXTERN int XmlEnc_ITS_PathHistory (OSCTXT* pctxt, 
   ASN1T_ITS_PathHistory* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_PathHistory (OSCTXT* pctxt, ASN1T_ITS_PathHistory* pvalue
   );

EXTERN int asn1JsonEnc_ITS_PathHistory (OSCTXT *pctxt, ASN1T_ITS_PathHistory *pvalue);

EXTERN int asn1JsonDec_ITS_PathHistory (OSCTXT *pctxt, ASN1T_ITS_PathHistory *pvalue);

EXTERN int asn1PrtToStrm_ITS_PathHistory (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_PathHistory* pvalue);

EXTERN int asn1Init_ITS_PathHistory (ASN1T_ITS_PathHistory* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ITS_PathHistory (OSCTXT *pctxt, ASN1T_ITS_PathHistory* pvalue);

/**************************************************************/
/*                                                            */
/*  EmbarkationStatus                                         */
/*                                                            */
/**************************************************************/
/*
EmbarkationStatus ::= BOOLEAN
*/
typedef OSBOOL ASN1T_ITS_EmbarkationStatus;

EXTERN int asn1PE_ITS_EmbarkationStatus (OSCTXT* pctxt, ASN1T_ITS_EmbarkationStatus value);

EXTERN int asn1PD_ITS_EmbarkationStatus (OSCTXT* pctxt, ASN1T_ITS_EmbarkationStatus* pvalue);

EXTERN int XmlEnc_ITS_EmbarkationStatus (OSCTXT* pctxt, 
   ASN1T_ITS_EmbarkationStatus value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_EmbarkationStatus (OSCTXT* pctxt, 
   ASN1T_ITS_EmbarkationStatus* pvalue);

EXTERN int asn1JsonEnc_ITS_EmbarkationStatus (OSCTXT *pctxt, ASN1T_ITS_EmbarkationStatus *pvalue);

EXTERN int asn1JsonDec_ITS_EmbarkationStatus (OSCTXT *pctxt, ASN1T_ITS_EmbarkationStatus *pvalue);

EXTERN int asn1PrtToStrm_ITS_EmbarkationStatus (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_EmbarkationStatus* pvalue);

EXTERN ASN1T_ITS_EmbarkationStatus* 
   new_ASN1T_ITS_EmbarkationStatus (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  PtActivationType                                          */
/*                                                            */
/**************************************************************/
/*
PtActivationType ::= INTEGER { undefinedCodingType(0), r09-16CodingType(1), vdv-50149CodingType(2) } (0..255)
*/
struct EXTERN ITS_PtActivationType {
   enum Root {
      undefinedCodingType = 0,
      r09_16CodingType = 1,
      vdv_50149CodingType = 2
   } ;
} ;

typedef OSUINT8 ASN1T_ITS_PtActivationType;

EXTERN int asn1PE_ITS_PtActivationType (OSCTXT* pctxt, ASN1T_ITS_PtActivationType value);

EXTERN int asn1PD_ITS_PtActivationType (OSCTXT* pctxt, ASN1T_ITS_PtActivationType* pvalue);

EXTERN int XmlEnc_ITS_PtActivationType (OSCTXT* pctxt, 
   ASN1T_ITS_PtActivationType value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_PtActivationType (OSCTXT* pctxt, 
   ASN1T_ITS_PtActivationType* pvalue);

EXTERN int asn1JsonEnc_ITS_PtActivationType (OSCTXT *pctxt, ASN1T_ITS_PtActivationType *pvalue);

EXTERN int asn1JsonDec_ITS_PtActivationType (OSCTXT *pctxt, ASN1T_ITS_PtActivationType *pvalue);

EXTERN int asn1PrtToStrm_ITS_PtActivationType (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_PtActivationType* pvalue);

EXTERN ASN1T_ITS_PtActivationType* 
   new_ASN1T_ITS_PtActivationType (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  PtActivationData                                          */
/*                                                            */
/**************************************************************/
/*
PtActivationData ::= OCTET STRING (SIZE (1..20))
*/
struct EXTERN ASN1T_ITS_PtActivationData {
   OSUINT8 numocts;
   OSOCTET data[20];
   // ctors
   ASN1T_ITS_PtActivationData () : numocts(0) {}
   ASN1T_ITS_PtActivationData (OSUINT8 _numocts, const OSOCTET* _data) :
      numocts (_numocts) {
      OSCRTLSAFEMEMCPY (data, sizeof(data), _data, numocts);
   }
   ASN1T_ITS_PtActivationData (const char* cstring) {
      if (!OS_ISEMPTY (cstring)) {
         numocts = (OSUINT8)(OSRTMIN ((OSCRTLSTRLEN(cstring)+1), sizeof(data)));
         OSCRTLSAFEMEMCPY (data, numocts, cstring, numocts);
      }
      else numocts = 0;
   }
   // assignment operators
   ASN1T_ITS_PtActivationData& operator= (const char* cstring) {
      if (!OS_ISEMPTY (cstring)) {
         numocts = (OSUINT8)(OSRTMIN ((OSCRTLSTRLEN(cstring)+1), sizeof(data)));
         OSCRTLSAFEMEMCPY (data, numocts, cstring, numocts);
      }
      else numocts = 0;
      return *this;
   }
} ;

EXTERN int asn1PE_ITS_PtActivationData (OSCTXT* pctxt, ASN1T_ITS_PtActivationData* pvalue);

EXTERN int asn1PD_ITS_PtActivationData (OSCTXT* pctxt, ASN1T_ITS_PtActivationData* pvalue);

EXTERN int XmlEnc_ITS_PtActivationData (OSCTXT* pctxt, 
   ASN1T_ITS_PtActivationData* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_PtActivationData (OSCTXT* pctxt, 
   ASN1T_ITS_PtActivationData* pvalue);

EXTERN int asn1JsonEnc_ITS_PtActivationData (OSCTXT *pctxt, ASN1T_ITS_PtActivationData *pvalue);

EXTERN int asn1JsonDec_ITS_PtActivationData (OSCTXT *pctxt, ASN1T_ITS_PtActivationData *pvalue);

EXTERN int asn1PrtToStrm_ITS_PtActivationData (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_PtActivationData* pvalue);

EXTERN ASN1T_ITS_PtActivationData* 
   new_ASN1T_ITS_PtActivationData (ASN1CType& ccobj);

EXTERN int asn1Init_ITS_PtActivationData (ASN1T_ITS_PtActivationData* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

/**************************************************************/
/*                                                            */
/*  PtActivation                                              */
/*                                                            */
/**************************************************************/
/*
PtActivation ::= SEQUENCE {
   ptActivationType [0] PtActivationType,
   ptActivationData [1] PtActivationData
}
*/
struct EXTERN ASN1T_ITS_PtActivation {
   ASN1T_ITS_PtActivationType ptActivationType;
   ASN1T_ITS_PtActivationData ptActivationData;
} ;

EXTERN int asn1PE_ITS_PtActivation (OSCTXT* pctxt, ASN1T_ITS_PtActivation* pvalue);

EXTERN int asn1PD_ITS_PtActivation (OSCTXT* pctxt, ASN1T_ITS_PtActivation* pvalue);

EXTERN int XmlEnc_ITS_PtActivation (OSCTXT* pctxt, 
   ASN1T_ITS_PtActivation* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_PtActivation (OSCTXT* pctxt, 
   ASN1T_ITS_PtActivation* pvalue);

EXTERN int asn1JsonEnc_ITS_PtActivation (OSCTXT *pctxt, ASN1T_ITS_PtActivation *pvalue);

EXTERN int asn1JsonDec_ITS_PtActivation (OSCTXT *pctxt, ASN1T_ITS_PtActivation *pvalue);

EXTERN int asn1PrtToStrm_ITS_PtActivation (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_PtActivation* pvalue);

EXTERN ASN1T_ITS_PtActivation* new_ASN1T_ITS_PtActivation (ASN1CType& ccobj);

EXTERN int asn1Init_ITS_PtActivation (ASN1T_ITS_PtActivation* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

/**************************************************************/
/*                                                            */
/*  SpecialTransportType                                      */
/*                                                            */
/**************************************************************/
/*
SpecialTransportType ::= BIT STRING  { heavyLoad(0), excessWidth(1), excessLength(2), excessHeight(3) } (SIZE (4))
*/
struct EXTERN ASN1T_ITS_SpecialTransportType {
   OSOCTET data[1];
   // ctors
   ASN1T_ITS_SpecialTransportType ()  {}
   ASN1T_ITS_SpecialTransportType (const OSOCTET* _data) {
      OSCRTLSAFEMEMCPY (data, 1, _data, 1);
   }
} ;

class EXTERN ASN1C_ITS_SpecialTransportType :
public ASN1CBitStr
{
protected:
   ASN1T_ITS_SpecialTransportType& msgData;
public:
   // named bits
   enum { heavyLoad = 0, excessWidth = 1, excessLength = 2, excessHeight = 3 };

   /**
    * Control class: ASN1C_ITS_SpecialTransportType
    * Data class:    ASN1T_ITS_SpecialTransportType
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ITS_SpecialTransportType (ASN1T_ITS_SpecialTransportType& data);

   /**
    * Control class: ASN1C_ITS_SpecialTransportType<br/>
    * Data class: ASN1T_ITS_SpecialTransportType<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ITS_SpecialTransportType (OSRTMessageBufferIF& msgBuf
      , ASN1T_ITS_SpecialTransportType& data);

   virtual ~ASN1C_ITS_SpecialTransportType () {}

private:
   ASN1C_ITS_SpecialTransportType& operator= (const ASN1C_ITS_SpecialTransportType&) {return *this;}
} ;

EXTERN int asn1PE_ITS_SpecialTransportType (OSCTXT* pctxt, ASN1T_ITS_SpecialTransportType* pvalue);

EXTERN int asn1PD_ITS_SpecialTransportType (OSCTXT* pctxt, ASN1T_ITS_SpecialTransportType* pvalue);

EXTERN int XmlEnc_ITS_SpecialTransportType (OSCTXT* pctxt, 
   ASN1T_ITS_SpecialTransportType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_SpecialTransportType (OSCTXT* pctxt, 
   ASN1T_ITS_SpecialTransportType* pvalue);

EXTERN int asn1JsonEnc_ITS_SpecialTransportType (OSCTXT *pctxt, ASN1T_ITS_SpecialTransportType *pvalue);

EXTERN int asn1JsonDec_ITS_SpecialTransportType (OSCTXT *pctxt, ASN1T_ITS_SpecialTransportType *pvalue);

EXTERN int asn1PrtToStrm_ITS_SpecialTransportType (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_SpecialTransportType* pvalue);

extern EXTERN struct OSBitMapItem g_ASN1T_ITS_SpecialTransportType_NAMEDBITTAB[5];

EXTERN ASN1T_ITS_SpecialTransportType* 
   new_ASN1T_ITS_SpecialTransportType (ASN1CType& ccobj);

EXTERN int asn1Init_ITS_SpecialTransportType (ASN1T_ITS_SpecialTransportType* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

/**************************************************************/
/*                                                            */
/*  LightBarSirenInUse                                        */
/*                                                            */
/**************************************************************/
/*
LightBarSirenInUse ::= BIT STRING  { lightBarActivated(0), sirenActivated(1) } (SIZE (2))
*/
struct EXTERN ASN1T_ITS_LightBarSirenInUse {
   OSOCTET data[1];
   // ctors
   ASN1T_ITS_LightBarSirenInUse ()  {}
   ASN1T_ITS_LightBarSirenInUse (const OSOCTET* _data) {
      OSCRTLSAFEMEMCPY (data, 1, _data, 1);
   }
} ;

class EXTERN ASN1C_ITS_LightBarSirenInUse :
public ASN1CBitStr
{
protected:
   ASN1T_ITS_LightBarSirenInUse& msgData;
public:
   // named bits
   enum { lightBarActivated = 0, sirenActivated = 1 };

   /**
    * Control class: ASN1C_ITS_LightBarSirenInUse
    * Data class:    ASN1T_ITS_LightBarSirenInUse
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ITS_LightBarSirenInUse (ASN1T_ITS_LightBarSirenInUse& data);

   /**
    * Control class: ASN1C_ITS_LightBarSirenInUse<br/>
    * Data class: ASN1T_ITS_LightBarSirenInUse<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ITS_LightBarSirenInUse (OSRTMessageBufferIF& msgBuf
      , ASN1T_ITS_LightBarSirenInUse& data);

   virtual ~ASN1C_ITS_LightBarSirenInUse () {}

private:
   ASN1C_ITS_LightBarSirenInUse& operator= (const ASN1C_ITS_LightBarSirenInUse&) {return *this;}
} ;

EXTERN int asn1PE_ITS_LightBarSirenInUse (OSCTXT* pctxt, ASN1T_ITS_LightBarSirenInUse* pvalue);

EXTERN int asn1PD_ITS_LightBarSirenInUse (OSCTXT* pctxt, ASN1T_ITS_LightBarSirenInUse* pvalue);

EXTERN int XmlEnc_ITS_LightBarSirenInUse (OSCTXT* pctxt, 
   ASN1T_ITS_LightBarSirenInUse* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_LightBarSirenInUse (OSCTXT* pctxt, 
   ASN1T_ITS_LightBarSirenInUse* pvalue);

EXTERN int asn1JsonEnc_ITS_LightBarSirenInUse (OSCTXT *pctxt, ASN1T_ITS_LightBarSirenInUse *pvalue);

EXTERN int asn1JsonDec_ITS_LightBarSirenInUse (OSCTXT *pctxt, ASN1T_ITS_LightBarSirenInUse *pvalue);

EXTERN int asn1PrtToStrm_ITS_LightBarSirenInUse (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_LightBarSirenInUse* pvalue);

extern EXTERN struct OSBitMapItem g_ASN1T_ITS_LightBarSirenInUse_NAMEDBITTAB[3];

EXTERN ASN1T_ITS_LightBarSirenInUse* 
   new_ASN1T_ITS_LightBarSirenInUse (ASN1CType& ccobj);

EXTERN int asn1Init_ITS_LightBarSirenInUse (ASN1T_ITS_LightBarSirenInUse* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

/**************************************************************/
/*                                                            */
/*  DangerousGoodsBasic                                       */
/*                                                            */
/**************************************************************/
/*
DangerousGoodsBasic ::= ENUMERATED { explosives1(0), explosives2(1), explosives3(2), explosives4(3), explosives5(4), explosives6(5), flammableGases(6), nonFlammableGases(7), toxicGases(8), flammableLiquids(9), flammableSolids(10), substancesLiableToSpontaneousCombustion(11), substancesEmittingFlammableGasesUponContactWithWater(12), oxidizingSubstances(13), organicPeroxides(14), toxicSubstances(15), infectiousSubstances(16), radioactiveMaterial(17), corrosiveSubstances(18), miscellaneousDangerousSubstances(19) }
*/
struct EXTERN ITS_DangerousGoodsBasic {
   enum Root {
      explosives1 = 0,
      explosives2 = 1,
      explosives3 = 2,
      explosives4 = 3,
      explosives5 = 4,
      explosives6 = 5,
      flammableGases = 6,
      nonFlammableGases = 7,
      toxicGases = 8,
      flammableLiquids = 9,
      flammableSolids = 10,
      substancesLiableToSpontaneousCombustion = 11,
      substancesEmittingFlammableGasesUponContactWithWater = 12,
      oxidizingSubstances = 13,
      organicPeroxides = 14,
      toxicSubstances = 15,
      infectiousSubstances = 16,
      radioactiveMaterial = 17,
      corrosiveSubstances = 18,
      miscellaneousDangerousSubstances = 19
   } ;
} ;

typedef OSUINT32 ASN1T_ITS_DangerousGoodsBasic;

EXTERN int asn1PE_ITS_DangerousGoodsBasic (OSCTXT* pctxt, ASN1T_ITS_DangerousGoodsBasic value);

EXTERN int asn1PD_ITS_DangerousGoodsBasic (OSCTXT* pctxt, ASN1T_ITS_DangerousGoodsBasic* pvalue);

EXTERN int XmlEnc_ITS_DangerousGoodsBasic (OSCTXT* pctxt, 
   ASN1T_ITS_DangerousGoodsBasic value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_DangerousGoodsBasic (OSCTXT* pctxt, 
   ASN1T_ITS_DangerousGoodsBasic* pvalue);

EXTERN int asn1JsonEnc_ITS_DangerousGoodsBasic (OSCTXT *pctxt, ASN1T_ITS_DangerousGoodsBasic *pvalue);

EXTERN int asn1JsonDec_ITS_DangerousGoodsBasic (OSCTXT *pctxt, ASN1T_ITS_DangerousGoodsBasic *pvalue);

EXTERN int asn1PrtToStrm_ITS_DangerousGoodsBasic (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_DangerousGoodsBasic* pvalue);

EXTERN ASN1T_ITS_DangerousGoodsBasic* 
   new_ASN1T_ITS_DangerousGoodsBasic (ASN1CType& ccobj);

EXTERN extern const OSEnumItem ASN1T_ITS_DangerousGoodsBasic_ENUMTAB[];
#define ASN1T_ITS_DangerousGoodsBasic_ENUMTABSIZE 20

EXTERN const OSUTF8CHAR* ASN1T_ITS_DangerousGoodsBasic_ToString (OSINT32 value);

EXTERN int ASN1T_ITS_DangerousGoodsBasic_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, ASN1T_ITS_DangerousGoodsBasic* pvalue);

EXTERN int ASN1T_ITS_DangerousGoodsBasic_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      ASN1T_ITS_DangerousGoodsBasic* pvalue);

/**************************************************************/
/*                                                            */
/*  RoadworksSubCauseCode                                     */
/*                                                            */
/**************************************************************/
/*
RoadworksSubCauseCode ::= INTEGER { unavailable(0), majorRoadworks(1), roadMarkingWork(2), slowMovingRoadMaintenance(3), shortTermStationaryRoadworks(4), streetCleaning(5), winterService(6) } (0..255)
*/
struct EXTERN ITS_RoadworksSubCauseCode {
   enum Root {
      unavailable = 0,
      majorRoadworks = 1,
      roadMarkingWork = 2,
      slowMovingRoadMaintenance = 3,
      shortTermStationaryRoadworks = 4,
      streetCleaning = 5,
      winterService = 6
   } ;
} ;

typedef OSUINT8 ASN1T_ITS_RoadworksSubCauseCode;

EXTERN int asn1PE_ITS_RoadworksSubCauseCode (OSCTXT* pctxt, ASN1T_ITS_RoadworksSubCauseCode value);

EXTERN int asn1PD_ITS_RoadworksSubCauseCode (OSCTXT* pctxt, ASN1T_ITS_RoadworksSubCauseCode* pvalue);

EXTERN int XmlEnc_ITS_RoadworksSubCauseCode (OSCTXT* pctxt, 
   ASN1T_ITS_RoadworksSubCauseCode value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_RoadworksSubCauseCode (OSCTXT* pctxt, 
   ASN1T_ITS_RoadworksSubCauseCode* pvalue);

EXTERN int asn1JsonEnc_ITS_RoadworksSubCauseCode (OSCTXT *pctxt, ASN1T_ITS_RoadworksSubCauseCode *pvalue);

EXTERN int asn1JsonDec_ITS_RoadworksSubCauseCode (OSCTXT *pctxt, ASN1T_ITS_RoadworksSubCauseCode *pvalue);

EXTERN int asn1PrtToStrm_ITS_RoadworksSubCauseCode (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_RoadworksSubCauseCode* pvalue);

EXTERN ASN1T_ITS_RoadworksSubCauseCode* 
   new_ASN1T_ITS_RoadworksSubCauseCode (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  HardShoulderStatus                                        */
/*                                                            */
/**************************************************************/
/*
HardShoulderStatus ::= ENUMERATED { availableForStopping(0), closed(1), availableForDriving(2) }
*/
struct EXTERN ITS_HardShoulderStatus {
   enum Root {
      availableForStopping = 0,
      closed = 1,
      availableForDriving = 2
   } ;
} ;

typedef OSUINT32 ASN1T_ITS_HardShoulderStatus;

EXTERN int asn1PE_ITS_HardShoulderStatus (OSCTXT* pctxt, ASN1T_ITS_HardShoulderStatus value);

EXTERN int asn1PD_ITS_HardShoulderStatus (OSCTXT* pctxt, ASN1T_ITS_HardShoulderStatus* pvalue);

EXTERN int XmlEnc_ITS_HardShoulderStatus (OSCTXT* pctxt, 
   ASN1T_ITS_HardShoulderStatus value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_HardShoulderStatus (OSCTXT* pctxt, 
   ASN1T_ITS_HardShoulderStatus* pvalue);

EXTERN int asn1JsonEnc_ITS_HardShoulderStatus (OSCTXT *pctxt, ASN1T_ITS_HardShoulderStatus *pvalue);

EXTERN int asn1JsonDec_ITS_HardShoulderStatus (OSCTXT *pctxt, ASN1T_ITS_HardShoulderStatus *pvalue);

EXTERN int asn1PrtToStrm_ITS_HardShoulderStatus (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_HardShoulderStatus* pvalue);

EXTERN ASN1T_ITS_HardShoulderStatus* 
   new_ASN1T_ITS_HardShoulderStatus (ASN1CType& ccobj);

EXTERN extern const OSEnumItem ASN1T_ITS_HardShoulderStatus_ENUMTAB[];
#define ASN1T_ITS_HardShoulderStatus_ENUMTABSIZE 3

EXTERN const OSUTF8CHAR* ASN1T_ITS_HardShoulderStatus_ToString (OSINT32 value);

EXTERN int ASN1T_ITS_HardShoulderStatus_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, ASN1T_ITS_HardShoulderStatus* pvalue);

EXTERN int ASN1T_ITS_HardShoulderStatus_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      ASN1T_ITS_HardShoulderStatus* pvalue);

/**************************************************************/
/*                                                            */
/*  DrivingLaneStatus                                         */
/*                                                            */
/**************************************************************/
/*
DrivingLaneStatus ::= BIT STRING  { outermostLaneClosed(1), secondLaneFromOutsideClosed(2) } (SIZE (1..14))
*/
struct EXTERN ASN1T_ITS_DrivingLaneStatus {
   OSUINT8 numbits;
   OSOCTET data[2];
   // ctors
   ASN1T_ITS_DrivingLaneStatus () : numbits(0) {}
   ASN1T_ITS_DrivingLaneStatus (OSUINT8 _numbits, const OSOCTET* _data) :
      numbits (_numbits) {
      size_t sz = _numbits / 8;
      if ( _numbits % 8 > 0 ) sz += 1;
      OSCRTLSAFEMEMCPY (data, 2, _data, sz);
   }
} ;

class EXTERN ASN1C_ITS_DrivingLaneStatus :
public ASN1CBitStr
{
protected:
   ASN1T_ITS_DrivingLaneStatus& msgData;
public:
   // named bits
   enum { outermostLaneClosed = 1, secondLaneFromOutsideClosed = 2 };

   /**
    * Control class: ASN1C_ITS_DrivingLaneStatus
    * Data class:    ASN1T_ITS_DrivingLaneStatus
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ITS_DrivingLaneStatus (ASN1T_ITS_DrivingLaneStatus& data);

   /**
    * Control class: ASN1C_ITS_DrivingLaneStatus<br/>
    * Data class: ASN1T_ITS_DrivingLaneStatus<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ITS_DrivingLaneStatus (OSRTMessageBufferIF& msgBuf
      , ASN1T_ITS_DrivingLaneStatus& data);

   virtual ~ASN1C_ITS_DrivingLaneStatus () {}

private:
   ASN1C_ITS_DrivingLaneStatus& operator= (const ASN1C_ITS_DrivingLaneStatus&) {return *this;}
} ;

EXTERN int asn1PE_ITS_DrivingLaneStatus (OSCTXT* pctxt, ASN1T_ITS_DrivingLaneStatus* pvalue);

EXTERN int asn1PD_ITS_DrivingLaneStatus (OSCTXT* pctxt, ASN1T_ITS_DrivingLaneStatus* pvalue);

EXTERN int XmlEnc_ITS_DrivingLaneStatus (OSCTXT* pctxt, 
   ASN1T_ITS_DrivingLaneStatus* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_DrivingLaneStatus (OSCTXT* pctxt, 
   ASN1T_ITS_DrivingLaneStatus* pvalue);

EXTERN int asn1JsonEnc_ITS_DrivingLaneStatus (OSCTXT *pctxt, ASN1T_ITS_DrivingLaneStatus *pvalue);

EXTERN int asn1JsonDec_ITS_DrivingLaneStatus (OSCTXT *pctxt, ASN1T_ITS_DrivingLaneStatus *pvalue);

EXTERN int asn1PrtToStrm_ITS_DrivingLaneStatus (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_DrivingLaneStatus* pvalue);

extern EXTERN struct OSBitMapItem g_ASN1T_ITS_DrivingLaneStatus_NAMEDBITTAB[3];

EXTERN ASN1T_ITS_DrivingLaneStatus* 
   new_ASN1T_ITS_DrivingLaneStatus (ASN1CType& ccobj);

EXTERN int asn1Init_ITS_DrivingLaneStatus (ASN1T_ITS_DrivingLaneStatus* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

/**************************************************************/
/*                                                            */
/*  ClosedLanes                                               */
/*                                                            */
/**************************************************************/
/*
ClosedLanes ::= SEQUENCE {
   hardShoulderStatus [0] HardShoulderStatus OPTIONAL,
   drivingLaneStatus [1] DrivingLaneStatus,
   ...
}
*/
struct EXTERN ASN1T_ITS_ClosedLanes {
   struct {
      unsigned hardShoulderStatusPresent : 1;
   } m;
   ASN1T_ITS_HardShoulderStatus hardShoulderStatus;
   ASN1T_ITS_DrivingLaneStatus drivingLaneStatus;
   ASN1TSeqExt extElem1;
   ASN1T_ITS_ClosedLanes ();
} ;

EXTERN int asn1PE_ITS_ClosedLanes (OSCTXT* pctxt, ASN1T_ITS_ClosedLanes* pvalue);

EXTERN int asn1PD_ITS_ClosedLanes (OSCTXT* pctxt, ASN1T_ITS_ClosedLanes* pvalue);

EXTERN int XmlEnc_ITS_ClosedLanes (OSCTXT* pctxt, 
   ASN1T_ITS_ClosedLanes* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_ClosedLanes (OSCTXT* pctxt, ASN1T_ITS_ClosedLanes* pvalue
   );

EXTERN int asn1JsonEnc_ITS_ClosedLanes (OSCTXT *pctxt, ASN1T_ITS_ClosedLanes *pvalue);

EXTERN int asn1JsonDec_ITS_ClosedLanes (OSCTXT *pctxt, ASN1T_ITS_ClosedLanes *pvalue);

EXTERN int asn1PrtToStrm_ITS_ClosedLanes (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_ClosedLanes* pvalue);

EXTERN ASN1T_ITS_ClosedLanes* new_ASN1T_ITS_ClosedLanes (ASN1CType& ccobj);

EXTERN int asn1Init_ITS_ClosedLanes (ASN1T_ITS_ClosedLanes* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ITS_ClosedLanes (OSCTXT *pctxt, ASN1T_ITS_ClosedLanes* pvalue);

/**************************************************************/
/*                                                            */
/*  CauseCodeType                                             */
/*                                                            */
/**************************************************************/
/*
CauseCodeType ::= INTEGER { reserved(0), trafficCondition(1), accident(2), roadworks(3), adverseWeatherCondition-Adhesion(6), hazardousLocation-SurfaceCondition(9), hazardousLocation-ObstacleOnTheRoad(10), hazardousLocation-AnimalOnTheRoad(11), humanPresenceOnTheRoad(12), wrongWayDriving(14), rescueAndRecoveryWorkInProgress(15), adverseWeatherCondition-ExtremeWeatherCondition(17), adverseWeatherCondition-Visibility(18), adverseWeatherCondition-Precipitation(19), slowVehicle(26), dangerousEndOfQueue(27), vehicleBreakdown(91), postCrash(92), humanProblem(93), stationaryVehicle(94), emergencyVehicleApproaching(95), hazardousLocation-DangerousCurve(96), collisionRisk(97), signalViolation(98), dangerousSituation(99) } (0..255)
*/
struct EXTERN ITS_CauseCodeType {
   enum Root {
      reserved = 0,
      trafficCondition = 1,
      accident = 2,
      roadworks = 3,
      adverseWeatherCondition_Adhesion = 6,
      hazardousLocation_SurfaceCondition = 9,
      hazardousLocation_ObstacleOnTheRoad = 10,
      hazardousLocation_AnimalOnTheRoad = 11,
      humanPresenceOnTheRoad = 12,
      wrongWayDriving = 14,
      rescueAndRecoveryWorkInProgress = 15,
      adverseWeatherCondition_ExtremeWeatherCondition = 17,
      adverseWeatherCondition_Visibility = 18,
      adverseWeatherCondition_Precipitation = 19,
      slowVehicle = 26,
      dangerousEndOfQueue = 27,
      vehicleBreakdown = 91,
      postCrash = 92,
      humanProblem = 93,
      stationaryVehicle = 94,
      emergencyVehicleApproaching = 95,
      hazardousLocation_DangerousCurve = 96,
      collisionRisk = 97,
      signalViolation = 98,
      dangerousSituation = 99
   } ;
} ;

typedef OSUINT8 ASN1T_ITS_CauseCodeType;

EXTERN int asn1PE_ITS_CauseCodeType (OSCTXT* pctxt, ASN1T_ITS_CauseCodeType value);

EXTERN int asn1PD_ITS_CauseCodeType (OSCTXT* pctxt, ASN1T_ITS_CauseCodeType* pvalue);

EXTERN int XmlEnc_ITS_CauseCodeType (OSCTXT* pctxt, 
   ASN1T_ITS_CauseCodeType value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_CauseCodeType (OSCTXT* pctxt, 
   ASN1T_ITS_CauseCodeType* pvalue);

EXTERN int asn1JsonEnc_ITS_CauseCodeType (OSCTXT *pctxt, ASN1T_ITS_CauseCodeType *pvalue);

EXTERN int asn1JsonDec_ITS_CauseCodeType (OSCTXT *pctxt, ASN1T_ITS_CauseCodeType *pvalue);

EXTERN int asn1PrtToStrm_ITS_CauseCodeType (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_CauseCodeType* pvalue);

EXTERN ASN1T_ITS_CauseCodeType* new_ASN1T_ITS_CauseCodeType (ASN1CType& ccobj)
   ;

/**************************************************************/
/*                                                            */
/*  SubCauseCodeType                                          */
/*                                                            */
/**************************************************************/
/*
SubCauseCodeType ::= INTEGER (0..255)
*/
typedef OSUINT8 ASN1T_ITS_SubCauseCodeType;

EXTERN int asn1PE_ITS_SubCauseCodeType (OSCTXT* pctxt, ASN1T_ITS_SubCauseCodeType value);

EXTERN int asn1PD_ITS_SubCauseCodeType (OSCTXT* pctxt, ASN1T_ITS_SubCauseCodeType* pvalue);

EXTERN int XmlEnc_ITS_SubCauseCodeType (OSCTXT* pctxt, 
   ASN1T_ITS_SubCauseCodeType value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_SubCauseCodeType (OSCTXT* pctxt, 
   ASN1T_ITS_SubCauseCodeType* pvalue);

EXTERN int asn1JsonEnc_ITS_SubCauseCodeType (OSCTXT *pctxt, ASN1T_ITS_SubCauseCodeType *pvalue);

EXTERN int asn1JsonDec_ITS_SubCauseCodeType (OSCTXT *pctxt, ASN1T_ITS_SubCauseCodeType *pvalue);

EXTERN int asn1PrtToStrm_ITS_SubCauseCodeType (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_SubCauseCodeType* pvalue);

EXTERN ASN1T_ITS_SubCauseCodeType* 
   new_ASN1T_ITS_SubCauseCodeType (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  CauseCode                                                 */
/*                                                            */
/**************************************************************/
/*
CauseCode ::= SEQUENCE {
   causeCode [0] CauseCodeType,
   subCauseCode [1] SubCauseCodeType
}
*/
struct EXTERN ASN1T_ITS_CauseCode {
   ASN1T_ITS_CauseCodeType causeCode;
   ASN1T_ITS_SubCauseCodeType subCauseCode;
} ;

EXTERN int asn1PE_ITS_CauseCode (OSCTXT* pctxt, ASN1T_ITS_CauseCode* pvalue);

EXTERN int asn1PD_ITS_CauseCode (OSCTXT* pctxt, ASN1T_ITS_CauseCode* pvalue);

EXTERN int XmlEnc_ITS_CauseCode (OSCTXT* pctxt, ASN1T_ITS_CauseCode* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_CauseCode (OSCTXT* pctxt, ASN1T_ITS_CauseCode* pvalue);

EXTERN int asn1JsonEnc_ITS_CauseCode (OSCTXT *pctxt, ASN1T_ITS_CauseCode *pvalue);

EXTERN int asn1JsonDec_ITS_CauseCode (OSCTXT *pctxt, ASN1T_ITS_CauseCode *pvalue);

EXTERN int asn1PrtToStrm_ITS_CauseCode (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_CauseCode* pvalue);

EXTERN ASN1T_ITS_CauseCode* new_ASN1T_ITS_CauseCode (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  EmergencyPriority                                         */
/*                                                            */
/**************************************************************/
/*
EmergencyPriority ::= BIT STRING  { requestForRightOfWay(0), requestForFreeCrossingAtATrafficLight(1) } (SIZE (2))
*/
struct EXTERN ASN1T_ITS_EmergencyPriority {
   OSOCTET data[1];
   // ctors
   ASN1T_ITS_EmergencyPriority ()  {}
   ASN1T_ITS_EmergencyPriority (const OSOCTET* _data) {
      OSCRTLSAFEMEMCPY (data, 1, _data, 1);
   }
} ;

class EXTERN ASN1C_ITS_EmergencyPriority :
public ASN1CBitStr
{
protected:
   ASN1T_ITS_EmergencyPriority& msgData;
public:
   // named bits
   enum { requestForRightOfWay = 0, requestForFreeCrossingAtATrafficLight = 1 };

   /**
    * Control class: ASN1C_ITS_EmergencyPriority
    * Data class:    ASN1T_ITS_EmergencyPriority
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ITS_EmergencyPriority (ASN1T_ITS_EmergencyPriority& data);

   /**
    * Control class: ASN1C_ITS_EmergencyPriority<br/>
    * Data class: ASN1T_ITS_EmergencyPriority<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ITS_EmergencyPriority (OSRTMessageBufferIF& msgBuf
      , ASN1T_ITS_EmergencyPriority& data);

   virtual ~ASN1C_ITS_EmergencyPriority () {}

private:
   ASN1C_ITS_EmergencyPriority& operator= (const ASN1C_ITS_EmergencyPriority&) {return *this;}
} ;

EXTERN int asn1PE_ITS_EmergencyPriority (OSCTXT* pctxt, ASN1T_ITS_EmergencyPriority* pvalue);

EXTERN int asn1PD_ITS_EmergencyPriority (OSCTXT* pctxt, ASN1T_ITS_EmergencyPriority* pvalue);

EXTERN int XmlEnc_ITS_EmergencyPriority (OSCTXT* pctxt, 
   ASN1T_ITS_EmergencyPriority* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_EmergencyPriority (OSCTXT* pctxt, 
   ASN1T_ITS_EmergencyPriority* pvalue);

EXTERN int asn1JsonEnc_ITS_EmergencyPriority (OSCTXT *pctxt, ASN1T_ITS_EmergencyPriority *pvalue);

EXTERN int asn1JsonDec_ITS_EmergencyPriority (OSCTXT *pctxt, ASN1T_ITS_EmergencyPriority *pvalue);

EXTERN int asn1PrtToStrm_ITS_EmergencyPriority (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_EmergencyPriority* pvalue);

extern EXTERN struct OSBitMapItem g_ASN1T_ITS_EmergencyPriority_NAMEDBITTAB[3];

EXTERN ASN1T_ITS_EmergencyPriority* 
   new_ASN1T_ITS_EmergencyPriority (ASN1CType& ccobj);

EXTERN int asn1Init_ITS_EmergencyPriority (ASN1T_ITS_EmergencyPriority* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

/**************************************************************/
/*                                                            */
/*  TrafficRule                                               */
/*                                                            */
/**************************************************************/
/*
TrafficRule ::= ENUMERATED { noPassing(0), noPassingForTrucks(1), passToRight(2), passToLeft(3), ... }
*/
struct EXTERN ITS_TrafficRule {
   enum Root {
      noPassing = 0,
      noPassingForTrucks = 1,
      passToRight = 2,
      passToLeft = 3
   } ;
} ;

typedef OSUINT32 ASN1T_ITS_TrafficRule;

EXTERN int asn1PE_ITS_TrafficRule (OSCTXT* pctxt, ASN1T_ITS_TrafficRule value);

EXTERN int asn1PD_ITS_TrafficRule (OSCTXT* pctxt, ASN1T_ITS_TrafficRule* pvalue);

EXTERN int XmlEnc_ITS_TrafficRule (OSCTXT* pctxt, ASN1T_ITS_TrafficRule value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_TrafficRule (OSCTXT* pctxt, ASN1T_ITS_TrafficRule* pvalue
   );

EXTERN int asn1JsonEnc_ITS_TrafficRule (OSCTXT *pctxt, ASN1T_ITS_TrafficRule *pvalue);

EXTERN int asn1JsonDec_ITS_TrafficRule (OSCTXT *pctxt, ASN1T_ITS_TrafficRule *pvalue);

EXTERN int asn1PrtToStrm_ITS_TrafficRule (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_TrafficRule* pvalue);

EXTERN ASN1T_ITS_TrafficRule* new_ASN1T_ITS_TrafficRule (ASN1CType& ccobj);

EXTERN extern const OSEnumItem ASN1T_ITS_TrafficRule_ENUMTAB[];
#define ASN1T_ITS_TrafficRule_ENUMTABSIZE 4

EXTERN const OSUTF8CHAR* ASN1T_ITS_TrafficRule_ToString (OSINT32 value);

EXTERN int ASN1T_ITS_TrafficRule_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, ASN1T_ITS_TrafficRule* pvalue);

EXTERN int ASN1T_ITS_TrafficRule_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, ASN1T_ITS_TrafficRule* pvalue);

/**************************************************************/
/*                                                            */
/*  SpeedLimit                                                */
/*                                                            */
/**************************************************************/
/*
SpeedLimit ::= INTEGER { oneKmPerHour(1) } (1..255)
*/
struct EXTERN ITS_SpeedLimit {
   enum Root {
      oneKmPerHour = 1
   } ;
} ;

typedef OSUINT8 ASN1T_ITS_SpeedLimit;

EXTERN int asn1PE_ITS_SpeedLimit (OSCTXT* pctxt, ASN1T_ITS_SpeedLimit value);

EXTERN int asn1PD_ITS_SpeedLimit (OSCTXT* pctxt, ASN1T_ITS_SpeedLimit* pvalue);

EXTERN int XmlEnc_ITS_SpeedLimit (OSCTXT* pctxt, ASN1T_ITS_SpeedLimit value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_SpeedLimit (OSCTXT* pctxt, ASN1T_ITS_SpeedLimit* pvalue)
   ;

EXTERN int asn1JsonEnc_ITS_SpeedLimit (OSCTXT *pctxt, ASN1T_ITS_SpeedLimit *pvalue);

EXTERN int asn1JsonDec_ITS_SpeedLimit (OSCTXT *pctxt, ASN1T_ITS_SpeedLimit *pvalue);

EXTERN int asn1PrtToStrm_ITS_SpeedLimit (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_SpeedLimit* pvalue);

EXTERN ASN1T_ITS_SpeedLimit* new_ASN1T_ITS_SpeedLimit (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  SequenceNumber                                            */
/*                                                            */
/**************************************************************/
/*
SequenceNumber ::= INTEGER (0..65535)
*/
typedef OSUINT16 ASN1T_ITS_SequenceNumber;

EXTERN int asn1PE_ITS_SequenceNumber (OSCTXT* pctxt, ASN1T_ITS_SequenceNumber value);

EXTERN int asn1PD_ITS_SequenceNumber (OSCTXT* pctxt, ASN1T_ITS_SequenceNumber* pvalue);

EXTERN int XmlEnc_ITS_SequenceNumber (OSCTXT* pctxt, 
   ASN1T_ITS_SequenceNumber value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_SequenceNumber (OSCTXT* pctxt, 
   ASN1T_ITS_SequenceNumber* pvalue);

EXTERN int asn1JsonEnc_ITS_SequenceNumber (OSCTXT *pctxt, ASN1T_ITS_SequenceNumber *pvalue);

EXTERN int asn1JsonDec_ITS_SequenceNumber (OSCTXT *pctxt, ASN1T_ITS_SequenceNumber *pvalue);

EXTERN int asn1PrtToStrm_ITS_SequenceNumber (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_SequenceNumber* pvalue);

EXTERN ASN1T_ITS_SequenceNumber* 
   new_ASN1T_ITS_SequenceNumber (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  ActionID                                                  */
/*                                                            */
/**************************************************************/
/*
ActionID ::= SEQUENCE {
   originatingStationID [0] StationID,
   sequenceNumber [1] SequenceNumber
}
*/
struct EXTERN ASN1T_ITS_ActionID {
   ASN1T_ITS_StationID originatingStationID;
   ASN1T_ITS_SequenceNumber sequenceNumber;
} ;

EXTERN int asn1PE_ITS_ActionID (OSCTXT* pctxt, ASN1T_ITS_ActionID* pvalue);

EXTERN int asn1PD_ITS_ActionID (OSCTXT* pctxt, ASN1T_ITS_ActionID* pvalue);

EXTERN int XmlEnc_ITS_ActionID (OSCTXT* pctxt, ASN1T_ITS_ActionID* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_ActionID (OSCTXT* pctxt, ASN1T_ITS_ActionID* pvalue);

EXTERN int asn1JsonEnc_ITS_ActionID (OSCTXT *pctxt, ASN1T_ITS_ActionID *pvalue);

EXTERN int asn1JsonDec_ITS_ActionID (OSCTXT *pctxt, ASN1T_ITS_ActionID *pvalue);

EXTERN int asn1PrtToStrm_ITS_ActionID (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_ActionID* pvalue);

EXTERN ASN1T_ITS_ActionID* new_ASN1T_ITS_ActionID (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  RelevanceDistance                                         */
/*                                                            */
/**************************************************************/
/*
RelevanceDistance ::= ENUMERATED { lessThan50m(0), lessThan100m(1), lessThan200m(2), lessThan500m(3), lessThan1000m(4), lessThan5km(5), lessThan10km(6), over10km(7) }
*/
struct EXTERN ITS_RelevanceDistance {
   enum Root {
      lessThan50m = 0,
      lessThan100m = 1,
      lessThan200m = 2,
      lessThan500m = 3,
      lessThan1000m = 4,
      lessThan5km = 5,
      lessThan10km = 6,
      over10km = 7
   } ;
} ;

typedef OSUINT32 ASN1T_ITS_RelevanceDistance;

EXTERN int asn1PE_ITS_RelevanceDistance (OSCTXT* pctxt, ASN1T_ITS_RelevanceDistance value);

EXTERN int asn1PD_ITS_RelevanceDistance (OSCTXT* pctxt, ASN1T_ITS_RelevanceDistance* pvalue);

EXTERN int XmlEnc_ITS_RelevanceDistance (OSCTXT* pctxt, 
   ASN1T_ITS_RelevanceDistance value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_RelevanceDistance (OSCTXT* pctxt, 
   ASN1T_ITS_RelevanceDistance* pvalue);

EXTERN int asn1JsonEnc_ITS_RelevanceDistance (OSCTXT *pctxt, ASN1T_ITS_RelevanceDistance *pvalue);

EXTERN int asn1JsonDec_ITS_RelevanceDistance (OSCTXT *pctxt, ASN1T_ITS_RelevanceDistance *pvalue);

EXTERN int asn1PrtToStrm_ITS_RelevanceDistance (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_RelevanceDistance* pvalue);

EXTERN ASN1T_ITS_RelevanceDistance* 
   new_ASN1T_ITS_RelevanceDistance (ASN1CType& ccobj);

EXTERN extern const OSEnumItem ASN1T_ITS_RelevanceDistance_ENUMTAB[];
#define ASN1T_ITS_RelevanceDistance_ENUMTABSIZE 8

EXTERN const OSUTF8CHAR* ASN1T_ITS_RelevanceDistance_ToString (OSINT32 value);

EXTERN int ASN1T_ITS_RelevanceDistance_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, ASN1T_ITS_RelevanceDistance* pvalue);

EXTERN int ASN1T_ITS_RelevanceDistance_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      ASN1T_ITS_RelevanceDistance* pvalue);

/**************************************************************/
/*                                                            */
/*  RelevanceTrafficDirection                                 */
/*                                                            */
/**************************************************************/
/*
RelevanceTrafficDirection ::= ENUMERATED { allTrafficDirections(0), upstreamTraffic(1), downstreamTraffic(2), oppositeTraffic(3) }
*/
struct EXTERN ITS_RelevanceTrafficDirection {
   enum Root {
      allTrafficDirections = 0,
      upstreamTraffic = 1,
      downstreamTraffic = 2,
      oppositeTraffic = 3
   } ;
} ;

typedef OSUINT32 ASN1T_ITS_RelevanceTrafficDirection;

EXTERN int asn1PE_ITS_RelevanceTrafficDirection (OSCTXT* pctxt, ASN1T_ITS_RelevanceTrafficDirection value);

EXTERN int asn1PD_ITS_RelevanceTrafficDirection (OSCTXT* pctxt, ASN1T_ITS_RelevanceTrafficDirection* pvalue);

EXTERN int XmlEnc_ITS_RelevanceTrafficDirection (OSCTXT* pctxt, 
   ASN1T_ITS_RelevanceTrafficDirection value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_RelevanceTrafficDirection (OSCTXT* pctxt, 
   ASN1T_ITS_RelevanceTrafficDirection* pvalue);

EXTERN int asn1JsonEnc_ITS_RelevanceTrafficDirection (OSCTXT *pctxt, ASN1T_ITS_RelevanceTrafficDirection *pvalue);

EXTERN int asn1JsonDec_ITS_RelevanceTrafficDirection (OSCTXT *pctxt, ASN1T_ITS_RelevanceTrafficDirection *pvalue);

EXTERN int asn1PrtToStrm_ITS_RelevanceTrafficDirection (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_RelevanceTrafficDirection* pvalue);

EXTERN ASN1T_ITS_RelevanceTrafficDirection* 
   new_ASN1T_ITS_RelevanceTrafficDirection (ASN1CType& ccobj);

EXTERN extern const OSEnumItem ASN1T_ITS_RelevanceTrafficDirection_ENUMTAB[];
#define ASN1T_ITS_RelevanceTrafficDirection_ENUMTABSIZE 4

EXTERN const OSUTF8CHAR* ASN1T_ITS_RelevanceTrafficDirection_ToString (OSINT32 value);

EXTERN int ASN1T_ITS_RelevanceTrafficDirection_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, ASN1T_ITS_RelevanceTrafficDirection* pvalue);

EXTERN int ASN1T_ITS_RelevanceTrafficDirection_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      ASN1T_ITS_RelevanceTrafficDirection* pvalue);

/**************************************************************/
/*                                                            */
/*  ValidityDuration                                          */
/*                                                            */
/**************************************************************/
/*
ValidityDuration ::= INTEGER { timeOfDetection(0), oneSecondAfterDetection(1) } (0..86400)
*/
struct EXTERN ITS_ValidityDuration {
   enum Root {
      timeOfDetection = 0,
      oneSecondAfterDetection = 1
   } ;
} ;

typedef OSUINT32 ASN1T_ITS_ValidityDuration;

EXTERN int asn1PE_ITS_ValidityDuration (OSCTXT* pctxt, ASN1T_ITS_ValidityDuration value);

EXTERN int asn1PD_ITS_ValidityDuration (OSCTXT* pctxt, ASN1T_ITS_ValidityDuration* pvalue);

EXTERN int XmlEnc_ITS_ValidityDuration (OSCTXT* pctxt, 
   ASN1T_ITS_ValidityDuration value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_ValidityDuration (OSCTXT* pctxt, 
   ASN1T_ITS_ValidityDuration* pvalue);

EXTERN int asn1JsonEnc_ITS_ValidityDuration (OSCTXT *pctxt, ASN1T_ITS_ValidityDuration *pvalue);

EXTERN int asn1JsonDec_ITS_ValidityDuration (OSCTXT *pctxt, ASN1T_ITS_ValidityDuration *pvalue);

EXTERN int asn1PrtToStrm_ITS_ValidityDuration (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_ValidityDuration* pvalue);

EXTERN ASN1T_ITS_ValidityDuration* 
   new_ASN1T_ITS_ValidityDuration (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  TransmissionInterval                                      */
/*                                                            */
/**************************************************************/
/*
TransmissionInterval ::= INTEGER { oneMilliSecond(1), tenSeconds(10000) } (1..10000)
*/
struct EXTERN ITS_TransmissionInterval {
   enum Root {
      oneMilliSecond = 1,
      tenSeconds = 10000
   } ;
} ;

typedef OSUINT16 ASN1T_ITS_TransmissionInterval;

EXTERN int asn1PE_ITS_TransmissionInterval (OSCTXT* pctxt, ASN1T_ITS_TransmissionInterval value);

EXTERN int asn1PD_ITS_TransmissionInterval (OSCTXT* pctxt, ASN1T_ITS_TransmissionInterval* pvalue);

EXTERN int XmlEnc_ITS_TransmissionInterval (OSCTXT* pctxt, 
   ASN1T_ITS_TransmissionInterval value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_TransmissionInterval (OSCTXT* pctxt, 
   ASN1T_ITS_TransmissionInterval* pvalue);

EXTERN int asn1JsonEnc_ITS_TransmissionInterval (OSCTXT *pctxt, ASN1T_ITS_TransmissionInterval *pvalue);

EXTERN int asn1JsonDec_ITS_TransmissionInterval (OSCTXT *pctxt, ASN1T_ITS_TransmissionInterval *pvalue);

EXTERN int asn1PrtToStrm_ITS_TransmissionInterval (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_TransmissionInterval* pvalue);

EXTERN ASN1T_ITS_TransmissionInterval* 
   new_ASN1T_ITS_TransmissionInterval (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  InformationQuality                                        */
/*                                                            */
/**************************************************************/
/*
InformationQuality ::= INTEGER { unavailable(0), lowest(1), highest(7) } (0..7)
*/
struct EXTERN ITS_InformationQuality {
   enum Root {
      unavailable = 0,
      lowest = 1,
      highest = 7
   } ;
} ;

typedef OSUINT8 ASN1T_ITS_InformationQuality;

EXTERN int asn1PE_ITS_InformationQuality (OSCTXT* pctxt, ASN1T_ITS_InformationQuality value);

EXTERN int asn1PD_ITS_InformationQuality (OSCTXT* pctxt, ASN1T_ITS_InformationQuality* pvalue);

EXTERN int XmlEnc_ITS_InformationQuality (OSCTXT* pctxt, 
   ASN1T_ITS_InformationQuality value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_InformationQuality (OSCTXT* pctxt, 
   ASN1T_ITS_InformationQuality* pvalue);

EXTERN int asn1JsonEnc_ITS_InformationQuality (OSCTXT *pctxt, ASN1T_ITS_InformationQuality *pvalue);

EXTERN int asn1JsonDec_ITS_InformationQuality (OSCTXT *pctxt, ASN1T_ITS_InformationQuality *pvalue);

EXTERN int asn1PrtToStrm_ITS_InformationQuality (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_InformationQuality* pvalue);

EXTERN ASN1T_ITS_InformationQuality* 
   new_ASN1T_ITS_InformationQuality (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  EventPoint                                                */
/*                                                            */
/**************************************************************/
/*
EventPoint ::= SEQUENCE {
   eventPosition [0] DeltaReferencePosition,
   eventDeltaTime [1] PathDeltaTime OPTIONAL,
   informationQuality [2] InformationQuality
}
*/
struct EXTERN ASN1T_ITS_EventPoint {
   struct {
      unsigned eventDeltaTimePresent : 1;
   } m;
   ASN1T_ITS_DeltaReferencePosition eventPosition;
   ASN1T_ITS_PathDeltaTime eventDeltaTime;
   ASN1T_ITS_InformationQuality informationQuality;
   ASN1T_ITS_EventPoint ();
} ;

EXTERN int asn1PE_ITS_EventPoint (OSCTXT* pctxt, ASN1T_ITS_EventPoint* pvalue);

EXTERN int asn1PD_ITS_EventPoint (OSCTXT* pctxt, ASN1T_ITS_EventPoint* pvalue);

EXTERN int XmlEnc_ITS_EventPoint (OSCTXT* pctxt, ASN1T_ITS_EventPoint* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_EventPoint (OSCTXT* pctxt, ASN1T_ITS_EventPoint* pvalue)
   ;

EXTERN int asn1JsonEnc_ITS_EventPoint (OSCTXT *pctxt, ASN1T_ITS_EventPoint *pvalue);

EXTERN int asn1JsonDec_ITS_EventPoint (OSCTXT *pctxt, ASN1T_ITS_EventPoint *pvalue);

EXTERN int asn1PrtToStrm_ITS_EventPoint (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_EventPoint* pvalue);

EXTERN ASN1T_ITS_EventPoint* new_ASN1T_ITS_EventPoint (ASN1CType& ccobj);

EXTERN int asn1Init_ITS_EventPoint (ASN1T_ITS_EventPoint* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

/**************************************************************/
/*                                                            */
/*  EventHistory                                              */
/*                                                            */
/**************************************************************/
/*
EventHistory ::= SEQUENCE (SIZE (1..23)) OF EventPoint
*/
/* List of ASN1T_ITS_EventPoint */
typedef ASN1TSeqOfList ASN1T_ITS_EventHistory;

class EXTERN ASN1C_ITS_EventHistory :
public ASN1CSeqOfList
{
protected:
   ASN1T_ITS_EventHistory& msgData;
public:
   /**
    * Control class: ASN1C_ITS_EventHistory
    * Data class:    ASN1T_ITS_EventHistory
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ITS_EventHistory (ASN1T_ITS_EventHistory& data);

   /**
    * Control class: ASN1C_ITS_EventHistory<br/>
    * Data class: ASN1T_ITS_EventHistory<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ITS_EventHistory (OSRTMessageBufferIF& msgBuf
      , ASN1T_ITS_EventHistory& data);

   /**
    * Control class: ASN1C_ITS_EventHistory<br/>
    * Data class: ASN1T_ITS_EventHistory<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_ITS_EventHistory (ASN1CType& ccobj, ASN1T_ITS_EventHistory& data);

   virtual ~ASN1C_ITS_EventHistory () {}

   /**
    * Data class: ASN1T_ITS_EventPoint<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_ITS_EventPoint* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_ITS_EventPoint.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_ITS_EventPoint* NewElement ();

   /**
    * Data class: ASN1T_ITS_EventPoint.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_ITS_EventPoint* AppendNewElement ();

private:
   ASN1C_ITS_EventHistory& operator= (const ASN1C_ITS_EventHistory&) {return *this;}
} ;

EXTERN int asn1PE_ITS_EventHistory (OSCTXT* pctxt, ASN1T_ITS_EventHistory* pvalue);

EXTERN int asn1PD_ITS_EventHistory (OSCTXT* pctxt, ASN1T_ITS_EventHistory* pvalue);

EXTERN int XmlEnc_ITS_EventHistory (OSCTXT* pctxt, 
   ASN1T_ITS_EventHistory* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_EventHistory (OSCTXT* pctxt, 
   ASN1T_ITS_EventHistory* pvalue);

EXTERN int asn1JsonEnc_ITS_EventHistory (OSCTXT *pctxt, ASN1T_ITS_EventHistory *pvalue);

EXTERN int asn1JsonDec_ITS_EventHistory (OSCTXT *pctxt, ASN1T_ITS_EventHistory *pvalue);

EXTERN int asn1PrtToStrm_ITS_EventHistory (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_EventHistory* pvalue);

EXTERN int asn1Init_ITS_EventHistory (ASN1T_ITS_EventHistory* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ITS_EventHistory (OSCTXT *pctxt, ASN1T_ITS_EventHistory* pvalue);

/**************************************************************/
/*                                                            */
/*  Traces                                                    */
/*                                                            */
/**************************************************************/
/*
Traces ::= SEQUENCE (SIZE (1..7)) OF PathHistory
*/
/* List of ASN1T_ITS_PathHistory */
typedef ASN1TSeqOfList ASN1T_ITS_Traces;

class EXTERN ASN1C_ITS_Traces :
public ASN1CSeqOfList
{
protected:
   ASN1T_ITS_Traces& msgData;
public:
   /**
    * Control class: ASN1C_ITS_Traces
    * Data class:    ASN1T_ITS_Traces
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ITS_Traces (ASN1T_ITS_Traces& data);

   /**
    * Control class: ASN1C_ITS_Traces<br/>
    * Data class: ASN1T_ITS_Traces<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ITS_Traces (OSRTMessageBufferIF& msgBuf, ASN1T_ITS_Traces& data);

   /**
    * Control class: ASN1C_ITS_Traces<br/>
    * Data class: ASN1T_ITS_Traces<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_ITS_Traces (ASN1CType& ccobj, ASN1T_ITS_Traces& data);

   virtual ~ASN1C_ITS_Traces () {}

   /**
    * Data class: ASN1T_ITS_PathHistory<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_ITS_PathHistory* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_ITS_PathHistory.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_ITS_PathHistory* NewElement ();

   /**
    * Data class: ASN1T_ITS_PathHistory.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_ITS_PathHistory* AppendNewElement ();

private:
   ASN1C_ITS_Traces& operator= (const ASN1C_ITS_Traces&) {return *this;}
} ;

EXTERN int asn1PE_ITS_Traces (OSCTXT* pctxt, ASN1T_ITS_Traces* pvalue);

EXTERN int asn1PD_ITS_Traces (OSCTXT* pctxt, ASN1T_ITS_Traces* pvalue);

EXTERN int XmlEnc_ITS_Traces (OSCTXT* pctxt, ASN1T_ITS_Traces* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_Traces (OSCTXT* pctxt, ASN1T_ITS_Traces* pvalue);

EXTERN int asn1JsonEnc_ITS_Traces (OSCTXT *pctxt, ASN1T_ITS_Traces *pvalue);

EXTERN int asn1JsonDec_ITS_Traces (OSCTXT *pctxt, ASN1T_ITS_Traces *pvalue);

EXTERN int asn1PrtToStrm_ITS_Traces (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_Traces* pvalue);

EXTERN int asn1Init_ITS_Traces (ASN1T_ITS_Traces* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ITS_Traces (OSCTXT *pctxt, ASN1T_ITS_Traces* pvalue);

/**************************************************************/
/*                                                            */
/*  RoadType                                                  */
/*                                                            */
/**************************************************************/
/*
RoadType ::= ENUMERATED { urban-NoStructuralSeparationToOppositeLanes(0), urban-WithStructuralSeparationToOppositeLanes(1), nonUrban-NoStructuralSeparationToOppositeLanes(2), nonUrban-WithStructuralSeparationToOppositeLanes(3) }
*/
struct EXTERN ITS_RoadType {
   enum Root {
      urban_NoStructuralSeparationToOppositeLanes = 0,
      urban_WithStructuralSeparationToOppositeLanes = 1,
      nonUrban_NoStructuralSeparationToOppositeLanes = 2,
      nonUrban_WithStructuralSeparationToOppositeLanes = 3
   } ;
} ;

typedef OSUINT32 ASN1T_ITS_RoadType;

EXTERN int asn1PE_ITS_RoadType (OSCTXT* pctxt, ASN1T_ITS_RoadType value);

EXTERN int asn1PD_ITS_RoadType (OSCTXT* pctxt, ASN1T_ITS_RoadType* pvalue);

EXTERN int XmlEnc_ITS_RoadType (OSCTXT* pctxt, ASN1T_ITS_RoadType value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_RoadType (OSCTXT* pctxt, ASN1T_ITS_RoadType* pvalue);

EXTERN int asn1JsonEnc_ITS_RoadType (OSCTXT *pctxt, ASN1T_ITS_RoadType *pvalue);

EXTERN int asn1JsonDec_ITS_RoadType (OSCTXT *pctxt, ASN1T_ITS_RoadType *pvalue);

EXTERN int asn1PrtToStrm_ITS_RoadType (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_RoadType* pvalue);

EXTERN ASN1T_ITS_RoadType* new_ASN1T_ITS_RoadType (ASN1CType& ccobj);

EXTERN extern const OSEnumItem ASN1T_ITS_RoadType_ENUMTAB[];
#define ASN1T_ITS_RoadType_ENUMTABSIZE 4

EXTERN const OSUTF8CHAR* ASN1T_ITS_RoadType_ToString (OSINT32 value);

EXTERN int ASN1T_ITS_RoadType_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, ASN1T_ITS_RoadType* pvalue);

EXTERN int ASN1T_ITS_RoadType_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, ASN1T_ITS_RoadType* pvalue);

/**************************************************************/
/*                                                            */
/*  HeightLonCarr                                             */
/*                                                            */
/**************************************************************/
/*
HeightLonCarr ::= INTEGER { oneCentimeter(1), unavailable(100) } (1..100)
*/
struct EXTERN ITS_HeightLonCarr {
   enum Root {
      oneCentimeter = 1,
      unavailable = 100
   } ;
} ;

typedef OSUINT8 ASN1T_ITS_HeightLonCarr;

EXTERN int asn1PE_ITS_HeightLonCarr (OSCTXT* pctxt, ASN1T_ITS_HeightLonCarr value);

EXTERN int asn1PD_ITS_HeightLonCarr (OSCTXT* pctxt, ASN1T_ITS_HeightLonCarr* pvalue);

EXTERN int XmlEnc_ITS_HeightLonCarr (OSCTXT* pctxt, 
   ASN1T_ITS_HeightLonCarr value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_HeightLonCarr (OSCTXT* pctxt, 
   ASN1T_ITS_HeightLonCarr* pvalue);

EXTERN int asn1JsonEnc_ITS_HeightLonCarr (OSCTXT *pctxt, ASN1T_ITS_HeightLonCarr *pvalue);

EXTERN int asn1JsonDec_ITS_HeightLonCarr (OSCTXT *pctxt, ASN1T_ITS_HeightLonCarr *pvalue);

EXTERN int asn1PrtToStrm_ITS_HeightLonCarr (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_HeightLonCarr* pvalue);

EXTERN ASN1T_ITS_HeightLonCarr* new_ASN1T_ITS_HeightLonCarr (ASN1CType& ccobj)
   ;

/**************************************************************/
/*                                                            */
/*  PosLonCarr                                                */
/*                                                            */
/**************************************************************/
/*
PosLonCarr ::= INTEGER { oneCentimeter(1), unavailable(127) } (1..127)
*/
struct EXTERN ITS_PosLonCarr {
   enum Root {
      oneCentimeter = 1,
      unavailable = 127
   } ;
} ;

typedef OSUINT8 ASN1T_ITS_PosLonCarr;

EXTERN int asn1PE_ITS_PosLonCarr (OSCTXT* pctxt, ASN1T_ITS_PosLonCarr value);

EXTERN int asn1PD_ITS_PosLonCarr (OSCTXT* pctxt, ASN1T_ITS_PosLonCarr* pvalue);

EXTERN int XmlEnc_ITS_PosLonCarr (OSCTXT* pctxt, ASN1T_ITS_PosLonCarr value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_PosLonCarr (OSCTXT* pctxt, ASN1T_ITS_PosLonCarr* pvalue)
   ;

EXTERN int asn1JsonEnc_ITS_PosLonCarr (OSCTXT *pctxt, ASN1T_ITS_PosLonCarr *pvalue);

EXTERN int asn1JsonDec_ITS_PosLonCarr (OSCTXT *pctxt, ASN1T_ITS_PosLonCarr *pvalue);

EXTERN int asn1PrtToStrm_ITS_PosLonCarr (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_PosLonCarr* pvalue);

EXTERN ASN1T_ITS_PosLonCarr* new_ASN1T_ITS_PosLonCarr (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  PosPillar                                                 */
/*                                                            */
/**************************************************************/
/*
PosPillar ::= INTEGER { tenCentimeters(1), unavailable(30) } (1..30)
*/
struct EXTERN ITS_PosPillar {
   enum Root {
      tenCentimeters = 1,
      unavailable = 30
   } ;
} ;

typedef OSUINT8 ASN1T_ITS_PosPillar;

EXTERN int asn1PE_ITS_PosPillar (OSCTXT* pctxt, ASN1T_ITS_PosPillar value);

EXTERN int asn1PD_ITS_PosPillar (OSCTXT* pctxt, ASN1T_ITS_PosPillar* pvalue);

EXTERN int XmlEnc_ITS_PosPillar (OSCTXT* pctxt, ASN1T_ITS_PosPillar value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_PosPillar (OSCTXT* pctxt, ASN1T_ITS_PosPillar* pvalue);

EXTERN int asn1JsonEnc_ITS_PosPillar (OSCTXT *pctxt, ASN1T_ITS_PosPillar *pvalue);

EXTERN int asn1JsonDec_ITS_PosPillar (OSCTXT *pctxt, ASN1T_ITS_PosPillar *pvalue);

EXTERN int asn1PrtToStrm_ITS_PosPillar (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_PosPillar* pvalue);

EXTERN ASN1T_ITS_PosPillar* new_ASN1T_ITS_PosPillar (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  PositionOfPillars                                         */
/*                                                            */
/**************************************************************/
/*
PositionOfPillars ::= SEQUENCE (SIZE (1..3, ...)) OF PosPillar
*/
typedef struct EXTERN ASN1T_ITS_PositionOfPillars {
   OSSIZE n;
   ASN1T_ITS_PosPillar *elem;
   ASN1T_ITS_PositionOfPillars () : n(0), elem(0) {}
} ASN1T_ITS_PositionOfPillars;

class EXTERN ASN1C_ITS_PositionOfPillars :
public ASN1CType
{
protected:
   ASN1T_ITS_PositionOfPillars& msgData;
public:
   /**
    * Control class: ASN1C_ITS_PositionOfPillars
    * Data class:    ASN1T_ITS_PositionOfPillars
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ITS_PositionOfPillars (ASN1T_ITS_PositionOfPillars& data);

   /**
    * Control class: ASN1C_ITS_PositionOfPillars<br/>
    * Data class: ASN1T_ITS_PositionOfPillars<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ITS_PositionOfPillars (OSRTMessageBufferIF& msgBuf
      , ASN1T_ITS_PositionOfPillars& data);

   /**
    * Control class: ASN1C_ITS_PositionOfPillars<br/>
    * Data class: ASN1T_ITS_PositionOfPillars<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_ITS_PositionOfPillars (ASN1CType& ccobj
      , ASN1T_ITS_PositionOfPillars& data);

   virtual ~ASN1C_ITS_PositionOfPillars () {}

private:
   ASN1C_ITS_PositionOfPillars& operator= (const ASN1C_ITS_PositionOfPillars&) {return *this;}
} ;

EXTERN int asn1PE_ITS_PositionOfPillars (OSCTXT* pctxt, ASN1T_ITS_PositionOfPillars* pvalue);

EXTERN int asn1PD_ITS_PositionOfPillars (OSCTXT* pctxt, ASN1T_ITS_PositionOfPillars* pvalue);

EXTERN int XmlEnc_ITS_PositionOfPillars (OSCTXT* pctxt, 
   ASN1T_ITS_PositionOfPillars* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_PositionOfPillars (OSCTXT* pctxt, 
   ASN1T_ITS_PositionOfPillars* pvalue);

EXTERN int asn1JsonEnc_ITS_PositionOfPillars (OSCTXT *pctxt, ASN1T_ITS_PositionOfPillars *pvalue);

EXTERN int asn1JsonDec_ITS_PositionOfPillars (OSCTXT *pctxt, ASN1T_ITS_PositionOfPillars *pvalue);

EXTERN int asn1PrtToStrm_ITS_PositionOfPillars (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_PositionOfPillars* pvalue);

EXTERN int asn1Init_ITS_PositionOfPillars (ASN1T_ITS_PositionOfPillars* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ITS_PositionOfPillars (OSCTXT *pctxt, 
   ASN1T_ITS_PositionOfPillars* pvalue);

/**************************************************************/
/*                                                            */
/*  PosCentMass                                               */
/*                                                            */
/**************************************************************/
/*
PosCentMass ::= INTEGER { tenCentimeters(1), unavailable(63) } (1..63)
*/
struct EXTERN ITS_PosCentMass {
   enum Root {
      tenCentimeters = 1,
      unavailable = 63
   } ;
} ;

typedef OSUINT8 ASN1T_ITS_PosCentMass;

EXTERN int asn1PE_ITS_PosCentMass (OSCTXT* pctxt, ASN1T_ITS_PosCentMass value);

EXTERN int asn1PD_ITS_PosCentMass (OSCTXT* pctxt, ASN1T_ITS_PosCentMass* pvalue);

EXTERN int XmlEnc_ITS_PosCentMass (OSCTXT* pctxt, ASN1T_ITS_PosCentMass value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_PosCentMass (OSCTXT* pctxt, ASN1T_ITS_PosCentMass* pvalue
   );

EXTERN int asn1JsonEnc_ITS_PosCentMass (OSCTXT *pctxt, ASN1T_ITS_PosCentMass *pvalue);

EXTERN int asn1JsonDec_ITS_PosCentMass (OSCTXT *pctxt, ASN1T_ITS_PosCentMass *pvalue);

EXTERN int asn1PrtToStrm_ITS_PosCentMass (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_PosCentMass* pvalue);

EXTERN ASN1T_ITS_PosCentMass* new_ASN1T_ITS_PosCentMass (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  WheelBaseVehicle                                          */
/*                                                            */
/**************************************************************/
/*
WheelBaseVehicle ::= INTEGER { tenCentimeters(1), unavailable(127) } (1..127)
*/
struct EXTERN ITS_WheelBaseVehicle {
   enum Root {
      tenCentimeters = 1,
      unavailable = 127
   } ;
} ;

typedef OSUINT8 ASN1T_ITS_WheelBaseVehicle;

EXTERN int asn1PE_ITS_WheelBaseVehicle (OSCTXT* pctxt, ASN1T_ITS_WheelBaseVehicle value);

EXTERN int asn1PD_ITS_WheelBaseVehicle (OSCTXT* pctxt, ASN1T_ITS_WheelBaseVehicle* pvalue);

EXTERN int XmlEnc_ITS_WheelBaseVehicle (OSCTXT* pctxt, 
   ASN1T_ITS_WheelBaseVehicle value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_WheelBaseVehicle (OSCTXT* pctxt, 
   ASN1T_ITS_WheelBaseVehicle* pvalue);

EXTERN int asn1JsonEnc_ITS_WheelBaseVehicle (OSCTXT *pctxt, ASN1T_ITS_WheelBaseVehicle *pvalue);

EXTERN int asn1JsonDec_ITS_WheelBaseVehicle (OSCTXT *pctxt, ASN1T_ITS_WheelBaseVehicle *pvalue);

EXTERN int asn1PrtToStrm_ITS_WheelBaseVehicle (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_WheelBaseVehicle* pvalue);

EXTERN ASN1T_ITS_WheelBaseVehicle* 
   new_ASN1T_ITS_WheelBaseVehicle (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  TurningRadius                                             */
/*                                                            */
/**************************************************************/
/*
TurningRadius ::= INTEGER { point4Meters(1), unavailable(255) } (1..255)
*/
struct EXTERN ITS_TurningRadius {
   enum Root {
      point4Meters = 1,
      unavailable = 255
   } ;
} ;

typedef OSUINT8 ASN1T_ITS_TurningRadius;

EXTERN int asn1PE_ITS_TurningRadius (OSCTXT* pctxt, ASN1T_ITS_TurningRadius value);

EXTERN int asn1PD_ITS_TurningRadius (OSCTXT* pctxt, ASN1T_ITS_TurningRadius* pvalue);

EXTERN int XmlEnc_ITS_TurningRadius (OSCTXT* pctxt, 
   ASN1T_ITS_TurningRadius value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_TurningRadius (OSCTXT* pctxt, 
   ASN1T_ITS_TurningRadius* pvalue);

EXTERN int asn1JsonEnc_ITS_TurningRadius (OSCTXT *pctxt, ASN1T_ITS_TurningRadius *pvalue);

EXTERN int asn1JsonDec_ITS_TurningRadius (OSCTXT *pctxt, ASN1T_ITS_TurningRadius *pvalue);

EXTERN int asn1PrtToStrm_ITS_TurningRadius (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_TurningRadius* pvalue);

EXTERN ASN1T_ITS_TurningRadius* new_ASN1T_ITS_TurningRadius (ASN1CType& ccobj)
   ;

/**************************************************************/
/*                                                            */
/*  PosFrontAx                                                */
/*                                                            */
/**************************************************************/
/*
PosFrontAx ::= INTEGER { tenCentimeters(1), unavailable(20) } (1..20)
*/
struct EXTERN ITS_PosFrontAx {
   enum Root {
      tenCentimeters = 1,
      unavailable = 20
   } ;
} ;

typedef OSUINT8 ASN1T_ITS_PosFrontAx;

EXTERN int asn1PE_ITS_PosFrontAx (OSCTXT* pctxt, ASN1T_ITS_PosFrontAx value);

EXTERN int asn1PD_ITS_PosFrontAx (OSCTXT* pctxt, ASN1T_ITS_PosFrontAx* pvalue);

EXTERN int XmlEnc_ITS_PosFrontAx (OSCTXT* pctxt, ASN1T_ITS_PosFrontAx value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_PosFrontAx (OSCTXT* pctxt, ASN1T_ITS_PosFrontAx* pvalue)
   ;

EXTERN int asn1JsonEnc_ITS_PosFrontAx (OSCTXT *pctxt, ASN1T_ITS_PosFrontAx *pvalue);

EXTERN int asn1JsonDec_ITS_PosFrontAx (OSCTXT *pctxt, ASN1T_ITS_PosFrontAx *pvalue);

EXTERN int asn1PrtToStrm_ITS_PosFrontAx (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_PosFrontAx* pvalue);

EXTERN ASN1T_ITS_PosFrontAx* new_ASN1T_ITS_PosFrontAx (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  PositionOfOccupants                                       */
/*                                                            */
/**************************************************************/
/*
PositionOfOccupants ::= BIT STRING  { row1LeftOccupied(0), row1RightOccupied(1), row1MidOccupied(2), row1NotDetectable(3), row1NotPresent(4), row2LeftOccupied(5), row2RightOccupied(6), row2MidOccupied(7), row2NotDetectable(8), row2NotPresent(9), row3LeftOccupied(10), row3RightOccupied(11), row3MidOccupied(12), row3NotDetectable(13), row3NotPresent(14), row4LeftOccupied(15), row4RightOccupied(16), row4MidOccupied(17), row4NotDetectable(18), row4NotPresent(19) } (SIZE (20))
*/
struct EXTERN ASN1T_ITS_PositionOfOccupants {
   OSOCTET data[3];
   // ctors
   ASN1T_ITS_PositionOfOccupants ()  {}
   ASN1T_ITS_PositionOfOccupants (const OSOCTET* _data) {
      OSCRTLSAFEMEMCPY (data, 3, _data, 3);
   }
} ;

class EXTERN ASN1C_ITS_PositionOfOccupants :
public ASN1CBitStr
{
protected:
   ASN1T_ITS_PositionOfOccupants& msgData;
public:
   // named bits
   enum { row1LeftOccupied = 0, row1RightOccupied = 1, row1MidOccupied = 2, row1NotDetectable = 3, row1NotPresent = 4, row2LeftOccupied = 5, row2RightOccupied = 6, row2MidOccupied = 7, row2NotDetectable = 8, row2NotPresent = 9, row3LeftOccupied = 10, row3RightOccupied = 11, row3MidOccupied = 12, row3NotDetectable = 13, row3NotPresent = 14, row4LeftOccupied = 15, row4RightOccupied = 16, row4MidOccupied = 17, row4NotDetectable = 18, row4NotPresent = 19 };

   /**
    * Control class: ASN1C_ITS_PositionOfOccupants
    * Data class:    ASN1T_ITS_PositionOfOccupants
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ITS_PositionOfOccupants (ASN1T_ITS_PositionOfOccupants& data);

   /**
    * Control class: ASN1C_ITS_PositionOfOccupants<br/>
    * Data class: ASN1T_ITS_PositionOfOccupants<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ITS_PositionOfOccupants (OSRTMessageBufferIF& msgBuf
      , ASN1T_ITS_PositionOfOccupants& data);

   virtual ~ASN1C_ITS_PositionOfOccupants () {}

private:
   ASN1C_ITS_PositionOfOccupants& operator= (const ASN1C_ITS_PositionOfOccupants&) {return *this;}
} ;

EXTERN int asn1PE_ITS_PositionOfOccupants (OSCTXT* pctxt, ASN1T_ITS_PositionOfOccupants* pvalue);

EXTERN int asn1PD_ITS_PositionOfOccupants (OSCTXT* pctxt, ASN1T_ITS_PositionOfOccupants* pvalue);

EXTERN int XmlEnc_ITS_PositionOfOccupants (OSCTXT* pctxt, 
   ASN1T_ITS_PositionOfOccupants* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_PositionOfOccupants (OSCTXT* pctxt, 
   ASN1T_ITS_PositionOfOccupants* pvalue);

EXTERN int asn1JsonEnc_ITS_PositionOfOccupants (OSCTXT *pctxt, ASN1T_ITS_PositionOfOccupants *pvalue);

EXTERN int asn1JsonDec_ITS_PositionOfOccupants (OSCTXT *pctxt, ASN1T_ITS_PositionOfOccupants *pvalue);

EXTERN int asn1PrtToStrm_ITS_PositionOfOccupants (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_PositionOfOccupants* pvalue);

extern EXTERN struct OSBitMapItem g_ASN1T_ITS_PositionOfOccupants_NAMEDBITTAB[21];

EXTERN ASN1T_ITS_PositionOfOccupants* 
   new_ASN1T_ITS_PositionOfOccupants (ASN1CType& ccobj);

EXTERN int asn1Init_ITS_PositionOfOccupants (ASN1T_ITS_PositionOfOccupants* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

/**************************************************************/
/*                                                            */
/*  VehicleMass                                               */
/*                                                            */
/**************************************************************/
/*
VehicleMass ::= INTEGER { hundredKg(1), unavailable(1024) } (1..1024)
*/
struct EXTERN ITS_VehicleMass {
   enum Root {
      hundredKg = 1,
      unavailable = 1024
   } ;
} ;

typedef OSUINT16 ASN1T_ITS_VehicleMass;

EXTERN int asn1PE_ITS_VehicleMass (OSCTXT* pctxt, ASN1T_ITS_VehicleMass value);

EXTERN int asn1PD_ITS_VehicleMass (OSCTXT* pctxt, ASN1T_ITS_VehicleMass* pvalue);

EXTERN int XmlEnc_ITS_VehicleMass (OSCTXT* pctxt, ASN1T_ITS_VehicleMass value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_VehicleMass (OSCTXT* pctxt, ASN1T_ITS_VehicleMass* pvalue
   );

EXTERN int asn1JsonEnc_ITS_VehicleMass (OSCTXT *pctxt, ASN1T_ITS_VehicleMass *pvalue);

EXTERN int asn1JsonDec_ITS_VehicleMass (OSCTXT *pctxt, ASN1T_ITS_VehicleMass *pvalue);

EXTERN int asn1PrtToStrm_ITS_VehicleMass (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_VehicleMass* pvalue);

EXTERN ASN1T_ITS_VehicleMass* new_ASN1T_ITS_VehicleMass (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  RequestResponseIndication                                 */
/*                                                            */
/**************************************************************/
/*
RequestResponseIndication ::= ENUMERATED { request(0), response(1) }
*/
struct EXTERN ITS_RequestResponseIndication {
   enum Root {
      request = 0,
      response = 1
   } ;
} ;

typedef OSUINT32 ASN1T_ITS_RequestResponseIndication;

EXTERN int asn1PE_ITS_RequestResponseIndication (OSCTXT* pctxt, ASN1T_ITS_RequestResponseIndication value);

EXTERN int asn1PD_ITS_RequestResponseIndication (OSCTXT* pctxt, ASN1T_ITS_RequestResponseIndication* pvalue);

EXTERN int XmlEnc_ITS_RequestResponseIndication (OSCTXT* pctxt, 
   ASN1T_ITS_RequestResponseIndication value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_RequestResponseIndication (OSCTXT* pctxt, 
   ASN1T_ITS_RequestResponseIndication* pvalue);

EXTERN int asn1JsonEnc_ITS_RequestResponseIndication (OSCTXT *pctxt, ASN1T_ITS_RequestResponseIndication *pvalue);

EXTERN int asn1JsonDec_ITS_RequestResponseIndication (OSCTXT *pctxt, ASN1T_ITS_RequestResponseIndication *pvalue);

EXTERN int asn1PrtToStrm_ITS_RequestResponseIndication (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_RequestResponseIndication* pvalue);

EXTERN ASN1T_ITS_RequestResponseIndication* 
   new_ASN1T_ITS_RequestResponseIndication (ASN1CType& ccobj);

EXTERN extern const OSEnumItem ASN1T_ITS_RequestResponseIndication_ENUMTAB[];
#define ASN1T_ITS_RequestResponseIndication_ENUMTABSIZE 2

EXTERN const OSUTF8CHAR* ASN1T_ITS_RequestResponseIndication_ToString (OSINT32 value);

EXTERN int ASN1T_ITS_RequestResponseIndication_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, ASN1T_ITS_RequestResponseIndication* pvalue);

EXTERN int ASN1T_ITS_RequestResponseIndication_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      ASN1T_ITS_RequestResponseIndication* pvalue);

/**************************************************************/
/*                                                            */
/*  Temperature                                               */
/*                                                            */
/**************************************************************/
/*
Temperature ::= INTEGER { equalOrSmallerThanMinus60Deg(-60), oneDegreeCelsius(1), equalOrGreaterThan67Deg(67) } (-60..67)
*/
struct EXTERN ITS_Temperature {
   enum Root {
      equalOrSmallerThanMinus60Deg = -60,
      oneDegreeCelsius = 1,
      equalOrGreaterThan67Deg = 67
   } ;
} ;

typedef OSINT8 ASN1T_ITS_Temperature;

EXTERN int asn1PE_ITS_Temperature (OSCTXT* pctxt, ASN1T_ITS_Temperature value);

EXTERN int asn1PD_ITS_Temperature (OSCTXT* pctxt, ASN1T_ITS_Temperature* pvalue);

EXTERN int XmlEnc_ITS_Temperature (OSCTXT* pctxt, ASN1T_ITS_Temperature value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_Temperature (OSCTXT* pctxt, ASN1T_ITS_Temperature* pvalue
   );

EXTERN int asn1JsonEnc_ITS_Temperature (OSCTXT *pctxt, ASN1T_ITS_Temperature *pvalue);

EXTERN int asn1JsonDec_ITS_Temperature (OSCTXT *pctxt, ASN1T_ITS_Temperature *pvalue);

EXTERN int asn1PrtToStrm_ITS_Temperature (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_Temperature* pvalue);

EXTERN ASN1T_ITS_Temperature* new_ASN1T_ITS_Temperature (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  RestrictedTypes                                           */
/*                                                            */
/**************************************************************/
/*
RestrictedTypes ::= SEQUENCE (SIZE (1..3, ...)) OF StationType
*/
typedef struct EXTERN ASN1T_ITS_RestrictedTypes {
   OSSIZE n;
   ASN1T_ITS_StationType *elem;
   ASN1T_ITS_RestrictedTypes () : n(0), elem(0) {}
} ASN1T_ITS_RestrictedTypes;

class EXTERN ASN1C_ITS_RestrictedTypes :
public ASN1CType
{
protected:
   ASN1T_ITS_RestrictedTypes& msgData;
public:
   /**
    * Control class: ASN1C_ITS_RestrictedTypes
    * Data class:    ASN1T_ITS_RestrictedTypes
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ITS_RestrictedTypes (ASN1T_ITS_RestrictedTypes& data);

   /**
    * Control class: ASN1C_ITS_RestrictedTypes<br/>
    * Data class: ASN1T_ITS_RestrictedTypes<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ITS_RestrictedTypes (OSRTMessageBufferIF& msgBuf
      , ASN1T_ITS_RestrictedTypes& data);

   /**
    * Control class: ASN1C_ITS_RestrictedTypes<br/>
    * Data class: ASN1T_ITS_RestrictedTypes<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_ITS_RestrictedTypes (ASN1CType& ccobj, ASN1T_ITS_RestrictedTypes& data
      );

   virtual ~ASN1C_ITS_RestrictedTypes () {}

private:
   ASN1C_ITS_RestrictedTypes& operator= (const ASN1C_ITS_RestrictedTypes&) {return *this;}
} ;

EXTERN int asn1PE_ITS_RestrictedTypes (OSCTXT* pctxt, ASN1T_ITS_RestrictedTypes* pvalue);

EXTERN int asn1PD_ITS_RestrictedTypes (OSCTXT* pctxt, ASN1T_ITS_RestrictedTypes* pvalue);

EXTERN int XmlEnc_ITS_RestrictedTypes (OSCTXT* pctxt, 
   ASN1T_ITS_RestrictedTypes* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_RestrictedTypes (OSCTXT* pctxt, 
   ASN1T_ITS_RestrictedTypes* pvalue);

EXTERN int asn1JsonEnc_ITS_RestrictedTypes (OSCTXT *pctxt, ASN1T_ITS_RestrictedTypes *pvalue);

EXTERN int asn1JsonDec_ITS_RestrictedTypes (OSCTXT *pctxt, ASN1T_ITS_RestrictedTypes *pvalue);

EXTERN int asn1PrtToStrm_ITS_RestrictedTypes (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_RestrictedTypes* pvalue);

EXTERN int asn1Init_ITS_RestrictedTypes (ASN1T_ITS_RestrictedTypes* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ITS_RestrictedTypes (OSCTXT *pctxt, 
   ASN1T_ITS_RestrictedTypes* pvalue);

/**************************************************************/
/*                                                            */
/*  ItineraryPath                                             */
/*                                                            */
/**************************************************************/
/*
ItineraryPath ::= SEQUENCE (SIZE (1..40)) OF ReferencePosition
*/
/* List of ASN1T_ITS_ReferencePosition */
typedef ASN1TSeqOfList ASN1T_ITS_ItineraryPath;

class EXTERN ASN1C_ITS_ItineraryPath :
public ASN1CSeqOfList
{
protected:
   ASN1T_ITS_ItineraryPath& msgData;
public:
   /**
    * Control class: ASN1C_ITS_ItineraryPath
    * Data class:    ASN1T_ITS_ItineraryPath
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ITS_ItineraryPath (ASN1T_ITS_ItineraryPath& data);

   /**
    * Control class: ASN1C_ITS_ItineraryPath<br/>
    * Data class: ASN1T_ITS_ItineraryPath<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ITS_ItineraryPath (OSRTMessageBufferIF& msgBuf
      , ASN1T_ITS_ItineraryPath& data);

   /**
    * Control class: ASN1C_ITS_ItineraryPath<br/>
    * Data class: ASN1T_ITS_ItineraryPath<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_ITS_ItineraryPath (ASN1CType& ccobj, ASN1T_ITS_ItineraryPath& data);

   virtual ~ASN1C_ITS_ItineraryPath () {}

   /**
    * Data class: ASN1T_ITS_ReferencePosition<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_ITS_ReferencePosition* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_ITS_ReferencePosition.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_ITS_ReferencePosition* NewElement ();

   /**
    * Data class: ASN1T_ITS_ReferencePosition.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_ITS_ReferencePosition* AppendNewElement ();

private:
   ASN1C_ITS_ItineraryPath& operator= (const ASN1C_ITS_ItineraryPath&) {return *this;}
} ;

EXTERN int asn1PE_ITS_ItineraryPath (OSCTXT* pctxt, ASN1T_ITS_ItineraryPath* pvalue);

EXTERN int asn1PD_ITS_ItineraryPath (OSCTXT* pctxt, ASN1T_ITS_ItineraryPath* pvalue);

EXTERN int XmlEnc_ITS_ItineraryPath (OSCTXT* pctxt, 
   ASN1T_ITS_ItineraryPath* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_ItineraryPath (OSCTXT* pctxt, 
   ASN1T_ITS_ItineraryPath* pvalue);

EXTERN int asn1JsonEnc_ITS_ItineraryPath (OSCTXT *pctxt, ASN1T_ITS_ItineraryPath *pvalue);

EXTERN int asn1JsonDec_ITS_ItineraryPath (OSCTXT *pctxt, ASN1T_ITS_ItineraryPath *pvalue);

EXTERN int asn1PrtToStrm_ITS_ItineraryPath (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_ItineraryPath* pvalue);

EXTERN int asn1Init_ITS_ItineraryPath (ASN1T_ITS_ItineraryPath* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ITS_ItineraryPath (OSCTXT *pctxt, 
   ASN1T_ITS_ItineraryPath* pvalue);

/**************************************************************/
/*                                                            */
/*  PositioningSolutionType                                   */
/*                                                            */
/**************************************************************/
/*
PositioningSolutionType ::= ENUMERATED { noPositioningSolution(0), sGNSS(1), dGNSS(2), sGNSSplusDR(3), dGNSSplusDR(4), dR(5), ... }
*/
struct EXTERN ITS_PositioningSolutionType {
   enum Root {
      noPositioningSolution = 0,
      sGNSS = 1,
      dGNSS = 2,
      sGNSSplusDR = 3,
      dGNSSplusDR = 4,
      dR = 5
   } ;
} ;

typedef OSUINT32 ASN1T_ITS_PositioningSolutionType;

EXTERN int asn1PE_ITS_PositioningSolutionType (OSCTXT* pctxt, ASN1T_ITS_PositioningSolutionType value);

EXTERN int asn1PD_ITS_PositioningSolutionType (OSCTXT* pctxt, ASN1T_ITS_PositioningSolutionType* pvalue);

EXTERN int XmlEnc_ITS_PositioningSolutionType (OSCTXT* pctxt, 
   ASN1T_ITS_PositioningSolutionType value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_PositioningSolutionType (OSCTXT* pctxt, 
   ASN1T_ITS_PositioningSolutionType* pvalue);

EXTERN int asn1JsonEnc_ITS_PositioningSolutionType (OSCTXT *pctxt, ASN1T_ITS_PositioningSolutionType *pvalue);

EXTERN int asn1JsonDec_ITS_PositioningSolutionType (OSCTXT *pctxt, ASN1T_ITS_PositioningSolutionType *pvalue);

EXTERN int asn1PrtToStrm_ITS_PositioningSolutionType (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_PositioningSolutionType* pvalue);

EXTERN ASN1T_ITS_PositioningSolutionType* 
   new_ASN1T_ITS_PositioningSolutionType (ASN1CType& ccobj);

EXTERN extern const OSEnumItem ASN1T_ITS_PositioningSolutionType_ENUMTAB[];
#define ASN1T_ITS_PositioningSolutionType_ENUMTABSIZE 6

EXTERN const OSUTF8CHAR* ASN1T_ITS_PositioningSolutionType_ToString (OSINT32 value);

EXTERN int ASN1T_ITS_PositioningSolutionType_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, ASN1T_ITS_PositioningSolutionType* pvalue);

EXTERN int ASN1T_ITS_PositioningSolutionType_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      ASN1T_ITS_PositioningSolutionType* pvalue);

/**************************************************************/
/*                                                            */
/*  StationarySince                                           */
/*                                                            */
/**************************************************************/
/*
StationarySince ::= ENUMERATED { lessThan1Minute(0), lessThan2Minutes(1), lessThan15Minutes(2), equalOrGreater15Minutes(3) }
*/
struct EXTERN ITS_StationarySince {
   enum Root {
      lessThan1Minute = 0,
      lessThan2Minutes = 1,
      lessThan15Minutes = 2,
      equalOrGreater15Minutes = 3
   } ;
} ;

typedef OSUINT32 ASN1T_ITS_StationarySince;

EXTERN int asn1PE_ITS_StationarySince (OSCTXT* pctxt, ASN1T_ITS_StationarySince value);

EXTERN int asn1PD_ITS_StationarySince (OSCTXT* pctxt, ASN1T_ITS_StationarySince* pvalue);

EXTERN int XmlEnc_ITS_StationarySince (OSCTXT* pctxt, 
   ASN1T_ITS_StationarySince value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_StationarySince (OSCTXT* pctxt, 
   ASN1T_ITS_StationarySince* pvalue);

EXTERN int asn1JsonEnc_ITS_StationarySince (OSCTXT *pctxt, ASN1T_ITS_StationarySince *pvalue);

EXTERN int asn1JsonDec_ITS_StationarySince (OSCTXT *pctxt, ASN1T_ITS_StationarySince *pvalue);

EXTERN int asn1PrtToStrm_ITS_StationarySince (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_StationarySince* pvalue);

EXTERN ASN1T_ITS_StationarySince* 
   new_ASN1T_ITS_StationarySince (ASN1CType& ccobj);

EXTERN extern const OSEnumItem ASN1T_ITS_StationarySince_ENUMTAB[];
#define ASN1T_ITS_StationarySince_ENUMTABSIZE 4

EXTERN const OSUTF8CHAR* ASN1T_ITS_StationarySince_ToString (OSINT32 value);

EXTERN int ASN1T_ITS_StationarySince_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, ASN1T_ITS_StationarySince* pvalue);

EXTERN int ASN1T_ITS_StationarySince_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, ASN1T_ITS_StationarySince* pvalue)
      ;

/**************************************************************/
/*                                                            */
/*  DangerousGoodsExtended                                    */
/*                                                            */
/**************************************************************/
/*
DangerousGoodsExtended ::= SEQUENCE {
   dangerousGoodsType [0] DangerousGoodsBasic,
   unNumber [1] INTEGER (0..9999),
   elevatedTemperature [2] BOOLEAN,
   tunnelsRestricted [3] BOOLEAN,
   limitedQuantity [4] BOOLEAN,
   emergencyActionCode [5] IA5String (SIZE (1..24)) OPTIONAL,
   phoneNumber [6] IA5String (SIZE (1..24)) OPTIONAL,
   companyName [7] UTF8String (SIZE (1..24)) OPTIONAL
}
*/
struct EXTERN ASN1T_ITS_DangerousGoodsExtended {
   struct {
      unsigned emergencyActionCodePresent : 1;
      unsigned phoneNumberPresent : 1;
      unsigned companyNamePresent : 1;
   } m;
   ASN1T_ITS_DangerousGoodsBasic dangerousGoodsType;
   OSUINT16 unNumber;
   OSBOOL elevatedTemperature;
   OSBOOL tunnelsRestricted;
   OSBOOL limitedQuantity;
   const char* emergencyActionCode;
   const char* phoneNumber;
   const OSUTF8CHAR* companyName;
   ASN1T_ITS_DangerousGoodsExtended ();
} ;

EXTERN int asn1PE_ITS_DangerousGoodsExtended (OSCTXT* pctxt, ASN1T_ITS_DangerousGoodsExtended* pvalue);

EXTERN int asn1PD_ITS_DangerousGoodsExtended (OSCTXT* pctxt, ASN1T_ITS_DangerousGoodsExtended* pvalue);

EXTERN int XmlEnc_ITS_DangerousGoodsExtended (OSCTXT* pctxt, 
   ASN1T_ITS_DangerousGoodsExtended* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_DangerousGoodsExtended (OSCTXT* pctxt, 
   ASN1T_ITS_DangerousGoodsExtended* pvalue);

EXTERN int asn1JsonEnc_ITS_DangerousGoodsExtended (OSCTXT *pctxt, ASN1T_ITS_DangerousGoodsExtended *pvalue);

EXTERN int asn1JsonDec_ITS_DangerousGoodsExtended (OSCTXT *pctxt, ASN1T_ITS_DangerousGoodsExtended *pvalue);

EXTERN int asn1PrtToStrm_ITS_DangerousGoodsExtended (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_DangerousGoodsExtended* pvalue);

EXTERN ASN1T_ITS_DangerousGoodsExtended* 
   new_ASN1T_ITS_DangerousGoodsExtended (ASN1CType& ccobj);

EXTERN int asn1Init_ITS_DangerousGoodsExtended (
   ASN1T_ITS_DangerousGoodsExtended* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ITS_DangerousGoodsExtended (OSCTXT *pctxt, 
   ASN1T_ITS_DangerousGoodsExtended* pvalue);

/**************************************************************/
/*                                                            */
/*  NumberOfOccupants                                         */
/*                                                            */
/**************************************************************/
/*
NumberOfOccupants ::= INTEGER { oneOccupant(1), unavailable(127) } (0..127)
*/
struct EXTERN ITS_NumberOfOccupants {
   enum Root {
      oneOccupant = 1,
      unavailable = 127
   } ;
} ;

typedef OSUINT8 ASN1T_ITS_NumberOfOccupants;

EXTERN int asn1PE_ITS_NumberOfOccupants (OSCTXT* pctxt, ASN1T_ITS_NumberOfOccupants value);

EXTERN int asn1PD_ITS_NumberOfOccupants (OSCTXT* pctxt, ASN1T_ITS_NumberOfOccupants* pvalue);

EXTERN int XmlEnc_ITS_NumberOfOccupants (OSCTXT* pctxt, 
   ASN1T_ITS_NumberOfOccupants value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_NumberOfOccupants (OSCTXT* pctxt, 
   ASN1T_ITS_NumberOfOccupants* pvalue);

EXTERN int asn1JsonEnc_ITS_NumberOfOccupants (OSCTXT *pctxt, ASN1T_ITS_NumberOfOccupants *pvalue);

EXTERN int asn1JsonDec_ITS_NumberOfOccupants (OSCTXT *pctxt, ASN1T_ITS_NumberOfOccupants *pvalue);

EXTERN int asn1PrtToStrm_ITS_NumberOfOccupants (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_NumberOfOccupants* pvalue);

EXTERN ASN1T_ITS_NumberOfOccupants* 
   new_ASN1T_ITS_NumberOfOccupants (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  WMInumber                                                 */
/*                                                            */
/**************************************************************/
/*
WMInumber ::= IA5String (SIZE (1..3))
*/
typedef const char* ASN1T_ITS_WMInumber;

EXTERN int asn1PE_ITS_WMInumber (OSCTXT* pctxt, ASN1T_ITS_WMInumber value);

EXTERN int asn1PD_ITS_WMInumber (OSCTXT* pctxt, ASN1T_ITS_WMInumber* pvalue);

EXTERN int XmlEnc_ITS_WMInumber (OSCTXT* pctxt, ASN1T_ITS_WMInumber value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_WMInumber (OSCTXT* pctxt, ASN1T_ITS_WMInumber* pvalue);

EXTERN int asn1JsonEnc_ITS_WMInumber (OSCTXT *pctxt, ASN1T_ITS_WMInumber value);

EXTERN int asn1JsonDec_ITS_WMInumber (OSCTXT *pctxt, ASN1T_ITS_WMInumber *pvalue);

EXTERN int asn1PrtToStrm_ITS_WMInumber (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_WMInumber pvalue);

EXTERN void asn1Free_ITS_WMInumber (OSCTXT *pctxt, ASN1T_ITS_WMInumber pvalue);

/**************************************************************/
/*                                                            */
/*  VDS                                                       */
/*                                                            */
/**************************************************************/
/*
VDS ::= IA5String (SIZE (6))
*/
typedef const char* ASN1T_ITS_VDS;

EXTERN int asn1PE_ITS_VDS (OSCTXT* pctxt, ASN1T_ITS_VDS value);

EXTERN int asn1PD_ITS_VDS (OSCTXT* pctxt, ASN1T_ITS_VDS* pvalue);

EXTERN int XmlEnc_ITS_VDS (OSCTXT* pctxt, ASN1T_ITS_VDS value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_VDS (OSCTXT* pctxt, ASN1T_ITS_VDS* pvalue);

EXTERN int asn1JsonEnc_ITS_VDS (OSCTXT *pctxt, ASN1T_ITS_VDS value);

EXTERN int asn1JsonDec_ITS_VDS (OSCTXT *pctxt, ASN1T_ITS_VDS *pvalue);

EXTERN int asn1PrtToStrm_ITS_VDS (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_VDS pvalue);

EXTERN void asn1Free_ITS_VDS (OSCTXT *pctxt, ASN1T_ITS_VDS pvalue);

/**************************************************************/
/*                                                            */
/*  VehicleIdentification                                     */
/*                                                            */
/**************************************************************/
/*
VehicleIdentification ::= SEQUENCE {
   wMInumber [0] WMInumber OPTIONAL,
   vDS [1] VDS OPTIONAL,
   ...
}
*/
struct EXTERN ASN1T_ITS_VehicleIdentification {
   struct {
      unsigned wMInumberPresent : 1;
      unsigned vDSPresent : 1;
   } m;
   ASN1T_ITS_WMInumber wMInumber;
   ASN1T_ITS_VDS vDS;
   ASN1TSeqExt extElem1;
   ASN1T_ITS_VehicleIdentification ();
} ;

EXTERN int asn1PE_ITS_VehicleIdentification (OSCTXT* pctxt, ASN1T_ITS_VehicleIdentification* pvalue);

EXTERN int asn1PD_ITS_VehicleIdentification (OSCTXT* pctxt, ASN1T_ITS_VehicleIdentification* pvalue);

EXTERN int XmlEnc_ITS_VehicleIdentification (OSCTXT* pctxt, 
   ASN1T_ITS_VehicleIdentification* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_VehicleIdentification (OSCTXT* pctxt, 
   ASN1T_ITS_VehicleIdentification* pvalue);

EXTERN int asn1JsonEnc_ITS_VehicleIdentification (OSCTXT *pctxt, ASN1T_ITS_VehicleIdentification *pvalue);

EXTERN int asn1JsonDec_ITS_VehicleIdentification (OSCTXT *pctxt, ASN1T_ITS_VehicleIdentification *pvalue);

EXTERN int asn1PrtToStrm_ITS_VehicleIdentification (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_VehicleIdentification* pvalue);

EXTERN ASN1T_ITS_VehicleIdentification* 
   new_ASN1T_ITS_VehicleIdentification (ASN1CType& ccobj);

EXTERN int asn1Init_ITS_VehicleIdentification (
   ASN1T_ITS_VehicleIdentification* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ITS_VehicleIdentification (OSCTXT *pctxt, 
   ASN1T_ITS_VehicleIdentification* pvalue);

/**************************************************************/
/*                                                            */
/*  EnergyStorageType                                         */
/*                                                            */
/**************************************************************/
/*
EnergyStorageType ::= BIT STRING  { hydrogenStorage(0), electricEnergyStorage(1), liquidPropaneGas(2), compressedNaturalGas(3), diesel(4), gasoline(5), ammonia(6) } (SIZE (7))
*/
struct EXTERN ASN1T_ITS_EnergyStorageType {
   OSOCTET data[1];
   // ctors
   ASN1T_ITS_EnergyStorageType ()  {}
   ASN1T_ITS_EnergyStorageType (const OSOCTET* _data) {
      OSCRTLSAFEMEMCPY (data, 1, _data, 1);
   }
} ;

class EXTERN ASN1C_ITS_EnergyStorageType :
public ASN1CBitStr
{
protected:
   ASN1T_ITS_EnergyStorageType& msgData;
public:
   // named bits
   enum { hydrogenStorage = 0, electricEnergyStorage = 1, liquidPropaneGas = 2, compressedNaturalGas = 3, diesel = 4, gasoline = 5, ammonia = 6 };

   /**
    * Control class: ASN1C_ITS_EnergyStorageType
    * Data class:    ASN1T_ITS_EnergyStorageType
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ITS_EnergyStorageType (ASN1T_ITS_EnergyStorageType& data);

   /**
    * Control class: ASN1C_ITS_EnergyStorageType<br/>
    * Data class: ASN1T_ITS_EnergyStorageType<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ITS_EnergyStorageType (OSRTMessageBufferIF& msgBuf
      , ASN1T_ITS_EnergyStorageType& data);

   virtual ~ASN1C_ITS_EnergyStorageType () {}

private:
   ASN1C_ITS_EnergyStorageType& operator= (const ASN1C_ITS_EnergyStorageType&) {return *this;}
} ;

EXTERN int asn1PE_ITS_EnergyStorageType (OSCTXT* pctxt, ASN1T_ITS_EnergyStorageType* pvalue);

EXTERN int asn1PD_ITS_EnergyStorageType (OSCTXT* pctxt, ASN1T_ITS_EnergyStorageType* pvalue);

EXTERN int XmlEnc_ITS_EnergyStorageType (OSCTXT* pctxt, 
   ASN1T_ITS_EnergyStorageType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_EnergyStorageType (OSCTXT* pctxt, 
   ASN1T_ITS_EnergyStorageType* pvalue);

EXTERN int asn1JsonEnc_ITS_EnergyStorageType (OSCTXT *pctxt, ASN1T_ITS_EnergyStorageType *pvalue);

EXTERN int asn1JsonDec_ITS_EnergyStorageType (OSCTXT *pctxt, ASN1T_ITS_EnergyStorageType *pvalue);

EXTERN int asn1PrtToStrm_ITS_EnergyStorageType (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_EnergyStorageType* pvalue);

extern EXTERN struct OSBitMapItem g_ASN1T_ITS_EnergyStorageType_NAMEDBITTAB[8];

EXTERN ASN1T_ITS_EnergyStorageType* 
   new_ASN1T_ITS_EnergyStorageType (ASN1CType& ccobj);

EXTERN int asn1Init_ITS_EnergyStorageType (ASN1T_ITS_EnergyStorageType* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

/**************************************************************/
/*                                                            */
/*  TrafficConditionSubCauseCode                              */
/*                                                            */
/**************************************************************/
/*
TrafficConditionSubCauseCode ::= INTEGER { unavailable(0), increasedVolumeOfTraffic(1), trafficJamSlowlyIncreasing(2), trafficJamIncreasing(3), trafficJamStronglyIncreasing(4), trafficStationary(5), trafficJamSlightlyDecreasing(6), trafficJamDecreasing(7), trafficJamStronglyDecreasing(8) } (0..255)
*/
struct EXTERN ITS_TrafficConditionSubCauseCode {
   enum Root {
      unavailable = 0,
      increasedVolumeOfTraffic = 1,
      trafficJamSlowlyIncreasing = 2,
      trafficJamIncreasing = 3,
      trafficJamStronglyIncreasing = 4,
      trafficStationary = 5,
      trafficJamSlightlyDecreasing = 6,
      trafficJamDecreasing = 7,
      trafficJamStronglyDecreasing = 8
   } ;
} ;

typedef OSUINT8 ASN1T_ITS_TrafficConditionSubCauseCode;

class EXTERN ASN1C_ITS_TrafficConditionSubCauseCode :
public ASN1CType
{
protected:
   ASN1T_ITS_TrafficConditionSubCauseCode& msgData;
public:
   /**
    * Control class: ASN1C_ITS_TrafficConditionSubCauseCode
    * Data class:    ASN1T_ITS_TrafficConditionSubCauseCode
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ITS_TrafficConditionSubCauseCode
       (ASN1T_ITS_TrafficConditionSubCauseCode& data);

   /**
    * Control class: ASN1C_ITS_TrafficConditionSubCauseCode<br/>
    * Data class: ASN1T_ITS_TrafficConditionSubCauseCode<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ITS_TrafficConditionSubCauseCode (OSRTMessageBufferIF& msgBuf
      , ASN1T_ITS_TrafficConditionSubCauseCode& data);

   virtual ~ASN1C_ITS_TrafficConditionSubCauseCode () {}

   /**
    * Data class: ASN1T_ITS_TrafficConditionSubCauseCode<br/>
    *
    * Gets a mutable instance of the data class.
    *
    * @return Reference to a mutable instance of data class ASN1T_ITS_TrafficConditionSubCauseCode.
    */
   inline ASN1T_ITS_TrafficConditionSubCauseCode& getData () { return msgData; }

   /**
    * Data class: ASN1T_ITS_TrafficConditionSubCauseCode<br/>
    * Gets a non-mutable instance of the data class.
    *
    * @return Reference to a non-mutable instance of data class ASN1T_ITS_TrafficConditionSubCauseCode.
    */
   inline const ASN1T_ITS_TrafficConditionSubCauseCode& getData () const { return msgData; }

   // standard encode/decode methods (defined in ASN1CType base class):
   // int Encode ();
   // int Decode ();

   // stream encode/decode methods:
   /**
    * Encodes into a specified encode buffer.
    *
    * @param msgBuf Reference to an encode buffer.
    * @return A status value (0 indicates success).
    */
   int EncodeTo (OSRTMessageBufferIF& msgBuf);

   /**
    * Decodes from a specified decode buffer.
    *
    * @param msgBuf Reference to a decode buffer.
    * @return A status value (0 indicates success).
    */
   int DecodeFrom (OSRTMessageBufferIF& msgBuf, OSBOOL free = FALSE);

   /**
    * Writes the contents of the object to a user-defined stream using
    * a user-defined print callback function.  See the documentation for
    * the setPrintStream() method.
    *
    * @param name A name for the object's contents.  If not specified,
    *             TrafficConditionSubCauseCode will be used for the name.
    * @return Always returns 0.
    */
   int toStream (const char* name = "TrafficConditionSubCauseCode");
   /**
    * Declares a print stream handler function.
    *
    * @param strmCallback Pointer to a function defined according to the
    *                     rtxPrintCallback signature.
    * @return A status value (0 indicates success).
    */
   int setPrintStream (rtxPrintCallback strmCallback, void* pStrmInfo);
private:
   ASN1C_ITS_TrafficConditionSubCauseCode& operator= (const ASN1C_ITS_TrafficConditionSubCauseCode&) {return *this;}
} ;

EXTERN int asn1PE_ITS_TrafficConditionSubCauseCode (OSCTXT* pctxt, ASN1T_ITS_TrafficConditionSubCauseCode value);

EXTERN int asn1PD_ITS_TrafficConditionSubCauseCode (OSCTXT* pctxt, ASN1T_ITS_TrafficConditionSubCauseCode* pvalue);

EXTERN int XmlEnc_ITS_TrafficConditionSubCauseCode (OSCTXT* pctxt, 
   ASN1T_ITS_TrafficConditionSubCauseCode value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_TrafficConditionSubCauseCode (OSCTXT* pctxt, 
   ASN1T_ITS_TrafficConditionSubCauseCode* pvalue);

EXTERN int asn1JsonEnc_ITS_TrafficConditionSubCauseCode (OSCTXT *pctxt, ASN1T_ITS_TrafficConditionSubCauseCode *pvalue);

EXTERN int asn1JsonDec_ITS_TrafficConditionSubCauseCode (OSCTXT *pctxt, ASN1T_ITS_TrafficConditionSubCauseCode *pvalue);

EXTERN int asn1PrtToStrm_ITS_TrafficConditionSubCauseCode (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_TrafficConditionSubCauseCode* pvalue);

EXTERN ASN1T_ITS_TrafficConditionSubCauseCode* 
   new_ASN1T_ITS_TrafficConditionSubCauseCode (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  AccidentSubCauseCode                                      */
/*                                                            */
/**************************************************************/
/*
AccidentSubCauseCode ::= INTEGER { unavailable(0), multiVehicleAccident(1), heavyAccident(2), accidentInvolvingLorry(3), accidentInvolvingBus(4), accidentInvolvingHazardousMaterials(5), accidentOnOppositeLane(6), unsecuredAccident(7), assistanceRequested(8) } (0..255)
*/
struct EXTERN ITS_AccidentSubCauseCode {
   enum Root {
      unavailable = 0,
      multiVehicleAccident = 1,
      heavyAccident = 2,
      accidentInvolvingLorry = 3,
      accidentInvolvingBus = 4,
      accidentInvolvingHazardousMaterials = 5,
      accidentOnOppositeLane = 6,
      unsecuredAccident = 7,
      assistanceRequested = 8
   } ;
} ;

typedef OSUINT8 ASN1T_ITS_AccidentSubCauseCode;

class EXTERN ASN1C_ITS_AccidentSubCauseCode :
public ASN1CType
{
protected:
   ASN1T_ITS_AccidentSubCauseCode& msgData;
public:
   /**
    * Control class: ASN1C_ITS_AccidentSubCauseCode
    * Data class:    ASN1T_ITS_AccidentSubCauseCode
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ITS_AccidentSubCauseCode (ASN1T_ITS_AccidentSubCauseCode& data);

   /**
    * Control class: ASN1C_ITS_AccidentSubCauseCode<br/>
    * Data class: ASN1T_ITS_AccidentSubCauseCode<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ITS_AccidentSubCauseCode (OSRTMessageBufferIF& msgBuf
      , ASN1T_ITS_AccidentSubCauseCode& data);

   virtual ~ASN1C_ITS_AccidentSubCauseCode () {}

   /**
    * Data class: ASN1T_ITS_AccidentSubCauseCode<br/>
    *
    * Gets a mutable instance of the data class.
    *
    * @return Reference to a mutable instance of data class ASN1T_ITS_AccidentSubCauseCode.
    */
   inline ASN1T_ITS_AccidentSubCauseCode& getData () { return msgData; }

   /**
    * Data class: ASN1T_ITS_AccidentSubCauseCode<br/>
    * Gets a non-mutable instance of the data class.
    *
    * @return Reference to a non-mutable instance of data class ASN1T_ITS_AccidentSubCauseCode.
    */
   inline const ASN1T_ITS_AccidentSubCauseCode& getData () const { return msgData; }

   // standard encode/decode methods (defined in ASN1CType base class):
   // int Encode ();
   // int Decode ();

   // stream encode/decode methods:
   /**
    * Encodes into a specified encode buffer.
    *
    * @param msgBuf Reference to an encode buffer.
    * @return A status value (0 indicates success).
    */
   int EncodeTo (OSRTMessageBufferIF& msgBuf);

   /**
    * Decodes from a specified decode buffer.
    *
    * @param msgBuf Reference to a decode buffer.
    * @return A status value (0 indicates success).
    */
   int DecodeFrom (OSRTMessageBufferIF& msgBuf, OSBOOL free = FALSE);

   /**
    * Writes the contents of the object to a user-defined stream using
    * a user-defined print callback function.  See the documentation for
    * the setPrintStream() method.
    *
    * @param name A name for the object's contents.  If not specified,
    *             AccidentSubCauseCode will be used for the name.
    * @return Always returns 0.
    */
   int toStream (const char* name = "AccidentSubCauseCode");
   /**
    * Declares a print stream handler function.
    *
    * @param strmCallback Pointer to a function defined according to the
    *                     rtxPrintCallback signature.
    * @return A status value (0 indicates success).
    */
   int setPrintStream (rtxPrintCallback strmCallback, void* pStrmInfo);
private:
   ASN1C_ITS_AccidentSubCauseCode& operator= (const ASN1C_ITS_AccidentSubCauseCode&) {return *this;}
} ;

EXTERN int asn1PE_ITS_AccidentSubCauseCode (OSCTXT* pctxt, ASN1T_ITS_AccidentSubCauseCode value);

EXTERN int asn1PD_ITS_AccidentSubCauseCode (OSCTXT* pctxt, ASN1T_ITS_AccidentSubCauseCode* pvalue);

EXTERN int XmlEnc_ITS_AccidentSubCauseCode (OSCTXT* pctxt, 
   ASN1T_ITS_AccidentSubCauseCode value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_AccidentSubCauseCode (OSCTXT* pctxt, 
   ASN1T_ITS_AccidentSubCauseCode* pvalue);

EXTERN int asn1JsonEnc_ITS_AccidentSubCauseCode (OSCTXT *pctxt, ASN1T_ITS_AccidentSubCauseCode *pvalue);

EXTERN int asn1JsonDec_ITS_AccidentSubCauseCode (OSCTXT *pctxt, ASN1T_ITS_AccidentSubCauseCode *pvalue);

EXTERN int asn1PrtToStrm_ITS_AccidentSubCauseCode (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_AccidentSubCauseCode* pvalue);

EXTERN ASN1T_ITS_AccidentSubCauseCode* 
   new_ASN1T_ITS_AccidentSubCauseCode (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  HumanPresenceOnTheRoadSubCauseCode                        */
/*                                                            */
/**************************************************************/
/*
HumanPresenceOnTheRoadSubCauseCode ::= INTEGER { unavailable(0), childrenOnRoadway(1), cyclistOnRoadway(2), motorcyclistOnRoadway(3) } (0..255)
*/
struct EXTERN ITS_HumanPresenceOnTheRoadSubCauseCode {
   enum Root {
      unavailable = 0,
      childrenOnRoadway = 1,
      cyclistOnRoadway = 2,
      motorcyclistOnRoadway = 3
   } ;
} ;

typedef OSUINT8 ASN1T_ITS_HumanPresenceOnTheRoadSubCauseCode;

class EXTERN ASN1C_ITS_HumanPresenceOnTheRoadSubCauseCode :
public ASN1CType
{
protected:
   ASN1T_ITS_HumanPresenceOnTheRoadSubCauseCode& msgData;
public:
   /**
    * Control class: ASN1C_ITS_HumanPresenceOnTheRoadSubCauseCode
    * Data class:    ASN1T_ITS_HumanPresenceOnTheRoadSubCauseCode
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ITS_HumanPresenceOnTheRoadSubCauseCode
       (ASN1T_ITS_HumanPresenceOnTheRoadSubCauseCode& data);

   /**
    * Control class: ASN1C_ITS_HumanPresenceOnTheRoadSubCauseCode<br/>
    * Data class: ASN1T_ITS_HumanPresenceOnTheRoadSubCauseCode<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ITS_HumanPresenceOnTheRoadSubCauseCode (OSRTMessageBufferIF& msgBuf
      , ASN1T_ITS_HumanPresenceOnTheRoadSubCauseCode& data);

   virtual ~ASN1C_ITS_HumanPresenceOnTheRoadSubCauseCode () {}

   /**
    * Data class: ASN1T_ITS_HumanPresenceOnTheRoadSubCauseCode<br/>
    *
    * Gets a mutable instance of the data class.
    *
    * @return Reference to a mutable instance of data class ASN1T_ITS_HumanPresenceOnTheRoadSubCauseCode.
    */
   inline ASN1T_ITS_HumanPresenceOnTheRoadSubCauseCode& getData () { return msgData; }

   /**
    * Data class: ASN1T_ITS_HumanPresenceOnTheRoadSubCauseCode<br/>
    * Gets a non-mutable instance of the data class.
    *
    * @return Reference to a non-mutable instance of data class ASN1T_ITS_HumanPresenceOnTheRoadSubCauseCode.
    */
   inline const ASN1T_ITS_HumanPresenceOnTheRoadSubCauseCode& getData () const { return msgData; }

   // standard encode/decode methods (defined in ASN1CType base class):
   // int Encode ();
   // int Decode ();

   // stream encode/decode methods:
   /**
    * Encodes into a specified encode buffer.
    *
    * @param msgBuf Reference to an encode buffer.
    * @return A status value (0 indicates success).
    */
   int EncodeTo (OSRTMessageBufferIF& msgBuf);

   /**
    * Decodes from a specified decode buffer.
    *
    * @param msgBuf Reference to a decode buffer.
    * @return A status value (0 indicates success).
    */
   int DecodeFrom (OSRTMessageBufferIF& msgBuf, OSBOOL free = FALSE);

   /**
    * Writes the contents of the object to a user-defined stream using
    * a user-defined print callback function.  See the documentation for
    * the setPrintStream() method.
    *
    * @param name A name for the object's contents.  If not specified,
    *             HumanPresenceOnTheRoadSubCauseCode will be used for the name.
    * @return Always returns 0.
    */
   int toStream (const char* name = "HumanPresenceOnTheRoadSubCauseCode");
   /**
    * Declares a print stream handler function.
    *
    * @param strmCallback Pointer to a function defined according to the
    *                     rtxPrintCallback signature.
    * @return A status value (0 indicates success).
    */
   int setPrintStream (rtxPrintCallback strmCallback, void* pStrmInfo);
private:
   ASN1C_ITS_HumanPresenceOnTheRoadSubCauseCode& operator= (const ASN1C_ITS_HumanPresenceOnTheRoadSubCauseCode&) {return *this;}
} ;

EXTERN int asn1PE_ITS_HumanPresenceOnTheRoadSubCauseCode (OSCTXT* pctxt, ASN1T_ITS_HumanPresenceOnTheRoadSubCauseCode value);

EXTERN int asn1PD_ITS_HumanPresenceOnTheRoadSubCauseCode (OSCTXT* pctxt, ASN1T_ITS_HumanPresenceOnTheRoadSubCauseCode* pvalue);

EXTERN int XmlEnc_ITS_HumanPresenceOnTheRoadSubCauseCode (OSCTXT* pctxt, 
   ASN1T_ITS_HumanPresenceOnTheRoadSubCauseCode value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_HumanPresenceOnTheRoadSubCauseCode (OSCTXT* pctxt, 
   ASN1T_ITS_HumanPresenceOnTheRoadSubCauseCode* pvalue);

EXTERN int asn1JsonEnc_ITS_HumanPresenceOnTheRoadSubCauseCode (OSCTXT *pctxt, ASN1T_ITS_HumanPresenceOnTheRoadSubCauseCode *pvalue);

EXTERN int asn1JsonDec_ITS_HumanPresenceOnTheRoadSubCauseCode (OSCTXT *pctxt, ASN1T_ITS_HumanPresenceOnTheRoadSubCauseCode *pvalue);

EXTERN int asn1PrtToStrm_ITS_HumanPresenceOnTheRoadSubCauseCode (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_HumanPresenceOnTheRoadSubCauseCode* pvalue);

EXTERN ASN1T_ITS_HumanPresenceOnTheRoadSubCauseCode* 
   new_ASN1T_ITS_HumanPresenceOnTheRoadSubCauseCode (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  WrongWayDrivingSubCauseCode                               */
/*                                                            */
/**************************************************************/
/*
WrongWayDrivingSubCauseCode ::= INTEGER { unavailable(0), wrongLane(1), wrongDirection(2) } (0..255)
*/
struct EXTERN ITS_WrongWayDrivingSubCauseCode {
   enum Root {
      unavailable = 0,
      wrongLane = 1,
      wrongDirection = 2
   } ;
} ;

typedef OSUINT8 ASN1T_ITS_WrongWayDrivingSubCauseCode;

class EXTERN ASN1C_ITS_WrongWayDrivingSubCauseCode :
public ASN1CType
{
protected:
   ASN1T_ITS_WrongWayDrivingSubCauseCode& msgData;
public:
   /**
    * Control class: ASN1C_ITS_WrongWayDrivingSubCauseCode
    * Data class:    ASN1T_ITS_WrongWayDrivingSubCauseCode
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ITS_WrongWayDrivingSubCauseCode
       (ASN1T_ITS_WrongWayDrivingSubCauseCode& data);

   /**
    * Control class: ASN1C_ITS_WrongWayDrivingSubCauseCode<br/>
    * Data class: ASN1T_ITS_WrongWayDrivingSubCauseCode<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ITS_WrongWayDrivingSubCauseCode (OSRTMessageBufferIF& msgBuf
      , ASN1T_ITS_WrongWayDrivingSubCauseCode& data);

   virtual ~ASN1C_ITS_WrongWayDrivingSubCauseCode () {}

   /**
    * Data class: ASN1T_ITS_WrongWayDrivingSubCauseCode<br/>
    *
    * Gets a mutable instance of the data class.
    *
    * @return Reference to a mutable instance of data class ASN1T_ITS_WrongWayDrivingSubCauseCode.
    */
   inline ASN1T_ITS_WrongWayDrivingSubCauseCode& getData () { return msgData; }

   /**
    * Data class: ASN1T_ITS_WrongWayDrivingSubCauseCode<br/>
    * Gets a non-mutable instance of the data class.
    *
    * @return Reference to a non-mutable instance of data class ASN1T_ITS_WrongWayDrivingSubCauseCode.
    */
   inline const ASN1T_ITS_WrongWayDrivingSubCauseCode& getData () const { return msgData; }

   // standard encode/decode methods (defined in ASN1CType base class):
   // int Encode ();
   // int Decode ();

   // stream encode/decode methods:
   /**
    * Encodes into a specified encode buffer.
    *
    * @param msgBuf Reference to an encode buffer.
    * @return A status value (0 indicates success).
    */
   int EncodeTo (OSRTMessageBufferIF& msgBuf);

   /**
    * Decodes from a specified decode buffer.
    *
    * @param msgBuf Reference to a decode buffer.
    * @return A status value (0 indicates success).
    */
   int DecodeFrom (OSRTMessageBufferIF& msgBuf, OSBOOL free = FALSE);

   /**
    * Writes the contents of the object to a user-defined stream using
    * a user-defined print callback function.  See the documentation for
    * the setPrintStream() method.
    *
    * @param name A name for the object's contents.  If not specified,
    *             WrongWayDrivingSubCauseCode will be used for the name.
    * @return Always returns 0.
    */
   int toStream (const char* name = "WrongWayDrivingSubCauseCode");
   /**
    * Declares a print stream handler function.
    *
    * @param strmCallback Pointer to a function defined according to the
    *                     rtxPrintCallback signature.
    * @return A status value (0 indicates success).
    */
   int setPrintStream (rtxPrintCallback strmCallback, void* pStrmInfo);
private:
   ASN1C_ITS_WrongWayDrivingSubCauseCode& operator= (const ASN1C_ITS_WrongWayDrivingSubCauseCode&) {return *this;}
} ;

EXTERN int asn1PE_ITS_WrongWayDrivingSubCauseCode (OSCTXT* pctxt, ASN1T_ITS_WrongWayDrivingSubCauseCode value);

EXTERN int asn1PD_ITS_WrongWayDrivingSubCauseCode (OSCTXT* pctxt, ASN1T_ITS_WrongWayDrivingSubCauseCode* pvalue);

EXTERN int XmlEnc_ITS_WrongWayDrivingSubCauseCode (OSCTXT* pctxt, 
   ASN1T_ITS_WrongWayDrivingSubCauseCode value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_WrongWayDrivingSubCauseCode (OSCTXT* pctxt, 
   ASN1T_ITS_WrongWayDrivingSubCauseCode* pvalue);

EXTERN int asn1JsonEnc_ITS_WrongWayDrivingSubCauseCode (OSCTXT *pctxt, ASN1T_ITS_WrongWayDrivingSubCauseCode *pvalue);

EXTERN int asn1JsonDec_ITS_WrongWayDrivingSubCauseCode (OSCTXT *pctxt, ASN1T_ITS_WrongWayDrivingSubCauseCode *pvalue);

EXTERN int asn1PrtToStrm_ITS_WrongWayDrivingSubCauseCode (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_WrongWayDrivingSubCauseCode* pvalue);

EXTERN ASN1T_ITS_WrongWayDrivingSubCauseCode* 
   new_ASN1T_ITS_WrongWayDrivingSubCauseCode (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  AdverseWeatherCondition_ExtremeWeatherConditionSubCauseC  */
/*                                                            */
/**************************************************************/
/*
AdverseWeatherCondition-ExtremeWeatherConditionSubCauseCode ::= INTEGER { unavailable(0), strongWinds(1), damagingHail(2), hurricane(3), thunderstorm(4), tornado(5), blizzard(6) } (0..255)
*/
struct EXTERN ITS_AdverseWeatherCondition_ExtremeWeatherConditionSubCauseCode {
   enum Root {
      unavailable = 0,
      strongWinds = 1,
      damagingHail = 2,
      hurricane = 3,
      thunderstorm = 4,
      tornado = 5,
      blizzard = 6
   } ;
} ;

typedef OSUINT8 ASN1T_ITS_AdverseWeatherCondition_ExtremeWeatherConditionSubCauseCode;

class EXTERN ASN1C_ITS_AdverseWeatherCondition_ExtremeWeatherConditionSubCauseCode :
public ASN1CType
{
protected:
   ASN1T_ITS_AdverseWeatherCondition_ExtremeWeatherConditionSubCauseCode& msgData;
public:
   /**
    * Control class: ASN1C_ITS_AdverseWeatherCondition_ExtremeWeatherConditionSubCauseCode
    * Data class:    ASN1T_ITS_AdverseWeatherCondition_ExtremeWeatherConditionSubCauseCode
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ITS_AdverseWeatherCondition_ExtremeWeatherConditionSubCauseCode
       (ASN1T_ITS_AdverseWeatherCondition_ExtremeWeatherConditionSubCauseCode& data);

   /**
    * Control class: ASN1C_ITS_AdverseWeatherCondition_ExtremeWeatherConditionSubCauseCode<br/>
    * Data class: ASN1T_ITS_AdverseWeatherCondition_ExtremeWeatherConditionSubCauseCode<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ITS_AdverseWeatherCondition_ExtremeWeatherConditionSubCauseCode (
      OSRTMessageBufferIF& msgBuf
      , ASN1T_ITS_AdverseWeatherCondition_ExtremeWeatherConditionSubCauseCode& data
      );

   virtual ~ASN1C_ITS_AdverseWeatherCondition_ExtremeWeatherConditionSubCauseCode () {}

   /**
    * Data class: ASN1T_ITS_AdverseWeatherCondition_ExtremeWeatherConditionSubCauseCode<br/>
    *
    * Gets a mutable instance of the data class.
    *
    * @return Reference to a mutable instance of data class ASN1T_ITS_AdverseWeatherCondition_ExtremeWeatherConditionSubCauseCode.
    */
   inline ASN1T_ITS_AdverseWeatherCondition_ExtremeWeatherConditionSubCauseCode& getData () { return msgData; }

   /**
    * Data class: ASN1T_ITS_AdverseWeatherCondition_ExtremeWeatherConditionSubCauseCode<br/>
    * Gets a non-mutable instance of the data class.
    *
    * @return Reference to a non-mutable instance of data class ASN1T_ITS_AdverseWeatherCondition_ExtremeWeatherConditionSubCauseCode.
    */
   inline const ASN1T_ITS_AdverseWeatherCondition_ExtremeWeatherConditionSubCauseCode& getData () const { return msgData; }

   // standard encode/decode methods (defined in ASN1CType base class):
   // int Encode ();
   // int Decode ();

   // stream encode/decode methods:
   /**
    * Encodes into a specified encode buffer.
    *
    * @param msgBuf Reference to an encode buffer.
    * @return A status value (0 indicates success).
    */
   int EncodeTo (OSRTMessageBufferIF& msgBuf);

   /**
    * Decodes from a specified decode buffer.
    *
    * @param msgBuf Reference to a decode buffer.
    * @return A status value (0 indicates success).
    */
   int DecodeFrom (OSRTMessageBufferIF& msgBuf, OSBOOL free = FALSE);

   /**
    * Writes the contents of the object to a user-defined stream using
    * a user-defined print callback function.  See the documentation for
    * the setPrintStream() method.
    *
    * @param name A name for the object's contents.  If not specified,
    *             AdverseWeatherCondition_ExtremeWeatherConditionSubCauseCode will be used for the name.
    * @return Always returns 0.
    */
   int toStream (const char* name = "AdverseWeatherCondition_ExtremeWeatherConditionSubCauseCode");
   /**
    * Declares a print stream handler function.
    *
    * @param strmCallback Pointer to a function defined according to the
    *                     rtxPrintCallback signature.
    * @return A status value (0 indicates success).
    */
   int setPrintStream (rtxPrintCallback strmCallback, void* pStrmInfo);
private:
   ASN1C_ITS_AdverseWeatherCondition_ExtremeWeatherConditionSubCauseCode& operator= (const ASN1C_ITS_AdverseWeatherCondition_ExtremeWeatherConditionSubCauseCode&) {return *this;}
} ;

EXTERN int asn1PE_ITS_AdverseWeatherCondition_ExtremeWeatherConditionSubCauseCode (OSCTXT* pctxt, ASN1T_ITS_AdverseWeatherCondition_ExtremeWeatherConditionSubCauseCode value);

EXTERN int asn1PD_ITS_AdverseWeatherCondition_ExtremeWeatherConditionSubCauseCode (OSCTXT* pctxt, ASN1T_ITS_AdverseWeatherCondition_ExtremeWeatherConditionSubCauseCode* pvalue);

EXTERN 
   int XmlEnc_ITS_AdverseWeatherCondition_ExtremeWeatherConditionSubCauseCode 
   (OSCTXT* pctxt, 
   ASN1T_ITS_AdverseWeatherCondition_ExtremeWeatherConditionSubCauseCode value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN 
   int XmlDec_ITS_AdverseWeatherCondition_ExtremeWeatherConditionSubCauseCode 
   (OSCTXT* pctxt, 
   ASN1T_ITS_AdverseWeatherCondition_ExtremeWeatherConditionSubCauseCode* pvalue
   );

EXTERN int asn1JsonEnc_ITS_AdverseWeatherCondition_ExtremeWeatherConditionSubCauseCode (OSCTXT *pctxt, ASN1T_ITS_AdverseWeatherCondition_ExtremeWeatherConditionSubCauseCode *pvalue);

EXTERN int asn1JsonDec_ITS_AdverseWeatherCondition_ExtremeWeatherConditionSubCauseCode (OSCTXT *pctxt, ASN1T_ITS_AdverseWeatherCondition_ExtremeWeatherConditionSubCauseCode *pvalue);

EXTERN int asn1PrtToStrm_ITS_AdverseWeatherCondition_ExtremeWeatherConditionSubCauseCode (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_AdverseWeatherCondition_ExtremeWeatherConditionSubCauseCode* pvalue);

EXTERN ASN1T_ITS_AdverseWeatherCondition_ExtremeWeatherConditionSubCauseCode* 
   new_ASN1T_ITS_AdverseWeatherCondition_ExtremeWeatherConditionSubCauseCode (ASN1CType& ccobj)
   ;

/**************************************************************/
/*                                                            */
/*  AdverseWeatherCondition_AdhesionSubCauseCode              */
/*                                                            */
/**************************************************************/
/*
AdverseWeatherCondition-AdhesionSubCauseCode ::= INTEGER { unavailable(0), heavyFrostOnRoad(1), fuelOnRoad(2), mudOnRoad(3), snowOnRoad(4), iceOnRoad(5), blackIceOnRoad(6), oilOnRoad(7), looseChippings(8), instantBlackIce(9), roadsSalted(10) } (0..255)
*/
struct EXTERN ITS_AdverseWeatherCondition_AdhesionSubCauseCode {
   enum Root {
      unavailable = 0,
      heavyFrostOnRoad = 1,
      fuelOnRoad = 2,
      mudOnRoad = 3,
      snowOnRoad = 4,
      iceOnRoad = 5,
      blackIceOnRoad = 6,
      oilOnRoad = 7,
      looseChippings = 8,
      instantBlackIce = 9,
      roadsSalted = 10
   } ;
} ;

typedef OSUINT8 ASN1T_ITS_AdverseWeatherCondition_AdhesionSubCauseCode;

class EXTERN ASN1C_ITS_AdverseWeatherCondition_AdhesionSubCauseCode :
public ASN1CType
{
protected:
   ASN1T_ITS_AdverseWeatherCondition_AdhesionSubCauseCode& msgData;
public:
   /**
    * Control class: ASN1C_ITS_AdverseWeatherCondition_AdhesionSubCauseCode
    * Data class:    ASN1T_ITS_AdverseWeatherCondition_AdhesionSubCauseCode
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ITS_AdverseWeatherCondition_AdhesionSubCauseCode
       (ASN1T_ITS_AdverseWeatherCondition_AdhesionSubCauseCode& data);

   /**
    * Control class: ASN1C_ITS_AdverseWeatherCondition_AdhesionSubCauseCode<br/>
    * Data class: ASN1T_ITS_AdverseWeatherCondition_AdhesionSubCauseCode<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ITS_AdverseWeatherCondition_AdhesionSubCauseCode (
      OSRTMessageBufferIF& msgBuf
      , ASN1T_ITS_AdverseWeatherCondition_AdhesionSubCauseCode& data);

   virtual ~ASN1C_ITS_AdverseWeatherCondition_AdhesionSubCauseCode () {}

   /**
    * Data class: ASN1T_ITS_AdverseWeatherCondition_AdhesionSubCauseCode<br/>
    *
    * Gets a mutable instance of the data class.
    *
    * @return Reference to a mutable instance of data class ASN1T_ITS_AdverseWeatherCondition_AdhesionSubCauseCode.
    */
   inline ASN1T_ITS_AdverseWeatherCondition_AdhesionSubCauseCode& getData () { return msgData; }

   /**
    * Data class: ASN1T_ITS_AdverseWeatherCondition_AdhesionSubCauseCode<br/>
    * Gets a non-mutable instance of the data class.
    *
    * @return Reference to a non-mutable instance of data class ASN1T_ITS_AdverseWeatherCondition_AdhesionSubCauseCode.
    */
   inline const ASN1T_ITS_AdverseWeatherCondition_AdhesionSubCauseCode& getData () const { return msgData; }

   // standard encode/decode methods (defined in ASN1CType base class):
   // int Encode ();
   // int Decode ();

   // stream encode/decode methods:
   /**
    * Encodes into a specified encode buffer.
    *
    * @param msgBuf Reference to an encode buffer.
    * @return A status value (0 indicates success).
    */
   int EncodeTo (OSRTMessageBufferIF& msgBuf);

   /**
    * Decodes from a specified decode buffer.
    *
    * @param msgBuf Reference to a decode buffer.
    * @return A status value (0 indicates success).
    */
   int DecodeFrom (OSRTMessageBufferIF& msgBuf, OSBOOL free = FALSE);

   /**
    * Writes the contents of the object to a user-defined stream using
    * a user-defined print callback function.  See the documentation for
    * the setPrintStream() method.
    *
    * @param name A name for the object's contents.  If not specified,
    *             AdverseWeatherCondition_AdhesionSubCauseCode will be used for the name.
    * @return Always returns 0.
    */
   int toStream (const char* name = "AdverseWeatherCondition_AdhesionSubCauseCode");
   /**
    * Declares a print stream handler function.
    *
    * @param strmCallback Pointer to a function defined according to the
    *                     rtxPrintCallback signature.
    * @return A status value (0 indicates success).
    */
   int setPrintStream (rtxPrintCallback strmCallback, void* pStrmInfo);
private:
   ASN1C_ITS_AdverseWeatherCondition_AdhesionSubCauseCode& operator= (const ASN1C_ITS_AdverseWeatherCondition_AdhesionSubCauseCode&) {return *this;}
} ;

EXTERN int asn1PE_ITS_AdverseWeatherCondition_AdhesionSubCauseCode (OSCTXT* pctxt, ASN1T_ITS_AdverseWeatherCondition_AdhesionSubCauseCode value);

EXTERN int asn1PD_ITS_AdverseWeatherCondition_AdhesionSubCauseCode (OSCTXT* pctxt, ASN1T_ITS_AdverseWeatherCondition_AdhesionSubCauseCode* pvalue);

EXTERN int XmlEnc_ITS_AdverseWeatherCondition_AdhesionSubCauseCode 
   (OSCTXT* pctxt, 
   ASN1T_ITS_AdverseWeatherCondition_AdhesionSubCauseCode value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_AdverseWeatherCondition_AdhesionSubCauseCode 
   (OSCTXT* pctxt, 
   ASN1T_ITS_AdverseWeatherCondition_AdhesionSubCauseCode* pvalue);

EXTERN int asn1JsonEnc_ITS_AdverseWeatherCondition_AdhesionSubCauseCode (OSCTXT *pctxt, ASN1T_ITS_AdverseWeatherCondition_AdhesionSubCauseCode *pvalue);

EXTERN int asn1JsonDec_ITS_AdverseWeatherCondition_AdhesionSubCauseCode (OSCTXT *pctxt, ASN1T_ITS_AdverseWeatherCondition_AdhesionSubCauseCode *pvalue);

EXTERN int asn1PrtToStrm_ITS_AdverseWeatherCondition_AdhesionSubCauseCode (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_AdverseWeatherCondition_AdhesionSubCauseCode* pvalue);

EXTERN ASN1T_ITS_AdverseWeatherCondition_AdhesionSubCauseCode* 
   new_ASN1T_ITS_AdverseWeatherCondition_AdhesionSubCauseCode (ASN1CType& ccobj)
   ;

/**************************************************************/
/*                                                            */
/*  AdverseWeatherCondition_VisibilitySubCauseCode            */
/*                                                            */
/**************************************************************/
/*
AdverseWeatherCondition-VisibilitySubCauseCode ::= INTEGER { unavailable(0), fog(1), smoke(2), heavySnowfall(3), heavyRain(4), heavyHail(5), lowSunGlare(6), sandstorms(7), swarmsOfInsects(8) } (0..255)
*/
struct EXTERN ITS_AdverseWeatherCondition_VisibilitySubCauseCode {
   enum Root {
      unavailable = 0,
      fog = 1,
      smoke = 2,
      heavySnowfall = 3,
      heavyRain = 4,
      heavyHail = 5,
      lowSunGlare = 6,
      sandstorms = 7,
      swarmsOfInsects = 8
   } ;
} ;

typedef OSUINT8 ASN1T_ITS_AdverseWeatherCondition_VisibilitySubCauseCode;

class EXTERN ASN1C_ITS_AdverseWeatherCondition_VisibilitySubCauseCode :
public ASN1CType
{
protected:
   ASN1T_ITS_AdverseWeatherCondition_VisibilitySubCauseCode& msgData;
public:
   /**
    * Control class: ASN1C_ITS_AdverseWeatherCondition_VisibilitySubCauseCode
    * Data class:    ASN1T_ITS_AdverseWeatherCondition_VisibilitySubCauseCode
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ITS_AdverseWeatherCondition_VisibilitySubCauseCode
       (ASN1T_ITS_AdverseWeatherCondition_VisibilitySubCauseCode& data);

   /**
    * Control class: ASN1C_ITS_AdverseWeatherCondition_VisibilitySubCauseCode<br/>
    * Data class: ASN1T_ITS_AdverseWeatherCondition_VisibilitySubCauseCode<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ITS_AdverseWeatherCondition_VisibilitySubCauseCode (
      OSRTMessageBufferIF& msgBuf
      , ASN1T_ITS_AdverseWeatherCondition_VisibilitySubCauseCode& data);

   virtual ~ASN1C_ITS_AdverseWeatherCondition_VisibilitySubCauseCode () {}

   /**
    * Data class: ASN1T_ITS_AdverseWeatherCondition_VisibilitySubCauseCode<br/>
    *
    * Gets a mutable instance of the data class.
    *
    * @return Reference to a mutable instance of data class ASN1T_ITS_AdverseWeatherCondition_VisibilitySubCauseCode.
    */
   inline ASN1T_ITS_AdverseWeatherCondition_VisibilitySubCauseCode& getData () { return msgData; }

   /**
    * Data class: ASN1T_ITS_AdverseWeatherCondition_VisibilitySubCauseCode<br/>
    * Gets a non-mutable instance of the data class.
    *
    * @return Reference to a non-mutable instance of data class ASN1T_ITS_AdverseWeatherCondition_VisibilitySubCauseCode.
    */
   inline const ASN1T_ITS_AdverseWeatherCondition_VisibilitySubCauseCode& getData () const { return msgData; }

   // standard encode/decode methods (defined in ASN1CType base class):
   // int Encode ();
   // int Decode ();

   // stream encode/decode methods:
   /**
    * Encodes into a specified encode buffer.
    *
    * @param msgBuf Reference to an encode buffer.
    * @return A status value (0 indicates success).
    */
   int EncodeTo (OSRTMessageBufferIF& msgBuf);

   /**
    * Decodes from a specified decode buffer.
    *
    * @param msgBuf Reference to a decode buffer.
    * @return A status value (0 indicates success).
    */
   int DecodeFrom (OSRTMessageBufferIF& msgBuf, OSBOOL free = FALSE);

   /**
    * Writes the contents of the object to a user-defined stream using
    * a user-defined print callback function.  See the documentation for
    * the setPrintStream() method.
    *
    * @param name A name for the object's contents.  If not specified,
    *             AdverseWeatherCondition_VisibilitySubCauseCode will be used for the name.
    * @return Always returns 0.
    */
   int toStream (const char* name = "AdverseWeatherCondition_VisibilitySubCauseCode");
   /**
    * Declares a print stream handler function.
    *
    * @param strmCallback Pointer to a function defined according to the
    *                     rtxPrintCallback signature.
    * @return A status value (0 indicates success).
    */
   int setPrintStream (rtxPrintCallback strmCallback, void* pStrmInfo);
private:
   ASN1C_ITS_AdverseWeatherCondition_VisibilitySubCauseCode& operator= (const ASN1C_ITS_AdverseWeatherCondition_VisibilitySubCauseCode&) {return *this;}
} ;

EXTERN int asn1PE_ITS_AdverseWeatherCondition_VisibilitySubCauseCode (OSCTXT* pctxt, ASN1T_ITS_AdverseWeatherCondition_VisibilitySubCauseCode value);

EXTERN int asn1PD_ITS_AdverseWeatherCondition_VisibilitySubCauseCode (OSCTXT* pctxt, ASN1T_ITS_AdverseWeatherCondition_VisibilitySubCauseCode* pvalue);

EXTERN int XmlEnc_ITS_AdverseWeatherCondition_VisibilitySubCauseCode 
   (OSCTXT* pctxt, 
   ASN1T_ITS_AdverseWeatherCondition_VisibilitySubCauseCode value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_AdverseWeatherCondition_VisibilitySubCauseCode 
   (OSCTXT* pctxt, 
   ASN1T_ITS_AdverseWeatherCondition_VisibilitySubCauseCode* pvalue);

EXTERN int asn1JsonEnc_ITS_AdverseWeatherCondition_VisibilitySubCauseCode (OSCTXT *pctxt, ASN1T_ITS_AdverseWeatherCondition_VisibilitySubCauseCode *pvalue);

EXTERN int asn1JsonDec_ITS_AdverseWeatherCondition_VisibilitySubCauseCode (OSCTXT *pctxt, ASN1T_ITS_AdverseWeatherCondition_VisibilitySubCauseCode *pvalue);

EXTERN int asn1PrtToStrm_ITS_AdverseWeatherCondition_VisibilitySubCauseCode (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_AdverseWeatherCondition_VisibilitySubCauseCode* pvalue);

EXTERN ASN1T_ITS_AdverseWeatherCondition_VisibilitySubCauseCode* 
   new_ASN1T_ITS_AdverseWeatherCondition_VisibilitySubCauseCode (ASN1CType& ccobj)
   ;

/**************************************************************/
/*                                                            */
/*  AdverseWeatherCondition_PrecipitationSubCauseCode         */
/*                                                            */
/**************************************************************/
/*
AdverseWeatherCondition-PrecipitationSubCauseCode ::= INTEGER { unavailable(0), heavyRain(1), heavySnowfall(2), softHail(3) } (0..255)
*/
struct EXTERN ITS_AdverseWeatherCondition_PrecipitationSubCauseCode {
   enum Root {
      unavailable = 0,
      heavyRain = 1,
      heavySnowfall = 2,
      softHail = 3
   } ;
} ;

typedef OSUINT8 ASN1T_ITS_AdverseWeatherCondition_PrecipitationSubCauseCode;

class EXTERN ASN1C_ITS_AdverseWeatherCondition_PrecipitationSubCauseCode :
public ASN1CType
{
protected:
   ASN1T_ITS_AdverseWeatherCondition_PrecipitationSubCauseCode& msgData;
public:
   /**
    * Control class: ASN1C_ITS_AdverseWeatherCondition_PrecipitationSubCauseCode
    * Data class:    ASN1T_ITS_AdverseWeatherCondition_PrecipitationSubCauseCode
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ITS_AdverseWeatherCondition_PrecipitationSubCauseCode
       (ASN1T_ITS_AdverseWeatherCondition_PrecipitationSubCauseCode& data);

   /**
    * Control class: ASN1C_ITS_AdverseWeatherCondition_PrecipitationSubCauseCode<br/>
    * Data class: ASN1T_ITS_AdverseWeatherCondition_PrecipitationSubCauseCode<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ITS_AdverseWeatherCondition_PrecipitationSubCauseCode (
      OSRTMessageBufferIF& msgBuf
      , ASN1T_ITS_AdverseWeatherCondition_PrecipitationSubCauseCode& data);

   virtual ~ASN1C_ITS_AdverseWeatherCondition_PrecipitationSubCauseCode () {}

   /**
    * Data class: ASN1T_ITS_AdverseWeatherCondition_PrecipitationSubCauseCode<br/>
    *
    * Gets a mutable instance of the data class.
    *
    * @return Reference to a mutable instance of data class ASN1T_ITS_AdverseWeatherCondition_PrecipitationSubCauseCode.
    */
   inline ASN1T_ITS_AdverseWeatherCondition_PrecipitationSubCauseCode& getData () { return msgData; }

   /**
    * Data class: ASN1T_ITS_AdverseWeatherCondition_PrecipitationSubCauseCode<br/>
    * Gets a non-mutable instance of the data class.
    *
    * @return Reference to a non-mutable instance of data class ASN1T_ITS_AdverseWeatherCondition_PrecipitationSubCauseCode.
    */
   inline const ASN1T_ITS_AdverseWeatherCondition_PrecipitationSubCauseCode& getData () const { return msgData; }

   // standard encode/decode methods (defined in ASN1CType base class):
   // int Encode ();
   // int Decode ();

   // stream encode/decode methods:
   /**
    * Encodes into a specified encode buffer.
    *
    * @param msgBuf Reference to an encode buffer.
    * @return A status value (0 indicates success).
    */
   int EncodeTo (OSRTMessageBufferIF& msgBuf);

   /**
    * Decodes from a specified decode buffer.
    *
    * @param msgBuf Reference to a decode buffer.
    * @return A status value (0 indicates success).
    */
   int DecodeFrom (OSRTMessageBufferIF& msgBuf, OSBOOL free = FALSE);

   /**
    * Writes the contents of the object to a user-defined stream using
    * a user-defined print callback function.  See the documentation for
    * the setPrintStream() method.
    *
    * @param name A name for the object's contents.  If not specified,
    *             AdverseWeatherCondition_PrecipitationSubCauseCode will be used for the name.
    * @return Always returns 0.
    */
   int toStream (const char* name = "AdverseWeatherCondition_PrecipitationSubCauseCode");
   /**
    * Declares a print stream handler function.
    *
    * @param strmCallback Pointer to a function defined according to the
    *                     rtxPrintCallback signature.
    * @return A status value (0 indicates success).
    */
   int setPrintStream (rtxPrintCallback strmCallback, void* pStrmInfo);
private:
   ASN1C_ITS_AdverseWeatherCondition_PrecipitationSubCauseCode& operator= (const ASN1C_ITS_AdverseWeatherCondition_PrecipitationSubCauseCode&) {return *this;}
} ;

EXTERN int asn1PE_ITS_AdverseWeatherCondition_PrecipitationSubCauseCode (OSCTXT* pctxt, ASN1T_ITS_AdverseWeatherCondition_PrecipitationSubCauseCode value);

EXTERN int asn1PD_ITS_AdverseWeatherCondition_PrecipitationSubCauseCode (OSCTXT* pctxt, ASN1T_ITS_AdverseWeatherCondition_PrecipitationSubCauseCode* pvalue);

EXTERN int XmlEnc_ITS_AdverseWeatherCondition_PrecipitationSubCauseCode 
   (OSCTXT* pctxt, 
   ASN1T_ITS_AdverseWeatherCondition_PrecipitationSubCauseCode value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_AdverseWeatherCondition_PrecipitationSubCauseCode 
   (OSCTXT* pctxt, 
   ASN1T_ITS_AdverseWeatherCondition_PrecipitationSubCauseCode* pvalue);

EXTERN int asn1JsonEnc_ITS_AdverseWeatherCondition_PrecipitationSubCauseCode (OSCTXT *pctxt, ASN1T_ITS_AdverseWeatherCondition_PrecipitationSubCauseCode *pvalue);

EXTERN int asn1JsonDec_ITS_AdverseWeatherCondition_PrecipitationSubCauseCode (OSCTXT *pctxt, ASN1T_ITS_AdverseWeatherCondition_PrecipitationSubCauseCode *pvalue);

EXTERN int asn1PrtToStrm_ITS_AdverseWeatherCondition_PrecipitationSubCauseCode (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_AdverseWeatherCondition_PrecipitationSubCauseCode* pvalue);

EXTERN ASN1T_ITS_AdverseWeatherCondition_PrecipitationSubCauseCode* 
   new_ASN1T_ITS_AdverseWeatherCondition_PrecipitationSubCauseCode (ASN1CType& ccobj)
   ;

/**************************************************************/
/*                                                            */
/*  SlowVehicleSubCauseCode                                   */
/*                                                            */
/**************************************************************/
/*
SlowVehicleSubCauseCode ::= INTEGER { unavailable(0), maintenanceVehicle(1), vehiclesSlowingToLookAtAccident(2), abnormalLoad(3), abnormalWideLoad(4), convoy(5), snowplough(6), deicing(7), saltingVehicles(8) } (0..255)
*/
struct EXTERN ITS_SlowVehicleSubCauseCode {
   enum Root {
      unavailable = 0,
      maintenanceVehicle = 1,
      vehiclesSlowingToLookAtAccident = 2,
      abnormalLoad = 3,
      abnormalWideLoad = 4,
      convoy = 5,
      snowplough = 6,
      deicing = 7,
      saltingVehicles = 8
   } ;
} ;

typedef OSUINT8 ASN1T_ITS_SlowVehicleSubCauseCode;

class EXTERN ASN1C_ITS_SlowVehicleSubCauseCode :
public ASN1CType
{
protected:
   ASN1T_ITS_SlowVehicleSubCauseCode& msgData;
public:
   /**
    * Control class: ASN1C_ITS_SlowVehicleSubCauseCode
    * Data class:    ASN1T_ITS_SlowVehicleSubCauseCode
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ITS_SlowVehicleSubCauseCode (ASN1T_ITS_SlowVehicleSubCauseCode& data);

   /**
    * Control class: ASN1C_ITS_SlowVehicleSubCauseCode<br/>
    * Data class: ASN1T_ITS_SlowVehicleSubCauseCode<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ITS_SlowVehicleSubCauseCode (OSRTMessageBufferIF& msgBuf
      , ASN1T_ITS_SlowVehicleSubCauseCode& data);

   virtual ~ASN1C_ITS_SlowVehicleSubCauseCode () {}

   /**
    * Data class: ASN1T_ITS_SlowVehicleSubCauseCode<br/>
    *
    * Gets a mutable instance of the data class.
    *
    * @return Reference to a mutable instance of data class ASN1T_ITS_SlowVehicleSubCauseCode.
    */
   inline ASN1T_ITS_SlowVehicleSubCauseCode& getData () { return msgData; }

   /**
    * Data class: ASN1T_ITS_SlowVehicleSubCauseCode<br/>
    * Gets a non-mutable instance of the data class.
    *
    * @return Reference to a non-mutable instance of data class ASN1T_ITS_SlowVehicleSubCauseCode.
    */
   inline const ASN1T_ITS_SlowVehicleSubCauseCode& getData () const { return msgData; }

   // standard encode/decode methods (defined in ASN1CType base class):
   // int Encode ();
   // int Decode ();

   // stream encode/decode methods:
   /**
    * Encodes into a specified encode buffer.
    *
    * @param msgBuf Reference to an encode buffer.
    * @return A status value (0 indicates success).
    */
   int EncodeTo (OSRTMessageBufferIF& msgBuf);

   /**
    * Decodes from a specified decode buffer.
    *
    * @param msgBuf Reference to a decode buffer.
    * @return A status value (0 indicates success).
    */
   int DecodeFrom (OSRTMessageBufferIF& msgBuf, OSBOOL free = FALSE);

   /**
    * Writes the contents of the object to a user-defined stream using
    * a user-defined print callback function.  See the documentation for
    * the setPrintStream() method.
    *
    * @param name A name for the object's contents.  If not specified,
    *             SlowVehicleSubCauseCode will be used for the name.
    * @return Always returns 0.
    */
   int toStream (const char* name = "SlowVehicleSubCauseCode");
   /**
    * Declares a print stream handler function.
    *
    * @param strmCallback Pointer to a function defined according to the
    *                     rtxPrintCallback signature.
    * @return A status value (0 indicates success).
    */
   int setPrintStream (rtxPrintCallback strmCallback, void* pStrmInfo);
private:
   ASN1C_ITS_SlowVehicleSubCauseCode& operator= (const ASN1C_ITS_SlowVehicleSubCauseCode&) {return *this;}
} ;

EXTERN int asn1PE_ITS_SlowVehicleSubCauseCode (OSCTXT* pctxt, ASN1T_ITS_SlowVehicleSubCauseCode value);

EXTERN int asn1PD_ITS_SlowVehicleSubCauseCode (OSCTXT* pctxt, ASN1T_ITS_SlowVehicleSubCauseCode* pvalue);

EXTERN int XmlEnc_ITS_SlowVehicleSubCauseCode (OSCTXT* pctxt, 
   ASN1T_ITS_SlowVehicleSubCauseCode value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_SlowVehicleSubCauseCode (OSCTXT* pctxt, 
   ASN1T_ITS_SlowVehicleSubCauseCode* pvalue);

EXTERN int asn1JsonEnc_ITS_SlowVehicleSubCauseCode (OSCTXT *pctxt, ASN1T_ITS_SlowVehicleSubCauseCode *pvalue);

EXTERN int asn1JsonDec_ITS_SlowVehicleSubCauseCode (OSCTXT *pctxt, ASN1T_ITS_SlowVehicleSubCauseCode *pvalue);

EXTERN int asn1PrtToStrm_ITS_SlowVehicleSubCauseCode (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_SlowVehicleSubCauseCode* pvalue);

EXTERN ASN1T_ITS_SlowVehicleSubCauseCode* 
   new_ASN1T_ITS_SlowVehicleSubCauseCode (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  StationaryVehicleSubCauseCode                             */
/*                                                            */
/**************************************************************/
/*
StationaryVehicleSubCauseCode ::= INTEGER { unavailable(0), humanProblem(1), vehicleBreakdown(2), postCrash(3), publicTransportStop(4), carryingDangerousGoods(5) } (0..255)
*/
struct EXTERN ITS_StationaryVehicleSubCauseCode {
   enum Root {
      unavailable = 0,
      humanProblem = 1,
      vehicleBreakdown = 2,
      postCrash = 3,
      publicTransportStop = 4,
      carryingDangerousGoods = 5
   } ;
} ;

typedef OSUINT8 ASN1T_ITS_StationaryVehicleSubCauseCode;

class EXTERN ASN1C_ITS_StationaryVehicleSubCauseCode :
public ASN1CType
{
protected:
   ASN1T_ITS_StationaryVehicleSubCauseCode& msgData;
public:
   /**
    * Control class: ASN1C_ITS_StationaryVehicleSubCauseCode
    * Data class:    ASN1T_ITS_StationaryVehicleSubCauseCode
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ITS_StationaryVehicleSubCauseCode
       (ASN1T_ITS_StationaryVehicleSubCauseCode& data);

   /**
    * Control class: ASN1C_ITS_StationaryVehicleSubCauseCode<br/>
    * Data class: ASN1T_ITS_StationaryVehicleSubCauseCode<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ITS_StationaryVehicleSubCauseCode (OSRTMessageBufferIF& msgBuf
      , ASN1T_ITS_StationaryVehicleSubCauseCode& data);

   virtual ~ASN1C_ITS_StationaryVehicleSubCauseCode () {}

   /**
    * Data class: ASN1T_ITS_StationaryVehicleSubCauseCode<br/>
    *
    * Gets a mutable instance of the data class.
    *
    * @return Reference to a mutable instance of data class ASN1T_ITS_StationaryVehicleSubCauseCode.
    */
   inline ASN1T_ITS_StationaryVehicleSubCauseCode& getData () { return msgData; }

   /**
    * Data class: ASN1T_ITS_StationaryVehicleSubCauseCode<br/>
    * Gets a non-mutable instance of the data class.
    *
    * @return Reference to a non-mutable instance of data class ASN1T_ITS_StationaryVehicleSubCauseCode.
    */
   inline const ASN1T_ITS_StationaryVehicleSubCauseCode& getData () const { return msgData; }

   // standard encode/decode methods (defined in ASN1CType base class):
   // int Encode ();
   // int Decode ();

   // stream encode/decode methods:
   /**
    * Encodes into a specified encode buffer.
    *
    * @param msgBuf Reference to an encode buffer.
    * @return A status value (0 indicates success).
    */
   int EncodeTo (OSRTMessageBufferIF& msgBuf);

   /**
    * Decodes from a specified decode buffer.
    *
    * @param msgBuf Reference to a decode buffer.
    * @return A status value (0 indicates success).
    */
   int DecodeFrom (OSRTMessageBufferIF& msgBuf, OSBOOL free = FALSE);

   /**
    * Writes the contents of the object to a user-defined stream using
    * a user-defined print callback function.  See the documentation for
    * the setPrintStream() method.
    *
    * @param name A name for the object's contents.  If not specified,
    *             StationaryVehicleSubCauseCode will be used for the name.
    * @return Always returns 0.
    */
   int toStream (const char* name = "StationaryVehicleSubCauseCode");
   /**
    * Declares a print stream handler function.
    *
    * @param strmCallback Pointer to a function defined according to the
    *                     rtxPrintCallback signature.
    * @return A status value (0 indicates success).
    */
   int setPrintStream (rtxPrintCallback strmCallback, void* pStrmInfo);
private:
   ASN1C_ITS_StationaryVehicleSubCauseCode& operator= (const ASN1C_ITS_StationaryVehicleSubCauseCode&) {return *this;}
} ;

EXTERN int asn1PE_ITS_StationaryVehicleSubCauseCode (OSCTXT* pctxt, ASN1T_ITS_StationaryVehicleSubCauseCode value);

EXTERN int asn1PD_ITS_StationaryVehicleSubCauseCode (OSCTXT* pctxt, ASN1T_ITS_StationaryVehicleSubCauseCode* pvalue);

EXTERN int XmlEnc_ITS_StationaryVehicleSubCauseCode (OSCTXT* pctxt, 
   ASN1T_ITS_StationaryVehicleSubCauseCode value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_StationaryVehicleSubCauseCode (OSCTXT* pctxt, 
   ASN1T_ITS_StationaryVehicleSubCauseCode* pvalue);

EXTERN int asn1JsonEnc_ITS_StationaryVehicleSubCauseCode (OSCTXT *pctxt, ASN1T_ITS_StationaryVehicleSubCauseCode *pvalue);

EXTERN int asn1JsonDec_ITS_StationaryVehicleSubCauseCode (OSCTXT *pctxt, ASN1T_ITS_StationaryVehicleSubCauseCode *pvalue);

EXTERN int asn1PrtToStrm_ITS_StationaryVehicleSubCauseCode (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_StationaryVehicleSubCauseCode* pvalue);

EXTERN ASN1T_ITS_StationaryVehicleSubCauseCode* 
   new_ASN1T_ITS_StationaryVehicleSubCauseCode (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  HumanProblemSubCauseCode                                  */
/*                                                            */
/**************************************************************/
/*
HumanProblemSubCauseCode ::= INTEGER { unavailable(0), glycemiaProblem(1), heartProblem(2) } (0..255)
*/
struct EXTERN ITS_HumanProblemSubCauseCode {
   enum Root {
      unavailable = 0,
      glycemiaProblem = 1,
      heartProblem = 2
   } ;
} ;

typedef OSUINT8 ASN1T_ITS_HumanProblemSubCauseCode;

class EXTERN ASN1C_ITS_HumanProblemSubCauseCode :
public ASN1CType
{
protected:
   ASN1T_ITS_HumanProblemSubCauseCode& msgData;
public:
   /**
    * Control class: ASN1C_ITS_HumanProblemSubCauseCode
    * Data class:    ASN1T_ITS_HumanProblemSubCauseCode
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ITS_HumanProblemSubCauseCode
       (ASN1T_ITS_HumanProblemSubCauseCode& data);

   /**
    * Control class: ASN1C_ITS_HumanProblemSubCauseCode<br/>
    * Data class: ASN1T_ITS_HumanProblemSubCauseCode<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ITS_HumanProblemSubCauseCode (OSRTMessageBufferIF& msgBuf
      , ASN1T_ITS_HumanProblemSubCauseCode& data);

   virtual ~ASN1C_ITS_HumanProblemSubCauseCode () {}

   /**
    * Data class: ASN1T_ITS_HumanProblemSubCauseCode<br/>
    *
    * Gets a mutable instance of the data class.
    *
    * @return Reference to a mutable instance of data class ASN1T_ITS_HumanProblemSubCauseCode.
    */
   inline ASN1T_ITS_HumanProblemSubCauseCode& getData () { return msgData; }

   /**
    * Data class: ASN1T_ITS_HumanProblemSubCauseCode<br/>
    * Gets a non-mutable instance of the data class.
    *
    * @return Reference to a non-mutable instance of data class ASN1T_ITS_HumanProblemSubCauseCode.
    */
   inline const ASN1T_ITS_HumanProblemSubCauseCode& getData () const { return msgData; }

   // standard encode/decode methods (defined in ASN1CType base class):
   // int Encode ();
   // int Decode ();

   // stream encode/decode methods:
   /**
    * Encodes into a specified encode buffer.
    *
    * @param msgBuf Reference to an encode buffer.
    * @return A status value (0 indicates success).
    */
   int EncodeTo (OSRTMessageBufferIF& msgBuf);

   /**
    * Decodes from a specified decode buffer.
    *
    * @param msgBuf Reference to a decode buffer.
    * @return A status value (0 indicates success).
    */
   int DecodeFrom (OSRTMessageBufferIF& msgBuf, OSBOOL free = FALSE);

   /**
    * Writes the contents of the object to a user-defined stream using
    * a user-defined print callback function.  See the documentation for
    * the setPrintStream() method.
    *
    * @param name A name for the object's contents.  If not specified,
    *             HumanProblemSubCauseCode will be used for the name.
    * @return Always returns 0.
    */
   int toStream (const char* name = "HumanProblemSubCauseCode");
   /**
    * Declares a print stream handler function.
    *
    * @param strmCallback Pointer to a function defined according to the
    *                     rtxPrintCallback signature.
    * @return A status value (0 indicates success).
    */
   int setPrintStream (rtxPrintCallback strmCallback, void* pStrmInfo);
private:
   ASN1C_ITS_HumanProblemSubCauseCode& operator= (const ASN1C_ITS_HumanProblemSubCauseCode&) {return *this;}
} ;

EXTERN int asn1PE_ITS_HumanProblemSubCauseCode (OSCTXT* pctxt, ASN1T_ITS_HumanProblemSubCauseCode value);

EXTERN int asn1PD_ITS_HumanProblemSubCauseCode (OSCTXT* pctxt, ASN1T_ITS_HumanProblemSubCauseCode* pvalue);

EXTERN int XmlEnc_ITS_HumanProblemSubCauseCode (OSCTXT* pctxt, 
   ASN1T_ITS_HumanProblemSubCauseCode value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_HumanProblemSubCauseCode (OSCTXT* pctxt, 
   ASN1T_ITS_HumanProblemSubCauseCode* pvalue);

EXTERN int asn1JsonEnc_ITS_HumanProblemSubCauseCode (OSCTXT *pctxt, ASN1T_ITS_HumanProblemSubCauseCode *pvalue);

EXTERN int asn1JsonDec_ITS_HumanProblemSubCauseCode (OSCTXT *pctxt, ASN1T_ITS_HumanProblemSubCauseCode *pvalue);

EXTERN int asn1PrtToStrm_ITS_HumanProblemSubCauseCode (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_HumanProblemSubCauseCode* pvalue);

EXTERN ASN1T_ITS_HumanProblemSubCauseCode* 
   new_ASN1T_ITS_HumanProblemSubCauseCode (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  EmergencyVehicleApproachingSubCauseCode                   */
/*                                                            */
/**************************************************************/
/*
EmergencyVehicleApproachingSubCauseCode ::= INTEGER { unavailable(0), emergencyVehicleApproaching(1), prioritizedVehicleApproaching(2) } (0..255)
*/
struct EXTERN ITS_EmergencyVehicleApproachingSubCauseCode {
   enum Root {
      unavailable = 0,
      emergencyVehicleApproaching = 1,
      prioritizedVehicleApproaching = 2
   } ;
} ;

typedef OSUINT8 ASN1T_ITS_EmergencyVehicleApproachingSubCauseCode;

class EXTERN ASN1C_ITS_EmergencyVehicleApproachingSubCauseCode :
public ASN1CType
{
protected:
   ASN1T_ITS_EmergencyVehicleApproachingSubCauseCode& msgData;
public:
   /**
    * Control class: ASN1C_ITS_EmergencyVehicleApproachingSubCauseCode
    * Data class:    ASN1T_ITS_EmergencyVehicleApproachingSubCauseCode
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ITS_EmergencyVehicleApproachingSubCauseCode
       (ASN1T_ITS_EmergencyVehicleApproachingSubCauseCode& data);

   /**
    * Control class: ASN1C_ITS_EmergencyVehicleApproachingSubCauseCode<br/>
    * Data class: ASN1T_ITS_EmergencyVehicleApproachingSubCauseCode<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ITS_EmergencyVehicleApproachingSubCauseCode (
      OSRTMessageBufferIF& msgBuf
      , ASN1T_ITS_EmergencyVehicleApproachingSubCauseCode& data);

   virtual ~ASN1C_ITS_EmergencyVehicleApproachingSubCauseCode () {}

   /**
    * Data class: ASN1T_ITS_EmergencyVehicleApproachingSubCauseCode<br/>
    *
    * Gets a mutable instance of the data class.
    *
    * @return Reference to a mutable instance of data class ASN1T_ITS_EmergencyVehicleApproachingSubCauseCode.
    */
   inline ASN1T_ITS_EmergencyVehicleApproachingSubCauseCode& getData () { return msgData; }

   /**
    * Data class: ASN1T_ITS_EmergencyVehicleApproachingSubCauseCode<br/>
    * Gets a non-mutable instance of the data class.
    *
    * @return Reference to a non-mutable instance of data class ASN1T_ITS_EmergencyVehicleApproachingSubCauseCode.
    */
   inline const ASN1T_ITS_EmergencyVehicleApproachingSubCauseCode& getData () const { return msgData; }

   // standard encode/decode methods (defined in ASN1CType base class):
   // int Encode ();
   // int Decode ();

   // stream encode/decode methods:
   /**
    * Encodes into a specified encode buffer.
    *
    * @param msgBuf Reference to an encode buffer.
    * @return A status value (0 indicates success).
    */
   int EncodeTo (OSRTMessageBufferIF& msgBuf);

   /**
    * Decodes from a specified decode buffer.
    *
    * @param msgBuf Reference to a decode buffer.
    * @return A status value (0 indicates success).
    */
   int DecodeFrom (OSRTMessageBufferIF& msgBuf, OSBOOL free = FALSE);

   /**
    * Writes the contents of the object to a user-defined stream using
    * a user-defined print callback function.  See the documentation for
    * the setPrintStream() method.
    *
    * @param name A name for the object's contents.  If not specified,
    *             EmergencyVehicleApproachingSubCauseCode will be used for the name.
    * @return Always returns 0.
    */
   int toStream (const char* name = "EmergencyVehicleApproachingSubCauseCode");
   /**
    * Declares a print stream handler function.
    *
    * @param strmCallback Pointer to a function defined according to the
    *                     rtxPrintCallback signature.
    * @return A status value (0 indicates success).
    */
   int setPrintStream (rtxPrintCallback strmCallback, void* pStrmInfo);
private:
   ASN1C_ITS_EmergencyVehicleApproachingSubCauseCode& operator= (const ASN1C_ITS_EmergencyVehicleApproachingSubCauseCode&) {return *this;}
} ;

EXTERN int asn1PE_ITS_EmergencyVehicleApproachingSubCauseCode (OSCTXT* pctxt, ASN1T_ITS_EmergencyVehicleApproachingSubCauseCode value);

EXTERN int asn1PD_ITS_EmergencyVehicleApproachingSubCauseCode (OSCTXT* pctxt, ASN1T_ITS_EmergencyVehicleApproachingSubCauseCode* pvalue);

EXTERN int XmlEnc_ITS_EmergencyVehicleApproachingSubCauseCode (OSCTXT* pctxt, 
   ASN1T_ITS_EmergencyVehicleApproachingSubCauseCode value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_EmergencyVehicleApproachingSubCauseCode (OSCTXT* pctxt, 
   ASN1T_ITS_EmergencyVehicleApproachingSubCauseCode* pvalue);

EXTERN int asn1JsonEnc_ITS_EmergencyVehicleApproachingSubCauseCode (OSCTXT *pctxt, ASN1T_ITS_EmergencyVehicleApproachingSubCauseCode *pvalue);

EXTERN int asn1JsonDec_ITS_EmergencyVehicleApproachingSubCauseCode (OSCTXT *pctxt, ASN1T_ITS_EmergencyVehicleApproachingSubCauseCode *pvalue);

EXTERN int asn1PrtToStrm_ITS_EmergencyVehicleApproachingSubCauseCode (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_EmergencyVehicleApproachingSubCauseCode* pvalue);

EXTERN ASN1T_ITS_EmergencyVehicleApproachingSubCauseCode* 
   new_ASN1T_ITS_EmergencyVehicleApproachingSubCauseCode (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  HazardousLocation_DangerousCurveSubCauseCode              */
/*                                                            */
/**************************************************************/
/*
HazardousLocation-DangerousCurveSubCauseCode ::= INTEGER { unavailable(0), dangerousLeftTurnCurve(1), dangerousRightTurnCurve(2), multipleCurvesStartingWithUnknownTurningDirection(3), multipleCurvesStartingWithLeftTurn(4), multipleCurvesStartingWithRightTurn(5) } (0..255)
*/
struct EXTERN ITS_HazardousLocation_DangerousCurveSubCauseCode {
   enum Root {
      unavailable = 0,
      dangerousLeftTurnCurve = 1,
      dangerousRightTurnCurve = 2,
      multipleCurvesStartingWithUnknownTurningDirection = 3,
      multipleCurvesStartingWithLeftTurn = 4,
      multipleCurvesStartingWithRightTurn = 5
   } ;
} ;

typedef OSUINT8 ASN1T_ITS_HazardousLocation_DangerousCurveSubCauseCode;

class EXTERN ASN1C_ITS_HazardousLocation_DangerousCurveSubCauseCode :
public ASN1CType
{
protected:
   ASN1T_ITS_HazardousLocation_DangerousCurveSubCauseCode& msgData;
public:
   /**
    * Control class: ASN1C_ITS_HazardousLocation_DangerousCurveSubCauseCode
    * Data class:    ASN1T_ITS_HazardousLocation_DangerousCurveSubCauseCode
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ITS_HazardousLocation_DangerousCurveSubCauseCode
       (ASN1T_ITS_HazardousLocation_DangerousCurveSubCauseCode& data);

   /**
    * Control class: ASN1C_ITS_HazardousLocation_DangerousCurveSubCauseCode<br/>
    * Data class: ASN1T_ITS_HazardousLocation_DangerousCurveSubCauseCode<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ITS_HazardousLocation_DangerousCurveSubCauseCode (
      OSRTMessageBufferIF& msgBuf
      , ASN1T_ITS_HazardousLocation_DangerousCurveSubCauseCode& data);

   virtual ~ASN1C_ITS_HazardousLocation_DangerousCurveSubCauseCode () {}

   /**
    * Data class: ASN1T_ITS_HazardousLocation_DangerousCurveSubCauseCode<br/>
    *
    * Gets a mutable instance of the data class.
    *
    * @return Reference to a mutable instance of data class ASN1T_ITS_HazardousLocation_DangerousCurveSubCauseCode.
    */
   inline ASN1T_ITS_HazardousLocation_DangerousCurveSubCauseCode& getData () { return msgData; }

   /**
    * Data class: ASN1T_ITS_HazardousLocation_DangerousCurveSubCauseCode<br/>
    * Gets a non-mutable instance of the data class.
    *
    * @return Reference to a non-mutable instance of data class ASN1T_ITS_HazardousLocation_DangerousCurveSubCauseCode.
    */
   inline const ASN1T_ITS_HazardousLocation_DangerousCurveSubCauseCode& getData () const { return msgData; }

   // standard encode/decode methods (defined in ASN1CType base class):
   // int Encode ();
   // int Decode ();

   // stream encode/decode methods:
   /**
    * Encodes into a specified encode buffer.
    *
    * @param msgBuf Reference to an encode buffer.
    * @return A status value (0 indicates success).
    */
   int EncodeTo (OSRTMessageBufferIF& msgBuf);

   /**
    * Decodes from a specified decode buffer.
    *
    * @param msgBuf Reference to a decode buffer.
    * @return A status value (0 indicates success).
    */
   int DecodeFrom (OSRTMessageBufferIF& msgBuf, OSBOOL free = FALSE);

   /**
    * Writes the contents of the object to a user-defined stream using
    * a user-defined print callback function.  See the documentation for
    * the setPrintStream() method.
    *
    * @param name A name for the object's contents.  If not specified,
    *             HazardousLocation_DangerousCurveSubCauseCode will be used for the name.
    * @return Always returns 0.
    */
   int toStream (const char* name = "HazardousLocation_DangerousCurveSubCauseCode");
   /**
    * Declares a print stream handler function.
    *
    * @param strmCallback Pointer to a function defined according to the
    *                     rtxPrintCallback signature.
    * @return A status value (0 indicates success).
    */
   int setPrintStream (rtxPrintCallback strmCallback, void* pStrmInfo);
private:
   ASN1C_ITS_HazardousLocation_DangerousCurveSubCauseCode& operator= (const ASN1C_ITS_HazardousLocation_DangerousCurveSubCauseCode&) {return *this;}
} ;

EXTERN int asn1PE_ITS_HazardousLocation_DangerousCurveSubCauseCode (OSCTXT* pctxt, ASN1T_ITS_HazardousLocation_DangerousCurveSubCauseCode value);

EXTERN int asn1PD_ITS_HazardousLocation_DangerousCurveSubCauseCode (OSCTXT* pctxt, ASN1T_ITS_HazardousLocation_DangerousCurveSubCauseCode* pvalue);

EXTERN int XmlEnc_ITS_HazardousLocation_DangerousCurveSubCauseCode 
   (OSCTXT* pctxt, 
   ASN1T_ITS_HazardousLocation_DangerousCurveSubCauseCode value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_HazardousLocation_DangerousCurveSubCauseCode 
   (OSCTXT* pctxt, 
   ASN1T_ITS_HazardousLocation_DangerousCurveSubCauseCode* pvalue);

EXTERN int asn1JsonEnc_ITS_HazardousLocation_DangerousCurveSubCauseCode (OSCTXT *pctxt, ASN1T_ITS_HazardousLocation_DangerousCurveSubCauseCode *pvalue);

EXTERN int asn1JsonDec_ITS_HazardousLocation_DangerousCurveSubCauseCode (OSCTXT *pctxt, ASN1T_ITS_HazardousLocation_DangerousCurveSubCauseCode *pvalue);

EXTERN int asn1PrtToStrm_ITS_HazardousLocation_DangerousCurveSubCauseCode (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_HazardousLocation_DangerousCurveSubCauseCode* pvalue);

EXTERN ASN1T_ITS_HazardousLocation_DangerousCurveSubCauseCode* 
   new_ASN1T_ITS_HazardousLocation_DangerousCurveSubCauseCode (ASN1CType& ccobj)
   ;

/**************************************************************/
/*                                                            */
/*  HazardousLocation_SurfaceConditionSubCauseCode            */
/*                                                            */
/**************************************************************/
/*
HazardousLocation-SurfaceConditionSubCauseCode ::= INTEGER { unavailable(0), rockfalls(1), earthquakeDamage(2), sewerCollapse(3), subsidence(4), snowDrifts(5), stormDamage(6), burstPipe(7), volcanoEruption(8), fallingIce(9) } (0..255)
*/
struct EXTERN ITS_HazardousLocation_SurfaceConditionSubCauseCode {
   enum Root {
      unavailable = 0,
      rockfalls = 1,
      earthquakeDamage = 2,
      sewerCollapse = 3,
      subsidence = 4,
      snowDrifts = 5,
      stormDamage = 6,
      burstPipe = 7,
      volcanoEruption = 8,
      fallingIce = 9
   } ;
} ;

typedef OSUINT8 ASN1T_ITS_HazardousLocation_SurfaceConditionSubCauseCode;

class EXTERN ASN1C_ITS_HazardousLocation_SurfaceConditionSubCauseCode :
public ASN1CType
{
protected:
   ASN1T_ITS_HazardousLocation_SurfaceConditionSubCauseCode& msgData;
public:
   /**
    * Control class: ASN1C_ITS_HazardousLocation_SurfaceConditionSubCauseCode
    * Data class:    ASN1T_ITS_HazardousLocation_SurfaceConditionSubCauseCode
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ITS_HazardousLocation_SurfaceConditionSubCauseCode
       (ASN1T_ITS_HazardousLocation_SurfaceConditionSubCauseCode& data);

   /**
    * Control class: ASN1C_ITS_HazardousLocation_SurfaceConditionSubCauseCode<br/>
    * Data class: ASN1T_ITS_HazardousLocation_SurfaceConditionSubCauseCode<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ITS_HazardousLocation_SurfaceConditionSubCauseCode (
      OSRTMessageBufferIF& msgBuf
      , ASN1T_ITS_HazardousLocation_SurfaceConditionSubCauseCode& data);

   virtual ~ASN1C_ITS_HazardousLocation_SurfaceConditionSubCauseCode () {}

   /**
    * Data class: ASN1T_ITS_HazardousLocation_SurfaceConditionSubCauseCode<br/>
    *
    * Gets a mutable instance of the data class.
    *
    * @return Reference to a mutable instance of data class ASN1T_ITS_HazardousLocation_SurfaceConditionSubCauseCode.
    */
   inline ASN1T_ITS_HazardousLocation_SurfaceConditionSubCauseCode& getData () { return msgData; }

   /**
    * Data class: ASN1T_ITS_HazardousLocation_SurfaceConditionSubCauseCode<br/>
    * Gets a non-mutable instance of the data class.
    *
    * @return Reference to a non-mutable instance of data class ASN1T_ITS_HazardousLocation_SurfaceConditionSubCauseCode.
    */
   inline const ASN1T_ITS_HazardousLocation_SurfaceConditionSubCauseCode& getData () const { return msgData; }

   // standard encode/decode methods (defined in ASN1CType base class):
   // int Encode ();
   // int Decode ();

   // stream encode/decode methods:
   /**
    * Encodes into a specified encode buffer.
    *
    * @param msgBuf Reference to an encode buffer.
    * @return A status value (0 indicates success).
    */
   int EncodeTo (OSRTMessageBufferIF& msgBuf);

   /**
    * Decodes from a specified decode buffer.
    *
    * @param msgBuf Reference to a decode buffer.
    * @return A status value (0 indicates success).
    */
   int DecodeFrom (OSRTMessageBufferIF& msgBuf, OSBOOL free = FALSE);

   /**
    * Writes the contents of the object to a user-defined stream using
    * a user-defined print callback function.  See the documentation for
    * the setPrintStream() method.
    *
    * @param name A name for the object's contents.  If not specified,
    *             HazardousLocation_SurfaceConditionSubCauseCode will be used for the name.
    * @return Always returns 0.
    */
   int toStream (const char* name = "HazardousLocation_SurfaceConditionSubCauseCode");
   /**
    * Declares a print stream handler function.
    *
    * @param strmCallback Pointer to a function defined according to the
    *                     rtxPrintCallback signature.
    * @return A status value (0 indicates success).
    */
   int setPrintStream (rtxPrintCallback strmCallback, void* pStrmInfo);
private:
   ASN1C_ITS_HazardousLocation_SurfaceConditionSubCauseCode& operator= (const ASN1C_ITS_HazardousLocation_SurfaceConditionSubCauseCode&) {return *this;}
} ;

EXTERN int asn1PE_ITS_HazardousLocation_SurfaceConditionSubCauseCode (OSCTXT* pctxt, ASN1T_ITS_HazardousLocation_SurfaceConditionSubCauseCode value);

EXTERN int asn1PD_ITS_HazardousLocation_SurfaceConditionSubCauseCode (OSCTXT* pctxt, ASN1T_ITS_HazardousLocation_SurfaceConditionSubCauseCode* pvalue);

EXTERN int XmlEnc_ITS_HazardousLocation_SurfaceConditionSubCauseCode 
   (OSCTXT* pctxt, 
   ASN1T_ITS_HazardousLocation_SurfaceConditionSubCauseCode value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_HazardousLocation_SurfaceConditionSubCauseCode 
   (OSCTXT* pctxt, 
   ASN1T_ITS_HazardousLocation_SurfaceConditionSubCauseCode* pvalue);

EXTERN int asn1JsonEnc_ITS_HazardousLocation_SurfaceConditionSubCauseCode (OSCTXT *pctxt, ASN1T_ITS_HazardousLocation_SurfaceConditionSubCauseCode *pvalue);

EXTERN int asn1JsonDec_ITS_HazardousLocation_SurfaceConditionSubCauseCode (OSCTXT *pctxt, ASN1T_ITS_HazardousLocation_SurfaceConditionSubCauseCode *pvalue);

EXTERN int asn1PrtToStrm_ITS_HazardousLocation_SurfaceConditionSubCauseCode (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_HazardousLocation_SurfaceConditionSubCauseCode* pvalue);

EXTERN ASN1T_ITS_HazardousLocation_SurfaceConditionSubCauseCode* 
   new_ASN1T_ITS_HazardousLocation_SurfaceConditionSubCauseCode (ASN1CType& ccobj)
   ;

/**************************************************************/
/*                                                            */
/*  HazardousLocation_ObstacleOnTheRoadSubCauseCode           */
/*                                                            */
/**************************************************************/
/*
HazardousLocation-ObstacleOnTheRoadSubCauseCode ::= INTEGER { unavailable(0), shedLoad(1), partsOfVehicles(2), partsOfTyres(3), bigObjects(4), fallenTrees(5), hubCaps(6), waitingVehicles(7) } (0..255)
*/
struct EXTERN ITS_HazardousLocation_ObstacleOnTheRoadSubCauseCode {
   enum Root {
      unavailable = 0,
      shedLoad = 1,
      partsOfVehicles = 2,
      partsOfTyres = 3,
      bigObjects = 4,
      fallenTrees = 5,
      hubCaps = 6,
      waitingVehicles = 7
   } ;
} ;

typedef OSUINT8 ASN1T_ITS_HazardousLocation_ObstacleOnTheRoadSubCauseCode;

class EXTERN ASN1C_ITS_HazardousLocation_ObstacleOnTheRoadSubCauseCode :
public ASN1CType
{
protected:
   ASN1T_ITS_HazardousLocation_ObstacleOnTheRoadSubCauseCode& msgData;
public:
   /**
    * Control class: ASN1C_ITS_HazardousLocation_ObstacleOnTheRoadSubCauseCode
    * Data class:    ASN1T_ITS_HazardousLocation_ObstacleOnTheRoadSubCauseCode
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ITS_HazardousLocation_ObstacleOnTheRoadSubCauseCode
       (ASN1T_ITS_HazardousLocation_ObstacleOnTheRoadSubCauseCode& data);

   /**
    * Control class: ASN1C_ITS_HazardousLocation_ObstacleOnTheRoadSubCauseCode<br/>
    * Data class: ASN1T_ITS_HazardousLocation_ObstacleOnTheRoadSubCauseCode<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ITS_HazardousLocation_ObstacleOnTheRoadSubCauseCode (
      OSRTMessageBufferIF& msgBuf
      , ASN1T_ITS_HazardousLocation_ObstacleOnTheRoadSubCauseCode& data);

   virtual ~ASN1C_ITS_HazardousLocation_ObstacleOnTheRoadSubCauseCode () {}

   /**
    * Data class: ASN1T_ITS_HazardousLocation_ObstacleOnTheRoadSubCauseCode<br/>
    *
    * Gets a mutable instance of the data class.
    *
    * @return Reference to a mutable instance of data class ASN1T_ITS_HazardousLocation_ObstacleOnTheRoadSubCauseCode.
    */
   inline ASN1T_ITS_HazardousLocation_ObstacleOnTheRoadSubCauseCode& getData () { return msgData; }

   /**
    * Data class: ASN1T_ITS_HazardousLocation_ObstacleOnTheRoadSubCauseCode<br/>
    * Gets a non-mutable instance of the data class.
    *
    * @return Reference to a non-mutable instance of data class ASN1T_ITS_HazardousLocation_ObstacleOnTheRoadSubCauseCode.
    */
   inline const ASN1T_ITS_HazardousLocation_ObstacleOnTheRoadSubCauseCode& getData () const { return msgData; }

   // standard encode/decode methods (defined in ASN1CType base class):
   // int Encode ();
   // int Decode ();

   // stream encode/decode methods:
   /**
    * Encodes into a specified encode buffer.
    *
    * @param msgBuf Reference to an encode buffer.
    * @return A status value (0 indicates success).
    */
   int EncodeTo (OSRTMessageBufferIF& msgBuf);

   /**
    * Decodes from a specified decode buffer.
    *
    * @param msgBuf Reference to a decode buffer.
    * @return A status value (0 indicates success).
    */
   int DecodeFrom (OSRTMessageBufferIF& msgBuf, OSBOOL free = FALSE);

   /**
    * Writes the contents of the object to a user-defined stream using
    * a user-defined print callback function.  See the documentation for
    * the setPrintStream() method.
    *
    * @param name A name for the object's contents.  If not specified,
    *             HazardousLocation_ObstacleOnTheRoadSubCauseCode will be used for the name.
    * @return Always returns 0.
    */
   int toStream (const char* name = "HazardousLocation_ObstacleOnTheRoadSubCauseCode");
   /**
    * Declares a print stream handler function.
    *
    * @param strmCallback Pointer to a function defined according to the
    *                     rtxPrintCallback signature.
    * @return A status value (0 indicates success).
    */
   int setPrintStream (rtxPrintCallback strmCallback, void* pStrmInfo);
private:
   ASN1C_ITS_HazardousLocation_ObstacleOnTheRoadSubCauseCode& operator= (const ASN1C_ITS_HazardousLocation_ObstacleOnTheRoadSubCauseCode&) {return *this;}
} ;

EXTERN int asn1PE_ITS_HazardousLocation_ObstacleOnTheRoadSubCauseCode (OSCTXT* pctxt, ASN1T_ITS_HazardousLocation_ObstacleOnTheRoadSubCauseCode value);

EXTERN int asn1PD_ITS_HazardousLocation_ObstacleOnTheRoadSubCauseCode (OSCTXT* pctxt, ASN1T_ITS_HazardousLocation_ObstacleOnTheRoadSubCauseCode* pvalue);

EXTERN int XmlEnc_ITS_HazardousLocation_ObstacleOnTheRoadSubCauseCode 
   (OSCTXT* pctxt, 
   ASN1T_ITS_HazardousLocation_ObstacleOnTheRoadSubCauseCode value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_HazardousLocation_ObstacleOnTheRoadSubCauseCode 
   (OSCTXT* pctxt, 
   ASN1T_ITS_HazardousLocation_ObstacleOnTheRoadSubCauseCode* pvalue);

EXTERN int asn1JsonEnc_ITS_HazardousLocation_ObstacleOnTheRoadSubCauseCode (OSCTXT *pctxt, ASN1T_ITS_HazardousLocation_ObstacleOnTheRoadSubCauseCode *pvalue);

EXTERN int asn1JsonDec_ITS_HazardousLocation_ObstacleOnTheRoadSubCauseCode (OSCTXT *pctxt, ASN1T_ITS_HazardousLocation_ObstacleOnTheRoadSubCauseCode *pvalue);

EXTERN int asn1PrtToStrm_ITS_HazardousLocation_ObstacleOnTheRoadSubCauseCode (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_HazardousLocation_ObstacleOnTheRoadSubCauseCode* pvalue);

EXTERN ASN1T_ITS_HazardousLocation_ObstacleOnTheRoadSubCauseCode* 
   new_ASN1T_ITS_HazardousLocation_ObstacleOnTheRoadSubCauseCode (ASN1CType& ccobj)
   ;

/**************************************************************/
/*                                                            */
/*  HazardousLocation_AnimalOnTheRoadSubCauseCode             */
/*                                                            */
/**************************************************************/
/*
HazardousLocation-AnimalOnTheRoadSubCauseCode ::= INTEGER { unavailable(0), wildAnimals(1), herdOfAnimals(2), smallAnimals(3), largeAnimals(4) } (0..255)
*/
struct EXTERN ITS_HazardousLocation_AnimalOnTheRoadSubCauseCode {
   enum Root {
      unavailable = 0,
      wildAnimals = 1,
      herdOfAnimals = 2,
      smallAnimals = 3,
      largeAnimals = 4
   } ;
} ;

typedef OSUINT8 ASN1T_ITS_HazardousLocation_AnimalOnTheRoadSubCauseCode;

class EXTERN ASN1C_ITS_HazardousLocation_AnimalOnTheRoadSubCauseCode :
public ASN1CType
{
protected:
   ASN1T_ITS_HazardousLocation_AnimalOnTheRoadSubCauseCode& msgData;
public:
   /**
    * Control class: ASN1C_ITS_HazardousLocation_AnimalOnTheRoadSubCauseCode
    * Data class:    ASN1T_ITS_HazardousLocation_AnimalOnTheRoadSubCauseCode
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ITS_HazardousLocation_AnimalOnTheRoadSubCauseCode
       (ASN1T_ITS_HazardousLocation_AnimalOnTheRoadSubCauseCode& data);

   /**
    * Control class: ASN1C_ITS_HazardousLocation_AnimalOnTheRoadSubCauseCode<br/>
    * Data class: ASN1T_ITS_HazardousLocation_AnimalOnTheRoadSubCauseCode<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ITS_HazardousLocation_AnimalOnTheRoadSubCauseCode (
      OSRTMessageBufferIF& msgBuf
      , ASN1T_ITS_HazardousLocation_AnimalOnTheRoadSubCauseCode& data);

   virtual ~ASN1C_ITS_HazardousLocation_AnimalOnTheRoadSubCauseCode () {}

   /**
    * Data class: ASN1T_ITS_HazardousLocation_AnimalOnTheRoadSubCauseCode<br/>
    *
    * Gets a mutable instance of the data class.
    *
    * @return Reference to a mutable instance of data class ASN1T_ITS_HazardousLocation_AnimalOnTheRoadSubCauseCode.
    */
   inline ASN1T_ITS_HazardousLocation_AnimalOnTheRoadSubCauseCode& getData () { return msgData; }

   /**
    * Data class: ASN1T_ITS_HazardousLocation_AnimalOnTheRoadSubCauseCode<br/>
    * Gets a non-mutable instance of the data class.
    *
    * @return Reference to a non-mutable instance of data class ASN1T_ITS_HazardousLocation_AnimalOnTheRoadSubCauseCode.
    */
   inline const ASN1T_ITS_HazardousLocation_AnimalOnTheRoadSubCauseCode& getData () const { return msgData; }

   // standard encode/decode methods (defined in ASN1CType base class):
   // int Encode ();
   // int Decode ();

   // stream encode/decode methods:
   /**
    * Encodes into a specified encode buffer.
    *
    * @param msgBuf Reference to an encode buffer.
    * @return A status value (0 indicates success).
    */
   int EncodeTo (OSRTMessageBufferIF& msgBuf);

   /**
    * Decodes from a specified decode buffer.
    *
    * @param msgBuf Reference to a decode buffer.
    * @return A status value (0 indicates success).
    */
   int DecodeFrom (OSRTMessageBufferIF& msgBuf, OSBOOL free = FALSE);

   /**
    * Writes the contents of the object to a user-defined stream using
    * a user-defined print callback function.  See the documentation for
    * the setPrintStream() method.
    *
    * @param name A name for the object's contents.  If not specified,
    *             HazardousLocation_AnimalOnTheRoadSubCauseCode will be used for the name.
    * @return Always returns 0.
    */
   int toStream (const char* name = "HazardousLocation_AnimalOnTheRoadSubCauseCode");
   /**
    * Declares a print stream handler function.
    *
    * @param strmCallback Pointer to a function defined according to the
    *                     rtxPrintCallback signature.
    * @return A status value (0 indicates success).
    */
   int setPrintStream (rtxPrintCallback strmCallback, void* pStrmInfo);
private:
   ASN1C_ITS_HazardousLocation_AnimalOnTheRoadSubCauseCode& operator= (const ASN1C_ITS_HazardousLocation_AnimalOnTheRoadSubCauseCode&) {return *this;}
} ;

EXTERN int asn1PE_ITS_HazardousLocation_AnimalOnTheRoadSubCauseCode (OSCTXT* pctxt, ASN1T_ITS_HazardousLocation_AnimalOnTheRoadSubCauseCode value);

EXTERN int asn1PD_ITS_HazardousLocation_AnimalOnTheRoadSubCauseCode (OSCTXT* pctxt, ASN1T_ITS_HazardousLocation_AnimalOnTheRoadSubCauseCode* pvalue);

EXTERN int XmlEnc_ITS_HazardousLocation_AnimalOnTheRoadSubCauseCode 
   (OSCTXT* pctxt, 
   ASN1T_ITS_HazardousLocation_AnimalOnTheRoadSubCauseCode value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_HazardousLocation_AnimalOnTheRoadSubCauseCode 
   (OSCTXT* pctxt, 
   ASN1T_ITS_HazardousLocation_AnimalOnTheRoadSubCauseCode* pvalue);

EXTERN int asn1JsonEnc_ITS_HazardousLocation_AnimalOnTheRoadSubCauseCode (OSCTXT *pctxt, ASN1T_ITS_HazardousLocation_AnimalOnTheRoadSubCauseCode *pvalue);

EXTERN int asn1JsonDec_ITS_HazardousLocation_AnimalOnTheRoadSubCauseCode (OSCTXT *pctxt, ASN1T_ITS_HazardousLocation_AnimalOnTheRoadSubCauseCode *pvalue);

EXTERN int asn1PrtToStrm_ITS_HazardousLocation_AnimalOnTheRoadSubCauseCode (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_HazardousLocation_AnimalOnTheRoadSubCauseCode* pvalue);

EXTERN ASN1T_ITS_HazardousLocation_AnimalOnTheRoadSubCauseCode* 
   new_ASN1T_ITS_HazardousLocation_AnimalOnTheRoadSubCauseCode (ASN1CType& ccobj)
   ;

/**************************************************************/
/*                                                            */
/*  CollisionRiskSubCauseCode                                 */
/*                                                            */
/**************************************************************/
/*
CollisionRiskSubCauseCode ::= INTEGER { unavailable(0), longitudinalCollisionRisk(1), crossingCollisionRisk(2), lateralCollisionRisk(3), vulnerableRoadUser(4) } (0..255)
*/
struct EXTERN ITS_CollisionRiskSubCauseCode {
   enum Root {
      unavailable = 0,
      longitudinalCollisionRisk = 1,
      crossingCollisionRisk = 2,
      lateralCollisionRisk = 3,
      vulnerableRoadUser = 4
   } ;
} ;

typedef OSUINT8 ASN1T_ITS_CollisionRiskSubCauseCode;

class EXTERN ASN1C_ITS_CollisionRiskSubCauseCode :
public ASN1CType
{
protected:
   ASN1T_ITS_CollisionRiskSubCauseCode& msgData;
public:
   /**
    * Control class: ASN1C_ITS_CollisionRiskSubCauseCode
    * Data class:    ASN1T_ITS_CollisionRiskSubCauseCode
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ITS_CollisionRiskSubCauseCode
       (ASN1T_ITS_CollisionRiskSubCauseCode& data);

   /**
    * Control class: ASN1C_ITS_CollisionRiskSubCauseCode<br/>
    * Data class: ASN1T_ITS_CollisionRiskSubCauseCode<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ITS_CollisionRiskSubCauseCode (OSRTMessageBufferIF& msgBuf
      , ASN1T_ITS_CollisionRiskSubCauseCode& data);

   virtual ~ASN1C_ITS_CollisionRiskSubCauseCode () {}

   /**
    * Data class: ASN1T_ITS_CollisionRiskSubCauseCode<br/>
    *
    * Gets a mutable instance of the data class.
    *
    * @return Reference to a mutable instance of data class ASN1T_ITS_CollisionRiskSubCauseCode.
    */
   inline ASN1T_ITS_CollisionRiskSubCauseCode& getData () { return msgData; }

   /**
    * Data class: ASN1T_ITS_CollisionRiskSubCauseCode<br/>
    * Gets a non-mutable instance of the data class.
    *
    * @return Reference to a non-mutable instance of data class ASN1T_ITS_CollisionRiskSubCauseCode.
    */
   inline const ASN1T_ITS_CollisionRiskSubCauseCode& getData () const { return msgData; }

   // standard encode/decode methods (defined in ASN1CType base class):
   // int Encode ();
   // int Decode ();

   // stream encode/decode methods:
   /**
    * Encodes into a specified encode buffer.
    *
    * @param msgBuf Reference to an encode buffer.
    * @return A status value (0 indicates success).
    */
   int EncodeTo (OSRTMessageBufferIF& msgBuf);

   /**
    * Decodes from a specified decode buffer.
    *
    * @param msgBuf Reference to a decode buffer.
    * @return A status value (0 indicates success).
    */
   int DecodeFrom (OSRTMessageBufferIF& msgBuf, OSBOOL free = FALSE);

   /**
    * Writes the contents of the object to a user-defined stream using
    * a user-defined print callback function.  See the documentation for
    * the setPrintStream() method.
    *
    * @param name A name for the object's contents.  If not specified,
    *             CollisionRiskSubCauseCode will be used for the name.
    * @return Always returns 0.
    */
   int toStream (const char* name = "CollisionRiskSubCauseCode");
   /**
    * Declares a print stream handler function.
    *
    * @param strmCallback Pointer to a function defined according to the
    *                     rtxPrintCallback signature.
    * @return A status value (0 indicates success).
    */
   int setPrintStream (rtxPrintCallback strmCallback, void* pStrmInfo);
private:
   ASN1C_ITS_CollisionRiskSubCauseCode& operator= (const ASN1C_ITS_CollisionRiskSubCauseCode&) {return *this;}
} ;

EXTERN int asn1PE_ITS_CollisionRiskSubCauseCode (OSCTXT* pctxt, ASN1T_ITS_CollisionRiskSubCauseCode value);

EXTERN int asn1PD_ITS_CollisionRiskSubCauseCode (OSCTXT* pctxt, ASN1T_ITS_CollisionRiskSubCauseCode* pvalue);

EXTERN int XmlEnc_ITS_CollisionRiskSubCauseCode (OSCTXT* pctxt, 
   ASN1T_ITS_CollisionRiskSubCauseCode value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_CollisionRiskSubCauseCode (OSCTXT* pctxt, 
   ASN1T_ITS_CollisionRiskSubCauseCode* pvalue);

EXTERN int asn1JsonEnc_ITS_CollisionRiskSubCauseCode (OSCTXT *pctxt, ASN1T_ITS_CollisionRiskSubCauseCode *pvalue);

EXTERN int asn1JsonDec_ITS_CollisionRiskSubCauseCode (OSCTXT *pctxt, ASN1T_ITS_CollisionRiskSubCauseCode *pvalue);

EXTERN int asn1PrtToStrm_ITS_CollisionRiskSubCauseCode (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_CollisionRiskSubCauseCode* pvalue);

EXTERN ASN1T_ITS_CollisionRiskSubCauseCode* 
   new_ASN1T_ITS_CollisionRiskSubCauseCode (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  SignalViolationSubCauseCode                               */
/*                                                            */
/**************************************************************/
/*
SignalViolationSubCauseCode ::= INTEGER { unavailable(0), stopSignViolation(1), trafficLightViolation(2), turningRegulationViolation(3) } (0..255)
*/
struct EXTERN ITS_SignalViolationSubCauseCode {
   enum Root {
      unavailable = 0,
      stopSignViolation = 1,
      trafficLightViolation = 2,
      turningRegulationViolation = 3
   } ;
} ;

typedef OSUINT8 ASN1T_ITS_SignalViolationSubCauseCode;

class EXTERN ASN1C_ITS_SignalViolationSubCauseCode :
public ASN1CType
{
protected:
   ASN1T_ITS_SignalViolationSubCauseCode& msgData;
public:
   /**
    * Control class: ASN1C_ITS_SignalViolationSubCauseCode
    * Data class:    ASN1T_ITS_SignalViolationSubCauseCode
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ITS_SignalViolationSubCauseCode
       (ASN1T_ITS_SignalViolationSubCauseCode& data);

   /**
    * Control class: ASN1C_ITS_SignalViolationSubCauseCode<br/>
    * Data class: ASN1T_ITS_SignalViolationSubCauseCode<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ITS_SignalViolationSubCauseCode (OSRTMessageBufferIF& msgBuf
      , ASN1T_ITS_SignalViolationSubCauseCode& data);

   virtual ~ASN1C_ITS_SignalViolationSubCauseCode () {}

   /**
    * Data class: ASN1T_ITS_SignalViolationSubCauseCode<br/>
    *
    * Gets a mutable instance of the data class.
    *
    * @return Reference to a mutable instance of data class ASN1T_ITS_SignalViolationSubCauseCode.
    */
   inline ASN1T_ITS_SignalViolationSubCauseCode& getData () { return msgData; }

   /**
    * Data class: ASN1T_ITS_SignalViolationSubCauseCode<br/>
    * Gets a non-mutable instance of the data class.
    *
    * @return Reference to a non-mutable instance of data class ASN1T_ITS_SignalViolationSubCauseCode.
    */
   inline const ASN1T_ITS_SignalViolationSubCauseCode& getData () const { return msgData; }

   // standard encode/decode methods (defined in ASN1CType base class):
   // int Encode ();
   // int Decode ();

   // stream encode/decode methods:
   /**
    * Encodes into a specified encode buffer.
    *
    * @param msgBuf Reference to an encode buffer.
    * @return A status value (0 indicates success).
    */
   int EncodeTo (OSRTMessageBufferIF& msgBuf);

   /**
    * Decodes from a specified decode buffer.
    *
    * @param msgBuf Reference to a decode buffer.
    * @return A status value (0 indicates success).
    */
   int DecodeFrom (OSRTMessageBufferIF& msgBuf, OSBOOL free = FALSE);

   /**
    * Writes the contents of the object to a user-defined stream using
    * a user-defined print callback function.  See the documentation for
    * the setPrintStream() method.
    *
    * @param name A name for the object's contents.  If not specified,
    *             SignalViolationSubCauseCode will be used for the name.
    * @return Always returns 0.
    */
   int toStream (const char* name = "SignalViolationSubCauseCode");
   /**
    * Declares a print stream handler function.
    *
    * @param strmCallback Pointer to a function defined according to the
    *                     rtxPrintCallback signature.
    * @return A status value (0 indicates success).
    */
   int setPrintStream (rtxPrintCallback strmCallback, void* pStrmInfo);
private:
   ASN1C_ITS_SignalViolationSubCauseCode& operator= (const ASN1C_ITS_SignalViolationSubCauseCode&) {return *this;}
} ;

EXTERN int asn1PE_ITS_SignalViolationSubCauseCode (OSCTXT* pctxt, ASN1T_ITS_SignalViolationSubCauseCode value);

EXTERN int asn1PD_ITS_SignalViolationSubCauseCode (OSCTXT* pctxt, ASN1T_ITS_SignalViolationSubCauseCode* pvalue);

EXTERN int XmlEnc_ITS_SignalViolationSubCauseCode (OSCTXT* pctxt, 
   ASN1T_ITS_SignalViolationSubCauseCode value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_SignalViolationSubCauseCode (OSCTXT* pctxt, 
   ASN1T_ITS_SignalViolationSubCauseCode* pvalue);

EXTERN int asn1JsonEnc_ITS_SignalViolationSubCauseCode (OSCTXT *pctxt, ASN1T_ITS_SignalViolationSubCauseCode *pvalue);

EXTERN int asn1JsonDec_ITS_SignalViolationSubCauseCode (OSCTXT *pctxt, ASN1T_ITS_SignalViolationSubCauseCode *pvalue);

EXTERN int asn1PrtToStrm_ITS_SignalViolationSubCauseCode (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_SignalViolationSubCauseCode* pvalue);

EXTERN ASN1T_ITS_SignalViolationSubCauseCode* 
   new_ASN1T_ITS_SignalViolationSubCauseCode (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  RescueAndRecoveryWorkInProgressSubCauseCode               */
/*                                                            */
/**************************************************************/
/*
RescueAndRecoveryWorkInProgressSubCauseCode ::= INTEGER { unavailable(0), emergencyVehicles(1), rescueHelicopterLanding(2), policeActivityOngoing(3), medicalEmergencyOngoing(4), childAbductionInProgress(5) } (0..255)
*/
struct EXTERN ITS_RescueAndRecoveryWorkInProgressSubCauseCode {
   enum Root {
      unavailable = 0,
      emergencyVehicles = 1,
      rescueHelicopterLanding = 2,
      policeActivityOngoing = 3,
      medicalEmergencyOngoing = 4,
      childAbductionInProgress = 5
   } ;
} ;

typedef OSUINT8 ASN1T_ITS_RescueAndRecoveryWorkInProgressSubCauseCode;

class EXTERN ASN1C_ITS_RescueAndRecoveryWorkInProgressSubCauseCode :
public ASN1CType
{
protected:
   ASN1T_ITS_RescueAndRecoveryWorkInProgressSubCauseCode& msgData;
public:
   /**
    * Control class: ASN1C_ITS_RescueAndRecoveryWorkInProgressSubCauseCode
    * Data class:    ASN1T_ITS_RescueAndRecoveryWorkInProgressSubCauseCode
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ITS_RescueAndRecoveryWorkInProgressSubCauseCode
       (ASN1T_ITS_RescueAndRecoveryWorkInProgressSubCauseCode& data);

   /**
    * Control class: ASN1C_ITS_RescueAndRecoveryWorkInProgressSubCauseCode<br/>
    * Data class: ASN1T_ITS_RescueAndRecoveryWorkInProgressSubCauseCode<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ITS_RescueAndRecoveryWorkInProgressSubCauseCode (
      OSRTMessageBufferIF& msgBuf
      , ASN1T_ITS_RescueAndRecoveryWorkInProgressSubCauseCode& data);

   virtual ~ASN1C_ITS_RescueAndRecoveryWorkInProgressSubCauseCode () {}

   /**
    * Data class: ASN1T_ITS_RescueAndRecoveryWorkInProgressSubCauseCode<br/>
    *
    * Gets a mutable instance of the data class.
    *
    * @return Reference to a mutable instance of data class ASN1T_ITS_RescueAndRecoveryWorkInProgressSubCauseCode.
    */
   inline ASN1T_ITS_RescueAndRecoveryWorkInProgressSubCauseCode& getData () { return msgData; }

   /**
    * Data class: ASN1T_ITS_RescueAndRecoveryWorkInProgressSubCauseCode<br/>
    * Gets a non-mutable instance of the data class.
    *
    * @return Reference to a non-mutable instance of data class ASN1T_ITS_RescueAndRecoveryWorkInProgressSubCauseCode.
    */
   inline const ASN1T_ITS_RescueAndRecoveryWorkInProgressSubCauseCode& getData () const { return msgData; }

   // standard encode/decode methods (defined in ASN1CType base class):
   // int Encode ();
   // int Decode ();

   // stream encode/decode methods:
   /**
    * Encodes into a specified encode buffer.
    *
    * @param msgBuf Reference to an encode buffer.
    * @return A status value (0 indicates success).
    */
   int EncodeTo (OSRTMessageBufferIF& msgBuf);

   /**
    * Decodes from a specified decode buffer.
    *
    * @param msgBuf Reference to a decode buffer.
    * @return A status value (0 indicates success).
    */
   int DecodeFrom (OSRTMessageBufferIF& msgBuf, OSBOOL free = FALSE);

   /**
    * Writes the contents of the object to a user-defined stream using
    * a user-defined print callback function.  See the documentation for
    * the setPrintStream() method.
    *
    * @param name A name for the object's contents.  If not specified,
    *             RescueAndRecoveryWorkInProgressSubCauseCode will be used for the name.
    * @return Always returns 0.
    */
   int toStream (const char* name = "RescueAndRecoveryWorkInProgressSubCauseCode");
   /**
    * Declares a print stream handler function.
    *
    * @param strmCallback Pointer to a function defined according to the
    *                     rtxPrintCallback signature.
    * @return A status value (0 indicates success).
    */
   int setPrintStream (rtxPrintCallback strmCallback, void* pStrmInfo);
private:
   ASN1C_ITS_RescueAndRecoveryWorkInProgressSubCauseCode& operator= (const ASN1C_ITS_RescueAndRecoveryWorkInProgressSubCauseCode&) {return *this;}
} ;

EXTERN int asn1PE_ITS_RescueAndRecoveryWorkInProgressSubCauseCode (OSCTXT* pctxt, ASN1T_ITS_RescueAndRecoveryWorkInProgressSubCauseCode value);

EXTERN int asn1PD_ITS_RescueAndRecoveryWorkInProgressSubCauseCode (OSCTXT* pctxt, ASN1T_ITS_RescueAndRecoveryWorkInProgressSubCauseCode* pvalue);

EXTERN int XmlEnc_ITS_RescueAndRecoveryWorkInProgressSubCauseCode 
   (OSCTXT* pctxt, 
   ASN1T_ITS_RescueAndRecoveryWorkInProgressSubCauseCode value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_RescueAndRecoveryWorkInProgressSubCauseCode 
   (OSCTXT* pctxt, 
   ASN1T_ITS_RescueAndRecoveryWorkInProgressSubCauseCode* pvalue);

EXTERN int asn1JsonEnc_ITS_RescueAndRecoveryWorkInProgressSubCauseCode (OSCTXT *pctxt, ASN1T_ITS_RescueAndRecoveryWorkInProgressSubCauseCode *pvalue);

EXTERN int asn1JsonDec_ITS_RescueAndRecoveryWorkInProgressSubCauseCode (OSCTXT *pctxt, ASN1T_ITS_RescueAndRecoveryWorkInProgressSubCauseCode *pvalue);

EXTERN int asn1PrtToStrm_ITS_RescueAndRecoveryWorkInProgressSubCauseCode (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_RescueAndRecoveryWorkInProgressSubCauseCode* pvalue);

EXTERN ASN1T_ITS_RescueAndRecoveryWorkInProgressSubCauseCode* 
   new_ASN1T_ITS_RescueAndRecoveryWorkInProgressSubCauseCode (ASN1CType& ccobj)
   ;

/**************************************************************/
/*                                                            */
/*  DangerousEndOfQueueSubCauseCode                           */
/*                                                            */
/**************************************************************/
/*
DangerousEndOfQueueSubCauseCode ::= INTEGER { unavailable(0), suddenEndOfQueue(1), queueOverHill(2), queueAroundBend(3), queueInTunnel(4) } (0..255)
*/
struct EXTERN ITS_DangerousEndOfQueueSubCauseCode {
   enum Root {
      unavailable = 0,
      suddenEndOfQueue = 1,
      queueOverHill = 2,
      queueAroundBend = 3,
      queueInTunnel = 4
   } ;
} ;

typedef OSUINT8 ASN1T_ITS_DangerousEndOfQueueSubCauseCode;

class EXTERN ASN1C_ITS_DangerousEndOfQueueSubCauseCode :
public ASN1CType
{
protected:
   ASN1T_ITS_DangerousEndOfQueueSubCauseCode& msgData;
public:
   /**
    * Control class: ASN1C_ITS_DangerousEndOfQueueSubCauseCode
    * Data class:    ASN1T_ITS_DangerousEndOfQueueSubCauseCode
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ITS_DangerousEndOfQueueSubCauseCode
       (ASN1T_ITS_DangerousEndOfQueueSubCauseCode& data);

   /**
    * Control class: ASN1C_ITS_DangerousEndOfQueueSubCauseCode<br/>
    * Data class: ASN1T_ITS_DangerousEndOfQueueSubCauseCode<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ITS_DangerousEndOfQueueSubCauseCode (OSRTMessageBufferIF& msgBuf
      , ASN1T_ITS_DangerousEndOfQueueSubCauseCode& data);

   virtual ~ASN1C_ITS_DangerousEndOfQueueSubCauseCode () {}

   /**
    * Data class: ASN1T_ITS_DangerousEndOfQueueSubCauseCode<br/>
    *
    * Gets a mutable instance of the data class.
    *
    * @return Reference to a mutable instance of data class ASN1T_ITS_DangerousEndOfQueueSubCauseCode.
    */
   inline ASN1T_ITS_DangerousEndOfQueueSubCauseCode& getData () { return msgData; }

   /**
    * Data class: ASN1T_ITS_DangerousEndOfQueueSubCauseCode<br/>
    * Gets a non-mutable instance of the data class.
    *
    * @return Reference to a non-mutable instance of data class ASN1T_ITS_DangerousEndOfQueueSubCauseCode.
    */
   inline const ASN1T_ITS_DangerousEndOfQueueSubCauseCode& getData () const { return msgData; }

   // standard encode/decode methods (defined in ASN1CType base class):
   // int Encode ();
   // int Decode ();

   // stream encode/decode methods:
   /**
    * Encodes into a specified encode buffer.
    *
    * @param msgBuf Reference to an encode buffer.
    * @return A status value (0 indicates success).
    */
   int EncodeTo (OSRTMessageBufferIF& msgBuf);

   /**
    * Decodes from a specified decode buffer.
    *
    * @param msgBuf Reference to a decode buffer.
    * @return A status value (0 indicates success).
    */
   int DecodeFrom (OSRTMessageBufferIF& msgBuf, OSBOOL free = FALSE);

   /**
    * Writes the contents of the object to a user-defined stream using
    * a user-defined print callback function.  See the documentation for
    * the setPrintStream() method.
    *
    * @param name A name for the object's contents.  If not specified,
    *             DangerousEndOfQueueSubCauseCode will be used for the name.
    * @return Always returns 0.
    */
   int toStream (const char* name = "DangerousEndOfQueueSubCauseCode");
   /**
    * Declares a print stream handler function.
    *
    * @param strmCallback Pointer to a function defined according to the
    *                     rtxPrintCallback signature.
    * @return A status value (0 indicates success).
    */
   int setPrintStream (rtxPrintCallback strmCallback, void* pStrmInfo);
private:
   ASN1C_ITS_DangerousEndOfQueueSubCauseCode& operator= (const ASN1C_ITS_DangerousEndOfQueueSubCauseCode&) {return *this;}
} ;

EXTERN int asn1PE_ITS_DangerousEndOfQueueSubCauseCode (OSCTXT* pctxt, ASN1T_ITS_DangerousEndOfQueueSubCauseCode value);

EXTERN int asn1PD_ITS_DangerousEndOfQueueSubCauseCode (OSCTXT* pctxt, ASN1T_ITS_DangerousEndOfQueueSubCauseCode* pvalue);

EXTERN int XmlEnc_ITS_DangerousEndOfQueueSubCauseCode (OSCTXT* pctxt, 
   ASN1T_ITS_DangerousEndOfQueueSubCauseCode value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_DangerousEndOfQueueSubCauseCode (OSCTXT* pctxt, 
   ASN1T_ITS_DangerousEndOfQueueSubCauseCode* pvalue);

EXTERN int asn1JsonEnc_ITS_DangerousEndOfQueueSubCauseCode (OSCTXT *pctxt, ASN1T_ITS_DangerousEndOfQueueSubCauseCode *pvalue);

EXTERN int asn1JsonDec_ITS_DangerousEndOfQueueSubCauseCode (OSCTXT *pctxt, ASN1T_ITS_DangerousEndOfQueueSubCauseCode *pvalue);

EXTERN int asn1PrtToStrm_ITS_DangerousEndOfQueueSubCauseCode (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_DangerousEndOfQueueSubCauseCode* pvalue);

EXTERN ASN1T_ITS_DangerousEndOfQueueSubCauseCode* 
   new_ASN1T_ITS_DangerousEndOfQueueSubCauseCode (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  DangerousSituationSubCauseCode                            */
/*                                                            */
/**************************************************************/
/*
DangerousSituationSubCauseCode ::= INTEGER { unavailable(0), emergencyElectronicBrakeEngaged(1), preCrashSystemEngaged(2), espEngaged(3), absEngaged(4), aebEngaged(5), brakeWarningEngaged(6), collisionRiskWarningEngaged(7) } (0..255)
*/
struct EXTERN ITS_DangerousSituationSubCauseCode {
   enum Root {
      unavailable = 0,
      emergencyElectronicBrakeEngaged = 1,
      preCrashSystemEngaged = 2,
      espEngaged = 3,
      absEngaged = 4,
      aebEngaged = 5,
      brakeWarningEngaged = 6,
      collisionRiskWarningEngaged = 7
   } ;
} ;

typedef OSUINT8 ASN1T_ITS_DangerousSituationSubCauseCode;

class EXTERN ASN1C_ITS_DangerousSituationSubCauseCode :
public ASN1CType
{
protected:
   ASN1T_ITS_DangerousSituationSubCauseCode& msgData;
public:
   /**
    * Control class: ASN1C_ITS_DangerousSituationSubCauseCode
    * Data class:    ASN1T_ITS_DangerousSituationSubCauseCode
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ITS_DangerousSituationSubCauseCode
       (ASN1T_ITS_DangerousSituationSubCauseCode& data);

   /**
    * Control class: ASN1C_ITS_DangerousSituationSubCauseCode<br/>
    * Data class: ASN1T_ITS_DangerousSituationSubCauseCode<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ITS_DangerousSituationSubCauseCode (OSRTMessageBufferIF& msgBuf
      , ASN1T_ITS_DangerousSituationSubCauseCode& data);

   virtual ~ASN1C_ITS_DangerousSituationSubCauseCode () {}

   /**
    * Data class: ASN1T_ITS_DangerousSituationSubCauseCode<br/>
    *
    * Gets a mutable instance of the data class.
    *
    * @return Reference to a mutable instance of data class ASN1T_ITS_DangerousSituationSubCauseCode.
    */
   inline ASN1T_ITS_DangerousSituationSubCauseCode& getData () { return msgData; }

   /**
    * Data class: ASN1T_ITS_DangerousSituationSubCauseCode<br/>
    * Gets a non-mutable instance of the data class.
    *
    * @return Reference to a non-mutable instance of data class ASN1T_ITS_DangerousSituationSubCauseCode.
    */
   inline const ASN1T_ITS_DangerousSituationSubCauseCode& getData () const { return msgData; }

   // standard encode/decode methods (defined in ASN1CType base class):
   // int Encode ();
   // int Decode ();

   // stream encode/decode methods:
   /**
    * Encodes into a specified encode buffer.
    *
    * @param msgBuf Reference to an encode buffer.
    * @return A status value (0 indicates success).
    */
   int EncodeTo (OSRTMessageBufferIF& msgBuf);

   /**
    * Decodes from a specified decode buffer.
    *
    * @param msgBuf Reference to a decode buffer.
    * @return A status value (0 indicates success).
    */
   int DecodeFrom (OSRTMessageBufferIF& msgBuf, OSBOOL free = FALSE);

   /**
    * Writes the contents of the object to a user-defined stream using
    * a user-defined print callback function.  See the documentation for
    * the setPrintStream() method.
    *
    * @param name A name for the object's contents.  If not specified,
    *             DangerousSituationSubCauseCode will be used for the name.
    * @return Always returns 0.
    */
   int toStream (const char* name = "DangerousSituationSubCauseCode");
   /**
    * Declares a print stream handler function.
    *
    * @param strmCallback Pointer to a function defined according to the
    *                     rtxPrintCallback signature.
    * @return A status value (0 indicates success).
    */
   int setPrintStream (rtxPrintCallback strmCallback, void* pStrmInfo);
private:
   ASN1C_ITS_DangerousSituationSubCauseCode& operator= (const ASN1C_ITS_DangerousSituationSubCauseCode&) {return *this;}
} ;

EXTERN int asn1PE_ITS_DangerousSituationSubCauseCode (OSCTXT* pctxt, ASN1T_ITS_DangerousSituationSubCauseCode value);

EXTERN int asn1PD_ITS_DangerousSituationSubCauseCode (OSCTXT* pctxt, ASN1T_ITS_DangerousSituationSubCauseCode* pvalue);

EXTERN int XmlEnc_ITS_DangerousSituationSubCauseCode (OSCTXT* pctxt, 
   ASN1T_ITS_DangerousSituationSubCauseCode value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_DangerousSituationSubCauseCode (OSCTXT* pctxt, 
   ASN1T_ITS_DangerousSituationSubCauseCode* pvalue);

EXTERN int asn1JsonEnc_ITS_DangerousSituationSubCauseCode (OSCTXT *pctxt, ASN1T_ITS_DangerousSituationSubCauseCode *pvalue);

EXTERN int asn1JsonDec_ITS_DangerousSituationSubCauseCode (OSCTXT *pctxt, ASN1T_ITS_DangerousSituationSubCauseCode *pvalue);

EXTERN int asn1PrtToStrm_ITS_DangerousSituationSubCauseCode (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_DangerousSituationSubCauseCode* pvalue);

EXTERN ASN1T_ITS_DangerousSituationSubCauseCode* 
   new_ASN1T_ITS_DangerousSituationSubCauseCode (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  VehicleBreakdownSubCauseCode                              */
/*                                                            */
/**************************************************************/
/*
VehicleBreakdownSubCauseCode ::= INTEGER { unavailable(0), lackOfFuel(1), lackOfBatteryPower(2), engineProblem(3), transmissionProblem(4), engineCoolingProblem(5), brakingSystemProblem(6), steeringProblem(7), tyrePuncture(8) } (0..255)
*/
struct EXTERN ITS_VehicleBreakdownSubCauseCode {
   enum Root {
      unavailable = 0,
      lackOfFuel = 1,
      lackOfBatteryPower = 2,
      engineProblem = 3,
      transmissionProblem = 4,
      engineCoolingProblem = 5,
      brakingSystemProblem = 6,
      steeringProblem = 7,
      tyrePuncture = 8
   } ;
} ;

typedef OSUINT8 ASN1T_ITS_VehicleBreakdownSubCauseCode;

class EXTERN ASN1C_ITS_VehicleBreakdownSubCauseCode :
public ASN1CType
{
protected:
   ASN1T_ITS_VehicleBreakdownSubCauseCode& msgData;
public:
   /**
    * Control class: ASN1C_ITS_VehicleBreakdownSubCauseCode
    * Data class:    ASN1T_ITS_VehicleBreakdownSubCauseCode
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ITS_VehicleBreakdownSubCauseCode
       (ASN1T_ITS_VehicleBreakdownSubCauseCode& data);

   /**
    * Control class: ASN1C_ITS_VehicleBreakdownSubCauseCode<br/>
    * Data class: ASN1T_ITS_VehicleBreakdownSubCauseCode<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ITS_VehicleBreakdownSubCauseCode (OSRTMessageBufferIF& msgBuf
      , ASN1T_ITS_VehicleBreakdownSubCauseCode& data);

   virtual ~ASN1C_ITS_VehicleBreakdownSubCauseCode () {}

   /**
    * Data class: ASN1T_ITS_VehicleBreakdownSubCauseCode<br/>
    *
    * Gets a mutable instance of the data class.
    *
    * @return Reference to a mutable instance of data class ASN1T_ITS_VehicleBreakdownSubCauseCode.
    */
   inline ASN1T_ITS_VehicleBreakdownSubCauseCode& getData () { return msgData; }

   /**
    * Data class: ASN1T_ITS_VehicleBreakdownSubCauseCode<br/>
    * Gets a non-mutable instance of the data class.
    *
    * @return Reference to a non-mutable instance of data class ASN1T_ITS_VehicleBreakdownSubCauseCode.
    */
   inline const ASN1T_ITS_VehicleBreakdownSubCauseCode& getData () const { return msgData; }

   // standard encode/decode methods (defined in ASN1CType base class):
   // int Encode ();
   // int Decode ();

   // stream encode/decode methods:
   /**
    * Encodes into a specified encode buffer.
    *
    * @param msgBuf Reference to an encode buffer.
    * @return A status value (0 indicates success).
    */
   int EncodeTo (OSRTMessageBufferIF& msgBuf);

   /**
    * Decodes from a specified decode buffer.
    *
    * @param msgBuf Reference to a decode buffer.
    * @return A status value (0 indicates success).
    */
   int DecodeFrom (OSRTMessageBufferIF& msgBuf, OSBOOL free = FALSE);

   /**
    * Writes the contents of the object to a user-defined stream using
    * a user-defined print callback function.  See the documentation for
    * the setPrintStream() method.
    *
    * @param name A name for the object's contents.  If not specified,
    *             VehicleBreakdownSubCauseCode will be used for the name.
    * @return Always returns 0.
    */
   int toStream (const char* name = "VehicleBreakdownSubCauseCode");
   /**
    * Declares a print stream handler function.
    *
    * @param strmCallback Pointer to a function defined according to the
    *                     rtxPrintCallback signature.
    * @return A status value (0 indicates success).
    */
   int setPrintStream (rtxPrintCallback strmCallback, void* pStrmInfo);
private:
   ASN1C_ITS_VehicleBreakdownSubCauseCode& operator= (const ASN1C_ITS_VehicleBreakdownSubCauseCode&) {return *this;}
} ;

EXTERN int asn1PE_ITS_VehicleBreakdownSubCauseCode (OSCTXT* pctxt, ASN1T_ITS_VehicleBreakdownSubCauseCode value);

EXTERN int asn1PD_ITS_VehicleBreakdownSubCauseCode (OSCTXT* pctxt, ASN1T_ITS_VehicleBreakdownSubCauseCode* pvalue);

EXTERN int XmlEnc_ITS_VehicleBreakdownSubCauseCode (OSCTXT* pctxt, 
   ASN1T_ITS_VehicleBreakdownSubCauseCode value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_VehicleBreakdownSubCauseCode (OSCTXT* pctxt, 
   ASN1T_ITS_VehicleBreakdownSubCauseCode* pvalue);

EXTERN int asn1JsonEnc_ITS_VehicleBreakdownSubCauseCode (OSCTXT *pctxt, ASN1T_ITS_VehicleBreakdownSubCauseCode *pvalue);

EXTERN int asn1JsonDec_ITS_VehicleBreakdownSubCauseCode (OSCTXT *pctxt, ASN1T_ITS_VehicleBreakdownSubCauseCode *pvalue);

EXTERN int asn1PrtToStrm_ITS_VehicleBreakdownSubCauseCode (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_VehicleBreakdownSubCauseCode* pvalue);

EXTERN ASN1T_ITS_VehicleBreakdownSubCauseCode* 
   new_ASN1T_ITS_VehicleBreakdownSubCauseCode (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  PostCrashSubCauseCode                                     */
/*                                                            */
/**************************************************************/
/*
PostCrashSubCauseCode ::= INTEGER { unavailable(0), accidentWithoutECallTriggered(1), accidentWithECallManuallyTriggered(2), accidentWithECallAutomaticallyTriggered(3), accidentWithECallTriggeredWithoutAccessToCellularNetwork(4) } (0..255)
*/
struct EXTERN ITS_PostCrashSubCauseCode {
   enum Root {
      unavailable = 0,
      accidentWithoutECallTriggered = 1,
      accidentWithECallManuallyTriggered = 2,
      accidentWithECallAutomaticallyTriggered = 3,
      accidentWithECallTriggeredWithoutAccessToCellularNetwork = 4
   } ;
} ;

typedef OSUINT8 ASN1T_ITS_PostCrashSubCauseCode;

class EXTERN ASN1C_ITS_PostCrashSubCauseCode :
public ASN1CType
{
protected:
   ASN1T_ITS_PostCrashSubCauseCode& msgData;
public:
   /**
    * Control class: ASN1C_ITS_PostCrashSubCauseCode
    * Data class:    ASN1T_ITS_PostCrashSubCauseCode
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ITS_PostCrashSubCauseCode (ASN1T_ITS_PostCrashSubCauseCode& data);

   /**
    * Control class: ASN1C_ITS_PostCrashSubCauseCode<br/>
    * Data class: ASN1T_ITS_PostCrashSubCauseCode<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ITS_PostCrashSubCauseCode (OSRTMessageBufferIF& msgBuf
      , ASN1T_ITS_PostCrashSubCauseCode& data);

   virtual ~ASN1C_ITS_PostCrashSubCauseCode () {}

   /**
    * Data class: ASN1T_ITS_PostCrashSubCauseCode<br/>
    *
    * Gets a mutable instance of the data class.
    *
    * @return Reference to a mutable instance of data class ASN1T_ITS_PostCrashSubCauseCode.
    */
   inline ASN1T_ITS_PostCrashSubCauseCode& getData () { return msgData; }

   /**
    * Data class: ASN1T_ITS_PostCrashSubCauseCode<br/>
    * Gets a non-mutable instance of the data class.
    *
    * @return Reference to a non-mutable instance of data class ASN1T_ITS_PostCrashSubCauseCode.
    */
   inline const ASN1T_ITS_PostCrashSubCauseCode& getData () const { return msgData; }

   // standard encode/decode methods (defined in ASN1CType base class):
   // int Encode ();
   // int Decode ();

   // stream encode/decode methods:
   /**
    * Encodes into a specified encode buffer.
    *
    * @param msgBuf Reference to an encode buffer.
    * @return A status value (0 indicates success).
    */
   int EncodeTo (OSRTMessageBufferIF& msgBuf);

   /**
    * Decodes from a specified decode buffer.
    *
    * @param msgBuf Reference to a decode buffer.
    * @return A status value (0 indicates success).
    */
   int DecodeFrom (OSRTMessageBufferIF& msgBuf, OSBOOL free = FALSE);

   /**
    * Writes the contents of the object to a user-defined stream using
    * a user-defined print callback function.  See the documentation for
    * the setPrintStream() method.
    *
    * @param name A name for the object's contents.  If not specified,
    *             PostCrashSubCauseCode will be used for the name.
    * @return Always returns 0.
    */
   int toStream (const char* name = "PostCrashSubCauseCode");
   /**
    * Declares a print stream handler function.
    *
    * @param strmCallback Pointer to a function defined according to the
    *                     rtxPrintCallback signature.
    * @return A status value (0 indicates success).
    */
   int setPrintStream (rtxPrintCallback strmCallback, void* pStrmInfo);
private:
   ASN1C_ITS_PostCrashSubCauseCode& operator= (const ASN1C_ITS_PostCrashSubCauseCode&) {return *this;}
} ;

EXTERN int asn1PE_ITS_PostCrashSubCauseCode (OSCTXT* pctxt, ASN1T_ITS_PostCrashSubCauseCode value);

EXTERN int asn1PD_ITS_PostCrashSubCauseCode (OSCTXT* pctxt, ASN1T_ITS_PostCrashSubCauseCode* pvalue);

EXTERN int XmlEnc_ITS_PostCrashSubCauseCode (OSCTXT* pctxt, 
   ASN1T_ITS_PostCrashSubCauseCode value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ITS_PostCrashSubCauseCode (OSCTXT* pctxt, 
   ASN1T_ITS_PostCrashSubCauseCode* pvalue);

EXTERN int asn1JsonEnc_ITS_PostCrashSubCauseCode (OSCTXT *pctxt, ASN1T_ITS_PostCrashSubCauseCode *pvalue);

EXTERN int asn1JsonDec_ITS_PostCrashSubCauseCode (OSCTXT *pctxt, ASN1T_ITS_PostCrashSubCauseCode *pvalue);

EXTERN int asn1PrtToStrm_ITS_PostCrashSubCauseCode (OSCTXT *pctxt, 
   const char* name, const ASN1T_ITS_PostCrashSubCauseCode* pvalue);

EXTERN ASN1T_ITS_PostCrashSubCauseCode* 
   new_ASN1T_ITS_PostCrashSubCauseCode (ASN1CType& ccobj);

/**
 * Global element functions.  These functions encode or decode complete
 * XML documents.  They are generated for XSD global elements and/or
 * ASN.1 type definitions that are either:
 *
 * 1) not referenced by any other types, or
 * 2) explicitly declared to be a PDU using the -pdu command line
 *    option, or
 * 3) explicitly declared to be a PDU using the <isPDU/> 
 *    configuration file element.
 */
#endif
