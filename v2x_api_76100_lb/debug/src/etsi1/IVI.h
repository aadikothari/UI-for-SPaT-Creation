/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).
 */
#ifndef IVI_H
#define IVI_H

#include <stdio.h>
#include <stdlib.h>
#include "rtpersrc/asn1PerCppTypes.h"
#include "rtsrc/asn1CppTypes.h"
#include "rtsrc/rtPrintToStream.h"
#include "rtsrc/asn1type.h"
#include "rtxmlsrc/asn1xml.h"
#include "rtxmlsrc/rtXmlCppMsgBuf.h"
#include "rtsrc/asn1type.h"
#include "rtjsonsrc/asn1json.h"
#include "rtjsonsrc/rtJsonCppMsgBuf.h"

#include "rtsrc/ASN1CSeqOfList.h"
#include "rtsrc/ASN1CBitStr.h"
#include "ITS-Container.h"
#include "EfcDsrcApplication.h"
#include "ElectronicRegistrationIdentificationVehicleDataModule.h"
#include "CITSapplMgmtIDs.h"

/**
 * Header file for ASN.1 module IVI
 */
/**************************************************************/
/*                                                            */
/*  IviIdentificationNumber                                   */
/*                                                            */
/**************************************************************/
/*
IviIdentificationNumber ::= INTEGER (1..32767, ...)
*/
typedef OSUINT32 ASN1T_IVI_IviIdentificationNumber;

EXTERN int asn1PE_IVI_IviIdentificationNumber (OSCTXT* pctxt, ASN1T_IVI_IviIdentificationNumber value);

EXTERN int asn1PD_IVI_IviIdentificationNumber (OSCTXT* pctxt, ASN1T_IVI_IviIdentificationNumber* pvalue);

EXTERN int XmlEnc_IVI_IviIdentificationNumber (OSCTXT* pctxt, 
   ASN1T_IVI_IviIdentificationNumber value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_IviIdentificationNumber (OSCTXT* pctxt, 
   ASN1T_IVI_IviIdentificationNumber* pvalue);

EXTERN int asn1JsonEnc_IVI_IviIdentificationNumber (OSCTXT *pctxt, ASN1T_IVI_IviIdentificationNumber *pvalue);

EXTERN int asn1JsonDec_IVI_IviIdentificationNumber (OSCTXT *pctxt, ASN1T_IVI_IviIdentificationNumber *pvalue);

EXTERN int asn1PrtToStrm_IVI_IviIdentificationNumber (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_IviIdentificationNumber* pvalue);

EXTERN ASN1T_IVI_IviIdentificationNumber* 
   new_ASN1T_IVI_IviIdentificationNumber (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  IVIManagementContainer_connectedIviStructures             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'IVIManagementContainer'
*/
typedef struct EXTERN ASN1T_IVI_IVIManagementContainer_connectedIviStructures {
   OSUINT8 n;
   ASN1T_IVI_IviIdentificationNumber elem[8];
   ASN1T_IVI_IVIManagementContainer_connectedIviStructures () : n(0) {}
} ASN1T_IVI_IVIManagementContainer_connectedIviStructures;

class EXTERN ASN1C_IVI_IVIManagementContainer_connectedIviStructures :
public ASN1CType
{
protected:
   ASN1T_IVI_IVIManagementContainer_connectedIviStructures& msgData;
public:
   /**
    * Control class: ASN1C_IVI_IVIManagementContainer_connectedIviStructures
    * Data class:    ASN1T_IVI_IVIManagementContainer_connectedIviStructures
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_IVI_IVIManagementContainer_connectedIviStructures
       (ASN1T_IVI_IVIManagementContainer_connectedIviStructures& data);

   /**
    * Control class: ASN1C_IVI_IVIManagementContainer_connectedIviStructures<br/>
    * Data class: ASN1T_IVI_IVIManagementContainer_connectedIviStructures<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_IVI_IVIManagementContainer_connectedIviStructures (
      OSRTMessageBufferIF& msgBuf
      , ASN1T_IVI_IVIManagementContainer_connectedIviStructures& data);

   /**
    * Control class: ASN1C_IVI_IVIManagementContainer_connectedIviStructures<br/>
    * Data class: ASN1T_IVI_IVIManagementContainer_connectedIviStructures<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_IVI_IVIManagementContainer_connectedIviStructures (ASN1CType& ccobj
      , ASN1T_IVI_IVIManagementContainer_connectedIviStructures& data);

   virtual ~ASN1C_IVI_IVIManagementContainer_connectedIviStructures () {}

private:
   ASN1C_IVI_IVIManagementContainer_connectedIviStructures& operator= (const ASN1C_IVI_IVIManagementContainer_connectedIviStructures&) {return *this;}
} ;

EXTERN int asn1PE_IVI_IVIManagementContainer_connectedIviStructures (OSCTXT* pctxt, ASN1T_IVI_IVIManagementContainer_connectedIviStructures* pvalue);

EXTERN int asn1PD_IVI_IVIManagementContainer_connectedIviStructures (OSCTXT* pctxt, ASN1T_IVI_IVIManagementContainer_connectedIviStructures* pvalue);

EXTERN int XmlEnc_IVI_IVIManagementContainer_connectedIviStructures 
   (OSCTXT* pctxt, 
   ASN1T_IVI_IVIManagementContainer_connectedIviStructures* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_IVIManagementContainer_connectedIviStructures 
   (OSCTXT* pctxt, 
   ASN1T_IVI_IVIManagementContainer_connectedIviStructures* pvalue);

EXTERN int asn1JsonEnc_IVI_IVIManagementContainer_connectedIviStructures (OSCTXT *pctxt, ASN1T_IVI_IVIManagementContainer_connectedIviStructures *pvalue);

EXTERN int asn1JsonDec_IVI_IVIManagementContainer_connectedIviStructures (OSCTXT *pctxt, ASN1T_IVI_IVIManagementContainer_connectedIviStructures *pvalue);

EXTERN int asn1PrtToStrm_IVI_IVIManagementContainer_connectedIviStructures (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_IVIManagementContainer_connectedIviStructures* pvalue);

EXTERN int asn1Init_IVI_IVIManagementContainer_connectedIviStructures (
   ASN1T_IVI_IVIManagementContainer_connectedIviStructures* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

/**************************************************************/
/*                                                            */
/*  IviStatus                                                 */
/*                                                            */
/**************************************************************/
/*
IviStatus ::= INTEGER { new(0), update(1), cancellation(2), negation(3) } (0..7)
*/
struct EXTERN IVI_IviStatus {
   enum Root {
      new_ = 0,
      update = 1,
      cancellation = 2,
      negation = 3
   } ;
} ;

typedef OSUINT8 ASN1T_IVI_IviStatus;

EXTERN int asn1PE_IVI_IviStatus (OSCTXT* pctxt, ASN1T_IVI_IviStatus value);

EXTERN int asn1PD_IVI_IviStatus (OSCTXT* pctxt, ASN1T_IVI_IviStatus* pvalue);

EXTERN int XmlEnc_IVI_IviStatus (OSCTXT* pctxt, ASN1T_IVI_IviStatus value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_IviStatus (OSCTXT* pctxt, ASN1T_IVI_IviStatus* pvalue);

EXTERN int asn1JsonEnc_IVI_IviStatus (OSCTXT *pctxt, ASN1T_IVI_IviStatus *pvalue);

EXTERN int asn1JsonDec_IVI_IviStatus (OSCTXT *pctxt, ASN1T_IVI_IviStatus *pvalue);

EXTERN int asn1PrtToStrm_IVI_IviStatus (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_IviStatus* pvalue);

EXTERN ASN1T_IVI_IviStatus* new_ASN1T_IVI_IviStatus (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  IVIManagementContainer                                    */
/*                                                            */
/**************************************************************/
/*
 Prefix IVI added due to naming collision with data element ManagementContainer of Module DENM-PDU-Descriptions
IVIManagementContainer ::= SEQUENCE {
   serviceProviderId [0] Provider,
   iviIdentificationNumber [1] IviIdentificationNumber,
   timeStamp [2] TimestampIts OPTIONAL,
   validFrom [3] TimestampIts OPTIONAL,
   validTo [4] TimestampIts OPTIONAL,
   connectedIviStructures [5] SEQUENCE (SIZE (1..8)) OF IviIdentificationNumber OPTIONAL,
   iviStatus [6] IviStatus,
   ...
}
*/
struct EXTERN ASN1T_IVI_IVIManagementContainer {
   struct {
      unsigned timeStampPresent : 1;
      unsigned validFromPresent : 1;
      unsigned validToPresent : 1;
      unsigned connectedIviStructuresPresent : 1;
   } m;
   ASN1T_Provider serviceProviderId;
   ASN1T_IVI_IviIdentificationNumber iviIdentificationNumber;
   ASN1T_ITS_TimestampIts timeStamp;
   ASN1T_ITS_TimestampIts validFrom;
   ASN1T_ITS_TimestampIts validTo;
   ASN1T_IVI_IVIManagementContainer_connectedIviStructures connectedIviStructures;
   ASN1T_IVI_IviStatus iviStatus;
   ASN1TSeqExt extElem1;
   ASN1T_IVI_IVIManagementContainer ();
} ;

EXTERN int asn1PE_IVI_IVIManagementContainer (OSCTXT* pctxt, ASN1T_IVI_IVIManagementContainer* pvalue);

EXTERN int asn1PD_IVI_IVIManagementContainer (OSCTXT* pctxt, ASN1T_IVI_IVIManagementContainer* pvalue);

EXTERN int XmlEnc_IVI_IVIManagementContainer (OSCTXT* pctxt, 
   ASN1T_IVI_IVIManagementContainer* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_IVIManagementContainer (OSCTXT* pctxt, 
   ASN1T_IVI_IVIManagementContainer* pvalue);

EXTERN int asn1JsonEnc_IVI_IVIManagementContainer (OSCTXT *pctxt, ASN1T_IVI_IVIManagementContainer *pvalue);

EXTERN int asn1JsonDec_IVI_IVIManagementContainer (OSCTXT *pctxt, ASN1T_IVI_IVIManagementContainer *pvalue);

EXTERN int asn1PrtToStrm_IVI_IVIManagementContainer (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_IVIManagementContainer* pvalue);

EXTERN ASN1T_IVI_IVIManagementContainer* 
   new_ASN1T_IVI_IVIManagementContainer (ASN1CType& ccobj);

EXTERN int asn1Init_IVI_IVIManagementContainer (
   ASN1T_IVI_IVIManagementContainer* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_IVIManagementContainer (OSCTXT *pctxt, 
   ASN1T_IVI_IVIManagementContainer* pvalue);

/**************************************************************/
/*                                                            */
/*  Zid                                                       */
/*                                                            */
/**************************************************************/
/*
Zid ::= INTEGER (1..32, ...)
*/
typedef OSUINT32 ASN1T_IVI_Zid;

EXTERN int asn1PE_IVI_Zid (OSCTXT* pctxt, ASN1T_IVI_Zid value);

EXTERN int asn1PD_IVI_Zid (OSCTXT* pctxt, ASN1T_IVI_Zid* pvalue);

EXTERN int XmlEnc_IVI_Zid (OSCTXT* pctxt, ASN1T_IVI_Zid value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_Zid (OSCTXT* pctxt, ASN1T_IVI_Zid* pvalue);

EXTERN int asn1JsonEnc_IVI_Zid (OSCTXT *pctxt, ASN1T_IVI_Zid *pvalue);

EXTERN int asn1JsonDec_IVI_Zid (OSCTXT *pctxt, ASN1T_IVI_Zid *pvalue);

EXTERN int asn1PrtToStrm_IVI_Zid (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_Zid* pvalue);

EXTERN ASN1T_IVI_Zid* new_ASN1T_IVI_Zid (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  DeltaPosition                                             */
/*                                                            */
/**************************************************************/
/*
DeltaPosition ::= SEQUENCE {
   deltaLatitude [0] DeltaLatitude,
   deltaLongitude [1] DeltaLongitude
}
*/
struct EXTERN ASN1T_IVI_DeltaPosition {
   ASN1T_ITS_DeltaLatitude deltaLatitude;
   ASN1T_ITS_DeltaLongitude deltaLongitude;
} ;

EXTERN int asn1PE_IVI_DeltaPosition (OSCTXT* pctxt, ASN1T_IVI_DeltaPosition* pvalue);

EXTERN int asn1PD_IVI_DeltaPosition (OSCTXT* pctxt, ASN1T_IVI_DeltaPosition* pvalue);

EXTERN int XmlEnc_IVI_DeltaPosition (OSCTXT* pctxt, 
   ASN1T_IVI_DeltaPosition* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_DeltaPosition (OSCTXT* pctxt, 
   ASN1T_IVI_DeltaPosition* pvalue);

EXTERN int asn1JsonEnc_IVI_DeltaPosition (OSCTXT *pctxt, ASN1T_IVI_DeltaPosition *pvalue);

EXTERN int asn1JsonDec_IVI_DeltaPosition (OSCTXT *pctxt, ASN1T_IVI_DeltaPosition *pvalue);

EXTERN int asn1PrtToStrm_IVI_DeltaPosition (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_DeltaPosition* pvalue);

EXTERN ASN1T_IVI_DeltaPosition* new_ASN1T_IVI_DeltaPosition (ASN1CType& ccobj)
   ;

/**************************************************************/
/*                                                            */
/*  PolygonalLine_deltaPositions                              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PolygonalLine'
*/
/* List of ASN1T_IVI_DeltaPosition */
typedef ASN1TSeqOfList ASN1T_IVI_PolygonalLine_deltaPositions;

class EXTERN ASN1C_IVI_PolygonalLine_deltaPositions :
public ASN1CSeqOfList
{
protected:
   ASN1T_IVI_PolygonalLine_deltaPositions& msgData;
public:
   /**
    * Control class: ASN1C_IVI_PolygonalLine_deltaPositions
    * Data class:    ASN1T_IVI_PolygonalLine_deltaPositions
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_IVI_PolygonalLine_deltaPositions
       (ASN1T_IVI_PolygonalLine_deltaPositions& data);

   /**
    * Control class: ASN1C_IVI_PolygonalLine_deltaPositions<br/>
    * Data class: ASN1T_IVI_PolygonalLine_deltaPositions<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_IVI_PolygonalLine_deltaPositions (OSRTMessageBufferIF& msgBuf
      , ASN1T_IVI_PolygonalLine_deltaPositions& data);

   /**
    * Control class: ASN1C_IVI_PolygonalLine_deltaPositions<br/>
    * Data class: ASN1T_IVI_PolygonalLine_deltaPositions<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_IVI_PolygonalLine_deltaPositions (ASN1CType& ccobj
      , ASN1T_IVI_PolygonalLine_deltaPositions& data);

   virtual ~ASN1C_IVI_PolygonalLine_deltaPositions () {}

   /**
    * Data class: ASN1T_IVI_DeltaPosition<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_IVI_DeltaPosition* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_IVI_DeltaPosition.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_IVI_DeltaPosition* NewElement ();

   /**
    * Data class: ASN1T_IVI_DeltaPosition.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_IVI_DeltaPosition* AppendNewElement ();

private:
   ASN1C_IVI_PolygonalLine_deltaPositions& operator= (const ASN1C_IVI_PolygonalLine_deltaPositions&) {return *this;}
} ;

EXTERN int asn1PE_IVI_PolygonalLine_deltaPositions (OSCTXT* pctxt, ASN1T_IVI_PolygonalLine_deltaPositions* pvalue);

EXTERN int asn1PD_IVI_PolygonalLine_deltaPositions (OSCTXT* pctxt, ASN1T_IVI_PolygonalLine_deltaPositions* pvalue);

EXTERN int XmlEnc_IVI_PolygonalLine_deltaPositions (OSCTXT* pctxt, 
   ASN1T_IVI_PolygonalLine_deltaPositions* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_PolygonalLine_deltaPositions (OSCTXT* pctxt, 
   ASN1T_IVI_PolygonalLine_deltaPositions* pvalue);

EXTERN int asn1JsonEnc_IVI_PolygonalLine_deltaPositions (OSCTXT *pctxt, ASN1T_IVI_PolygonalLine_deltaPositions *pvalue);

EXTERN int asn1JsonDec_IVI_PolygonalLine_deltaPositions (OSCTXT *pctxt, ASN1T_IVI_PolygonalLine_deltaPositions *pvalue);

EXTERN int asn1PrtToStrm_IVI_PolygonalLine_deltaPositions (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_PolygonalLine_deltaPositions* pvalue);

EXTERN int asn1Init_IVI_PolygonalLine_deltaPositions (
   ASN1T_IVI_PolygonalLine_deltaPositions* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_PolygonalLine_deltaPositions (OSCTXT *pctxt, 
   ASN1T_IVI_PolygonalLine_deltaPositions* pvalue);

/**************************************************************/
/*                                                            */
/*  PolygonalLine_deltaPositionsWithAltitude                  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PolygonalLine'
*/
/* List of ASN1T_ITS_DeltaReferencePosition */
typedef ASN1TSeqOfList ASN1T_IVI_PolygonalLine_deltaPositionsWithAltitude;

class EXTERN ASN1C_IVI_PolygonalLine_deltaPositionsWithAltitude :
public ASN1CSeqOfList
{
protected:
   ASN1T_IVI_PolygonalLine_deltaPositionsWithAltitude& msgData;
public:
   /**
    * Control class: ASN1C_IVI_PolygonalLine_deltaPositionsWithAltitude
    * Data class:    ASN1T_IVI_PolygonalLine_deltaPositionsWithAltitude
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_IVI_PolygonalLine_deltaPositionsWithAltitude
       (ASN1T_IVI_PolygonalLine_deltaPositionsWithAltitude& data);

   /**
    * Control class: ASN1C_IVI_PolygonalLine_deltaPositionsWithAltitude<br/>
    * Data class: ASN1T_IVI_PolygonalLine_deltaPositionsWithAltitude<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_IVI_PolygonalLine_deltaPositionsWithAltitude (
      OSRTMessageBufferIF& msgBuf
      , ASN1T_IVI_PolygonalLine_deltaPositionsWithAltitude& data);

   /**
    * Control class: ASN1C_IVI_PolygonalLine_deltaPositionsWithAltitude<br/>
    * Data class: ASN1T_IVI_PolygonalLine_deltaPositionsWithAltitude<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_IVI_PolygonalLine_deltaPositionsWithAltitude (ASN1CType& ccobj
      , ASN1T_IVI_PolygonalLine_deltaPositionsWithAltitude& data);

   virtual ~ASN1C_IVI_PolygonalLine_deltaPositionsWithAltitude () {}

   /**
    * Data class: ASN1T_ITS_DeltaReferencePosition<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_ITS_DeltaReferencePosition* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_ITS_DeltaReferencePosition.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_ITS_DeltaReferencePosition* NewElement ();

   /**
    * Data class: ASN1T_ITS_DeltaReferencePosition.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_ITS_DeltaReferencePosition* AppendNewElement ();

private:
   ASN1C_IVI_PolygonalLine_deltaPositionsWithAltitude& operator= (const ASN1C_IVI_PolygonalLine_deltaPositionsWithAltitude&) {return *this;}
} ;

EXTERN int asn1PE_IVI_PolygonalLine_deltaPositionsWithAltitude (OSCTXT* pctxt, ASN1T_IVI_PolygonalLine_deltaPositionsWithAltitude* pvalue);

EXTERN int asn1PD_IVI_PolygonalLine_deltaPositionsWithAltitude (OSCTXT* pctxt, ASN1T_IVI_PolygonalLine_deltaPositionsWithAltitude* pvalue);

EXTERN int XmlEnc_IVI_PolygonalLine_deltaPositionsWithAltitude (OSCTXT* pctxt, 
   ASN1T_IVI_PolygonalLine_deltaPositionsWithAltitude* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_PolygonalLine_deltaPositionsWithAltitude (OSCTXT* pctxt, 
   ASN1T_IVI_PolygonalLine_deltaPositionsWithAltitude* pvalue);

EXTERN int asn1JsonEnc_IVI_PolygonalLine_deltaPositionsWithAltitude (OSCTXT *pctxt, ASN1T_IVI_PolygonalLine_deltaPositionsWithAltitude *pvalue);

EXTERN int asn1JsonDec_IVI_PolygonalLine_deltaPositionsWithAltitude (OSCTXT *pctxt, ASN1T_IVI_PolygonalLine_deltaPositionsWithAltitude *pvalue);

EXTERN int asn1PrtToStrm_IVI_PolygonalLine_deltaPositionsWithAltitude (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_PolygonalLine_deltaPositionsWithAltitude* pvalue);

EXTERN int asn1Init_IVI_PolygonalLine_deltaPositionsWithAltitude (
   ASN1T_IVI_PolygonalLine_deltaPositionsWithAltitude* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_PolygonalLine_deltaPositionsWithAltitude (OSCTXT *pctxt, 
   ASN1T_IVI_PolygonalLine_deltaPositionsWithAltitude* pvalue);

/**************************************************************/
/*                                                            */
/*  AbsolutePosition                                          */
/*                                                            */
/**************************************************************/
/*
  Definition of Data Frames & Elements
AbsolutePosition ::= SEQUENCE {
   latitude [0] Latitude,
   longitude [1] Longitude
}
*/
struct EXTERN ASN1T_IVI_AbsolutePosition {
   ASN1T_ITS_Latitude latitude;
   ASN1T_ITS_Longitude longitude;
} ;

EXTERN int asn1PE_IVI_AbsolutePosition (OSCTXT* pctxt, ASN1T_IVI_AbsolutePosition* pvalue);

EXTERN int asn1PD_IVI_AbsolutePosition (OSCTXT* pctxt, ASN1T_IVI_AbsolutePosition* pvalue);

EXTERN int XmlEnc_IVI_AbsolutePosition (OSCTXT* pctxt, 
   ASN1T_IVI_AbsolutePosition* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_AbsolutePosition (OSCTXT* pctxt, 
   ASN1T_IVI_AbsolutePosition* pvalue);

EXTERN int asn1JsonEnc_IVI_AbsolutePosition (OSCTXT *pctxt, ASN1T_IVI_AbsolutePosition *pvalue);

EXTERN int asn1JsonDec_IVI_AbsolutePosition (OSCTXT *pctxt, ASN1T_IVI_AbsolutePosition *pvalue);

EXTERN int asn1PrtToStrm_IVI_AbsolutePosition (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_AbsolutePosition* pvalue);

EXTERN ASN1T_IVI_AbsolutePosition* 
   new_ASN1T_IVI_AbsolutePosition (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  PolygonalLine_absolutePositions                           */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PolygonalLine'
*/
/* List of ASN1T_IVI_AbsolutePosition */
typedef ASN1TSeqOfList ASN1T_IVI_PolygonalLine_absolutePositions;

class EXTERN ASN1C_IVI_PolygonalLine_absolutePositions :
public ASN1CSeqOfList
{
protected:
   ASN1T_IVI_PolygonalLine_absolutePositions& msgData;
public:
   /**
    * Control class: ASN1C_IVI_PolygonalLine_absolutePositions
    * Data class:    ASN1T_IVI_PolygonalLine_absolutePositions
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_IVI_PolygonalLine_absolutePositions
       (ASN1T_IVI_PolygonalLine_absolutePositions& data);

   /**
    * Control class: ASN1C_IVI_PolygonalLine_absolutePositions<br/>
    * Data class: ASN1T_IVI_PolygonalLine_absolutePositions<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_IVI_PolygonalLine_absolutePositions (OSRTMessageBufferIF& msgBuf
      , ASN1T_IVI_PolygonalLine_absolutePositions& data);

   /**
    * Control class: ASN1C_IVI_PolygonalLine_absolutePositions<br/>
    * Data class: ASN1T_IVI_PolygonalLine_absolutePositions<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_IVI_PolygonalLine_absolutePositions (ASN1CType& ccobj
      , ASN1T_IVI_PolygonalLine_absolutePositions& data);

   virtual ~ASN1C_IVI_PolygonalLine_absolutePositions () {}

   /**
    * Data class: ASN1T_IVI_AbsolutePosition<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_IVI_AbsolutePosition* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_IVI_AbsolutePosition.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_IVI_AbsolutePosition* NewElement ();

   /**
    * Data class: ASN1T_IVI_AbsolutePosition.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_IVI_AbsolutePosition* AppendNewElement ();

private:
   ASN1C_IVI_PolygonalLine_absolutePositions& operator= (const ASN1C_IVI_PolygonalLine_absolutePositions&) {return *this;}
} ;

EXTERN int asn1PE_IVI_PolygonalLine_absolutePositions (OSCTXT* pctxt, ASN1T_IVI_PolygonalLine_absolutePositions* pvalue);

EXTERN int asn1PD_IVI_PolygonalLine_absolutePositions (OSCTXT* pctxt, ASN1T_IVI_PolygonalLine_absolutePositions* pvalue);

EXTERN int XmlEnc_IVI_PolygonalLine_absolutePositions (OSCTXT* pctxt, 
   ASN1T_IVI_PolygonalLine_absolutePositions* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_PolygonalLine_absolutePositions (OSCTXT* pctxt, 
   ASN1T_IVI_PolygonalLine_absolutePositions* pvalue);

EXTERN int asn1JsonEnc_IVI_PolygonalLine_absolutePositions (OSCTXT *pctxt, ASN1T_IVI_PolygonalLine_absolutePositions *pvalue);

EXTERN int asn1JsonDec_IVI_PolygonalLine_absolutePositions (OSCTXT *pctxt, ASN1T_IVI_PolygonalLine_absolutePositions *pvalue);

EXTERN int asn1PrtToStrm_IVI_PolygonalLine_absolutePositions (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_PolygonalLine_absolutePositions* pvalue);

EXTERN int asn1Init_IVI_PolygonalLine_absolutePositions (
   ASN1T_IVI_PolygonalLine_absolutePositions* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_PolygonalLine_absolutePositions (OSCTXT *pctxt, 
   ASN1T_IVI_PolygonalLine_absolutePositions* pvalue);

/**************************************************************/
/*                                                            */
/*  AbsolutePositionWAltitude                                 */
/*                                                            */
/**************************************************************/
/*
AbsolutePositionWAltitude ::= SEQUENCE {
   latitude [0] Latitude,
   longitude [1] Longitude,
   altitude [2] Altitude
}
*/
struct EXTERN ASN1T_IVI_AbsolutePositionWAltitude {
   ASN1T_ITS_Latitude latitude;
   ASN1T_ITS_Longitude longitude;
   ASN1T_ITS_Altitude altitude;
} ;

EXTERN int asn1PE_IVI_AbsolutePositionWAltitude (OSCTXT* pctxt, ASN1T_IVI_AbsolutePositionWAltitude* pvalue);

EXTERN int asn1PD_IVI_AbsolutePositionWAltitude (OSCTXT* pctxt, ASN1T_IVI_AbsolutePositionWAltitude* pvalue);

EXTERN int XmlEnc_IVI_AbsolutePositionWAltitude (OSCTXT* pctxt, 
   ASN1T_IVI_AbsolutePositionWAltitude* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_AbsolutePositionWAltitude (OSCTXT* pctxt, 
   ASN1T_IVI_AbsolutePositionWAltitude* pvalue);

EXTERN int asn1JsonEnc_IVI_AbsolutePositionWAltitude (OSCTXT *pctxt, ASN1T_IVI_AbsolutePositionWAltitude *pvalue);

EXTERN int asn1JsonDec_IVI_AbsolutePositionWAltitude (OSCTXT *pctxt, ASN1T_IVI_AbsolutePositionWAltitude *pvalue);

EXTERN int asn1PrtToStrm_IVI_AbsolutePositionWAltitude (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_AbsolutePositionWAltitude* pvalue);

EXTERN ASN1T_IVI_AbsolutePositionWAltitude* 
   new_ASN1T_IVI_AbsolutePositionWAltitude (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  PolygonalLine_absolutePositionsWithAltitude               */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PolygonalLine'
*/
/* List of ASN1T_IVI_AbsolutePositionWAltitude */
typedef ASN1TSeqOfList ASN1T_IVI_PolygonalLine_absolutePositionsWithAltitude;

class EXTERN ASN1C_IVI_PolygonalLine_absolutePositionsWithAltitude :
public ASN1CSeqOfList
{
protected:
   ASN1T_IVI_PolygonalLine_absolutePositionsWithAltitude& msgData;
public:
   /**
    * Control class: ASN1C_IVI_PolygonalLine_absolutePositionsWithAltitude
    * Data class:    ASN1T_IVI_PolygonalLine_absolutePositionsWithAltitude
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_IVI_PolygonalLine_absolutePositionsWithAltitude
       (ASN1T_IVI_PolygonalLine_absolutePositionsWithAltitude& data);

   /**
    * Control class: ASN1C_IVI_PolygonalLine_absolutePositionsWithAltitude<br/>
    * Data class: ASN1T_IVI_PolygonalLine_absolutePositionsWithAltitude<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_IVI_PolygonalLine_absolutePositionsWithAltitude (
      OSRTMessageBufferIF& msgBuf
      , ASN1T_IVI_PolygonalLine_absolutePositionsWithAltitude& data);

   /**
    * Control class: ASN1C_IVI_PolygonalLine_absolutePositionsWithAltitude<br/>
    * Data class: ASN1T_IVI_PolygonalLine_absolutePositionsWithAltitude<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_IVI_PolygonalLine_absolutePositionsWithAltitude (ASN1CType& ccobj
      , ASN1T_IVI_PolygonalLine_absolutePositionsWithAltitude& data);

   virtual ~ASN1C_IVI_PolygonalLine_absolutePositionsWithAltitude () {}

   /**
    * Data class: ASN1T_IVI_AbsolutePositionWAltitude<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_IVI_AbsolutePositionWAltitude* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_IVI_AbsolutePositionWAltitude.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_IVI_AbsolutePositionWAltitude* NewElement ();

   /**
    * Data class: ASN1T_IVI_AbsolutePositionWAltitude.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_IVI_AbsolutePositionWAltitude* AppendNewElement ();

private:
   ASN1C_IVI_PolygonalLine_absolutePositionsWithAltitude& operator= (const ASN1C_IVI_PolygonalLine_absolutePositionsWithAltitude&) {return *this;}
} ;

EXTERN int asn1PE_IVI_PolygonalLine_absolutePositionsWithAltitude (OSCTXT* pctxt, ASN1T_IVI_PolygonalLine_absolutePositionsWithAltitude* pvalue);

EXTERN int asn1PD_IVI_PolygonalLine_absolutePositionsWithAltitude (OSCTXT* pctxt, ASN1T_IVI_PolygonalLine_absolutePositionsWithAltitude* pvalue);

EXTERN int XmlEnc_IVI_PolygonalLine_absolutePositionsWithAltitude 
   (OSCTXT* pctxt, 
   ASN1T_IVI_PolygonalLine_absolutePositionsWithAltitude* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_PolygonalLine_absolutePositionsWithAltitude 
   (OSCTXT* pctxt, 
   ASN1T_IVI_PolygonalLine_absolutePositionsWithAltitude* pvalue);

EXTERN int asn1JsonEnc_IVI_PolygonalLine_absolutePositionsWithAltitude (OSCTXT *pctxt, ASN1T_IVI_PolygonalLine_absolutePositionsWithAltitude *pvalue);

EXTERN int asn1JsonDec_IVI_PolygonalLine_absolutePositionsWithAltitude (OSCTXT *pctxt, ASN1T_IVI_PolygonalLine_absolutePositionsWithAltitude *pvalue);

EXTERN int asn1PrtToStrm_IVI_PolygonalLine_absolutePositionsWithAltitude (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_PolygonalLine_absolutePositionsWithAltitude* pvalue);

EXTERN int asn1Init_IVI_PolygonalLine_absolutePositionsWithAltitude (
   ASN1T_IVI_PolygonalLine_absolutePositionsWithAltitude* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_PolygonalLine_absolutePositionsWithAltitude (OSCTXT *pctxt, 
   ASN1T_IVI_PolygonalLine_absolutePositionsWithAltitude* pvalue);

/**************************************************************/
/*                                                            */
/*  PolygonalLine                                             */
/*                                                            */
/**************************************************************/
/*
PolygonalLine ::= CHOICE {
   deltaPositions [0] SEQUENCE (SIZE (1..32, ...)) OF DeltaPosition,
   deltaPositionsWithAltitude [1] SEQUENCE (SIZE (1..32, ...)) OF DeltaReferencePosition,
   absolutePositions [2] SEQUENCE (SIZE (1..8, ...)) OF AbsolutePosition,
   absolutePositionsWithAltitude [3] SEQUENCE (SIZE (1..8, ...)) OF AbsolutePositionWAltitude,
   ...
}
*/
/* Choice tag constants */

#define T_IVI_PolygonalLine_deltaPositions 1
#define T_IVI_PolygonalLine_deltaPositionsWithAltitude 2
#define T_IVI_PolygonalLine_absolutePositions 3
#define T_IVI_PolygonalLine_absolutePositionsWithAltitude 4
#define T_IVI_PolygonalLine_extElem1    5

struct EXTERN ASN1T_IVI_PolygonalLine {
   OSINT32 t;
   union {
      /* t = 1 */
      ASN1T_IVI_PolygonalLine_deltaPositions *deltaPositions;
      /* t = 2 */
      ASN1T_IVI_PolygonalLine_deltaPositionsWithAltitude *deltaPositionsWithAltitude;
      /* t = 3 */
      ASN1T_IVI_PolygonalLine_absolutePositions *absolutePositions;
      /* t = 4 */
      ASN1T_IVI_PolygonalLine_absolutePositionsWithAltitude *absolutePositionsWithAltitude;
      /* t = 5 */
      ASN1TOpenType *extElem1;
   } u;
   ASN1T_IVI_PolygonalLine () { t = 0; OSCRTLMEMSET (&u, 0, sizeof(u)); }
} ;

EXTERN int asn1PE_IVI_PolygonalLine (OSCTXT* pctxt, ASN1T_IVI_PolygonalLine* pvalue);

EXTERN int asn1PD_IVI_PolygonalLine (OSCTXT* pctxt, ASN1T_IVI_PolygonalLine* pvalue);

EXTERN int XmlEnc_IVI_PolygonalLine (OSCTXT* pctxt, 
   ASN1T_IVI_PolygonalLine* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_PolygonalLine (OSCTXT* pctxt, 
   ASN1T_IVI_PolygonalLine* pvalue);

EXTERN int asn1JsonEnc_IVI_PolygonalLine (OSCTXT *pctxt, ASN1T_IVI_PolygonalLine *pvalue);

EXTERN int asn1JsonDec_IVI_PolygonalLine (OSCTXT *pctxt, ASN1T_IVI_PolygonalLine *pvalue);

EXTERN int asn1PrtToStrm_IVI_PolygonalLine (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_PolygonalLine* pvalue);

EXTERN ASN1T_IVI_PolygonalLine* new_ASN1T_IVI_PolygonalLine (ASN1CType& ccobj)
   ;

EXTERN int asn1Init_IVI_PolygonalLine (ASN1T_IVI_PolygonalLine* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_PolygonalLine (OSCTXT *pctxt, 
   ASN1T_IVI_PolygonalLine* pvalue);

/**************************************************************/
/*                                                            */
/*  IVILaneWidth                                              */
/*                                                            */
/**************************************************************/
/*
 Prefix IVI added due to naming collision with data element LaneWidth of Module DSRC
IVILaneWidth ::= INTEGER (0..1023)
*/
typedef OSUINT16 ASN1T_IVI_IVILaneWidth;

EXTERN int asn1PE_IVI_IVILaneWidth (OSCTXT* pctxt, ASN1T_IVI_IVILaneWidth value);

EXTERN int asn1PD_IVI_IVILaneWidth (OSCTXT* pctxt, ASN1T_IVI_IVILaneWidth* pvalue);

EXTERN int XmlEnc_IVI_IVILaneWidth (OSCTXT* pctxt, 
   ASN1T_IVI_IVILaneWidth value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_IVILaneWidth (OSCTXT* pctxt, 
   ASN1T_IVI_IVILaneWidth* pvalue);

EXTERN int asn1JsonEnc_IVI_IVILaneWidth (OSCTXT *pctxt, ASN1T_IVI_IVILaneWidth *pvalue);

EXTERN int asn1JsonDec_IVI_IVILaneWidth (OSCTXT *pctxt, ASN1T_IVI_IVILaneWidth *pvalue);

EXTERN int asn1PrtToStrm_IVI_IVILaneWidth (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_IVILaneWidth* pvalue);

EXTERN ASN1T_IVI_IVILaneWidth* new_ASN1T_IVI_IVILaneWidth (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  Segment                                                   */
/*                                                            */
/**************************************************************/
/*
Segment ::= SEQUENCE {
   line [0] EXPLICIT PolygonalLine,
   laneWidth [1] IVILaneWidth OPTIONAL
}
*/
struct EXTERN ASN1T_IVI_Segment {
   struct {
      unsigned laneWidthPresent : 1;
   } m;
   ASN1T_IVI_PolygonalLine line;
   ASN1T_IVI_IVILaneWidth laneWidth;
   ASN1T_IVI_Segment ();
} ;

EXTERN int asn1PE_IVI_Segment (OSCTXT* pctxt, ASN1T_IVI_Segment* pvalue);

EXTERN int asn1PD_IVI_Segment (OSCTXT* pctxt, ASN1T_IVI_Segment* pvalue);

EXTERN int XmlEnc_IVI_Segment (OSCTXT* pctxt, ASN1T_IVI_Segment* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_Segment (OSCTXT* pctxt, ASN1T_IVI_Segment* pvalue);

EXTERN int asn1JsonEnc_IVI_Segment (OSCTXT *pctxt, ASN1T_IVI_Segment *pvalue);

EXTERN int asn1JsonDec_IVI_Segment (OSCTXT *pctxt, ASN1T_IVI_Segment *pvalue);

EXTERN int asn1PrtToStrm_IVI_Segment (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_Segment* pvalue);

EXTERN ASN1T_IVI_Segment* new_ASN1T_IVI_Segment (ASN1CType& ccobj);

EXTERN int asn1Init_IVI_Segment (ASN1T_IVI_Segment* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_Segment (OSCTXT *pctxt, ASN1T_IVI_Segment* pvalue);

/**************************************************************/
/*                                                            */
/*  ComputedSegment                                           */
/*                                                            */
/**************************************************************/
/*
ComputedSegment ::= SEQUENCE {
   zoneId [0] Zid,
   laneNumber [1] LanePosition,
   laneWidth [2] IVILaneWidth,
   offsetDistance [3] INTEGER (-32768..32767) OPTIONAL,
   offsetPosition [4] DeltaReferencePosition OPTIONAL
}
*/
struct EXTERN ASN1T_IVI_ComputedSegment {
   struct {
      unsigned offsetDistancePresent : 1;
      unsigned offsetPositionPresent : 1;
   } m;
   ASN1T_IVI_Zid zoneId;
   ASN1T_ITS_LanePosition laneNumber;
   ASN1T_IVI_IVILaneWidth laneWidth;
   OSINT16 offsetDistance;
   ASN1T_ITS_DeltaReferencePosition offsetPosition;
   ASN1T_IVI_ComputedSegment ();
} ;

EXTERN int asn1PE_IVI_ComputedSegment (OSCTXT* pctxt, ASN1T_IVI_ComputedSegment* pvalue);

EXTERN int asn1PD_IVI_ComputedSegment (OSCTXT* pctxt, ASN1T_IVI_ComputedSegment* pvalue);

EXTERN int XmlEnc_IVI_ComputedSegment (OSCTXT* pctxt, 
   ASN1T_IVI_ComputedSegment* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_ComputedSegment (OSCTXT* pctxt, 
   ASN1T_IVI_ComputedSegment* pvalue);

EXTERN int asn1JsonEnc_IVI_ComputedSegment (OSCTXT *pctxt, ASN1T_IVI_ComputedSegment *pvalue);

EXTERN int asn1JsonDec_IVI_ComputedSegment (OSCTXT *pctxt, ASN1T_IVI_ComputedSegment *pvalue);

EXTERN int asn1PrtToStrm_IVI_ComputedSegment (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_ComputedSegment* pvalue);

EXTERN ASN1T_IVI_ComputedSegment* 
   new_ASN1T_IVI_ComputedSegment (ASN1CType& ccobj);

EXTERN int asn1Init_IVI_ComputedSegment (ASN1T_IVI_ComputedSegment* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

/**************************************************************/
/*                                                            */
/*  Zone                                                      */
/*                                                            */
/**************************************************************/
/*
Zone ::= CHOICE {
   segment [0] Segment,
   area [1] EXPLICIT PolygonalLine,
   computedSegment [2] ComputedSegment,
   ...
}
*/
/* Choice tag constants */

#define T_IVI_Zone_segment              1
#define T_IVI_Zone_area                 2
#define T_IVI_Zone_computedSegment      3
#define T_IVI_Zone_extElem1             4

struct EXTERN ASN1T_IVI_Zone {
   OSINT32 t;
   union {
      /* t = 1 */
      ASN1T_IVI_Segment *segment;
      /* t = 2 */
      ASN1T_IVI_PolygonalLine *area;
      /* t = 3 */
      ASN1T_IVI_ComputedSegment *computedSegment;
      /* t = 4 */
      ASN1TOpenType *extElem1;
   } u;
   ASN1T_IVI_Zone () { t = 0; OSCRTLMEMSET (&u, 0, sizeof(u)); }
} ;

EXTERN int asn1PE_IVI_Zone (OSCTXT* pctxt, ASN1T_IVI_Zone* pvalue);

EXTERN int asn1PD_IVI_Zone (OSCTXT* pctxt, ASN1T_IVI_Zone* pvalue);

EXTERN int XmlEnc_IVI_Zone (OSCTXT* pctxt, ASN1T_IVI_Zone* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_Zone (OSCTXT* pctxt, ASN1T_IVI_Zone* pvalue);

EXTERN int asn1JsonEnc_IVI_Zone (OSCTXT *pctxt, ASN1T_IVI_Zone *pvalue);

EXTERN int asn1JsonDec_IVI_Zone (OSCTXT *pctxt, ASN1T_IVI_Zone *pvalue);

EXTERN int asn1PrtToStrm_IVI_Zone (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_Zone* pvalue);

EXTERN ASN1T_IVI_Zone* new_ASN1T_IVI_Zone (ASN1CType& ccobj);

EXTERN int asn1Init_IVI_Zone (ASN1T_IVI_Zone* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_Zone (OSCTXT *pctxt, ASN1T_IVI_Zone* pvalue);

/**************************************************************/
/*                                                            */
/*  GlcPart                                                   */
/*                                                            */
/**************************************************************/
/*
GlcPart ::= SEQUENCE {
   zoneId [0] Zid,
   laneNumber [1] LanePosition OPTIONAL,
   zoneExtension [2] INTEGER (0..255) OPTIONAL,
   zoneHeading [3] HeadingValue OPTIONAL,
   zone [4] EXPLICIT Zone OPTIONAL,
   ...
}
*/
struct EXTERN ASN1T_IVI_GlcPart {
   struct {
      unsigned laneNumberPresent : 1;
      unsigned zoneExtensionPresent : 1;
      unsigned zoneHeadingPresent : 1;
      unsigned zonePresent : 1;
   } m;
   ASN1T_IVI_Zid zoneId;
   ASN1T_ITS_LanePosition laneNumber;
   OSUINT8 zoneExtension;
   ASN1T_ITS_HeadingValue zoneHeading;
   ASN1T_IVI_Zone zone;
   ASN1TSeqExt extElem1;
   ASN1T_IVI_GlcPart ();
} ;

EXTERN int asn1PE_IVI_GlcPart (OSCTXT* pctxt, ASN1T_IVI_GlcPart* pvalue);

EXTERN int asn1PD_IVI_GlcPart (OSCTXT* pctxt, ASN1T_IVI_GlcPart* pvalue);

EXTERN int XmlEnc_IVI_GlcPart (OSCTXT* pctxt, ASN1T_IVI_GlcPart* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_GlcPart (OSCTXT* pctxt, ASN1T_IVI_GlcPart* pvalue);

EXTERN int asn1JsonEnc_IVI_GlcPart (OSCTXT *pctxt, ASN1T_IVI_GlcPart *pvalue);

EXTERN int asn1JsonDec_IVI_GlcPart (OSCTXT *pctxt, ASN1T_IVI_GlcPart *pvalue);

EXTERN int asn1PrtToStrm_IVI_GlcPart (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_GlcPart* pvalue);

EXTERN ASN1T_IVI_GlcPart* new_ASN1T_IVI_GlcPart (ASN1CType& ccobj);

EXTERN int asn1Init_IVI_GlcPart (ASN1T_IVI_GlcPart* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_GlcPart (OSCTXT *pctxt, ASN1T_IVI_GlcPart* pvalue);

/**************************************************************/
/*                                                            */
/*  GeographicLocationContainer_parts                         */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'GeographicLocationContainer'
*/
/* List of ASN1T_IVI_GlcPart */
typedef ASN1TSeqOfList ASN1T_IVI_GeographicLocationContainer_parts;

class EXTERN ASN1C_IVI_GeographicLocationContainer_parts :
public ASN1CSeqOfList
{
protected:
   ASN1T_IVI_GeographicLocationContainer_parts& msgData;
public:
   /**
    * Control class: ASN1C_IVI_GeographicLocationContainer_parts
    * Data class:    ASN1T_IVI_GeographicLocationContainer_parts
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_IVI_GeographicLocationContainer_parts
       (ASN1T_IVI_GeographicLocationContainer_parts& data);

   /**
    * Control class: ASN1C_IVI_GeographicLocationContainer_parts<br/>
    * Data class: ASN1T_IVI_GeographicLocationContainer_parts<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_IVI_GeographicLocationContainer_parts (OSRTMessageBufferIF& msgBuf
      , ASN1T_IVI_GeographicLocationContainer_parts& data);

   /**
    * Control class: ASN1C_IVI_GeographicLocationContainer_parts<br/>
    * Data class: ASN1T_IVI_GeographicLocationContainer_parts<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_IVI_GeographicLocationContainer_parts (ASN1CType& ccobj
      , ASN1T_IVI_GeographicLocationContainer_parts& data);

   virtual ~ASN1C_IVI_GeographicLocationContainer_parts () {}

   /**
    * Data class: ASN1T_IVI_GlcPart<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_IVI_GlcPart* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_IVI_GlcPart.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_IVI_GlcPart* NewElement ();

   /**
    * Data class: ASN1T_IVI_GlcPart.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_IVI_GlcPart* AppendNewElement ();

private:
   ASN1C_IVI_GeographicLocationContainer_parts& operator= (const ASN1C_IVI_GeographicLocationContainer_parts&) {return *this;}
} ;

EXTERN int asn1PE_IVI_GeographicLocationContainer_parts (OSCTXT* pctxt, ASN1T_IVI_GeographicLocationContainer_parts* pvalue);

EXTERN int asn1PD_IVI_GeographicLocationContainer_parts (OSCTXT* pctxt, ASN1T_IVI_GeographicLocationContainer_parts* pvalue);

EXTERN int XmlEnc_IVI_GeographicLocationContainer_parts (OSCTXT* pctxt, 
   ASN1T_IVI_GeographicLocationContainer_parts* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_GeographicLocationContainer_parts (OSCTXT* pctxt, 
   ASN1T_IVI_GeographicLocationContainer_parts* pvalue);

EXTERN int asn1JsonEnc_IVI_GeographicLocationContainer_parts (OSCTXT *pctxt, ASN1T_IVI_GeographicLocationContainer_parts *pvalue);

EXTERN int asn1JsonDec_IVI_GeographicLocationContainer_parts (OSCTXT *pctxt, ASN1T_IVI_GeographicLocationContainer_parts *pvalue);

EXTERN int asn1PrtToStrm_IVI_GeographicLocationContainer_parts (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_GeographicLocationContainer_parts* pvalue);

EXTERN int asn1Init_IVI_GeographicLocationContainer_parts (
   ASN1T_IVI_GeographicLocationContainer_parts* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_GeographicLocationContainer_parts (OSCTXT *pctxt, 
   ASN1T_IVI_GeographicLocationContainer_parts* pvalue);

/**************************************************************/
/*                                                            */
/*  GeographicLocationContainer                               */
/*                                                            */
/**************************************************************/
/*
GeographicLocationContainer ::= SEQUENCE {
   referencePosition [0] ReferencePosition,
   referencePositionTime [1] TimestampIts OPTIONAL,
   referencePositionHeading [2] Heading OPTIONAL,
   referencePositionSpeed [3] Speed OPTIONAL,
   parts [4] SEQUENCE (SIZE (1..16, ...)) OF GlcPart,
   ...
}
*/
struct EXTERN ASN1T_IVI_GeographicLocationContainer {
   struct {
      unsigned referencePositionTimePresent : 1;
      unsigned referencePositionHeadingPresent : 1;
      unsigned referencePositionSpeedPresent : 1;
   } m;
   ASN1T_ITS_ReferencePosition referencePosition;
   ASN1T_ITS_TimestampIts referencePositionTime;
   ASN1T_ITS_Heading referencePositionHeading;
   ASN1T_ITS_Speed referencePositionSpeed;
   ASN1T_IVI_GeographicLocationContainer_parts parts;
   ASN1TSeqExt extElem1;
   ASN1T_IVI_GeographicLocationContainer ();
} ;

EXTERN int asn1PE_IVI_GeographicLocationContainer (OSCTXT* pctxt, ASN1T_IVI_GeographicLocationContainer* pvalue);

EXTERN int asn1PD_IVI_GeographicLocationContainer (OSCTXT* pctxt, ASN1T_IVI_GeographicLocationContainer* pvalue);

EXTERN int XmlEnc_IVI_GeographicLocationContainer (OSCTXT* pctxt, 
   ASN1T_IVI_GeographicLocationContainer* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_GeographicLocationContainer (OSCTXT* pctxt, 
   ASN1T_IVI_GeographicLocationContainer* pvalue);

EXTERN int asn1JsonEnc_IVI_GeographicLocationContainer (OSCTXT *pctxt, ASN1T_IVI_GeographicLocationContainer *pvalue);

EXTERN int asn1JsonDec_IVI_GeographicLocationContainer (OSCTXT *pctxt, ASN1T_IVI_GeographicLocationContainer *pvalue);

EXTERN int asn1PrtToStrm_IVI_GeographicLocationContainer (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_GeographicLocationContainer* pvalue);

EXTERN ASN1T_IVI_GeographicLocationContainer* 
   new_ASN1T_IVI_GeographicLocationContainer (ASN1CType& ccobj);

EXTERN int asn1Init_IVI_GeographicLocationContainer (
   ASN1T_IVI_GeographicLocationContainer* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_GeographicLocationContainer (OSCTXT *pctxt, 
   ASN1T_IVI_GeographicLocationContainer* pvalue);

/**************************************************************/
/*                                                            */
/*  GicPart_detectionZoneIds                                  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'GicPart'
*/
typedef struct EXTERN ASN1T_IVI_GicPart_detectionZoneIds {
   OSSIZE n;
   ASN1T_IVI_Zid *elem;
   ASN1T_IVI_GicPart_detectionZoneIds () : n(0), elem(0) {}
} ASN1T_IVI_GicPart_detectionZoneIds;

class EXTERN ASN1C_IVI_GicPart_detectionZoneIds :
public ASN1CType
{
protected:
   ASN1T_IVI_GicPart_detectionZoneIds& msgData;
public:
   /**
    * Control class: ASN1C_IVI_GicPart_detectionZoneIds
    * Data class:    ASN1T_IVI_GicPart_detectionZoneIds
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_IVI_GicPart_detectionZoneIds
       (ASN1T_IVI_GicPart_detectionZoneIds& data);

   /**
    * Control class: ASN1C_IVI_GicPart_detectionZoneIds<br/>
    * Data class: ASN1T_IVI_GicPart_detectionZoneIds<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_IVI_GicPart_detectionZoneIds (OSRTMessageBufferIF& msgBuf
      , ASN1T_IVI_GicPart_detectionZoneIds& data);

   /**
    * Control class: ASN1C_IVI_GicPart_detectionZoneIds<br/>
    * Data class: ASN1T_IVI_GicPart_detectionZoneIds<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_IVI_GicPart_detectionZoneIds (ASN1CType& ccobj
      , ASN1T_IVI_GicPart_detectionZoneIds& data);

   virtual ~ASN1C_IVI_GicPart_detectionZoneIds () {}

private:
   ASN1C_IVI_GicPart_detectionZoneIds& operator= (const ASN1C_IVI_GicPart_detectionZoneIds&) {return *this;}
} ;

EXTERN int asn1PE_IVI_GicPart_detectionZoneIds (OSCTXT* pctxt, ASN1T_IVI_GicPart_detectionZoneIds* pvalue);

EXTERN int asn1PD_IVI_GicPart_detectionZoneIds (OSCTXT* pctxt, ASN1T_IVI_GicPart_detectionZoneIds* pvalue);

EXTERN int XmlEnc_IVI_GicPart_detectionZoneIds (OSCTXT* pctxt, 
   ASN1T_IVI_GicPart_detectionZoneIds* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_GicPart_detectionZoneIds (OSCTXT* pctxt, 
   ASN1T_IVI_GicPart_detectionZoneIds* pvalue);

EXTERN int asn1JsonEnc_IVI_GicPart_detectionZoneIds (OSCTXT *pctxt, ASN1T_IVI_GicPart_detectionZoneIds *pvalue);

EXTERN int asn1JsonDec_IVI_GicPart_detectionZoneIds (OSCTXT *pctxt, ASN1T_IVI_GicPart_detectionZoneIds *pvalue);

EXTERN int asn1PrtToStrm_IVI_GicPart_detectionZoneIds (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_GicPart_detectionZoneIds* pvalue);

EXTERN int asn1Init_IVI_GicPart_detectionZoneIds (
   ASN1T_IVI_GicPart_detectionZoneIds* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_GicPart_detectionZoneIds (OSCTXT *pctxt, 
   ASN1T_IVI_GicPart_detectionZoneIds* pvalue);

/**************************************************************/
/*                                                            */
/*  GicPart_relevanceZoneIds                                  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'GicPart'
*/
typedef struct EXTERN ASN1T_IVI_GicPart_relevanceZoneIds {
   OSSIZE n;
   ASN1T_IVI_Zid *elem;
   ASN1T_IVI_GicPart_relevanceZoneIds () : n(0), elem(0) {}
} ASN1T_IVI_GicPart_relevanceZoneIds;

class EXTERN ASN1C_IVI_GicPart_relevanceZoneIds :
public ASN1CType
{
protected:
   ASN1T_IVI_GicPart_relevanceZoneIds& msgData;
public:
   /**
    * Control class: ASN1C_IVI_GicPart_relevanceZoneIds
    * Data class:    ASN1T_IVI_GicPart_relevanceZoneIds
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_IVI_GicPart_relevanceZoneIds
       (ASN1T_IVI_GicPart_relevanceZoneIds& data);

   /**
    * Control class: ASN1C_IVI_GicPart_relevanceZoneIds<br/>
    * Data class: ASN1T_IVI_GicPart_relevanceZoneIds<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_IVI_GicPart_relevanceZoneIds (OSRTMessageBufferIF& msgBuf
      , ASN1T_IVI_GicPart_relevanceZoneIds& data);

   /**
    * Control class: ASN1C_IVI_GicPart_relevanceZoneIds<br/>
    * Data class: ASN1T_IVI_GicPart_relevanceZoneIds<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_IVI_GicPart_relevanceZoneIds (ASN1CType& ccobj
      , ASN1T_IVI_GicPart_relevanceZoneIds& data);

   virtual ~ASN1C_IVI_GicPart_relevanceZoneIds () {}

private:
   ASN1C_IVI_GicPart_relevanceZoneIds& operator= (const ASN1C_IVI_GicPart_relevanceZoneIds&) {return *this;}
} ;

EXTERN int asn1PE_IVI_GicPart_relevanceZoneIds (OSCTXT* pctxt, ASN1T_IVI_GicPart_relevanceZoneIds* pvalue);

EXTERN int asn1PD_IVI_GicPart_relevanceZoneIds (OSCTXT* pctxt, ASN1T_IVI_GicPart_relevanceZoneIds* pvalue);

EXTERN int XmlEnc_IVI_GicPart_relevanceZoneIds (OSCTXT* pctxt, 
   ASN1T_IVI_GicPart_relevanceZoneIds* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_GicPart_relevanceZoneIds (OSCTXT* pctxt, 
   ASN1T_IVI_GicPart_relevanceZoneIds* pvalue);

EXTERN int asn1JsonEnc_IVI_GicPart_relevanceZoneIds (OSCTXT *pctxt, ASN1T_IVI_GicPart_relevanceZoneIds *pvalue);

EXTERN int asn1JsonDec_IVI_GicPart_relevanceZoneIds (OSCTXT *pctxt, ASN1T_IVI_GicPart_relevanceZoneIds *pvalue);

EXTERN int asn1PrtToStrm_IVI_GicPart_relevanceZoneIds (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_GicPart_relevanceZoneIds* pvalue);

EXTERN int asn1Init_IVI_GicPart_relevanceZoneIds (
   ASN1T_IVI_GicPart_relevanceZoneIds* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_GicPart_relevanceZoneIds (OSCTXT *pctxt, 
   ASN1T_IVI_GicPart_relevanceZoneIds* pvalue);

/**************************************************************/
/*                                                            */
/*  Direction                                                 */
/*                                                            */
/**************************************************************/
/*
Direction ::= INTEGER { sameDirection(0), oppositeDirection(1), bothDirections(2), valueNotUsed(3) } (0..3)
*/
struct EXTERN IVI_Direction {
   enum Root {
      sameDirection = 0,
      oppositeDirection = 1,
      bothDirections = 2,
      valueNotUsed = 3
   } ;
} ;

typedef OSUINT8 ASN1T_IVI_Direction;

EXTERN int asn1PE_IVI_Direction (OSCTXT* pctxt, ASN1T_IVI_Direction value);

EXTERN int asn1PD_IVI_Direction (OSCTXT* pctxt, ASN1T_IVI_Direction* pvalue);

EXTERN int XmlEnc_IVI_Direction (OSCTXT* pctxt, ASN1T_IVI_Direction value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_Direction (OSCTXT* pctxt, ASN1T_IVI_Direction* pvalue);

EXTERN int asn1JsonEnc_IVI_Direction (OSCTXT *pctxt, ASN1T_IVI_Direction *pvalue);

EXTERN int asn1JsonDec_IVI_Direction (OSCTXT *pctxt, ASN1T_IVI_Direction *pvalue);

EXTERN int asn1PrtToStrm_IVI_Direction (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_Direction* pvalue);

EXTERN ASN1T_IVI_Direction* new_ASN1T_IVI_Direction (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  GicPart_driverAwarenessZoneIds                            */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'GicPart'
*/
typedef struct EXTERN ASN1T_IVI_GicPart_driverAwarenessZoneIds {
   OSSIZE n;
   ASN1T_IVI_Zid *elem;
   ASN1T_IVI_GicPart_driverAwarenessZoneIds () : n(0), elem(0) {}
} ASN1T_IVI_GicPart_driverAwarenessZoneIds;

class EXTERN ASN1C_IVI_GicPart_driverAwarenessZoneIds :
public ASN1CType
{
protected:
   ASN1T_IVI_GicPart_driverAwarenessZoneIds& msgData;
public:
   /**
    * Control class: ASN1C_IVI_GicPart_driverAwarenessZoneIds
    * Data class:    ASN1T_IVI_GicPart_driverAwarenessZoneIds
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_IVI_GicPart_driverAwarenessZoneIds
       (ASN1T_IVI_GicPart_driverAwarenessZoneIds& data);

   /**
    * Control class: ASN1C_IVI_GicPart_driverAwarenessZoneIds<br/>
    * Data class: ASN1T_IVI_GicPart_driverAwarenessZoneIds<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_IVI_GicPart_driverAwarenessZoneIds (OSRTMessageBufferIF& msgBuf
      , ASN1T_IVI_GicPart_driverAwarenessZoneIds& data);

   /**
    * Control class: ASN1C_IVI_GicPart_driverAwarenessZoneIds<br/>
    * Data class: ASN1T_IVI_GicPart_driverAwarenessZoneIds<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_IVI_GicPart_driverAwarenessZoneIds (ASN1CType& ccobj
      , ASN1T_IVI_GicPart_driverAwarenessZoneIds& data);

   virtual ~ASN1C_IVI_GicPart_driverAwarenessZoneIds () {}

private:
   ASN1C_IVI_GicPart_driverAwarenessZoneIds& operator= (const ASN1C_IVI_GicPart_driverAwarenessZoneIds&) {return *this;}
} ;

EXTERN int asn1PE_IVI_GicPart_driverAwarenessZoneIds (OSCTXT* pctxt, ASN1T_IVI_GicPart_driverAwarenessZoneIds* pvalue);

EXTERN int asn1PD_IVI_GicPart_driverAwarenessZoneIds (OSCTXT* pctxt, ASN1T_IVI_GicPart_driverAwarenessZoneIds* pvalue);

EXTERN int XmlEnc_IVI_GicPart_driverAwarenessZoneIds (OSCTXT* pctxt, 
   ASN1T_IVI_GicPart_driverAwarenessZoneIds* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_GicPart_driverAwarenessZoneIds (OSCTXT* pctxt, 
   ASN1T_IVI_GicPart_driverAwarenessZoneIds* pvalue);

EXTERN int asn1JsonEnc_IVI_GicPart_driverAwarenessZoneIds (OSCTXT *pctxt, ASN1T_IVI_GicPart_driverAwarenessZoneIds *pvalue);

EXTERN int asn1JsonDec_IVI_GicPart_driverAwarenessZoneIds (OSCTXT *pctxt, ASN1T_IVI_GicPart_driverAwarenessZoneIds *pvalue);

EXTERN int asn1PrtToStrm_IVI_GicPart_driverAwarenessZoneIds (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_GicPart_driverAwarenessZoneIds* pvalue);

EXTERN int asn1Init_IVI_GicPart_driverAwarenessZoneIds (
   ASN1T_IVI_GicPart_driverAwarenessZoneIds* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_GicPart_driverAwarenessZoneIds (OSCTXT *pctxt, 
   ASN1T_IVI_GicPart_driverAwarenessZoneIds* pvalue);

/**************************************************************/
/*                                                            */
/*  GicPart_applicableLanes                                   */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'GicPart'
*/
typedef struct EXTERN ASN1T_IVI_GicPart_applicableLanes {
   OSSIZE n;
   ASN1T_ITS_LanePosition *elem;
   ASN1T_IVI_GicPart_applicableLanes () : n(0), elem(0) {}
} ASN1T_IVI_GicPart_applicableLanes;

class EXTERN ASN1C_IVI_GicPart_applicableLanes :
public ASN1CType
{
protected:
   ASN1T_IVI_GicPart_applicableLanes& msgData;
public:
   /**
    * Control class: ASN1C_IVI_GicPart_applicableLanes
    * Data class:    ASN1T_IVI_GicPart_applicableLanes
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_IVI_GicPart_applicableLanes (ASN1T_IVI_GicPart_applicableLanes& data);

   /**
    * Control class: ASN1C_IVI_GicPart_applicableLanes<br/>
    * Data class: ASN1T_IVI_GicPart_applicableLanes<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_IVI_GicPart_applicableLanes (OSRTMessageBufferIF& msgBuf
      , ASN1T_IVI_GicPart_applicableLanes& data);

   /**
    * Control class: ASN1C_IVI_GicPart_applicableLanes<br/>
    * Data class: ASN1T_IVI_GicPart_applicableLanes<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_IVI_GicPart_applicableLanes (ASN1CType& ccobj
      , ASN1T_IVI_GicPart_applicableLanes& data);

   virtual ~ASN1C_IVI_GicPart_applicableLanes () {}

private:
   ASN1C_IVI_GicPart_applicableLanes& operator= (const ASN1C_IVI_GicPart_applicableLanes&) {return *this;}
} ;

EXTERN int asn1PE_IVI_GicPart_applicableLanes (OSCTXT* pctxt, ASN1T_IVI_GicPart_applicableLanes* pvalue);

EXTERN int asn1PD_IVI_GicPart_applicableLanes (OSCTXT* pctxt, ASN1T_IVI_GicPart_applicableLanes* pvalue);

EXTERN int XmlEnc_IVI_GicPart_applicableLanes (OSCTXT* pctxt, 
   ASN1T_IVI_GicPart_applicableLanes* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_GicPart_applicableLanes (OSCTXT* pctxt, 
   ASN1T_IVI_GicPart_applicableLanes* pvalue);

EXTERN int asn1JsonEnc_IVI_GicPart_applicableLanes (OSCTXT *pctxt, ASN1T_IVI_GicPart_applicableLanes *pvalue);

EXTERN int asn1JsonDec_IVI_GicPart_applicableLanes (OSCTXT *pctxt, ASN1T_IVI_GicPart_applicableLanes *pvalue);

EXTERN int asn1PrtToStrm_IVI_GicPart_applicableLanes (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_GicPart_applicableLanes* pvalue);

EXTERN int asn1Init_IVI_GicPart_applicableLanes (
   ASN1T_IVI_GicPart_applicableLanes* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_GicPart_applicableLanes (OSCTXT *pctxt, 
   ASN1T_IVI_GicPart_applicableLanes* pvalue);

/**************************************************************/
/*                                                            */
/*  IviType                                                   */
/*                                                            */
/**************************************************************/
/*
IviType ::= INTEGER { immediateDangerWarningMessages(0), regulatoryMessages(1), trafficRelatedInformationMessages(2), pollutionMessages(3), notTrafficRelatedInformationMessages(4) } (0..7)
*/
struct EXTERN IVI_IviType {
   enum Root {
      immediateDangerWarningMessages = 0,
      regulatoryMessages = 1,
      trafficRelatedInformationMessages = 2,
      pollutionMessages = 3,
      notTrafficRelatedInformationMessages = 4
   } ;
} ;

typedef OSUINT8 ASN1T_IVI_IviType;

EXTERN int asn1PE_IVI_IviType (OSCTXT* pctxt, ASN1T_IVI_IviType value);

EXTERN int asn1PD_IVI_IviType (OSCTXT* pctxt, ASN1T_IVI_IviType* pvalue);

EXTERN int XmlEnc_IVI_IviType (OSCTXT* pctxt, ASN1T_IVI_IviType value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_IviType (OSCTXT* pctxt, ASN1T_IVI_IviType* pvalue);

EXTERN int asn1JsonEnc_IVI_IviType (OSCTXT *pctxt, ASN1T_IVI_IviType *pvalue);

EXTERN int asn1JsonDec_IVI_IviType (OSCTXT *pctxt, ASN1T_IVI_IviType *pvalue);

EXTERN int asn1PrtToStrm_IVI_IviType (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_IviType* pvalue);

EXTERN ASN1T_IVI_IviType* new_ASN1T_IVI_IviType (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  IviPurpose                                                */
/*                                                            */
/**************************************************************/
/*
IviPurpose ::= INTEGER { safety(0), environmental(1), trafficOptimisation(2) } (0..3)
*/
struct EXTERN IVI_IviPurpose {
   enum Root {
      safety = 0,
      environmental = 1,
      trafficOptimisation = 2
   } ;
} ;

typedef OSUINT8 ASN1T_IVI_IviPurpose;

EXTERN int asn1PE_IVI_IviPurpose (OSCTXT* pctxt, ASN1T_IVI_IviPurpose value);

EXTERN int asn1PD_IVI_IviPurpose (OSCTXT* pctxt, ASN1T_IVI_IviPurpose* pvalue);

EXTERN int XmlEnc_IVI_IviPurpose (OSCTXT* pctxt, ASN1T_IVI_IviPurpose value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_IviPurpose (OSCTXT* pctxt, ASN1T_IVI_IviPurpose* pvalue)
   ;

EXTERN int asn1JsonEnc_IVI_IviPurpose (OSCTXT *pctxt, ASN1T_IVI_IviPurpose *pvalue);

EXTERN int asn1JsonDec_IVI_IviPurpose (OSCTXT *pctxt, ASN1T_IVI_IviPurpose *pvalue);

EXTERN int asn1PrtToStrm_IVI_IviPurpose (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_IviPurpose* pvalue);

EXTERN ASN1T_IVI_IviPurpose* new_ASN1T_IVI_IviPurpose (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  LaneStatus                                                */
/*                                                            */
/**************************************************************/
/*
LaneStatus ::= INTEGER { open(0), closed(1), mergeR(2), mergeL(3), mergeLR(4), provisionallyOpen(5), diverging(6) } (0..7, ...)
*/
struct EXTERN IVI_LaneStatus {
   enum Root {
      open_ = 0,
      closed = 1,
      mergeR = 2,
      mergeL = 3,
      mergeLR = 4,
      provisionallyOpen = 5,
      diverging = 6
   } ;
} ;

typedef OSUINT32 ASN1T_IVI_LaneStatus;

EXTERN int asn1PE_IVI_LaneStatus (OSCTXT* pctxt, ASN1T_IVI_LaneStatus value);

EXTERN int asn1PD_IVI_LaneStatus (OSCTXT* pctxt, ASN1T_IVI_LaneStatus* pvalue);

EXTERN int XmlEnc_IVI_LaneStatus (OSCTXT* pctxt, ASN1T_IVI_LaneStatus value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_LaneStatus (OSCTXT* pctxt, ASN1T_IVI_LaneStatus* pvalue)
   ;

EXTERN int asn1JsonEnc_IVI_LaneStatus (OSCTXT *pctxt, ASN1T_IVI_LaneStatus *pvalue);

EXTERN int asn1JsonDec_IVI_LaneStatus (OSCTXT *pctxt, ASN1T_IVI_LaneStatus *pvalue);

EXTERN int asn1PrtToStrm_IVI_LaneStatus (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_LaneStatus* pvalue);

EXTERN ASN1T_IVI_LaneStatus* new_ASN1T_IVI_LaneStatus (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  GoodsType                                                 */
/*                                                            */
/**************************************************************/
/*
GoodsType ::= INTEGER { ammunition(0), chemicals(1), empty(2), fuel(3), glass(4), dangerous(5), liquid(6), liveStock(7), dangerousForPeople(8), dangerousForTheEnvironment(9), dangerousForWater(10), perishableProducts(11), pharmaceutical(12), vehicles(13) } (0..15, ...)
*/
struct EXTERN IVI_GoodsType {
   enum Root {
      ammunition = 0,
      chemicals = 1,
      empty = 2,
      fuel = 3,
      glass = 4,
      dangerous = 5,
      liquid = 6,
      liveStock = 7,
      dangerousForPeople = 8,
      dangerousForTheEnvironment = 9,
      dangerousForWater = 10,
      perishableProducts = 11,
      pharmaceutical = 12,
      vehicles = 13
   } ;
} ;

typedef OSUINT32 ASN1T_IVI_GoodsType;

EXTERN int asn1PE_IVI_GoodsType (OSCTXT* pctxt, ASN1T_IVI_GoodsType value);

EXTERN int asn1PD_IVI_GoodsType (OSCTXT* pctxt, ASN1T_IVI_GoodsType* pvalue);

EXTERN int XmlEnc_IVI_GoodsType (OSCTXT* pctxt, ASN1T_IVI_GoodsType value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_GoodsType (OSCTXT* pctxt, ASN1T_IVI_GoodsType* pvalue);

EXTERN int asn1JsonEnc_IVI_GoodsType (OSCTXT *pctxt, ASN1T_IVI_GoodsType *pvalue);

EXTERN int asn1JsonDec_IVI_GoodsType (OSCTXT *pctxt, ASN1T_IVI_GoodsType *pvalue);

EXTERN int asn1PrtToStrm_IVI_GoodsType (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_GoodsType* pvalue);

EXTERN ASN1T_IVI_GoodsType* new_ASN1T_IVI_GoodsType (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  LoadType                                                  */
/*                                                            */
/**************************************************************/
/*
LoadType ::= SEQUENCE {
   goodsType [0] GoodsType,
   dangerousGoodsType [1] DangerousGoodsBasic,
   specialTransportType [2] SpecialTransportType
}
*/
struct EXTERN ASN1T_IVI_LoadType {
   ASN1T_IVI_GoodsType goodsType;
   ASN1T_ITS_DangerousGoodsBasic dangerousGoodsType;
   ASN1T_ITS_SpecialTransportType specialTransportType;
} ;

EXTERN int asn1PE_IVI_LoadType (OSCTXT* pctxt, ASN1T_IVI_LoadType* pvalue);

EXTERN int asn1PD_IVI_LoadType (OSCTXT* pctxt, ASN1T_IVI_LoadType* pvalue);

EXTERN int XmlEnc_IVI_LoadType (OSCTXT* pctxt, ASN1T_IVI_LoadType* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_LoadType (OSCTXT* pctxt, ASN1T_IVI_LoadType* pvalue);

EXTERN int asn1JsonEnc_IVI_LoadType (OSCTXT *pctxt, ASN1T_IVI_LoadType *pvalue);

EXTERN int asn1JsonDec_IVI_LoadType (OSCTXT *pctxt, ASN1T_IVI_LoadType *pvalue);

EXTERN int asn1PrtToStrm_IVI_LoadType (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_LoadType* pvalue);

EXTERN ASN1T_IVI_LoadType* new_ASN1T_IVI_LoadType (ASN1CType& ccobj);

EXTERN int asn1Init_IVI_LoadType (ASN1T_IVI_LoadType* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

/**************************************************************/
/*                                                            */
/*  VehicleCharacteristicsFixValues                           */
/*                                                            */
/**************************************************************/
/*
VehicleCharacteristicsFixValues ::= CHOICE {
   simpleVehicleType [0] StationType,
   euVehicleCategoryCode [1] EXPLICIT EuVehicleCategoryCode,
   iso3833VehicleType [2] Iso3833VehicleType,
   euroAndCo2value [3] EnvironmentalCharacteristics,
   engineCharacteristics [4] EngineCharacteristics,
   loadType [5] LoadType,
   usage [6] VehicleRole,
   ...
}
*/
/* Choice tag constants */

#define T_IVI_VehicleCharacteristicsFixValues_simpleVehicleType 1
#define T_IVI_VehicleCharacteristicsFixValues_euVehicleCategoryCode 2
#define T_IVI_VehicleCharacteristicsFixValues_iso3833VehicleType 3
#define T_IVI_VehicleCharacteristicsFixValues_euroAndCo2value 4
#define T_IVI_VehicleCharacteristicsFixValues_engineCharacteristics 5
#define T_IVI_VehicleCharacteristicsFixValues_loadType 6
#define T_IVI_VehicleCharacteristicsFixValues_usage 7
#define T_IVI_VehicleCharacteristicsFixValues_extElem1 8

struct EXTERN ASN1T_IVI_VehicleCharacteristicsFixValues {
   OSINT32 t;
   union {
      /* t = 1 */
      ASN1T_ITS_StationType simpleVehicleType;
      /* t = 2 */
      ASN1T_EuVehicleCategoryCode *euVehicleCategoryCode;
      /* t = 3 */
      ASN1T_Iso3833VehicleType iso3833VehicleType;
      /* t = 4 */
      ASN1T_EnvironmentalCharacteristics *euroAndCo2value;
      /* t = 5 */
      ASN1T_EngineCharacteristics engineCharacteristics;
      /* t = 6 */
      ASN1T_IVI_LoadType *loadType;
      /* t = 7 */
      ASN1T_ITS_VehicleRole usage;
      /* t = 8 */
      ASN1TOpenType *extElem1;
   } u;
   ASN1T_IVI_VehicleCharacteristicsFixValues () { t = 0; OSCRTLMEMSET (&u, 0, sizeof(u)); }
} ;

EXTERN int asn1PE_IVI_VehicleCharacteristicsFixValues (OSCTXT* pctxt, ASN1T_IVI_VehicleCharacteristicsFixValues* pvalue);

EXTERN int asn1PD_IVI_VehicleCharacteristicsFixValues (OSCTXT* pctxt, ASN1T_IVI_VehicleCharacteristicsFixValues* pvalue);

EXTERN int XmlEnc_IVI_VehicleCharacteristicsFixValues (OSCTXT* pctxt, 
   ASN1T_IVI_VehicleCharacteristicsFixValues* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_VehicleCharacteristicsFixValues (OSCTXT* pctxt, 
   ASN1T_IVI_VehicleCharacteristicsFixValues* pvalue);

EXTERN int asn1JsonEnc_IVI_VehicleCharacteristicsFixValues (OSCTXT *pctxt, ASN1T_IVI_VehicleCharacteristicsFixValues *pvalue);

EXTERN int asn1JsonDec_IVI_VehicleCharacteristicsFixValues (OSCTXT *pctxt, ASN1T_IVI_VehicleCharacteristicsFixValues *pvalue);

EXTERN int asn1PrtToStrm_IVI_VehicleCharacteristicsFixValues (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_VehicleCharacteristicsFixValues* pvalue);

EXTERN ASN1T_IVI_VehicleCharacteristicsFixValues* 
   new_ASN1T_IVI_VehicleCharacteristicsFixValues (ASN1CType& ccobj);

EXTERN int asn1Init_IVI_VehicleCharacteristicsFixValues (
   ASN1T_IVI_VehicleCharacteristicsFixValues* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_VehicleCharacteristicsFixValues (OSCTXT *pctxt, 
   ASN1T_IVI_VehicleCharacteristicsFixValues* pvalue);

/**************************************************************/
/*                                                            */
/*  TractorCharacteristics_equalTo                            */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'TractorCharacteristics'
*/
/* List of ASN1T_IVI_VehicleCharacteristicsFixValues */
typedef ASN1TSeqOfList ASN1T_IVI_TractorCharacteristics_equalTo;

class EXTERN ASN1C_IVI_TractorCharacteristics_equalTo :
public ASN1CSeqOfList
{
protected:
   ASN1T_IVI_TractorCharacteristics_equalTo& msgData;
public:
   /**
    * Control class: ASN1C_IVI_TractorCharacteristics_equalTo
    * Data class:    ASN1T_IVI_TractorCharacteristics_equalTo
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_IVI_TractorCharacteristics_equalTo
       (ASN1T_IVI_TractorCharacteristics_equalTo& data);

   /**
    * Control class: ASN1C_IVI_TractorCharacteristics_equalTo<br/>
    * Data class: ASN1T_IVI_TractorCharacteristics_equalTo<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_IVI_TractorCharacteristics_equalTo (OSRTMessageBufferIF& msgBuf
      , ASN1T_IVI_TractorCharacteristics_equalTo& data);

   /**
    * Control class: ASN1C_IVI_TractorCharacteristics_equalTo<br/>
    * Data class: ASN1T_IVI_TractorCharacteristics_equalTo<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_IVI_TractorCharacteristics_equalTo (ASN1CType& ccobj
      , ASN1T_IVI_TractorCharacteristics_equalTo& data);

   virtual ~ASN1C_IVI_TractorCharacteristics_equalTo () {}

   /**
    * Data class: ASN1T_IVI_VehicleCharacteristicsFixValues<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_IVI_VehicleCharacteristicsFixValues* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_IVI_VehicleCharacteristicsFixValues.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_IVI_VehicleCharacteristicsFixValues* NewElement ();

   /**
    * Data class: ASN1T_IVI_VehicleCharacteristicsFixValues.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_IVI_VehicleCharacteristicsFixValues* AppendNewElement ();

private:
   ASN1C_IVI_TractorCharacteristics_equalTo& operator= (const ASN1C_IVI_TractorCharacteristics_equalTo&) {return *this;}
} ;

EXTERN int asn1PE_IVI_TractorCharacteristics_equalTo (OSCTXT* pctxt, ASN1T_IVI_TractorCharacteristics_equalTo* pvalue);

EXTERN int asn1PD_IVI_TractorCharacteristics_equalTo (OSCTXT* pctxt, ASN1T_IVI_TractorCharacteristics_equalTo* pvalue);

EXTERN int XmlEnc_IVI_TractorCharacteristics_equalTo (OSCTXT* pctxt, 
   ASN1T_IVI_TractorCharacteristics_equalTo* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_TractorCharacteristics_equalTo (OSCTXT* pctxt, 
   ASN1T_IVI_TractorCharacteristics_equalTo* pvalue);

EXTERN int asn1JsonEnc_IVI_TractorCharacteristics_equalTo (OSCTXT *pctxt, ASN1T_IVI_TractorCharacteristics_equalTo *pvalue);

EXTERN int asn1JsonDec_IVI_TractorCharacteristics_equalTo (OSCTXT *pctxt, ASN1T_IVI_TractorCharacteristics_equalTo *pvalue);

EXTERN int asn1PrtToStrm_IVI_TractorCharacteristics_equalTo (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_TractorCharacteristics_equalTo* pvalue);

EXTERN int asn1Init_IVI_TractorCharacteristics_equalTo (
   ASN1T_IVI_TractorCharacteristics_equalTo* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_TractorCharacteristics_equalTo (OSCTXT *pctxt, 
   ASN1T_IVI_TractorCharacteristics_equalTo* pvalue);

/**************************************************************/
/*                                                            */
/*  TractorCharacteristics_notEqualTo                         */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'TractorCharacteristics'
*/
/* List of ASN1T_IVI_VehicleCharacteristicsFixValues */
typedef ASN1TSeqOfList ASN1T_IVI_TractorCharacteristics_notEqualTo;

class EXTERN ASN1C_IVI_TractorCharacteristics_notEqualTo :
public ASN1CSeqOfList
{
protected:
   ASN1T_IVI_TractorCharacteristics_notEqualTo& msgData;
public:
   /**
    * Control class: ASN1C_IVI_TractorCharacteristics_notEqualTo
    * Data class:    ASN1T_IVI_TractorCharacteristics_notEqualTo
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_IVI_TractorCharacteristics_notEqualTo
       (ASN1T_IVI_TractorCharacteristics_notEqualTo& data);

   /**
    * Control class: ASN1C_IVI_TractorCharacteristics_notEqualTo<br/>
    * Data class: ASN1T_IVI_TractorCharacteristics_notEqualTo<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_IVI_TractorCharacteristics_notEqualTo (OSRTMessageBufferIF& msgBuf
      , ASN1T_IVI_TractorCharacteristics_notEqualTo& data);

   /**
    * Control class: ASN1C_IVI_TractorCharacteristics_notEqualTo<br/>
    * Data class: ASN1T_IVI_TractorCharacteristics_notEqualTo<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_IVI_TractorCharacteristics_notEqualTo (ASN1CType& ccobj
      , ASN1T_IVI_TractorCharacteristics_notEqualTo& data);

   virtual ~ASN1C_IVI_TractorCharacteristics_notEqualTo () {}

   /**
    * Data class: ASN1T_IVI_VehicleCharacteristicsFixValues<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_IVI_VehicleCharacteristicsFixValues* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_IVI_VehicleCharacteristicsFixValues.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_IVI_VehicleCharacteristicsFixValues* NewElement ();

   /**
    * Data class: ASN1T_IVI_VehicleCharacteristicsFixValues.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_IVI_VehicleCharacteristicsFixValues* AppendNewElement ();

private:
   ASN1C_IVI_TractorCharacteristics_notEqualTo& operator= (const ASN1C_IVI_TractorCharacteristics_notEqualTo&) {return *this;}
} ;

EXTERN int asn1PE_IVI_TractorCharacteristics_notEqualTo (OSCTXT* pctxt, ASN1T_IVI_TractorCharacteristics_notEqualTo* pvalue);

EXTERN int asn1PD_IVI_TractorCharacteristics_notEqualTo (OSCTXT* pctxt, ASN1T_IVI_TractorCharacteristics_notEqualTo* pvalue);

EXTERN int XmlEnc_IVI_TractorCharacteristics_notEqualTo (OSCTXT* pctxt, 
   ASN1T_IVI_TractorCharacteristics_notEqualTo* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_TractorCharacteristics_notEqualTo (OSCTXT* pctxt, 
   ASN1T_IVI_TractorCharacteristics_notEqualTo* pvalue);

EXTERN int asn1JsonEnc_IVI_TractorCharacteristics_notEqualTo (OSCTXT *pctxt, ASN1T_IVI_TractorCharacteristics_notEqualTo *pvalue);

EXTERN int asn1JsonDec_IVI_TractorCharacteristics_notEqualTo (OSCTXT *pctxt, ASN1T_IVI_TractorCharacteristics_notEqualTo *pvalue);

EXTERN int asn1PrtToStrm_IVI_TractorCharacteristics_notEqualTo (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_TractorCharacteristics_notEqualTo* pvalue);

EXTERN int asn1Init_IVI_TractorCharacteristics_notEqualTo (
   ASN1T_IVI_TractorCharacteristics_notEqualTo* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_TractorCharacteristics_notEqualTo (OSCTXT *pctxt, 
   ASN1T_IVI_TractorCharacteristics_notEqualTo* pvalue);

/**************************************************************/
/*                                                            */
/*  ComparisonOperator                                        */
/*                                                            */
/**************************************************************/
/*
ComparisonOperator ::= INTEGER { greaterThan(0), greaterThanOrEqualTo(1), lessThan(2), lessThanOrEqualTo(3) } (0..3)
*/
struct EXTERN IVI_ComparisonOperator {
   enum Root {
      greaterThan = 0,
      greaterThanOrEqualTo = 1,
      lessThan = 2,
      lessThanOrEqualTo = 3
   } ;
} ;

typedef OSUINT8 ASN1T_IVI_ComparisonOperator;

EXTERN int asn1PE_IVI_ComparisonOperator (OSCTXT* pctxt, ASN1T_IVI_ComparisonOperator value);

EXTERN int asn1PD_IVI_ComparisonOperator (OSCTXT* pctxt, ASN1T_IVI_ComparisonOperator* pvalue);

EXTERN int XmlEnc_IVI_ComparisonOperator (OSCTXT* pctxt, 
   ASN1T_IVI_ComparisonOperator value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_ComparisonOperator (OSCTXT* pctxt, 
   ASN1T_IVI_ComparisonOperator* pvalue);

EXTERN int asn1JsonEnc_IVI_ComparisonOperator (OSCTXT *pctxt, ASN1T_IVI_ComparisonOperator *pvalue);

EXTERN int asn1JsonDec_IVI_ComparisonOperator (OSCTXT *pctxt, ASN1T_IVI_ComparisonOperator *pvalue);

EXTERN int asn1PrtToStrm_IVI_ComparisonOperator (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_ComparisonOperator* pvalue);

EXTERN ASN1T_IVI_ComparisonOperator* 
   new_ASN1T_IVI_ComparisonOperator (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  VehicleCharacteristicsRanges_limits                       */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'VehicleCharacteristicsRanges'
*/
/* Choice tag constants */

#define T_IVI_VehicleCharacteristicsRanges_limits_numberOfAxles 1
#define T_IVI_VehicleCharacteristicsRanges_limits_vehicleDimensions 2
#define T_IVI_VehicleCharacteristicsRanges_limits_vehicleWeightLimits 3
#define T_IVI_VehicleCharacteristicsRanges_limits_axleWeightLimits 4
#define T_IVI_VehicleCharacteristicsRanges_limits_passengerCapacity 5
#define T_IVI_VehicleCharacteristicsRanges_limits_exhaustEmissionValues 6
#define T_IVI_VehicleCharacteristicsRanges_limits_dieselEmissionValues 7
#define T_IVI_VehicleCharacteristicsRanges_limits_soundLevel 8
#define T_IVI_VehicleCharacteristicsRanges_limits_extElem1 9

struct EXTERN ASN1T_IVI_VehicleCharacteristicsRanges_limits {
   OSINT32 t;
   union {
      /* t = 1 */
      OSUINT8 numberOfAxles;
      /* t = 2 */
      ASN1T_VehicleDimensions *vehicleDimensions;
      /* t = 3 */
      ASN1T_VehicleWeightLimits *vehicleWeightLimits;
      /* t = 4 */
      ASN1T_AxleWeightLimits *axleWeightLimits;
      /* t = 5 */
      ASN1T_PassengerCapacity *passengerCapacity;
      /* t = 6 */
      ASN1T_ExhaustEmissionValues *exhaustEmissionValues;
      /* t = 7 */
      ASN1T_DieselEmissionValues *dieselEmissionValues;
      /* t = 8 */
      ASN1T_SoundLevel *soundLevel;
      /* t = 9 */
      ASN1TOpenType *extElem1;
   } u;
   ASN1T_IVI_VehicleCharacteristicsRanges_limits () { t = 0; OSCRTLMEMSET (&u, 0, sizeof(u)); }
} ;

EXTERN int asn1PE_IVI_VehicleCharacteristicsRanges_limits (OSCTXT* pctxt, ASN1T_IVI_VehicleCharacteristicsRanges_limits* pvalue);

EXTERN int asn1PD_IVI_VehicleCharacteristicsRanges_limits (OSCTXT* pctxt, ASN1T_IVI_VehicleCharacteristicsRanges_limits* pvalue);

EXTERN int XmlEnc_IVI_VehicleCharacteristicsRanges_limits (OSCTXT* pctxt, 
   ASN1T_IVI_VehicleCharacteristicsRanges_limits* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_VehicleCharacteristicsRanges_limits (OSCTXT* pctxt, 
   ASN1T_IVI_VehicleCharacteristicsRanges_limits* pvalue);

EXTERN int asn1JsonEnc_IVI_VehicleCharacteristicsRanges_limits (OSCTXT *pctxt, ASN1T_IVI_VehicleCharacteristicsRanges_limits *pvalue);

EXTERN int asn1JsonDec_IVI_VehicleCharacteristicsRanges_limits (OSCTXT *pctxt, ASN1T_IVI_VehicleCharacteristicsRanges_limits *pvalue);

EXTERN int asn1PrtToStrm_IVI_VehicleCharacteristicsRanges_limits (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_VehicleCharacteristicsRanges_limits* pvalue);

EXTERN ASN1T_IVI_VehicleCharacteristicsRanges_limits* 
   new_ASN1T_IVI_VehicleCharacteristicsRanges_limits (ASN1CType& ccobj);

EXTERN int asn1Init_IVI_VehicleCharacteristicsRanges_limits (
   ASN1T_IVI_VehicleCharacteristicsRanges_limits* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_VehicleCharacteristicsRanges_limits (OSCTXT *pctxt, 
   ASN1T_IVI_VehicleCharacteristicsRanges_limits* pvalue);

/**************************************************************/
/*                                                            */
/*  VehicleCharacteristicsRanges                              */
/*                                                            */
/**************************************************************/
/*
VehicleCharacteristicsRanges ::= SEQUENCE {
   comparisonOperator [0] ComparisonOperator,
   limits [1] EXPLICIT CHOICE {
      numberOfAxles [0] INTEGER (0..7),
      vehicleDimensions [1] VehicleDimensions,
      vehicleWeightLimits [2] VehicleWeightLimits,
      axleWeightLimits [3] AxleWeightLimits,
      passengerCapacity [4] PassengerCapacity,
      exhaustEmissionValues [5] ExhaustEmissionValues,
      dieselEmissionValues [6] DieselEmissionValues,
      soundLevel [7] SoundLevel,
      ...
   }
}
*/
struct EXTERN ASN1T_IVI_VehicleCharacteristicsRanges {
   ASN1T_IVI_ComparisonOperator comparisonOperator;
   ASN1T_IVI_VehicleCharacteristicsRanges_limits limits;
} ;

EXTERN int asn1PE_IVI_VehicleCharacteristicsRanges (OSCTXT* pctxt, ASN1T_IVI_VehicleCharacteristicsRanges* pvalue);

EXTERN int asn1PD_IVI_VehicleCharacteristicsRanges (OSCTXT* pctxt, ASN1T_IVI_VehicleCharacteristicsRanges* pvalue);

EXTERN int XmlEnc_IVI_VehicleCharacteristicsRanges (OSCTXT* pctxt, 
   ASN1T_IVI_VehicleCharacteristicsRanges* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_VehicleCharacteristicsRanges (OSCTXT* pctxt, 
   ASN1T_IVI_VehicleCharacteristicsRanges* pvalue);

EXTERN int asn1JsonEnc_IVI_VehicleCharacteristicsRanges (OSCTXT *pctxt, ASN1T_IVI_VehicleCharacteristicsRanges *pvalue);

EXTERN int asn1JsonDec_IVI_VehicleCharacteristicsRanges (OSCTXT *pctxt, ASN1T_IVI_VehicleCharacteristicsRanges *pvalue);

EXTERN int asn1PrtToStrm_IVI_VehicleCharacteristicsRanges (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_VehicleCharacteristicsRanges* pvalue);

EXTERN ASN1T_IVI_VehicleCharacteristicsRanges* 
   new_ASN1T_IVI_VehicleCharacteristicsRanges (ASN1CType& ccobj);

EXTERN int asn1Init_IVI_VehicleCharacteristicsRanges (
   ASN1T_IVI_VehicleCharacteristicsRanges* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_VehicleCharacteristicsRanges (OSCTXT *pctxt, 
   ASN1T_IVI_VehicleCharacteristicsRanges* pvalue);

/**************************************************************/
/*                                                            */
/*  TractorCharacteristics_ranges                             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'TractorCharacteristics'
*/
/* List of ASN1T_IVI_VehicleCharacteristicsRanges */
typedef ASN1TSeqOfList ASN1T_IVI_TractorCharacteristics_ranges;

class EXTERN ASN1C_IVI_TractorCharacteristics_ranges :
public ASN1CSeqOfList
{
protected:
   ASN1T_IVI_TractorCharacteristics_ranges& msgData;
public:
   /**
    * Control class: ASN1C_IVI_TractorCharacteristics_ranges
    * Data class:    ASN1T_IVI_TractorCharacteristics_ranges
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_IVI_TractorCharacteristics_ranges
       (ASN1T_IVI_TractorCharacteristics_ranges& data);

   /**
    * Control class: ASN1C_IVI_TractorCharacteristics_ranges<br/>
    * Data class: ASN1T_IVI_TractorCharacteristics_ranges<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_IVI_TractorCharacteristics_ranges (OSRTMessageBufferIF& msgBuf
      , ASN1T_IVI_TractorCharacteristics_ranges& data);

   /**
    * Control class: ASN1C_IVI_TractorCharacteristics_ranges<br/>
    * Data class: ASN1T_IVI_TractorCharacteristics_ranges<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_IVI_TractorCharacteristics_ranges (ASN1CType& ccobj
      , ASN1T_IVI_TractorCharacteristics_ranges& data);

   virtual ~ASN1C_IVI_TractorCharacteristics_ranges () {}

   /**
    * Data class: ASN1T_IVI_VehicleCharacteristicsRanges<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_IVI_VehicleCharacteristicsRanges* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_IVI_VehicleCharacteristicsRanges.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_IVI_VehicleCharacteristicsRanges* NewElement ();

   /**
    * Data class: ASN1T_IVI_VehicleCharacteristicsRanges.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_IVI_VehicleCharacteristicsRanges* AppendNewElement ();

private:
   ASN1C_IVI_TractorCharacteristics_ranges& operator= (const ASN1C_IVI_TractorCharacteristics_ranges&) {return *this;}
} ;

EXTERN int asn1PE_IVI_TractorCharacteristics_ranges (OSCTXT* pctxt, ASN1T_IVI_TractorCharacteristics_ranges* pvalue);

EXTERN int asn1PD_IVI_TractorCharacteristics_ranges (OSCTXT* pctxt, ASN1T_IVI_TractorCharacteristics_ranges* pvalue);

EXTERN int XmlEnc_IVI_TractorCharacteristics_ranges (OSCTXT* pctxt, 
   ASN1T_IVI_TractorCharacteristics_ranges* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_TractorCharacteristics_ranges (OSCTXT* pctxt, 
   ASN1T_IVI_TractorCharacteristics_ranges* pvalue);

EXTERN int asn1JsonEnc_IVI_TractorCharacteristics_ranges (OSCTXT *pctxt, ASN1T_IVI_TractorCharacteristics_ranges *pvalue);

EXTERN int asn1JsonDec_IVI_TractorCharacteristics_ranges (OSCTXT *pctxt, ASN1T_IVI_TractorCharacteristics_ranges *pvalue);

EXTERN int asn1PrtToStrm_IVI_TractorCharacteristics_ranges (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_TractorCharacteristics_ranges* pvalue);

EXTERN int asn1Init_IVI_TractorCharacteristics_ranges (
   ASN1T_IVI_TractorCharacteristics_ranges* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_TractorCharacteristics_ranges (OSCTXT *pctxt, 
   ASN1T_IVI_TractorCharacteristics_ranges* pvalue);

/**************************************************************/
/*                                                            */
/*  TractorCharacteristics                                    */
/*                                                            */
/**************************************************************/
/*
TractorCharacteristics ::= SEQUENCE {
   equalTo [0] SEQUENCE (SIZE (1..4, ...)) OF VehicleCharacteristicsFixValues OPTIONAL,
   notEqualTo [1] SEQUENCE (SIZE (1..4, ...)) OF VehicleCharacteristicsFixValues OPTIONAL,
   ranges [2] SEQUENCE (SIZE (1..4, ...)) OF VehicleCharacteristicsRanges OPTIONAL
}
*/
struct EXTERN ASN1T_IVI_TractorCharacteristics {
   struct {
      unsigned equalToPresent : 1;
      unsigned notEqualToPresent : 1;
      unsigned rangesPresent : 1;
   } m;
   ASN1T_IVI_TractorCharacteristics_equalTo equalTo;
   ASN1T_IVI_TractorCharacteristics_notEqualTo notEqualTo;
   ASN1T_IVI_TractorCharacteristics_ranges ranges;
   ASN1T_IVI_TractorCharacteristics ();
} ;

EXTERN int asn1PE_IVI_TractorCharacteristics (OSCTXT* pctxt, ASN1T_IVI_TractorCharacteristics* pvalue);

EXTERN int asn1PD_IVI_TractorCharacteristics (OSCTXT* pctxt, ASN1T_IVI_TractorCharacteristics* pvalue);

EXTERN int XmlEnc_IVI_TractorCharacteristics (OSCTXT* pctxt, 
   ASN1T_IVI_TractorCharacteristics* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_TractorCharacteristics (OSCTXT* pctxt, 
   ASN1T_IVI_TractorCharacteristics* pvalue);

EXTERN int asn1JsonEnc_IVI_TractorCharacteristics (OSCTXT *pctxt, ASN1T_IVI_TractorCharacteristics *pvalue);

EXTERN int asn1JsonDec_IVI_TractorCharacteristics (OSCTXT *pctxt, ASN1T_IVI_TractorCharacteristics *pvalue);

EXTERN int asn1PrtToStrm_IVI_TractorCharacteristics (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_TractorCharacteristics* pvalue);

EXTERN ASN1T_IVI_TractorCharacteristics* 
   new_ASN1T_IVI_TractorCharacteristics (ASN1CType& ccobj);

EXTERN int asn1Init_IVI_TractorCharacteristics (
   ASN1T_IVI_TractorCharacteristics* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_TractorCharacteristics (OSCTXT *pctxt, 
   ASN1T_IVI_TractorCharacteristics* pvalue);

/**************************************************************/
/*                                                            */
/*  TrailerCharacteristics_equalTo                            */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'TrailerCharacteristics'
*/
/* List of ASN1T_IVI_VehicleCharacteristicsFixValues */
typedef ASN1TSeqOfList ASN1T_IVI_TrailerCharacteristics_equalTo;

class EXTERN ASN1C_IVI_TrailerCharacteristics_equalTo :
public ASN1CSeqOfList
{
protected:
   ASN1T_IVI_TrailerCharacteristics_equalTo& msgData;
public:
   /**
    * Control class: ASN1C_IVI_TrailerCharacteristics_equalTo
    * Data class:    ASN1T_IVI_TrailerCharacteristics_equalTo
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_IVI_TrailerCharacteristics_equalTo
       (ASN1T_IVI_TrailerCharacteristics_equalTo& data);

   /**
    * Control class: ASN1C_IVI_TrailerCharacteristics_equalTo<br/>
    * Data class: ASN1T_IVI_TrailerCharacteristics_equalTo<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_IVI_TrailerCharacteristics_equalTo (OSRTMessageBufferIF& msgBuf
      , ASN1T_IVI_TrailerCharacteristics_equalTo& data);

   /**
    * Control class: ASN1C_IVI_TrailerCharacteristics_equalTo<br/>
    * Data class: ASN1T_IVI_TrailerCharacteristics_equalTo<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_IVI_TrailerCharacteristics_equalTo (ASN1CType& ccobj
      , ASN1T_IVI_TrailerCharacteristics_equalTo& data);

   virtual ~ASN1C_IVI_TrailerCharacteristics_equalTo () {}

   /**
    * Data class: ASN1T_IVI_VehicleCharacteristicsFixValues<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_IVI_VehicleCharacteristicsFixValues* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_IVI_VehicleCharacteristicsFixValues.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_IVI_VehicleCharacteristicsFixValues* NewElement ();

   /**
    * Data class: ASN1T_IVI_VehicleCharacteristicsFixValues.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_IVI_VehicleCharacteristicsFixValues* AppendNewElement ();

private:
   ASN1C_IVI_TrailerCharacteristics_equalTo& operator= (const ASN1C_IVI_TrailerCharacteristics_equalTo&) {return *this;}
} ;

EXTERN int asn1PE_IVI_TrailerCharacteristics_equalTo (OSCTXT* pctxt, ASN1T_IVI_TrailerCharacteristics_equalTo* pvalue);

EXTERN int asn1PD_IVI_TrailerCharacteristics_equalTo (OSCTXT* pctxt, ASN1T_IVI_TrailerCharacteristics_equalTo* pvalue);

EXTERN int XmlEnc_IVI_TrailerCharacteristics_equalTo (OSCTXT* pctxt, 
   ASN1T_IVI_TrailerCharacteristics_equalTo* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_TrailerCharacteristics_equalTo (OSCTXT* pctxt, 
   ASN1T_IVI_TrailerCharacteristics_equalTo* pvalue);

EXTERN int asn1JsonEnc_IVI_TrailerCharacteristics_equalTo (OSCTXT *pctxt, ASN1T_IVI_TrailerCharacteristics_equalTo *pvalue);

EXTERN int asn1JsonDec_IVI_TrailerCharacteristics_equalTo (OSCTXT *pctxt, ASN1T_IVI_TrailerCharacteristics_equalTo *pvalue);

EXTERN int asn1PrtToStrm_IVI_TrailerCharacteristics_equalTo (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_TrailerCharacteristics_equalTo* pvalue);

EXTERN int asn1Init_IVI_TrailerCharacteristics_equalTo (
   ASN1T_IVI_TrailerCharacteristics_equalTo* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_TrailerCharacteristics_equalTo (OSCTXT *pctxt, 
   ASN1T_IVI_TrailerCharacteristics_equalTo* pvalue);

/**************************************************************/
/*                                                            */
/*  TrailerCharacteristics_notEqualTo                         */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'TrailerCharacteristics'
*/
/* List of ASN1T_IVI_VehicleCharacteristicsFixValues */
typedef ASN1TSeqOfList ASN1T_IVI_TrailerCharacteristics_notEqualTo;

class EXTERN ASN1C_IVI_TrailerCharacteristics_notEqualTo :
public ASN1CSeqOfList
{
protected:
   ASN1T_IVI_TrailerCharacteristics_notEqualTo& msgData;
public:
   /**
    * Control class: ASN1C_IVI_TrailerCharacteristics_notEqualTo
    * Data class:    ASN1T_IVI_TrailerCharacteristics_notEqualTo
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_IVI_TrailerCharacteristics_notEqualTo
       (ASN1T_IVI_TrailerCharacteristics_notEqualTo& data);

   /**
    * Control class: ASN1C_IVI_TrailerCharacteristics_notEqualTo<br/>
    * Data class: ASN1T_IVI_TrailerCharacteristics_notEqualTo<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_IVI_TrailerCharacteristics_notEqualTo (OSRTMessageBufferIF& msgBuf
      , ASN1T_IVI_TrailerCharacteristics_notEqualTo& data);

   /**
    * Control class: ASN1C_IVI_TrailerCharacteristics_notEqualTo<br/>
    * Data class: ASN1T_IVI_TrailerCharacteristics_notEqualTo<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_IVI_TrailerCharacteristics_notEqualTo (ASN1CType& ccobj
      , ASN1T_IVI_TrailerCharacteristics_notEqualTo& data);

   virtual ~ASN1C_IVI_TrailerCharacteristics_notEqualTo () {}

   /**
    * Data class: ASN1T_IVI_VehicleCharacteristicsFixValues<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_IVI_VehicleCharacteristicsFixValues* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_IVI_VehicleCharacteristicsFixValues.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_IVI_VehicleCharacteristicsFixValues* NewElement ();

   /**
    * Data class: ASN1T_IVI_VehicleCharacteristicsFixValues.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_IVI_VehicleCharacteristicsFixValues* AppendNewElement ();

private:
   ASN1C_IVI_TrailerCharacteristics_notEqualTo& operator= (const ASN1C_IVI_TrailerCharacteristics_notEqualTo&) {return *this;}
} ;

EXTERN int asn1PE_IVI_TrailerCharacteristics_notEqualTo (OSCTXT* pctxt, ASN1T_IVI_TrailerCharacteristics_notEqualTo* pvalue);

EXTERN int asn1PD_IVI_TrailerCharacteristics_notEqualTo (OSCTXT* pctxt, ASN1T_IVI_TrailerCharacteristics_notEqualTo* pvalue);

EXTERN int XmlEnc_IVI_TrailerCharacteristics_notEqualTo (OSCTXT* pctxt, 
   ASN1T_IVI_TrailerCharacteristics_notEqualTo* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_TrailerCharacteristics_notEqualTo (OSCTXT* pctxt, 
   ASN1T_IVI_TrailerCharacteristics_notEqualTo* pvalue);

EXTERN int asn1JsonEnc_IVI_TrailerCharacteristics_notEqualTo (OSCTXT *pctxt, ASN1T_IVI_TrailerCharacteristics_notEqualTo *pvalue);

EXTERN int asn1JsonDec_IVI_TrailerCharacteristics_notEqualTo (OSCTXT *pctxt, ASN1T_IVI_TrailerCharacteristics_notEqualTo *pvalue);

EXTERN int asn1PrtToStrm_IVI_TrailerCharacteristics_notEqualTo (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_TrailerCharacteristics_notEqualTo* pvalue);

EXTERN int asn1Init_IVI_TrailerCharacteristics_notEqualTo (
   ASN1T_IVI_TrailerCharacteristics_notEqualTo* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_TrailerCharacteristics_notEqualTo (OSCTXT *pctxt, 
   ASN1T_IVI_TrailerCharacteristics_notEqualTo* pvalue);

/**************************************************************/
/*                                                            */
/*  TrailerCharacteristics_ranges                             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'TrailerCharacteristics'
*/
/* List of ASN1T_IVI_VehicleCharacteristicsRanges */
typedef ASN1TSeqOfList ASN1T_IVI_TrailerCharacteristics_ranges;

class EXTERN ASN1C_IVI_TrailerCharacteristics_ranges :
public ASN1CSeqOfList
{
protected:
   ASN1T_IVI_TrailerCharacteristics_ranges& msgData;
public:
   /**
    * Control class: ASN1C_IVI_TrailerCharacteristics_ranges
    * Data class:    ASN1T_IVI_TrailerCharacteristics_ranges
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_IVI_TrailerCharacteristics_ranges
       (ASN1T_IVI_TrailerCharacteristics_ranges& data);

   /**
    * Control class: ASN1C_IVI_TrailerCharacteristics_ranges<br/>
    * Data class: ASN1T_IVI_TrailerCharacteristics_ranges<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_IVI_TrailerCharacteristics_ranges (OSRTMessageBufferIF& msgBuf
      , ASN1T_IVI_TrailerCharacteristics_ranges& data);

   /**
    * Control class: ASN1C_IVI_TrailerCharacteristics_ranges<br/>
    * Data class: ASN1T_IVI_TrailerCharacteristics_ranges<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_IVI_TrailerCharacteristics_ranges (ASN1CType& ccobj
      , ASN1T_IVI_TrailerCharacteristics_ranges& data);

   virtual ~ASN1C_IVI_TrailerCharacteristics_ranges () {}

   /**
    * Data class: ASN1T_IVI_VehicleCharacteristicsRanges<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_IVI_VehicleCharacteristicsRanges* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_IVI_VehicleCharacteristicsRanges.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_IVI_VehicleCharacteristicsRanges* NewElement ();

   /**
    * Data class: ASN1T_IVI_VehicleCharacteristicsRanges.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_IVI_VehicleCharacteristicsRanges* AppendNewElement ();

private:
   ASN1C_IVI_TrailerCharacteristics_ranges& operator= (const ASN1C_IVI_TrailerCharacteristics_ranges&) {return *this;}
} ;

EXTERN int asn1PE_IVI_TrailerCharacteristics_ranges (OSCTXT* pctxt, ASN1T_IVI_TrailerCharacteristics_ranges* pvalue);

EXTERN int asn1PD_IVI_TrailerCharacteristics_ranges (OSCTXT* pctxt, ASN1T_IVI_TrailerCharacteristics_ranges* pvalue);

EXTERN int XmlEnc_IVI_TrailerCharacteristics_ranges (OSCTXT* pctxt, 
   ASN1T_IVI_TrailerCharacteristics_ranges* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_TrailerCharacteristics_ranges (OSCTXT* pctxt, 
   ASN1T_IVI_TrailerCharacteristics_ranges* pvalue);

EXTERN int asn1JsonEnc_IVI_TrailerCharacteristics_ranges (OSCTXT *pctxt, ASN1T_IVI_TrailerCharacteristics_ranges *pvalue);

EXTERN int asn1JsonDec_IVI_TrailerCharacteristics_ranges (OSCTXT *pctxt, ASN1T_IVI_TrailerCharacteristics_ranges *pvalue);

EXTERN int asn1PrtToStrm_IVI_TrailerCharacteristics_ranges (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_TrailerCharacteristics_ranges* pvalue);

EXTERN int asn1Init_IVI_TrailerCharacteristics_ranges (
   ASN1T_IVI_TrailerCharacteristics_ranges* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_TrailerCharacteristics_ranges (OSCTXT *pctxt, 
   ASN1T_IVI_TrailerCharacteristics_ranges* pvalue);

/**************************************************************/
/*                                                            */
/*  TrailerCharacteristics                                    */
/*                                                            */
/**************************************************************/
/*
TrailerCharacteristics ::= SEQUENCE {
   equalTo [0] SEQUENCE (SIZE (1..4, ...)) OF VehicleCharacteristicsFixValues (WITH COMPONENTS {..., engineCharacteristics ABSENT, euroAndCo2value ABSENT}) OPTIONAL,
   notEqualTo [1] SEQUENCE (SIZE (1..4, ...)) OF VehicleCharacteristicsFixValues (WITH COMPONENTS {..., engineCharacteristics ABSENT, euroAndCo2value ABSENT}) OPTIONAL,
   ranges [2] SEQUENCE (SIZE (1..4, ...)) OF VehicleCharacteristicsRanges (WITH COMPONENTS { limits WITH COMPONENTS {..., soundLevel ABSENT, dieselEmissionValues ABSENT, exhaustEmissionValues ABSENT}, comparisonOperator }) OPTIONAL
}
*/
struct EXTERN ASN1T_IVI_TrailerCharacteristics {
   struct {
      unsigned equalToPresent : 1;
      unsigned notEqualToPresent : 1;
      unsigned rangesPresent : 1;
   } m;
   ASN1T_IVI_TrailerCharacteristics_equalTo equalTo;
   ASN1T_IVI_TrailerCharacteristics_notEqualTo notEqualTo;
   ASN1T_IVI_TrailerCharacteristics_ranges ranges;
   ASN1T_IVI_TrailerCharacteristics ();
} ;

EXTERN int asn1PE_IVI_TrailerCharacteristics (OSCTXT* pctxt, ASN1T_IVI_TrailerCharacteristics* pvalue);

EXTERN int asn1PD_IVI_TrailerCharacteristics (OSCTXT* pctxt, ASN1T_IVI_TrailerCharacteristics* pvalue);

EXTERN int XmlEnc_IVI_TrailerCharacteristics (OSCTXT* pctxt, 
   ASN1T_IVI_TrailerCharacteristics* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_TrailerCharacteristics (OSCTXT* pctxt, 
   ASN1T_IVI_TrailerCharacteristics* pvalue);

EXTERN int asn1JsonEnc_IVI_TrailerCharacteristics (OSCTXT *pctxt, ASN1T_IVI_TrailerCharacteristics *pvalue);

EXTERN int asn1JsonDec_IVI_TrailerCharacteristics (OSCTXT *pctxt, ASN1T_IVI_TrailerCharacteristics *pvalue);

EXTERN int asn1PrtToStrm_IVI_TrailerCharacteristics (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_TrailerCharacteristics* pvalue);

EXTERN ASN1T_IVI_TrailerCharacteristics* 
   new_ASN1T_IVI_TrailerCharacteristics (ASN1CType& ccobj);

EXTERN int asn1Init_IVI_TrailerCharacteristics (
   ASN1T_IVI_TrailerCharacteristics* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_TrailerCharacteristics (OSCTXT *pctxt, 
   ASN1T_IVI_TrailerCharacteristics* pvalue);

/**************************************************************/
/*                                                            */
/*  CompleteVehicleCharacteristics_trailer                    */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'CompleteVehicleCharacteristics'
*/
/* List of ASN1T_IVI_TrailerCharacteristics */
typedef ASN1TSeqOfList ASN1T_IVI_CompleteVehicleCharacteristics_trailer;

class EXTERN ASN1C_IVI_CompleteVehicleCharacteristics_trailer :
public ASN1CSeqOfList
{
protected:
   ASN1T_IVI_CompleteVehicleCharacteristics_trailer& msgData;
public:
   /**
    * Control class: ASN1C_IVI_CompleteVehicleCharacteristics_trailer
    * Data class:    ASN1T_IVI_CompleteVehicleCharacteristics_trailer
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_IVI_CompleteVehicleCharacteristics_trailer
       (ASN1T_IVI_CompleteVehicleCharacteristics_trailer& data);

   /**
    * Control class: ASN1C_IVI_CompleteVehicleCharacteristics_trailer<br/>
    * Data class: ASN1T_IVI_CompleteVehicleCharacteristics_trailer<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_IVI_CompleteVehicleCharacteristics_trailer (
      OSRTMessageBufferIF& msgBuf
      , ASN1T_IVI_CompleteVehicleCharacteristics_trailer& data);

   /**
    * Control class: ASN1C_IVI_CompleteVehicleCharacteristics_trailer<br/>
    * Data class: ASN1T_IVI_CompleteVehicleCharacteristics_trailer<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_IVI_CompleteVehicleCharacteristics_trailer (ASN1CType& ccobj
      , ASN1T_IVI_CompleteVehicleCharacteristics_trailer& data);

   virtual ~ASN1C_IVI_CompleteVehicleCharacteristics_trailer () {}

   /**
    * Data class: ASN1T_IVI_TrailerCharacteristics<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_IVI_TrailerCharacteristics* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_IVI_TrailerCharacteristics.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_IVI_TrailerCharacteristics* NewElement ();

   /**
    * Data class: ASN1T_IVI_TrailerCharacteristics.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_IVI_TrailerCharacteristics* AppendNewElement ();

private:
   ASN1C_IVI_CompleteVehicleCharacteristics_trailer& operator= (const ASN1C_IVI_CompleteVehicleCharacteristics_trailer&) {return *this;}
} ;

EXTERN int asn1PE_IVI_CompleteVehicleCharacteristics_trailer (OSCTXT* pctxt, ASN1T_IVI_CompleteVehicleCharacteristics_trailer* pvalue);

EXTERN int asn1PD_IVI_CompleteVehicleCharacteristics_trailer (OSCTXT* pctxt, ASN1T_IVI_CompleteVehicleCharacteristics_trailer* pvalue);

EXTERN int XmlEnc_IVI_CompleteVehicleCharacteristics_trailer (OSCTXT* pctxt, 
   ASN1T_IVI_CompleteVehicleCharacteristics_trailer* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_CompleteVehicleCharacteristics_trailer (OSCTXT* pctxt, 
   ASN1T_IVI_CompleteVehicleCharacteristics_trailer* pvalue);

EXTERN int asn1JsonEnc_IVI_CompleteVehicleCharacteristics_trailer (OSCTXT *pctxt, ASN1T_IVI_CompleteVehicleCharacteristics_trailer *pvalue);

EXTERN int asn1JsonDec_IVI_CompleteVehicleCharacteristics_trailer (OSCTXT *pctxt, ASN1T_IVI_CompleteVehicleCharacteristics_trailer *pvalue);

EXTERN int asn1PrtToStrm_IVI_CompleteVehicleCharacteristics_trailer (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_CompleteVehicleCharacteristics_trailer* pvalue);

EXTERN int asn1Init_IVI_CompleteVehicleCharacteristics_trailer (
   ASN1T_IVI_CompleteVehicleCharacteristics_trailer* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_CompleteVehicleCharacteristics_trailer (OSCTXT *pctxt, 
   ASN1T_IVI_CompleteVehicleCharacteristics_trailer* pvalue);

/**************************************************************/
/*                                                            */
/*  TrainCharacteristics                                      */
/*                                                            */
/**************************************************************/
/*
TrainCharacteristics ::= TractorCharacteristics
*/
typedef ASN1T_IVI_TractorCharacteristics ASN1T_IVI_TrainCharacteristics;

EXTERN int asn1PE_IVI_TrainCharacteristics (OSCTXT* pctxt, ASN1T_IVI_TrainCharacteristics* pvalue);

EXTERN int asn1PD_IVI_TrainCharacteristics (OSCTXT* pctxt, ASN1T_IVI_TrainCharacteristics* pvalue);

EXTERN int XmlEnc_IVI_TrainCharacteristics (OSCTXT* pctxt, 
   ASN1T_IVI_TrainCharacteristics* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_TrainCharacteristics (OSCTXT* pctxt, 
   ASN1T_IVI_TrainCharacteristics* pvalue);

EXTERN int asn1JsonEnc_IVI_TrainCharacteristics (OSCTXT *pctxt, ASN1T_IVI_TrainCharacteristics *pvalue);

EXTERN int asn1JsonDec_IVI_TrainCharacteristics (OSCTXT *pctxt, ASN1T_IVI_TrainCharacteristics *pvalue);

EXTERN int asn1PrtToStrm_IVI_TrainCharacteristics (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_TrainCharacteristics* pvalue);

EXTERN ASN1T_IVI_TrainCharacteristics* 
   new_ASN1T_IVI_TrainCharacteristics (ASN1CType& ccobj);

EXTERN int asn1Init_IVI_TrainCharacteristics (ASN1T_IVI_TrainCharacteristics* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_TrainCharacteristics (OSCTXT *pctxt, 
   ASN1T_IVI_TrainCharacteristics* pvalue);

/**************************************************************/
/*                                                            */
/*  CompleteVehicleCharacteristics                            */
/*                                                            */
/**************************************************************/
/*
CompleteVehicleCharacteristics ::= SEQUENCE {
   tractor [0] TractorCharacteristics OPTIONAL,
   trailer [1] SEQUENCE (SIZE (1..3)) OF TrailerCharacteristics OPTIONAL,
   train [2] TrainCharacteristics OPTIONAL
}
*/
struct EXTERN ASN1T_IVI_CompleteVehicleCharacteristics {
   struct {
      unsigned tractorPresent : 1;
      unsigned trailerPresent : 1;
      unsigned trainPresent : 1;
   } m;
   ASN1T_IVI_TractorCharacteristics tractor;
   ASN1T_IVI_CompleteVehicleCharacteristics_trailer trailer;
   ASN1T_IVI_TrainCharacteristics train;
   ASN1T_IVI_CompleteVehicleCharacteristics ();
} ;

EXTERN int asn1PE_IVI_CompleteVehicleCharacteristics (OSCTXT* pctxt, ASN1T_IVI_CompleteVehicleCharacteristics* pvalue);

EXTERN int asn1PD_IVI_CompleteVehicleCharacteristics (OSCTXT* pctxt, ASN1T_IVI_CompleteVehicleCharacteristics* pvalue);

EXTERN int XmlEnc_IVI_CompleteVehicleCharacteristics (OSCTXT* pctxt, 
   ASN1T_IVI_CompleteVehicleCharacteristics* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_CompleteVehicleCharacteristics (OSCTXT* pctxt, 
   ASN1T_IVI_CompleteVehicleCharacteristics* pvalue);

EXTERN int asn1JsonEnc_IVI_CompleteVehicleCharacteristics (OSCTXT *pctxt, ASN1T_IVI_CompleteVehicleCharacteristics *pvalue);

EXTERN int asn1JsonDec_IVI_CompleteVehicleCharacteristics (OSCTXT *pctxt, ASN1T_IVI_CompleteVehicleCharacteristics *pvalue);

EXTERN int asn1PrtToStrm_IVI_CompleteVehicleCharacteristics (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_CompleteVehicleCharacteristics* pvalue);

EXTERN ASN1T_IVI_CompleteVehicleCharacteristics* 
   new_ASN1T_IVI_CompleteVehicleCharacteristics (ASN1CType& ccobj);

EXTERN int asn1Init_IVI_CompleteVehicleCharacteristics (
   ASN1T_IVI_CompleteVehicleCharacteristics* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_CompleteVehicleCharacteristics (OSCTXT *pctxt, 
   ASN1T_IVI_CompleteVehicleCharacteristics* pvalue);

/**************************************************************/
/*                                                            */
/*  GicPart_vehicleCharacteristics                            */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'GicPart'
*/
/* List of ASN1T_IVI_CompleteVehicleCharacteristics */
typedef ASN1TSeqOfList ASN1T_IVI_GicPart_vehicleCharacteristics;

class EXTERN ASN1C_IVI_GicPart_vehicleCharacteristics :
public ASN1CSeqOfList
{
protected:
   ASN1T_IVI_GicPart_vehicleCharacteristics& msgData;
public:
   /**
    * Control class: ASN1C_IVI_GicPart_vehicleCharacteristics
    * Data class:    ASN1T_IVI_GicPart_vehicleCharacteristics
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_IVI_GicPart_vehicleCharacteristics
       (ASN1T_IVI_GicPart_vehicleCharacteristics& data);

   /**
    * Control class: ASN1C_IVI_GicPart_vehicleCharacteristics<br/>
    * Data class: ASN1T_IVI_GicPart_vehicleCharacteristics<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_IVI_GicPart_vehicleCharacteristics (OSRTMessageBufferIF& msgBuf
      , ASN1T_IVI_GicPart_vehicleCharacteristics& data);

   /**
    * Control class: ASN1C_IVI_GicPart_vehicleCharacteristics<br/>
    * Data class: ASN1T_IVI_GicPart_vehicleCharacteristics<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_IVI_GicPart_vehicleCharacteristics (ASN1CType& ccobj
      , ASN1T_IVI_GicPart_vehicleCharacteristics& data);

   virtual ~ASN1C_IVI_GicPart_vehicleCharacteristics () {}

   /**
    * Data class: ASN1T_IVI_CompleteVehicleCharacteristics<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_IVI_CompleteVehicleCharacteristics* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_IVI_CompleteVehicleCharacteristics.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_IVI_CompleteVehicleCharacteristics* NewElement ();

   /**
    * Data class: ASN1T_IVI_CompleteVehicleCharacteristics.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_IVI_CompleteVehicleCharacteristics* AppendNewElement ();

private:
   ASN1C_IVI_GicPart_vehicleCharacteristics& operator= (const ASN1C_IVI_GicPart_vehicleCharacteristics&) {return *this;}
} ;

EXTERN int asn1PE_IVI_GicPart_vehicleCharacteristics (OSCTXT* pctxt, ASN1T_IVI_GicPart_vehicleCharacteristics* pvalue);

EXTERN int asn1PD_IVI_GicPart_vehicleCharacteristics (OSCTXT* pctxt, ASN1T_IVI_GicPart_vehicleCharacteristics* pvalue);

EXTERN int XmlEnc_IVI_GicPart_vehicleCharacteristics (OSCTXT* pctxt, 
   ASN1T_IVI_GicPart_vehicleCharacteristics* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_GicPart_vehicleCharacteristics (OSCTXT* pctxt, 
   ASN1T_IVI_GicPart_vehicleCharacteristics* pvalue);

EXTERN int asn1JsonEnc_IVI_GicPart_vehicleCharacteristics (OSCTXT *pctxt, ASN1T_IVI_GicPart_vehicleCharacteristics *pvalue);

EXTERN int asn1JsonDec_IVI_GicPart_vehicleCharacteristics (OSCTXT *pctxt, ASN1T_IVI_GicPart_vehicleCharacteristics *pvalue);

EXTERN int asn1PrtToStrm_IVI_GicPart_vehicleCharacteristics (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_GicPart_vehicleCharacteristics* pvalue);

EXTERN int asn1Init_IVI_GicPart_vehicleCharacteristics (
   ASN1T_IVI_GicPart_vehicleCharacteristics* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_GicPart_vehicleCharacteristics (OSCTXT *pctxt, 
   ASN1T_IVI_GicPart_vehicleCharacteristics* pvalue);

/**************************************************************/
/*                                                            */
/*  DriverCharacteristics                                     */
/*                                                            */
/**************************************************************/
/*
DriverCharacteristics ::= INTEGER { unexperiencedDrivers(0), experiencedDrivers(1), rfu1(2), rfu2(3) } (0..3)
*/
struct EXTERN IVI_DriverCharacteristics {
   enum Root {
      unexperiencedDrivers = 0,
      experiencedDrivers = 1,
      rfu1 = 2,
      rfu2 = 3
   } ;
} ;

typedef OSUINT8 ASN1T_IVI_DriverCharacteristics;

EXTERN int asn1PE_IVI_DriverCharacteristics (OSCTXT* pctxt, ASN1T_IVI_DriverCharacteristics value);

EXTERN int asn1PD_IVI_DriverCharacteristics (OSCTXT* pctxt, ASN1T_IVI_DriverCharacteristics* pvalue);

EXTERN int XmlEnc_IVI_DriverCharacteristics (OSCTXT* pctxt, 
   ASN1T_IVI_DriverCharacteristics value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_DriverCharacteristics (OSCTXT* pctxt, 
   ASN1T_IVI_DriverCharacteristics* pvalue);

EXTERN int asn1JsonEnc_IVI_DriverCharacteristics (OSCTXT *pctxt, ASN1T_IVI_DriverCharacteristics *pvalue);

EXTERN int asn1JsonDec_IVI_DriverCharacteristics (OSCTXT *pctxt, ASN1T_IVI_DriverCharacteristics *pvalue);

EXTERN int asn1PrtToStrm_IVI_DriverCharacteristics (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_DriverCharacteristics* pvalue);

EXTERN ASN1T_IVI_DriverCharacteristics* 
   new_ASN1T_IVI_DriverCharacteristics (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  VcClass                                                   */
/*                                                            */
/**************************************************************/
/*
VcClass ::= INTEGER { classA(0), classB(1), classC(2), classD(3), classE(4), classF(5), classG(6), classH(7) } (0..7)
*/
struct EXTERN IVI_VcClass {
   enum Root {
      classA = 0,
      classB = 1,
      classC = 2,
      classD = 3,
      classE = 4,
      classF = 5,
      classG = 6,
      classH = 7
   } ;
} ;

typedef OSUINT8 ASN1T_IVI_VcClass;

EXTERN int asn1PE_IVI_VcClass (OSCTXT* pctxt, ASN1T_IVI_VcClass value);

EXTERN int asn1PD_IVI_VcClass (OSCTXT* pctxt, ASN1T_IVI_VcClass* pvalue);

EXTERN int XmlEnc_IVI_VcClass (OSCTXT* pctxt, ASN1T_IVI_VcClass value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_VcClass (OSCTXT* pctxt, ASN1T_IVI_VcClass* pvalue);

EXTERN int asn1JsonEnc_IVI_VcClass (OSCTXT *pctxt, ASN1T_IVI_VcClass *pvalue);

EXTERN int asn1JsonDec_IVI_VcClass (OSCTXT *pctxt, ASN1T_IVI_VcClass *pvalue);

EXTERN int asn1PrtToStrm_IVI_VcClass (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_VcClass* pvalue);

EXTERN ASN1T_IVI_VcClass* new_ASN1T_IVI_VcClass (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  VcOption                                                  */
/*                                                            */
/**************************************************************/
/*
VcOption ::= INTEGER { none(0), a(1), b(2), c(3), d(4), e(5), f(6), g(7) } (0..7)
*/
struct EXTERN IVI_VcOption {
   enum Root {
      none = 0,
      a = 1,
      b = 2,
      c = 3,
      d = 4,
      e = 5,
      f = 6,
      g = 7
   } ;
} ;

typedef OSUINT8 ASN1T_IVI_VcOption;

EXTERN int asn1PE_IVI_VcOption (OSCTXT* pctxt, ASN1T_IVI_VcOption value);

EXTERN int asn1PD_IVI_VcOption (OSCTXT* pctxt, ASN1T_IVI_VcOption* pvalue);

EXTERN int XmlEnc_IVI_VcOption (OSCTXT* pctxt, ASN1T_IVI_VcOption value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_VcOption (OSCTXT* pctxt, ASN1T_IVI_VcOption* pvalue);

EXTERN int asn1JsonEnc_IVI_VcOption (OSCTXT *pctxt, ASN1T_IVI_VcOption *pvalue);

EXTERN int asn1JsonDec_IVI_VcOption (OSCTXT *pctxt, ASN1T_IVI_VcOption *pvalue);

EXTERN int asn1PrtToStrm_IVI_VcOption (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_VcOption* pvalue);

EXTERN ASN1T_IVI_VcOption* new_ASN1T_IVI_VcOption (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  DTM_year                                                  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'DTM'
*/
struct EXTERN ASN1T_IVI_DTM_year {
   OSUINT32 syr;
   OSUINT32 eyr;
} ;

EXTERN int asn1PE_IVI_DTM_year (OSCTXT* pctxt, ASN1T_IVI_DTM_year* pvalue);

EXTERN int asn1PD_IVI_DTM_year (OSCTXT* pctxt, ASN1T_IVI_DTM_year* pvalue);

EXTERN int XmlEnc_IVI_DTM_year (OSCTXT* pctxt, ASN1T_IVI_DTM_year* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_DTM_year (OSCTXT* pctxt, ASN1T_IVI_DTM_year* pvalue);

EXTERN int asn1JsonEnc_IVI_DTM_year (OSCTXT *pctxt, ASN1T_IVI_DTM_year *pvalue);

EXTERN int asn1JsonDec_IVI_DTM_year (OSCTXT *pctxt, ASN1T_IVI_DTM_year *pvalue);

EXTERN int asn1PrtToStrm_IVI_DTM_year (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_DTM_year* pvalue);

EXTERN ASN1T_IVI_DTM_year* new_ASN1T_IVI_DTM_year (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  MonthDay                                                  */
/*                                                            */
/**************************************************************/
/*
MonthDay ::= SEQUENCE {
   month [0] INTEGER (1..12),
   day [1] INTEGER (1..31)
}
*/
struct EXTERN ASN1T_IVI_MonthDay {
   OSUINT8 month;
   OSUINT8 day;
} ;

EXTERN int asn1PE_IVI_MonthDay (OSCTXT* pctxt, ASN1T_IVI_MonthDay* pvalue);

EXTERN int asn1PD_IVI_MonthDay (OSCTXT* pctxt, ASN1T_IVI_MonthDay* pvalue);

EXTERN int XmlEnc_IVI_MonthDay (OSCTXT* pctxt, ASN1T_IVI_MonthDay* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_MonthDay (OSCTXT* pctxt, ASN1T_IVI_MonthDay* pvalue);

EXTERN int asn1JsonEnc_IVI_MonthDay (OSCTXT *pctxt, ASN1T_IVI_MonthDay *pvalue);

EXTERN int asn1JsonDec_IVI_MonthDay (OSCTXT *pctxt, ASN1T_IVI_MonthDay *pvalue);

EXTERN int asn1PrtToStrm_IVI_MonthDay (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_MonthDay* pvalue);

EXTERN ASN1T_IVI_MonthDay* new_ASN1T_IVI_MonthDay (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  DTM_month_day                                             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'DTM'
*/
struct EXTERN ASN1T_IVI_DTM_month_day {
   ASN1T_IVI_MonthDay smd;
   ASN1T_IVI_MonthDay emd;
} ;

EXTERN int asn1PE_IVI_DTM_month_day (OSCTXT* pctxt, ASN1T_IVI_DTM_month_day* pvalue);

EXTERN int asn1PD_IVI_DTM_month_day (OSCTXT* pctxt, ASN1T_IVI_DTM_month_day* pvalue);

EXTERN int XmlEnc_IVI_DTM_month_day (OSCTXT* pctxt, 
   ASN1T_IVI_DTM_month_day* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_DTM_month_day (OSCTXT* pctxt, 
   ASN1T_IVI_DTM_month_day* pvalue);

EXTERN int asn1JsonEnc_IVI_DTM_month_day (OSCTXT *pctxt, ASN1T_IVI_DTM_month_day *pvalue);

EXTERN int asn1JsonDec_IVI_DTM_month_day (OSCTXT *pctxt, ASN1T_IVI_DTM_month_day *pvalue);

EXTERN int asn1PrtToStrm_IVI_DTM_month_day (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_DTM_month_day* pvalue);

EXTERN ASN1T_IVI_DTM_month_day* new_ASN1T_IVI_DTM_month_day (ASN1CType& ccobj)
   ;

/**************************************************************/
/*                                                            */
/*  PMD                                                       */
/*                                                            */
/**************************************************************/
/*
PMD ::= BIT STRING  { national-holiday(0), even-days(1), odd-days(2), market-day(3) } (SIZE (4))
*/
struct EXTERN ASN1T_IVI_PMD {
   OSOCTET data[1];
   // ctors
   ASN1T_IVI_PMD ()  {}
   ASN1T_IVI_PMD (const OSOCTET* _data) {
      OSCRTLSAFEMEMCPY (data, 1, _data, 1);
   }
} ;

class EXTERN ASN1C_IVI_PMD :
public ASN1CBitStr
{
protected:
   ASN1T_IVI_PMD& msgData;
public:
   // named bits
   enum { national_holiday = 0, even_days = 1, odd_days = 2, market_day = 3 };

   /**
    * Control class: ASN1C_IVI_PMD
    * Data class:    ASN1T_IVI_PMD
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_IVI_PMD (ASN1T_IVI_PMD& data);

   /**
    * Control class: ASN1C_IVI_PMD<br/>
    * Data class: ASN1T_IVI_PMD<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_IVI_PMD (OSRTMessageBufferIF& msgBuf, ASN1T_IVI_PMD& data);

   virtual ~ASN1C_IVI_PMD () {}

private:
   ASN1C_IVI_PMD& operator= (const ASN1C_IVI_PMD&) {return *this;}
} ;

EXTERN int asn1PE_IVI_PMD (OSCTXT* pctxt, ASN1T_IVI_PMD* pvalue);

EXTERN int asn1PD_IVI_PMD (OSCTXT* pctxt, ASN1T_IVI_PMD* pvalue);

EXTERN int XmlEnc_IVI_PMD (OSCTXT* pctxt, ASN1T_IVI_PMD* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_PMD (OSCTXT* pctxt, ASN1T_IVI_PMD* pvalue);

EXTERN int asn1JsonEnc_IVI_PMD (OSCTXT *pctxt, ASN1T_IVI_PMD *pvalue);

EXTERN int asn1JsonDec_IVI_PMD (OSCTXT *pctxt, ASN1T_IVI_PMD *pvalue);

EXTERN int asn1PrtToStrm_IVI_PMD (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_PMD* pvalue);

extern EXTERN struct OSBitMapItem g_ASN1T_IVI_PMD_NAMEDBITTAB[5];

EXTERN ASN1T_IVI_PMD* new_ASN1T_IVI_PMD (ASN1CType& ccobj);

EXTERN int asn1Init_IVI_PMD (ASN1T_IVI_PMD* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

/**************************************************************/
/*                                                            */
/*  HoursMinutes                                              */
/*                                                            */
/**************************************************************/
/*
HoursMinutes ::= SEQUENCE {
   hours [0] INTEGER (0..23), -- number of hours after midnight
   mins [1] INTEGER (0..59) -- number of minutes after the hour
}
*/
struct EXTERN ASN1T_IVI_HoursMinutes {
   OSUINT8 hours;
   OSUINT8 mins;
} ;

EXTERN int asn1PE_IVI_HoursMinutes (OSCTXT* pctxt, ASN1T_IVI_HoursMinutes* pvalue);

EXTERN int asn1PD_IVI_HoursMinutes (OSCTXT* pctxt, ASN1T_IVI_HoursMinutes* pvalue);

EXTERN int XmlEnc_IVI_HoursMinutes (OSCTXT* pctxt, 
   ASN1T_IVI_HoursMinutes* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_HoursMinutes (OSCTXT* pctxt, 
   ASN1T_IVI_HoursMinutes* pvalue);

EXTERN int asn1JsonEnc_IVI_HoursMinutes (OSCTXT *pctxt, ASN1T_IVI_HoursMinutes *pvalue);

EXTERN int asn1JsonDec_IVI_HoursMinutes (OSCTXT *pctxt, ASN1T_IVI_HoursMinutes *pvalue);

EXTERN int asn1PrtToStrm_IVI_HoursMinutes (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_HoursMinutes* pvalue);

EXTERN ASN1T_IVI_HoursMinutes* new_ASN1T_IVI_HoursMinutes (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  DTM_hourMinutes                                           */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'DTM'
*/
struct EXTERN ASN1T_IVI_DTM_hourMinutes {
   ASN1T_IVI_HoursMinutes shm;
   ASN1T_IVI_HoursMinutes ehm;
} ;

EXTERN int asn1PE_IVI_DTM_hourMinutes (OSCTXT* pctxt, ASN1T_IVI_DTM_hourMinutes* pvalue);

EXTERN int asn1PD_IVI_DTM_hourMinutes (OSCTXT* pctxt, ASN1T_IVI_DTM_hourMinutes* pvalue);

EXTERN int XmlEnc_IVI_DTM_hourMinutes (OSCTXT* pctxt, 
   ASN1T_IVI_DTM_hourMinutes* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_DTM_hourMinutes (OSCTXT* pctxt, 
   ASN1T_IVI_DTM_hourMinutes* pvalue);

EXTERN int asn1JsonEnc_IVI_DTM_hourMinutes (OSCTXT *pctxt, ASN1T_IVI_DTM_hourMinutes *pvalue);

EXTERN int asn1JsonDec_IVI_DTM_hourMinutes (OSCTXT *pctxt, ASN1T_IVI_DTM_hourMinutes *pvalue);

EXTERN int asn1PrtToStrm_IVI_DTM_hourMinutes (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_DTM_hourMinutes* pvalue);

EXTERN ASN1T_IVI_DTM_hourMinutes* 
   new_ASN1T_IVI_DTM_hourMinutes (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  DayOfWeek                                                 */
/*                                                            */
/**************************************************************/
/*
 Prefix IVI added due to naming collision with data element DayOfWeek	of Module DSRC
DayOfWeek ::= BIT STRING  { unused(0), monday(1), tuesday(2), wednesday(3), thursday(4), friday(5), saturday(6), sunday(7) } (SIZE (8))
*/
struct EXTERN ASN1T_IVI_DayOfWeek {
   OSOCTET data[1];
   // ctors
   ASN1T_IVI_DayOfWeek ()  {}
   ASN1T_IVI_DayOfWeek (const OSOCTET* _data) {
      OSCRTLSAFEMEMCPY (data, 1, _data, 1);
   }
} ;

class EXTERN ASN1C_IVI_DayOfWeek :
public ASN1CBitStr
{
protected:
   ASN1T_IVI_DayOfWeek& msgData;
public:
   // named bits
   enum { unused = 0, monday = 1, tuesday = 2, wednesday = 3, thursday = 4, friday = 5, saturday = 6, sunday = 7 };

   /**
    * Control class: ASN1C_IVI_DayOfWeek
    * Data class:    ASN1T_IVI_DayOfWeek
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_IVI_DayOfWeek (ASN1T_IVI_DayOfWeek& data);

   /**
    * Control class: ASN1C_IVI_DayOfWeek<br/>
    * Data class: ASN1T_IVI_DayOfWeek<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_IVI_DayOfWeek (OSRTMessageBufferIF& msgBuf, ASN1T_IVI_DayOfWeek& data);

   virtual ~ASN1C_IVI_DayOfWeek () {}

private:
   ASN1C_IVI_DayOfWeek& operator= (const ASN1C_IVI_DayOfWeek&) {return *this;}
} ;

EXTERN int asn1PE_IVI_DayOfWeek (OSCTXT* pctxt, ASN1T_IVI_DayOfWeek* pvalue);

EXTERN int asn1PD_IVI_DayOfWeek (OSCTXT* pctxt, ASN1T_IVI_DayOfWeek* pvalue);

EXTERN int XmlEnc_IVI_DayOfWeek (OSCTXT* pctxt, ASN1T_IVI_DayOfWeek* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_DayOfWeek (OSCTXT* pctxt, ASN1T_IVI_DayOfWeek* pvalue);

EXTERN int asn1JsonEnc_IVI_DayOfWeek (OSCTXT *pctxt, ASN1T_IVI_DayOfWeek *pvalue);

EXTERN int asn1JsonDec_IVI_DayOfWeek (OSCTXT *pctxt, ASN1T_IVI_DayOfWeek *pvalue);

EXTERN int asn1PrtToStrm_IVI_DayOfWeek (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_DayOfWeek* pvalue);

extern EXTERN struct OSBitMapItem g_ASN1T_IVI_DayOfWeek_NAMEDBITTAB[9];

EXTERN ASN1T_IVI_DayOfWeek* new_ASN1T_IVI_DayOfWeek (ASN1CType& ccobj);

EXTERN int asn1Init_IVI_DayOfWeek (ASN1T_IVI_DayOfWeek* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

/**************************************************************/
/*                                                            */
/*  DTM                                                       */
/*                                                            */
/**************************************************************/
/*
 Definition of the single ISO 14823 Attributes
DTM ::= SEQUENCE {
   year [0] SEQUENCE {
               -- contains SYR and EYR
      syr [0] INTEGER (2000..2127, ...),
      eyr [1] INTEGER (2000..2127, ...)
   } OPTIONAL,
   month-day [1] SEQUENCE {
                   -- contains SMD and EMD
      smd [0] MonthDay,
      emd [1] MonthDay
   } OPTIONAL,
   pmd [2] PMD OPTIONAL,
   hourMinutes [3] SEQUENCE {
                    -- contains SHM and EHM
      shm [0] HoursMinutes,
      ehm [1] HoursMinutes
   } OPTIONAL,
   dayOfWeek [4] DayOfWeek OPTIONAL, -- corresponds to SDY and EDY
   period [5] HoursMinutes OPTIONAL -- corresponds to LDM
}
*/
struct EXTERN ASN1T_IVI_DTM {
   struct {
      unsigned yearPresent : 1;
      unsigned month_dayPresent : 1;
      unsigned pmdPresent : 1;
      unsigned hourMinutesPresent : 1;
      unsigned dayOfWeekPresent : 1;
      unsigned periodPresent : 1;
   } m;
   ASN1T_IVI_DTM_year year;
   ASN1T_IVI_DTM_month_day month_day;
   ASN1T_IVI_PMD pmd;
   ASN1T_IVI_DTM_hourMinutes hourMinutes;
   ASN1T_IVI_DayOfWeek dayOfWeek;
   ASN1T_IVI_HoursMinutes period;
   ASN1T_IVI_DTM ();
} ;

EXTERN int asn1PE_IVI_DTM (OSCTXT* pctxt, ASN1T_IVI_DTM* pvalue);

EXTERN int asn1PD_IVI_DTM (OSCTXT* pctxt, ASN1T_IVI_DTM* pvalue);

EXTERN int XmlEnc_IVI_DTM (OSCTXT* pctxt, ASN1T_IVI_DTM* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_DTM (OSCTXT* pctxt, ASN1T_IVI_DTM* pvalue);

EXTERN int asn1JsonEnc_IVI_DTM (OSCTXT *pctxt, ASN1T_IVI_DTM *pvalue);

EXTERN int asn1JsonDec_IVI_DTM (OSCTXT *pctxt, ASN1T_IVI_DTM *pvalue);

EXTERN int asn1PrtToStrm_IVI_DTM (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_DTM* pvalue);

EXTERN ASN1T_IVI_DTM* new_ASN1T_IVI_DTM (ASN1CType& ccobj);

EXTERN int asn1Init_IVI_DTM (ASN1T_IVI_DTM* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

/**************************************************************/
/*                                                            */
/*  VcCode_validity                                           */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'VcCode'
*/
/* List of ASN1T_IVI_DTM */
typedef ASN1TSeqOfList ASN1T_IVI_VcCode_validity;

class EXTERN ASN1C_IVI_VcCode_validity :
public ASN1CSeqOfList
{
protected:
   ASN1T_IVI_VcCode_validity& msgData;
public:
   /**
    * Control class: ASN1C_IVI_VcCode_validity
    * Data class:    ASN1T_IVI_VcCode_validity
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_IVI_VcCode_validity (ASN1T_IVI_VcCode_validity& data);

   /**
    * Control class: ASN1C_IVI_VcCode_validity<br/>
    * Data class: ASN1T_IVI_VcCode_validity<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_IVI_VcCode_validity (OSRTMessageBufferIF& msgBuf
      , ASN1T_IVI_VcCode_validity& data);

   /**
    * Control class: ASN1C_IVI_VcCode_validity<br/>
    * Data class: ASN1T_IVI_VcCode_validity<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_IVI_VcCode_validity (ASN1CType& ccobj, ASN1T_IVI_VcCode_validity& data
      );

   virtual ~ASN1C_IVI_VcCode_validity () {}

   /**
    * Data class: ASN1T_IVI_DTM<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_IVI_DTM* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_IVI_DTM.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_IVI_DTM* NewElement ();

   /**
    * Data class: ASN1T_IVI_DTM.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_IVI_DTM* AppendNewElement ();

private:
   ASN1C_IVI_VcCode_validity& operator= (const ASN1C_IVI_VcCode_validity&) {return *this;}
} ;

EXTERN int asn1PE_IVI_VcCode_validity (OSCTXT* pctxt, ASN1T_IVI_VcCode_validity* pvalue);

EXTERN int asn1PD_IVI_VcCode_validity (OSCTXT* pctxt, ASN1T_IVI_VcCode_validity* pvalue);

EXTERN int XmlEnc_IVI_VcCode_validity (OSCTXT* pctxt, 
   ASN1T_IVI_VcCode_validity* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_VcCode_validity (OSCTXT* pctxt, 
   ASN1T_IVI_VcCode_validity* pvalue);

EXTERN int asn1JsonEnc_IVI_VcCode_validity (OSCTXT *pctxt, ASN1T_IVI_VcCode_validity *pvalue);

EXTERN int asn1JsonDec_IVI_VcCode_validity (OSCTXT *pctxt, ASN1T_IVI_VcCode_validity *pvalue);

EXTERN int asn1PrtToStrm_IVI_VcCode_validity (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_VcCode_validity* pvalue);

EXTERN int asn1Init_IVI_VcCode_validity (ASN1T_IVI_VcCode_validity* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_VcCode_validity (OSCTXT *pctxt, 
   ASN1T_IVI_VcCode_validity* pvalue);

/**************************************************************/
/*                                                            */
/*  RSCUnit                                                   */
/*                                                            */
/**************************************************************/
/*
RSCUnit ::= INTEGER { kmperh(0), milesperh(1), kilometer(2), meter(3), decimeter(4), centimeter(5), mile(6), yard(7), foot(8), minutesOfTime(9), tonnes(10), hundredkg(11), pound(12), rateOfIncline(13) } (0..15)
*/
struct EXTERN IVI_RSCUnit {
   enum Root {
      kmperh = 0,
      milesperh = 1,
      kilometer = 2,
      meter = 3,
      decimeter = 4,
      centimeter = 5,
      mile = 6,
      yard = 7,
      foot = 8,
      minutesOfTime = 9,
      tonnes = 10,
      hundredkg = 11,
      pound = 12,
      rateOfIncline = 13
   } ;
} ;

typedef OSUINT8 ASN1T_IVI_RSCUnit;

EXTERN int asn1PE_IVI_RSCUnit (OSCTXT* pctxt, ASN1T_IVI_RSCUnit value);

EXTERN int asn1PD_IVI_RSCUnit (OSCTXT* pctxt, ASN1T_IVI_RSCUnit* pvalue);

EXTERN int XmlEnc_IVI_RSCUnit (OSCTXT* pctxt, ASN1T_IVI_RSCUnit value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_RSCUnit (OSCTXT* pctxt, ASN1T_IVI_RSCUnit* pvalue);

EXTERN int asn1JsonEnc_IVI_RSCUnit (OSCTXT *pctxt, ASN1T_IVI_RSCUnit *pvalue);

EXTERN int asn1JsonDec_IVI_RSCUnit (OSCTXT *pctxt, ASN1T_IVI_RSCUnit *pvalue);

EXTERN int asn1PrtToStrm_IVI_RSCUnit (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_RSCUnit* pvalue);

EXTERN ASN1T_IVI_RSCUnit* new_ASN1T_IVI_RSCUnit (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  VcCode                                                    */
/*                                                            */
/**************************************************************/
/*
VcCode ::= SEQUENCE {
   roadSignClass [0] VcClass, -- see Vienna Convention 
   roadSignCode [1] INTEGER (1..64),
   vcOption [2] VcOption, -- e.g. the "a" in H, 3a
   validity [3] SEQUENCE (SIZE (1..8, ...)) OF DTM OPTIONAL,
   value [4] INTEGER (0..65535) OPTIONAL,
   unit [5] RSCUnit OPTIONAL
}
*/
struct EXTERN ASN1T_IVI_VcCode {
   struct {
      unsigned validityPresent : 1;
      unsigned valuePresent : 1;
      unsigned unitPresent : 1;
   } m;
   ASN1T_IVI_VcClass roadSignClass;
   OSUINT8 roadSignCode;
   ASN1T_IVI_VcOption vcOption;
   ASN1T_IVI_VcCode_validity validity;
   OSUINT16 value;
   ASN1T_IVI_RSCUnit unit;
   ASN1T_IVI_VcCode ();
} ;

EXTERN int asn1PE_IVI_VcCode (OSCTXT* pctxt, ASN1T_IVI_VcCode* pvalue);

EXTERN int asn1PD_IVI_VcCode (OSCTXT* pctxt, ASN1T_IVI_VcCode* pvalue);

EXTERN int XmlEnc_IVI_VcCode (OSCTXT* pctxt, ASN1T_IVI_VcCode* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_VcCode (OSCTXT* pctxt, ASN1T_IVI_VcCode* pvalue);

EXTERN int asn1JsonEnc_IVI_VcCode (OSCTXT *pctxt, ASN1T_IVI_VcCode *pvalue);

EXTERN int asn1JsonDec_IVI_VcCode (OSCTXT *pctxt, ASN1T_IVI_VcCode *pvalue);

EXTERN int asn1PrtToStrm_IVI_VcCode (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_VcCode* pvalue);

EXTERN ASN1T_IVI_VcCode* new_ASN1T_IVI_VcCode (ASN1CType& ccobj);

EXTERN int asn1Init_IVI_VcCode (ASN1T_IVI_VcCode* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_VcCode (OSCTXT *pctxt, ASN1T_IVI_VcCode* pvalue);

/**************************************************************/
/*                                                            */
/*  ISO14823Code_pictogramCode_serviceCategoryCode_trafficSi  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ISO14823Code'
*/
struct EXTERN IVI_ISO14823Code_pictogramCode_serviceCategoryCode_trafficSignPictogram {
   enum Root {
      dangerWarning = 0,
      regulatory = 1,
      informative = 2
   } ;
} ;

typedef OSUINT32 ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_trafficSignPictogram;

EXTERN int asn1PE_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_trafficSignPictogram (OSCTXT* pctxt, ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_trafficSignPictogram value);

EXTERN int asn1PD_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_trafficSignPictogram (OSCTXT* pctxt, ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_trafficSignPictogram* pvalue);

EXTERN 
   int XmlEnc_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_trafficSignPictogram 
   (OSCTXT* pctxt, 
   ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_trafficSignPictogram value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN 
   int XmlDec_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_trafficSignPictogram 
   (OSCTXT* pctxt, 
   ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_trafficSignPictogram* pvalue
   );

EXTERN int asn1JsonEnc_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_trafficSignPictogram (OSCTXT *pctxt, ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_trafficSignPictogram *pvalue);

EXTERN int asn1JsonDec_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_trafficSignPictogram (OSCTXT *pctxt, ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_trafficSignPictogram *pvalue);

EXTERN int asn1PrtToStrm_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_trafficSignPictogram (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_trafficSignPictogram* pvalue);

EXTERN 
   ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_trafficSignPictogram* 
   new_ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_trafficSignPictogram (ASN1CType& ccobj)
   ;

EXTERN extern const OSEnumItem ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_trafficSignPictogram_ENUMTAB[];
#define ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_trafficSignPictogram_ENUMTABSIZE 3

EXTERN const OSUTF8CHAR* ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_trafficSignPictogram_ToString (OSINT32 value);

EXTERN 
   int ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_trafficSignPictogram_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, 
      ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_trafficSignPictogram* pvalue)
      ;

EXTERN 
   int ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_trafficSignPictogram_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_trafficSignPictogram* pvalue)
      ;

/**************************************************************/
/*                                                            */
/*  ISO14823Code_pictogramCode_serviceCategoryCode_publicFac  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ISO14823Code'
*/
struct EXTERN IVI_ISO14823Code_pictogramCode_serviceCategoryCode_publicFacilitiesPictogram {
   enum Root {
      publicFacilities = 0
   } ;
} ;

typedef OSUINT32 ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_publicFacilitiesPictogram;

EXTERN int asn1PE_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_publicFacilitiesPictogram (OSCTXT* pctxt, ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_publicFacilitiesPictogram value);

EXTERN int asn1PD_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_publicFacilitiesPictogram (OSCTXT* pctxt, ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_publicFacilitiesPictogram* pvalue);

EXTERN 
   int XmlEnc_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_publicFacilitiesPictogram 
   (OSCTXT* pctxt, 
   ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_publicFacilitiesPictogram value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN 
   int XmlDec_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_publicFacilitiesPictogram 
   (OSCTXT* pctxt, 
   ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_publicFacilitiesPictogram* pvalue
   );

EXTERN int asn1JsonEnc_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_publicFacilitiesPictogram (OSCTXT *pctxt, ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_publicFacilitiesPictogram *pvalue);

EXTERN int asn1JsonDec_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_publicFacilitiesPictogram (OSCTXT *pctxt, ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_publicFacilitiesPictogram *pvalue);

EXTERN int asn1PrtToStrm_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_publicFacilitiesPictogram (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_publicFacilitiesPictogram* pvalue);

EXTERN 
   ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_publicFacilitiesPictogram* 
   new_ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_publicFacilitiesPictogram (ASN1CType& ccobj)
   ;

EXTERN extern const OSEnumItem ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_publicFacilitiesPictogram_ENUMTAB[];
#define ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_publicFacilitiesPictogram_ENUMTABSIZE 1

EXTERN const OSUTF8CHAR* ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_publicFacilitiesPictogram_ToString (OSINT32 value);

EXTERN 
   int ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_publicFacilitiesPictogram_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, 
      ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_publicFacilitiesPictogram* pvalue)
      ;

EXTERN 
   int ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_publicFacilitiesPictogram_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_publicFacilitiesPictogram* pvalue)
      ;

/**************************************************************/
/*                                                            */
/*  ISO14823Code_pictogramCode_serviceCategoryCode_ambientOr  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ISO14823Code'
*/
struct EXTERN IVI_ISO14823Code_pictogramCode_serviceCategoryCode_ambientOrRoadConditionPictogram {
   enum Root {
      ambientCondition = 0,
      roadCondition = 1
   } ;
} ;

typedef OSUINT32 ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_ambientOrRoadConditionPictogram;

EXTERN int asn1PE_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_ambientOrRoadConditionPictogram (OSCTXT* pctxt, ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_ambientOrRoadConditionPictogram value);

EXTERN int asn1PD_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_ambientOrRoadConditionPictogram (OSCTXT* pctxt, ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_ambientOrRoadConditionPictogram* pvalue);

EXTERN 
   int XmlEnc_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_ambientOrRoadConditionPictogram 
   (OSCTXT* pctxt, 
   ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_ambientOrRoadConditionPictogram value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN 
   int XmlDec_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_ambientOrRoadConditionPictogram 
   (OSCTXT* pctxt, 
   ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_ambientOrRoadConditionPictogram* pvalue
   );

EXTERN int asn1JsonEnc_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_ambientOrRoadConditionPictogram (OSCTXT *pctxt, ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_ambientOrRoadConditionPictogram *pvalue);

EXTERN int asn1JsonDec_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_ambientOrRoadConditionPictogram (OSCTXT *pctxt, ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_ambientOrRoadConditionPictogram *pvalue);

EXTERN int asn1PrtToStrm_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_ambientOrRoadConditionPictogram (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_ambientOrRoadConditionPictogram* pvalue);

EXTERN 
   ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_ambientOrRoadConditionPictogram* 
   new_ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_ambientOrRoadConditionPictogram (ASN1CType& ccobj)
   ;

EXTERN extern const OSEnumItem ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_ambientOrRoadConditionPictogram_ENUMTAB[];
#define ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_ambientOrRoadConditionPictogram_ENUMTABSIZE 2

EXTERN const OSUTF8CHAR* ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_ambientOrRoadConditionPictogram_ToString (OSINT32 value);

EXTERN 
   int ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_ambientOrRoadConditionPictogram_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, 
      ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_ambientOrRoadConditionPictogram* pvalue)
      ;

EXTERN 
   int ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_ambientOrRoadConditionPictogram_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_ambientOrRoadConditionPictogram* pvalue)
      ;

/**************************************************************/
/*                                                            */
/*  ISO14823Code_pictogramCode_serviceCategoryCode            */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ISO14823Code'
*/
/* Choice tag constants */

#define T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_trafficSignPictogram 1
#define T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_publicFacilitiesPictogram 2
#define T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_ambientOrRoadConditionPictogram 3
#define T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_extElem1 4

struct EXTERN ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode {
   OSINT32 t;
   union {
      /* t = 1 */
      ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_trafficSignPictogram trafficSignPictogram;
      /* t = 2 */
      ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_publicFacilitiesPictogram publicFacilitiesPictogram;
      /* t = 3 */
      ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_ambientOrRoadConditionPictogram ambientOrRoadConditionPictogram;
      /* t = 4 */
      ASN1TOpenType *extElem1;
   } u;
   ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode () { t = 0; OSCRTLMEMSET (&u, 0, sizeof(u)); }
} ;

EXTERN int asn1PE_IVI_ISO14823Code_pictogramCode_serviceCategoryCode (OSCTXT* pctxt, ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode* pvalue);

EXTERN int asn1PD_IVI_ISO14823Code_pictogramCode_serviceCategoryCode (OSCTXT* pctxt, ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode* pvalue);

EXTERN int XmlEnc_IVI_ISO14823Code_pictogramCode_serviceCategoryCode 
   (OSCTXT* pctxt, 
   ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_ISO14823Code_pictogramCode_serviceCategoryCode 
   (OSCTXT* pctxt, 
   ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode* pvalue);

EXTERN int asn1JsonEnc_IVI_ISO14823Code_pictogramCode_serviceCategoryCode (OSCTXT *pctxt, ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode *pvalue);

EXTERN int asn1JsonDec_IVI_ISO14823Code_pictogramCode_serviceCategoryCode (OSCTXT *pctxt, ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode *pvalue);

EXTERN int asn1PrtToStrm_IVI_ISO14823Code_pictogramCode_serviceCategoryCode (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode* pvalue);

EXTERN ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode* 
   new_ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode (ASN1CType& ccobj)
   ;

EXTERN int asn1Init_IVI_ISO14823Code_pictogramCode_serviceCategoryCode (
   ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_ISO14823Code_pictogramCode_serviceCategoryCode (OSCTXT *pctxt, 
   ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode* pvalue);

/**************************************************************/
/*                                                            */
/*  ISO14823Code_pictogramCode_pictogramCategoryCode          */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ISO14823Code'
*/
struct EXTERN ASN1T_IVI_ISO14823Code_pictogramCode_pictogramCategoryCode {
   OSUINT8 nature;
   OSUINT8 serialNumber;
} ;

EXTERN int asn1PE_IVI_ISO14823Code_pictogramCode_pictogramCategoryCode (OSCTXT* pctxt, ASN1T_IVI_ISO14823Code_pictogramCode_pictogramCategoryCode* pvalue);

EXTERN int asn1PD_IVI_ISO14823Code_pictogramCode_pictogramCategoryCode (OSCTXT* pctxt, ASN1T_IVI_ISO14823Code_pictogramCode_pictogramCategoryCode* pvalue);

EXTERN int XmlEnc_IVI_ISO14823Code_pictogramCode_pictogramCategoryCode 
   (OSCTXT* pctxt, 
   ASN1T_IVI_ISO14823Code_pictogramCode_pictogramCategoryCode* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_ISO14823Code_pictogramCode_pictogramCategoryCode 
   (OSCTXT* pctxt, 
   ASN1T_IVI_ISO14823Code_pictogramCode_pictogramCategoryCode* pvalue);

EXTERN int asn1JsonEnc_IVI_ISO14823Code_pictogramCode_pictogramCategoryCode (OSCTXT *pctxt, ASN1T_IVI_ISO14823Code_pictogramCode_pictogramCategoryCode *pvalue);

EXTERN int asn1JsonDec_IVI_ISO14823Code_pictogramCode_pictogramCategoryCode (OSCTXT *pctxt, ASN1T_IVI_ISO14823Code_pictogramCode_pictogramCategoryCode *pvalue);

EXTERN int asn1PrtToStrm_IVI_ISO14823Code_pictogramCode_pictogramCategoryCode (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_ISO14823Code_pictogramCode_pictogramCategoryCode* pvalue);

EXTERN ASN1T_IVI_ISO14823Code_pictogramCode_pictogramCategoryCode* 
   new_ASN1T_IVI_ISO14823Code_pictogramCode_pictogramCategoryCode (ASN1CType& ccobj)
   ;

/**************************************************************/
/*                                                            */
/*  ISO14823Code_pictogramCode                                */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ISO14823Code'
*/
struct EXTERN ASN1T_IVI_ISO14823Code_pictogramCode {
   struct {
      unsigned countryCodePresent : 1;
   } m;
   OSOCTET countryCode[2];
   ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode serviceCategoryCode;
   ASN1T_IVI_ISO14823Code_pictogramCode_pictogramCategoryCode pictogramCategoryCode;
   ASN1T_IVI_ISO14823Code_pictogramCode ();
} ;

EXTERN int asn1PE_IVI_ISO14823Code_pictogramCode (OSCTXT* pctxt, ASN1T_IVI_ISO14823Code_pictogramCode* pvalue);

EXTERN int asn1PD_IVI_ISO14823Code_pictogramCode (OSCTXT* pctxt, ASN1T_IVI_ISO14823Code_pictogramCode* pvalue);

EXTERN int XmlEnc_IVI_ISO14823Code_pictogramCode (OSCTXT* pctxt, 
   ASN1T_IVI_ISO14823Code_pictogramCode* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_ISO14823Code_pictogramCode (OSCTXT* pctxt, 
   ASN1T_IVI_ISO14823Code_pictogramCode* pvalue);

EXTERN int asn1JsonEnc_IVI_ISO14823Code_pictogramCode (OSCTXT *pctxt, ASN1T_IVI_ISO14823Code_pictogramCode *pvalue);

EXTERN int asn1JsonDec_IVI_ISO14823Code_pictogramCode (OSCTXT *pctxt, ASN1T_IVI_ISO14823Code_pictogramCode *pvalue);

EXTERN int asn1PrtToStrm_IVI_ISO14823Code_pictogramCode (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_ISO14823Code_pictogramCode* pvalue);

EXTERN ASN1T_IVI_ISO14823Code_pictogramCode* 
   new_ASN1T_IVI_ISO14823Code_pictogramCode (ASN1CType& ccobj);

EXTERN int asn1Init_IVI_ISO14823Code_pictogramCode (
   ASN1T_IVI_ISO14823Code_pictogramCode* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_ISO14823Code_pictogramCode (OSCTXT *pctxt, 
   ASN1T_IVI_ISO14823Code_pictogramCode* pvalue);

/**************************************************************/
/*                                                            */
/*  EDT                                                       */
/*                                                            */
/**************************************************************/
/*
EDT ::= DTM
*/
typedef ASN1T_IVI_DTM ASN1T_IVI_EDT;

EXTERN int asn1PE_IVI_EDT (OSCTXT* pctxt, ASN1T_IVI_EDT* pvalue);

EXTERN int asn1PD_IVI_EDT (OSCTXT* pctxt, ASN1T_IVI_EDT* pvalue);

EXTERN int XmlEnc_IVI_EDT (OSCTXT* pctxt, ASN1T_IVI_EDT* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_EDT (OSCTXT* pctxt, ASN1T_IVI_EDT* pvalue);

EXTERN int asn1JsonEnc_IVI_EDT (OSCTXT *pctxt, ASN1T_IVI_EDT *pvalue);

EXTERN int asn1JsonDec_IVI_EDT (OSCTXT *pctxt, ASN1T_IVI_EDT *pvalue);

EXTERN int asn1PrtToStrm_IVI_EDT (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_EDT* pvalue);

EXTERN ASN1T_IVI_EDT* new_ASN1T_IVI_EDT (ASN1CType& ccobj);

EXTERN int asn1Init_IVI_EDT (ASN1T_IVI_EDT* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

/**************************************************************/
/*                                                            */
/*  DFL                                                       */
/*                                                            */
/**************************************************************/
/*
DFL ::= INTEGER { sDL(1), sLT(2), sRT(3), lTO(4), rTO(5), cLL(6), cRI(7), oVL(8) } (1..8)
*/
struct EXTERN IVI_DFL {
   enum Root {
      sDL = 1,
      sLT = 2,
      sRT = 3,
      lTO = 4,
      rTO = 5,
      cLL = 6,
      cRI = 7,
      oVL = 8
   } ;
} ;

typedef OSUINT8 ASN1T_IVI_DFL;

EXTERN int asn1PE_IVI_DFL (OSCTXT* pctxt, ASN1T_IVI_DFL value);

EXTERN int asn1PD_IVI_DFL (OSCTXT* pctxt, ASN1T_IVI_DFL* pvalue);

EXTERN int XmlEnc_IVI_DFL (OSCTXT* pctxt, ASN1T_IVI_DFL value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_DFL (OSCTXT* pctxt, ASN1T_IVI_DFL* pvalue);

EXTERN int asn1JsonEnc_IVI_DFL (OSCTXT *pctxt, ASN1T_IVI_DFL *pvalue);

EXTERN int asn1JsonDec_IVI_DFL (OSCTXT *pctxt, ASN1T_IVI_DFL *pvalue);

EXTERN int asn1PrtToStrm_IVI_DFL (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_DFL* pvalue);

EXTERN ASN1T_IVI_DFL* new_ASN1T_IVI_DFL (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  Distance                                                  */
/*                                                            */
/**************************************************************/
/*
Distance ::= SEQUENCE {
   value [0] INTEGER (1..16384),
   unit [1] RSCUnit (2..4 | 6..8)
}
*/
struct EXTERN ASN1T_IVI_Distance {
   OSUINT16 value;
   OSUINT8 unit;
} ;

EXTERN int asn1PE_IVI_Distance (OSCTXT* pctxt, ASN1T_IVI_Distance* pvalue);

EXTERN int asn1PD_IVI_Distance (OSCTXT* pctxt, ASN1T_IVI_Distance* pvalue);

EXTERN int XmlEnc_IVI_Distance (OSCTXT* pctxt, ASN1T_IVI_Distance* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_Distance (OSCTXT* pctxt, ASN1T_IVI_Distance* pvalue);

EXTERN int asn1JsonEnc_IVI_Distance (OSCTXT *pctxt, ASN1T_IVI_Distance *pvalue);

EXTERN int asn1JsonDec_IVI_Distance (OSCTXT *pctxt, ASN1T_IVI_Distance *pvalue);

EXTERN int asn1PrtToStrm_IVI_Distance (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_Distance* pvalue);

EXTERN ASN1T_IVI_Distance* new_ASN1T_IVI_Distance (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  Weight                                                    */
/*                                                            */
/**************************************************************/
/*
Weight ::= SEQUENCE {
   value [0] INTEGER (1..16384),
   unit [1] RSCUnit (10..12)
}
*/
struct EXTERN ASN1T_IVI_Weight {
   OSUINT16 value;
   OSUINT8 unit;
} ;

EXTERN int asn1PE_IVI_Weight (OSCTXT* pctxt, ASN1T_IVI_Weight* pvalue);

EXTERN int asn1PD_IVI_Weight (OSCTXT* pctxt, ASN1T_IVI_Weight* pvalue);

EXTERN int XmlEnc_IVI_Weight (OSCTXT* pctxt, ASN1T_IVI_Weight* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_Weight (OSCTXT* pctxt, ASN1T_IVI_Weight* pvalue);

EXTERN int asn1JsonEnc_IVI_Weight (OSCTXT *pctxt, ASN1T_IVI_Weight *pvalue);

EXTERN int asn1JsonDec_IVI_Weight (OSCTXT *pctxt, ASN1T_IVI_Weight *pvalue);

EXTERN int asn1PrtToStrm_IVI_Weight (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_Weight* pvalue);

EXTERN ASN1T_IVI_Weight* new_ASN1T_IVI_Weight (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  VED                                                       */
/*                                                            */
/**************************************************************/
/*
VED ::= SEQUENCE {
   hei [0] Distance OPTIONAL,
   wid [1] Distance OPTIONAL,
   vln [2] Distance OPTIONAL,
   wei [3] Weight OPTIONAL
}
*/
struct EXTERN ASN1T_IVI_VED {
   struct {
      unsigned heiPresent : 1;
      unsigned widPresent : 1;
      unsigned vlnPresent : 1;
      unsigned weiPresent : 1;
   } m;
   ASN1T_IVI_Distance hei;
   ASN1T_IVI_Distance wid;
   ASN1T_IVI_Distance vln;
   ASN1T_IVI_Weight wei;
   ASN1T_IVI_VED ();
} ;

EXTERN int asn1PE_IVI_VED (OSCTXT* pctxt, ASN1T_IVI_VED* pvalue);

EXTERN int asn1PD_IVI_VED (OSCTXT* pctxt, ASN1T_IVI_VED* pvalue);

EXTERN int XmlEnc_IVI_VED (OSCTXT* pctxt, ASN1T_IVI_VED* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_VED (OSCTXT* pctxt, ASN1T_IVI_VED* pvalue);

EXTERN int asn1JsonEnc_IVI_VED (OSCTXT *pctxt, ASN1T_IVI_VED *pvalue);

EXTERN int asn1JsonDec_IVI_VED (OSCTXT *pctxt, ASN1T_IVI_VED *pvalue);

EXTERN int asn1PrtToStrm_IVI_VED (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_VED* pvalue);

EXTERN ASN1T_IVI_VED* new_ASN1T_IVI_VED (ASN1CType& ccobj);

EXTERN int asn1Init_IVI_VED (ASN1T_IVI_VED* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

/**************************************************************/
/*                                                            */
/*  SPE                                                       */
/*                                                            */
/**************************************************************/
/*
SPE ::= SEQUENCE {
   spm [0] INTEGER (0..250) OPTIONAL,
   mns [1] INTEGER (0..250) OPTIONAL,
   unit [2] RSCUnit (0..1)
}
*/
struct EXTERN ASN1T_IVI_SPE {
   struct {
      unsigned spmPresent : 1;
      unsigned mnsPresent : 1;
   } m;
   OSUINT8 spm;
   OSUINT8 mns;
   OSUINT8 unit;
   ASN1T_IVI_SPE ();
} ;

EXTERN int asn1PE_IVI_SPE (OSCTXT* pctxt, ASN1T_IVI_SPE* pvalue);

EXTERN int asn1PD_IVI_SPE (OSCTXT* pctxt, ASN1T_IVI_SPE* pvalue);

EXTERN int XmlEnc_IVI_SPE (OSCTXT* pctxt, ASN1T_IVI_SPE* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_SPE (OSCTXT* pctxt, ASN1T_IVI_SPE* pvalue);

EXTERN int asn1JsonEnc_IVI_SPE (OSCTXT *pctxt, ASN1T_IVI_SPE *pvalue);

EXTERN int asn1JsonDec_IVI_SPE (OSCTXT *pctxt, ASN1T_IVI_SPE *pvalue);

EXTERN int asn1PrtToStrm_IVI_SPE (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_SPE* pvalue);

EXTERN ASN1T_IVI_SPE* new_ASN1T_IVI_SPE (ASN1CType& ccobj);

EXTERN int asn1Init_IVI_SPE (ASN1T_IVI_SPE* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

/**************************************************************/
/*                                                            */
/*  ROI                                                       */
/*                                                            */
/**************************************************************/
/*
ROI ::= INTEGER (1..32)
*/
typedef OSUINT8 ASN1T_IVI_ROI;

EXTERN int asn1PE_IVI_ROI (OSCTXT* pctxt, ASN1T_IVI_ROI value);

EXTERN int asn1PD_IVI_ROI (OSCTXT* pctxt, ASN1T_IVI_ROI* pvalue);

EXTERN int XmlEnc_IVI_ROI (OSCTXT* pctxt, ASN1T_IVI_ROI value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_ROI (OSCTXT* pctxt, ASN1T_IVI_ROI* pvalue);

EXTERN int asn1JsonEnc_IVI_ROI (OSCTXT *pctxt, ASN1T_IVI_ROI *pvalue);

EXTERN int asn1JsonDec_IVI_ROI (OSCTXT *pctxt, ASN1T_IVI_ROI *pvalue);

EXTERN int asn1PrtToStrm_IVI_ROI (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_ROI* pvalue);

EXTERN ASN1T_IVI_ROI* new_ASN1T_IVI_ROI (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  DBV                                                       */
/*                                                            */
/**************************************************************/
/*
DBV ::= Distance
*/
typedef ASN1T_IVI_Distance ASN1T_IVI_DBV;

EXTERN int asn1PE_IVI_DBV (OSCTXT* pctxt, ASN1T_IVI_DBV* pvalue);

EXTERN int asn1PD_IVI_DBV (OSCTXT* pctxt, ASN1T_IVI_DBV* pvalue);

EXTERN int XmlEnc_IVI_DBV (OSCTXT* pctxt, ASN1T_IVI_DBV* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_DBV (OSCTXT* pctxt, ASN1T_IVI_DBV* pvalue);

EXTERN int asn1JsonEnc_IVI_DBV (OSCTXT *pctxt, ASN1T_IVI_DBV *pvalue);

EXTERN int asn1JsonDec_IVI_DBV (OSCTXT *pctxt, ASN1T_IVI_DBV *pvalue);

EXTERN int asn1PrtToStrm_IVI_DBV (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_DBV* pvalue);

EXTERN ASN1T_IVI_DBV* new_ASN1T_IVI_DBV (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  DDD_DEP                                                   */
/*                                                            */
/**************************************************************/
/*
 changes: from DDD_DEP to DDD-DEP
DDD-DEP ::= INTEGER { none(0), importantArea(1), principalArea(2), generalArea(3), wellKnownPoint(4), country(5), city(6), street(7), industrialArea(8), historicArea(9), touristicArea(10), culturalArea(11), touristicRoute(12), recommendedRoute(13), touristicAttraction(14), geographicArea(15) } (0..15, ...)
*/
struct EXTERN IVI_DDD_DEP {
   enum Root {
      none = 0,
      importantArea = 1,
      principalArea = 2,
      generalArea = 3,
      wellKnownPoint = 4,
      country = 5,
      city = 6,
      street = 7,
      industrialArea = 8,
      historicArea = 9,
      touristicArea = 10,
      culturalArea = 11,
      touristicRoute = 12,
      recommendedRoute = 13,
      touristicAttraction = 14,
      geographicArea = 15
   } ;
} ;

typedef OSUINT32 ASN1T_IVI_DDD_DEP;

EXTERN int asn1PE_IVI_DDD_DEP (OSCTXT* pctxt, ASN1T_IVI_DDD_DEP value);

EXTERN int asn1PD_IVI_DDD_DEP (OSCTXT* pctxt, ASN1T_IVI_DDD_DEP* pvalue);

EXTERN int XmlEnc_IVI_DDD_DEP (OSCTXT* pctxt, ASN1T_IVI_DDD_DEP value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_DDD_DEP (OSCTXT* pctxt, ASN1T_IVI_DDD_DEP* pvalue);

EXTERN int asn1JsonEnc_IVI_DDD_DEP (OSCTXT *pctxt, ASN1T_IVI_DDD_DEP *pvalue);

EXTERN int asn1JsonDec_IVI_DDD_DEP (OSCTXT *pctxt, ASN1T_IVI_DDD_DEP *pvalue);

EXTERN int asn1PrtToStrm_IVI_DDD_DEP (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_DDD_DEP* pvalue);

EXTERN ASN1T_IVI_DDD_DEP* new_ASN1T_IVI_DDD_DEP (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  DestinationPlace                                          */
/*                                                            */
/**************************************************************/
/*
 changes: from DDD_DEP to DDD-DEP
DestinationPlace ::= SEQUENCE {
   depType [0] DDD-DEP,
 -- Encoding problem: to be checked if the statement is ASN.1 compatible
 -- depRSCode	ISO14823Code (WITH COMPONENTS {..., attributes ABSENT}) OPTIONAL,
   depRSCode [1] ISO14823Code OPTIONAL,
   depBlob [2] OCTET STRING OPTIONAL,
   plnId [3] INTEGER (1..999) OPTIONAL,
   plnText [4] UTF8String OPTIONAL
}
*/
struct EXTERN ASN1T_IVI_DestinationPlace {
   struct {
      unsigned depRSCodePresent : 1;
      unsigned depBlobPresent : 1;
      unsigned plnIdPresent : 1;
      unsigned plnTextPresent : 1;
   } m;
   ASN1T_IVI_DDD_DEP depType;
   struct ASN1T_IVI_ISO14823Code *depRSCode;
   ASN1TDynOctStr64 depBlob;
   OSUINT16 plnId;
   const OSUTF8CHAR* plnText;
   ASN1T_IVI_DestinationPlace ();
} ;

EXTERN int asn1PE_IVI_DestinationPlace (OSCTXT* pctxt, ASN1T_IVI_DestinationPlace* pvalue);

EXTERN int asn1PD_IVI_DestinationPlace (OSCTXT* pctxt, ASN1T_IVI_DestinationPlace* pvalue);

EXTERN int XmlEnc_IVI_DestinationPlace (OSCTXT* pctxt, 
   ASN1T_IVI_DestinationPlace* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_DestinationPlace (OSCTXT* pctxt, 
   ASN1T_IVI_DestinationPlace* pvalue);

EXTERN int asn1JsonEnc_IVI_DestinationPlace (OSCTXT *pctxt, ASN1T_IVI_DestinationPlace *pvalue);

EXTERN int asn1JsonDec_IVI_DestinationPlace (OSCTXT *pctxt, ASN1T_IVI_DestinationPlace *pvalue);

EXTERN int asn1PrtToStrm_IVI_DestinationPlace (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_DestinationPlace* pvalue);

EXTERN ASN1T_IVI_DestinationPlace* 
   new_ASN1T_IVI_DestinationPlace (ASN1CType& ccobj);

EXTERN int asn1Init_IVI_DestinationPlace (ASN1T_IVI_DestinationPlace* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_DestinationPlace (OSCTXT *pctxt, 
   ASN1T_IVI_DestinationPlace* pvalue);

/**************************************************************/
/*                                                            */
/*  DDD_IO_dp                                                 */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'DDD-IO'
*/
/* List of ASN1T_IVI_DestinationPlace */
typedef ASN1TSeqOfList ASN1T_IVI_DDD_IO_dp;

class EXTERN ASN1C_IVI_DDD_IO_dp :
public ASN1CSeqOfList
{
protected:
   ASN1T_IVI_DDD_IO_dp& msgData;
public:
   /**
    * Control class: ASN1C_IVI_DDD_IO_dp
    * Data class:    ASN1T_IVI_DDD_IO_dp
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_IVI_DDD_IO_dp (ASN1T_IVI_DDD_IO_dp& data);

   /**
    * Control class: ASN1C_IVI_DDD_IO_dp<br/>
    * Data class: ASN1T_IVI_DDD_IO_dp<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_IVI_DDD_IO_dp (OSRTMessageBufferIF& msgBuf, ASN1T_IVI_DDD_IO_dp& data);

   /**
    * Control class: ASN1C_IVI_DDD_IO_dp<br/>
    * Data class: ASN1T_IVI_DDD_IO_dp<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_IVI_DDD_IO_dp (ASN1CType& ccobj, ASN1T_IVI_DDD_IO_dp& data);

   virtual ~ASN1C_IVI_DDD_IO_dp () {}

   /**
    * Data class: ASN1T_IVI_DestinationPlace<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_IVI_DestinationPlace* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_IVI_DestinationPlace.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_IVI_DestinationPlace* NewElement ();

   /**
    * Data class: ASN1T_IVI_DestinationPlace.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_IVI_DestinationPlace* AppendNewElement ();

private:
   ASN1C_IVI_DDD_IO_dp& operator= (const ASN1C_IVI_DDD_IO_dp&) {return *this;}
} ;

EXTERN int asn1PE_IVI_DDD_IO_dp (OSCTXT* pctxt, ASN1T_IVI_DDD_IO_dp* pvalue);

EXTERN int asn1PD_IVI_DDD_IO_dp (OSCTXT* pctxt, ASN1T_IVI_DDD_IO_dp* pvalue);

EXTERN int XmlEnc_IVI_DDD_IO_dp (OSCTXT* pctxt, ASN1T_IVI_DDD_IO_dp* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_DDD_IO_dp (OSCTXT* pctxt, ASN1T_IVI_DDD_IO_dp* pvalue);

EXTERN int asn1JsonEnc_IVI_DDD_IO_dp (OSCTXT *pctxt, ASN1T_IVI_DDD_IO_dp *pvalue);

EXTERN int asn1JsonDec_IVI_DDD_IO_dp (OSCTXT *pctxt, ASN1T_IVI_DDD_IO_dp *pvalue);

EXTERN int asn1PrtToStrm_IVI_DDD_IO_dp (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_DDD_IO_dp* pvalue);

EXTERN int asn1Init_IVI_DDD_IO_dp (ASN1T_IVI_DDD_IO_dp* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_DDD_IO_dp (OSCTXT *pctxt, ASN1T_IVI_DDD_IO_dp* pvalue);

/**************************************************************/
/*                                                            */
/*  DDD_DER                                                   */
/*                                                            */
/**************************************************************/
/*
 changes: from DDD_DER to DDD-DER
DDD-DER ::= INTEGER { none(0), nationalHighway(1), localHighway(2), tollExpresswayMotorway(3), internationalHighway(4), highway(5), expressway(6), nationalRoad(7), regionalProvincialRoad(8), localRoad(9), motorwayJunction(10), diversion(11), rfu1(12), rfu2(13), rfu3(14), rfu4(15) } (0..15, ...)
*/
struct EXTERN IVI_DDD_DER {
   enum Root {
      none = 0,
      nationalHighway = 1,
      localHighway = 2,
      tollExpresswayMotorway = 3,
      internationalHighway = 4,
      highway = 5,
      expressway = 6,
      nationalRoad = 7,
      regionalProvincialRoad = 8,
      localRoad = 9,
      motorwayJunction = 10,
      diversion = 11,
      rfu1 = 12,
      rfu2 = 13,
      rfu3 = 14,
      rfu4 = 15
   } ;
} ;

typedef OSUINT32 ASN1T_IVI_DDD_DER;

EXTERN int asn1PE_IVI_DDD_DER (OSCTXT* pctxt, ASN1T_IVI_DDD_DER value);

EXTERN int asn1PD_IVI_DDD_DER (OSCTXT* pctxt, ASN1T_IVI_DDD_DER* pvalue);

EXTERN int XmlEnc_IVI_DDD_DER (OSCTXT* pctxt, ASN1T_IVI_DDD_DER value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_DDD_DER (OSCTXT* pctxt, ASN1T_IVI_DDD_DER* pvalue);

EXTERN int asn1JsonEnc_IVI_DDD_DER (OSCTXT *pctxt, ASN1T_IVI_DDD_DER *pvalue);

EXTERN int asn1JsonDec_IVI_DDD_DER (OSCTXT *pctxt, ASN1T_IVI_DDD_DER *pvalue);

EXTERN int asn1PrtToStrm_IVI_DDD_DER (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_DDD_DER* pvalue);

EXTERN ASN1T_IVI_DDD_DER* new_ASN1T_IVI_DDD_DER (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  DestinationRoad                                           */
/*                                                            */
/**************************************************************/
/*
 changes: from DDD_DER to DDD-DER
DestinationRoad ::= SEQUENCE {
   derType [0] DDD-DER,
   ronId [1] INTEGER (1..999) OPTIONAL,
   ronText [2] UTF8String OPTIONAL
}
*/
struct EXTERN ASN1T_IVI_DestinationRoad {
   struct {
      unsigned ronIdPresent : 1;
      unsigned ronTextPresent : 1;
   } m;
   ASN1T_IVI_DDD_DER derType;
   OSUINT16 ronId;
   const OSUTF8CHAR* ronText;
   ASN1T_IVI_DestinationRoad ();
} ;

EXTERN int asn1PE_IVI_DestinationRoad (OSCTXT* pctxt, ASN1T_IVI_DestinationRoad* pvalue);

EXTERN int asn1PD_IVI_DestinationRoad (OSCTXT* pctxt, ASN1T_IVI_DestinationRoad* pvalue);

EXTERN int XmlEnc_IVI_DestinationRoad (OSCTXT* pctxt, 
   ASN1T_IVI_DestinationRoad* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_DestinationRoad (OSCTXT* pctxt, 
   ASN1T_IVI_DestinationRoad* pvalue);

EXTERN int asn1JsonEnc_IVI_DestinationRoad (OSCTXT *pctxt, ASN1T_IVI_DestinationRoad *pvalue);

EXTERN int asn1JsonDec_IVI_DestinationRoad (OSCTXT *pctxt, ASN1T_IVI_DestinationRoad *pvalue);

EXTERN int asn1PrtToStrm_IVI_DestinationRoad (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_DestinationRoad* pvalue);

EXTERN ASN1T_IVI_DestinationRoad* 
   new_ASN1T_IVI_DestinationRoad (ASN1CType& ccobj);

EXTERN int asn1Init_IVI_DestinationRoad (ASN1T_IVI_DestinationRoad* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_DestinationRoad (OSCTXT *pctxt, 
   ASN1T_IVI_DestinationRoad* pvalue);

/**************************************************************/
/*                                                            */
/*  DDD_IO_dr                                                 */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'DDD-IO'
*/
/* List of ASN1T_IVI_DestinationRoad */
typedef ASN1TSeqOfList ASN1T_IVI_DDD_IO_dr;

class EXTERN ASN1C_IVI_DDD_IO_dr :
public ASN1CSeqOfList
{
protected:
   ASN1T_IVI_DDD_IO_dr& msgData;
public:
   /**
    * Control class: ASN1C_IVI_DDD_IO_dr
    * Data class:    ASN1T_IVI_DDD_IO_dr
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_IVI_DDD_IO_dr (ASN1T_IVI_DDD_IO_dr& data);

   /**
    * Control class: ASN1C_IVI_DDD_IO_dr<br/>
    * Data class: ASN1T_IVI_DDD_IO_dr<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_IVI_DDD_IO_dr (OSRTMessageBufferIF& msgBuf, ASN1T_IVI_DDD_IO_dr& data);

   /**
    * Control class: ASN1C_IVI_DDD_IO_dr<br/>
    * Data class: ASN1T_IVI_DDD_IO_dr<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_IVI_DDD_IO_dr (ASN1CType& ccobj, ASN1T_IVI_DDD_IO_dr& data);

   virtual ~ASN1C_IVI_DDD_IO_dr () {}

   /**
    * Data class: ASN1T_IVI_DestinationRoad<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_IVI_DestinationRoad* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_IVI_DestinationRoad.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_IVI_DestinationRoad* NewElement ();

   /**
    * Data class: ASN1T_IVI_DestinationRoad.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_IVI_DestinationRoad* AppendNewElement ();

private:
   ASN1C_IVI_DDD_IO_dr& operator= (const ASN1C_IVI_DDD_IO_dr&) {return *this;}
} ;

EXTERN int asn1PE_IVI_DDD_IO_dr (OSCTXT* pctxt, ASN1T_IVI_DDD_IO_dr* pvalue);

EXTERN int asn1PD_IVI_DDD_IO_dr (OSCTXT* pctxt, ASN1T_IVI_DDD_IO_dr* pvalue);

EXTERN int XmlEnc_IVI_DDD_IO_dr (OSCTXT* pctxt, ASN1T_IVI_DDD_IO_dr* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_DDD_IO_dr (OSCTXT* pctxt, ASN1T_IVI_DDD_IO_dr* pvalue);

EXTERN int asn1JsonEnc_IVI_DDD_IO_dr (OSCTXT *pctxt, ASN1T_IVI_DDD_IO_dr *pvalue);

EXTERN int asn1JsonDec_IVI_DDD_IO_dr (OSCTXT *pctxt, ASN1T_IVI_DDD_IO_dr *pvalue);

EXTERN int asn1PrtToStrm_IVI_DDD_IO_dr (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_DDD_IO_dr* pvalue);

EXTERN int asn1Init_IVI_DDD_IO_dr (ASN1T_IVI_DDD_IO_dr* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_DDD_IO_dr (OSCTXT *pctxt, ASN1T_IVI_DDD_IO_dr* pvalue);

/**************************************************************/
/*                                                            */
/*  DistanceOrDuration                                        */
/*                                                            */
/**************************************************************/
/*
DistanceOrDuration ::= SEQUENCE {
   value [0] INTEGER (1..16384),
   unit [1] RSCUnit (2..9)
}
*/
struct EXTERN ASN1T_IVI_DistanceOrDuration {
   OSUINT16 value;
   OSUINT8 unit;
} ;

EXTERN int asn1PE_IVI_DistanceOrDuration (OSCTXT* pctxt, ASN1T_IVI_DistanceOrDuration* pvalue);

EXTERN int asn1PD_IVI_DistanceOrDuration (OSCTXT* pctxt, ASN1T_IVI_DistanceOrDuration* pvalue);

EXTERN int XmlEnc_IVI_DistanceOrDuration (OSCTXT* pctxt, 
   ASN1T_IVI_DistanceOrDuration* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_DistanceOrDuration (OSCTXT* pctxt, 
   ASN1T_IVI_DistanceOrDuration* pvalue);

EXTERN int asn1JsonEnc_IVI_DistanceOrDuration (OSCTXT *pctxt, ASN1T_IVI_DistanceOrDuration *pvalue);

EXTERN int asn1JsonDec_IVI_DistanceOrDuration (OSCTXT *pctxt, ASN1T_IVI_DistanceOrDuration *pvalue);

EXTERN int asn1PrtToStrm_IVI_DistanceOrDuration (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_DistanceOrDuration* pvalue);

EXTERN ASN1T_IVI_DistanceOrDuration* 
   new_ASN1T_IVI_DistanceOrDuration (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  DDD_IO                                                    */
/*                                                            */
/**************************************************************/
/*
 changes: from DDD_IO to DDD-IO
DDD-IO ::= SEQUENCE {
   drn [0] INTEGER (0..7),
   dp [1] SEQUENCE (SIZE (1..4, ...)) OF DestinationPlace OPTIONAL,
   dr [2] SEQUENCE (SIZE (1..4, ...)) OF DestinationRoad OPTIONAL,
   rne [3] INTEGER (1..999) OPTIONAL,
   stnId [4] INTEGER (1..999) OPTIONAL,
   stnText [5] UTF8String OPTIONAL,
   dcp [6] DistanceOrDuration OPTIONAL,
   ddp [7] DistanceOrDuration OPTIONAL
}
*/
struct EXTERN ASN1T_IVI_DDD_IO {
   struct {
      unsigned dpPresent : 1;
      unsigned drPresent : 1;
      unsigned rnePresent : 1;
      unsigned stnIdPresent : 1;
      unsigned stnTextPresent : 1;
      unsigned dcpPresent : 1;
      unsigned ddpPresent : 1;
   } m;
   OSUINT8 drn;
   ASN1T_IVI_DDD_IO_dp dp;
   ASN1T_IVI_DDD_IO_dr dr;
   OSUINT16 rne;
   OSUINT16 stnId;
   const OSUTF8CHAR* stnText;
   ASN1T_IVI_DistanceOrDuration dcp;
   ASN1T_IVI_DistanceOrDuration ddp;
   ASN1T_IVI_DDD_IO ();
} ;

EXTERN int asn1PE_IVI_DDD_IO (OSCTXT* pctxt, ASN1T_IVI_DDD_IO* pvalue);

EXTERN int asn1PD_IVI_DDD_IO (OSCTXT* pctxt, ASN1T_IVI_DDD_IO* pvalue);

EXTERN int XmlEnc_IVI_DDD_IO (OSCTXT* pctxt, ASN1T_IVI_DDD_IO* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_DDD_IO (OSCTXT* pctxt, ASN1T_IVI_DDD_IO* pvalue);

EXTERN int asn1JsonEnc_IVI_DDD_IO (OSCTXT *pctxt, ASN1T_IVI_DDD_IO *pvalue);

EXTERN int asn1JsonDec_IVI_DDD_IO (OSCTXT *pctxt, ASN1T_IVI_DDD_IO *pvalue);

EXTERN int asn1PrtToStrm_IVI_DDD_IO (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_DDD_IO* pvalue);

EXTERN ASN1T_IVI_DDD_IO* new_ASN1T_IVI_DDD_IO (ASN1CType& ccobj);

EXTERN int asn1Init_IVI_DDD_IO (ASN1T_IVI_DDD_IO* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_DDD_IO (OSCTXT *pctxt, ASN1T_IVI_DDD_IO* pvalue);

/**************************************************************/
/*                                                            */
/*  DDD_ioList                                                */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'DDD'
*/
/* List of ASN1T_IVI_DDD_IO */
typedef ASN1TSeqOfList ASN1T_IVI_DDD_ioList;

class EXTERN ASN1C_IVI_DDD_ioList :
public ASN1CSeqOfList
{
protected:
   ASN1T_IVI_DDD_ioList& msgData;
public:
   /**
    * Control class: ASN1C_IVI_DDD_ioList
    * Data class:    ASN1T_IVI_DDD_ioList
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_IVI_DDD_ioList (ASN1T_IVI_DDD_ioList& data);

   /**
    * Control class: ASN1C_IVI_DDD_ioList<br/>
    * Data class: ASN1T_IVI_DDD_ioList<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_IVI_DDD_ioList (OSRTMessageBufferIF& msgBuf
      , ASN1T_IVI_DDD_ioList& data);

   /**
    * Control class: ASN1C_IVI_DDD_ioList<br/>
    * Data class: ASN1T_IVI_DDD_ioList<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_IVI_DDD_ioList (ASN1CType& ccobj, ASN1T_IVI_DDD_ioList& data);

   virtual ~ASN1C_IVI_DDD_ioList () {}

   /**
    * Data class: ASN1T_IVI_DDD_IO<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_IVI_DDD_IO* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_IVI_DDD_IO.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_IVI_DDD_IO* NewElement ();

   /**
    * Data class: ASN1T_IVI_DDD_IO.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_IVI_DDD_IO* AppendNewElement ();

private:
   ASN1C_IVI_DDD_ioList& operator= (const ASN1C_IVI_DDD_ioList&) {return *this;}
} ;

EXTERN int asn1PE_IVI_DDD_ioList (OSCTXT* pctxt, ASN1T_IVI_DDD_ioList* pvalue);

EXTERN int asn1PD_IVI_DDD_ioList (OSCTXT* pctxt, ASN1T_IVI_DDD_ioList* pvalue);

EXTERN int XmlEnc_IVI_DDD_ioList (OSCTXT* pctxt, ASN1T_IVI_DDD_ioList* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_DDD_ioList (OSCTXT* pctxt, ASN1T_IVI_DDD_ioList* pvalue)
   ;

EXTERN int asn1JsonEnc_IVI_DDD_ioList (OSCTXT *pctxt, ASN1T_IVI_DDD_ioList *pvalue);

EXTERN int asn1JsonDec_IVI_DDD_ioList (OSCTXT *pctxt, ASN1T_IVI_DDD_ioList *pvalue);

EXTERN int asn1PrtToStrm_IVI_DDD_ioList (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_DDD_ioList* pvalue);

EXTERN int asn1Init_IVI_DDD_ioList (ASN1T_IVI_DDD_ioList* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_DDD_ioList (OSCTXT *pctxt, ASN1T_IVI_DDD_ioList* pvalue);

/**************************************************************/
/*                                                            */
/*  DDD                                                       */
/*                                                            */
/**************************************************************/
/*
 changes: from DDD_IO to DDD-IO
DDD ::= SEQUENCE {
   dcj [0] INTEGER (1..128) OPTIONAL,
   dcr [1] INTEGER (1..128) OPTIONAL,
   tpl [2] INTEGER (1..128) OPTIONAL,
   ioList [3] SEQUENCE (SIZE (1..8, ...)) OF DDD-IO
}
*/
struct EXTERN ASN1T_IVI_DDD {
   struct {
      unsigned dcjPresent : 1;
      unsigned dcrPresent : 1;
      unsigned tplPresent : 1;
   } m;
   OSUINT8 dcj;
   OSUINT8 dcr;
   OSUINT8 tpl;
   ASN1T_IVI_DDD_ioList ioList;
   ASN1T_IVI_DDD ();
} ;

EXTERN int asn1PE_IVI_DDD (OSCTXT* pctxt, ASN1T_IVI_DDD* pvalue);

EXTERN int asn1PD_IVI_DDD (OSCTXT* pctxt, ASN1T_IVI_DDD* pvalue);

EXTERN int XmlEnc_IVI_DDD (OSCTXT* pctxt, ASN1T_IVI_DDD* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_DDD (OSCTXT* pctxt, ASN1T_IVI_DDD* pvalue);

EXTERN int asn1JsonEnc_IVI_DDD (OSCTXT *pctxt, ASN1T_IVI_DDD *pvalue);

EXTERN int asn1JsonDec_IVI_DDD (OSCTXT *pctxt, ASN1T_IVI_DDD *pvalue);

EXTERN int asn1PrtToStrm_IVI_DDD (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_DDD* pvalue);

EXTERN ASN1T_IVI_DDD* new_ASN1T_IVI_DDD (ASN1CType& ccobj);

EXTERN int asn1Init_IVI_DDD (ASN1T_IVI_DDD* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_DDD (OSCTXT *pctxt, ASN1T_IVI_DDD* pvalue);

/**************************************************************/
/*                                                            */
/*  ISO14823Attributes_element                                */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ISO14823Attributes'
*/
/* Choice tag constants */

#define T_IVI_ISO14823Attributes_element_dtm 1
#define T_IVI_ISO14823Attributes_element_edt 2
#define T_IVI_ISO14823Attributes_element_dfl 3
#define T_IVI_ISO14823Attributes_element_ved 4
#define T_IVI_ISO14823Attributes_element_spe 5
#define T_IVI_ISO14823Attributes_element_roi 6
#define T_IVI_ISO14823Attributes_element_dbv 7
#define T_IVI_ISO14823Attributes_element_ddd 8

struct EXTERN ASN1T_IVI_ISO14823Attributes_element {
   OSINT32 t;
   union {
      /* t = 1 */
      ASN1T_IVI_DTM *dtm;
      /* t = 2 */
      ASN1T_IVI_EDT *edt;
      /* t = 3 */
      ASN1T_IVI_DFL dfl;
      /* t = 4 */
      ASN1T_IVI_VED *ved;
      /* t = 5 */
      ASN1T_IVI_SPE *spe;
      /* t = 6 */
      ASN1T_IVI_ROI roi;
      /* t = 7 */
      ASN1T_IVI_DBV *dbv;
      /* t = 8 */
      ASN1T_IVI_DDD *ddd;
   } u;
   ASN1T_IVI_ISO14823Attributes_element () { t = 0; OSCRTLMEMSET (&u, 0, sizeof(u)); }
} ;

EXTERN int asn1PE_IVI_ISO14823Attributes_element (OSCTXT* pctxt, ASN1T_IVI_ISO14823Attributes_element* pvalue);

EXTERN int asn1PD_IVI_ISO14823Attributes_element (OSCTXT* pctxt, ASN1T_IVI_ISO14823Attributes_element* pvalue);

EXTERN int XmlEnc_IVI_ISO14823Attributes_element (OSCTXT* pctxt, 
   ASN1T_IVI_ISO14823Attributes_element* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_ISO14823Attributes_element (OSCTXT* pctxt, 
   ASN1T_IVI_ISO14823Attributes_element* pvalue);

EXTERN int asn1JsonEnc_IVI_ISO14823Attributes_element (OSCTXT *pctxt, ASN1T_IVI_ISO14823Attributes_element *pvalue);

EXTERN int asn1JsonDec_IVI_ISO14823Attributes_element (OSCTXT *pctxt, ASN1T_IVI_ISO14823Attributes_element *pvalue);

EXTERN int asn1PrtToStrm_IVI_ISO14823Attributes_element (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_ISO14823Attributes_element* pvalue);

EXTERN ASN1T_IVI_ISO14823Attributes_element* 
   new_ASN1T_IVI_ISO14823Attributes_element (ASN1CType& ccobj);

EXTERN int asn1Init_IVI_ISO14823Attributes_element (
   ASN1T_IVI_ISO14823Attributes_element* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_ISO14823Attributes_element (OSCTXT *pctxt, 
   ASN1T_IVI_ISO14823Attributes_element* pvalue);

/**************************************************************/
/*                                                            */
/*  ISO14823Attributes                                        */
/*                                                            */
/**************************************************************/
/*
ISO14823Attributes ::= SEQUENCE (SIZE (1..8, ...)) OF CHOICE {
   dtm [0] DTM, -- Date/Time/Period	
   edt [1] EDT, -- Exemption status of Date/Time/Period	
   dfl [2] DFL, -- Directional Flow of Lane	
   ved [3] VED, -- Vehicle Dimensions
   spe [4] SPE, -- Speed
   roi [5] ROI, -- Rate of Incline
   dbv [6] DBV, -- Distance Between Vehicles
   ddd [7] DDD
}
*/
/* List of ASN1T_IVI_ISO14823Attributes_element */
typedef ASN1TSeqOfList ASN1T_IVI_ISO14823Attributes;

class EXTERN ASN1C_IVI_ISO14823Attributes :
public ASN1CSeqOfList
{
protected:
   ASN1T_IVI_ISO14823Attributes& msgData;
public:
   /**
    * Control class: ASN1C_IVI_ISO14823Attributes
    * Data class:    ASN1T_IVI_ISO14823Attributes
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_IVI_ISO14823Attributes (ASN1T_IVI_ISO14823Attributes& data);

   /**
    * Control class: ASN1C_IVI_ISO14823Attributes<br/>
    * Data class: ASN1T_IVI_ISO14823Attributes<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_IVI_ISO14823Attributes (OSRTMessageBufferIF& msgBuf
      , ASN1T_IVI_ISO14823Attributes& data);

   /**
    * Control class: ASN1C_IVI_ISO14823Attributes<br/>
    * Data class: ASN1T_IVI_ISO14823Attributes<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_IVI_ISO14823Attributes (ASN1CType& ccobj
      , ASN1T_IVI_ISO14823Attributes& data);

   virtual ~ASN1C_IVI_ISO14823Attributes () {}

   /**
    * Data class: ASN1T_IVI_ISO14823Attributes_element<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_IVI_ISO14823Attributes_element* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_IVI_ISO14823Attributes_element.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_IVI_ISO14823Attributes_element* NewElement ();

   /**
    * Data class: ASN1T_IVI_ISO14823Attributes_element.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_IVI_ISO14823Attributes_element* AppendNewElement ();

private:
   ASN1C_IVI_ISO14823Attributes& operator= (const ASN1C_IVI_ISO14823Attributes&) {return *this;}
} ;

EXTERN int asn1PE_IVI_ISO14823Attributes (OSCTXT* pctxt, ASN1T_IVI_ISO14823Attributes* pvalue);

EXTERN int asn1PD_IVI_ISO14823Attributes (OSCTXT* pctxt, ASN1T_IVI_ISO14823Attributes* pvalue);

EXTERN int XmlEnc_IVI_ISO14823Attributes (OSCTXT* pctxt, 
   ASN1T_IVI_ISO14823Attributes* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_ISO14823Attributes (OSCTXT* pctxt, 
   ASN1T_IVI_ISO14823Attributes* pvalue);

EXTERN int asn1JsonEnc_IVI_ISO14823Attributes (OSCTXT *pctxt, ASN1T_IVI_ISO14823Attributes *pvalue);

EXTERN int asn1JsonDec_IVI_ISO14823Attributes (OSCTXT *pctxt, ASN1T_IVI_ISO14823Attributes *pvalue);

EXTERN int asn1PrtToStrm_IVI_ISO14823Attributes (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_ISO14823Attributes* pvalue);

EXTERN int asn1Init_IVI_ISO14823Attributes (ASN1T_IVI_ISO14823Attributes* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_ISO14823Attributes (OSCTXT *pctxt, 
   ASN1T_IVI_ISO14823Attributes* pvalue);

/**************************************************************/
/*                                                            */
/*  ISO14823Code                                              */
/*                                                            */
/**************************************************************/
/*
ISO14823Code ::= SEQUENCE {
   pictogramCode [0] SEQUENCE {
      countryCode [0] OCTET STRING (SIZE (2)) OPTIONAL,
      serviceCategoryCode [1] EXPLICIT CHOICE {
         trafficSignPictogram [0] ENUMERATED { dangerWarning(0), regulatory(1), informative(2), ... },
         publicFacilitiesPictogram [1] ENUMERATED { publicFacilities(0), ... },
         ambientOrRoadConditionPictogram [2] ENUMERATED { ambientCondition(0), roadCondition(1), ... },
         ...
      },
      pictogramCategoryCode [2] SEQUENCE {
         nature [0] INTEGER (1..9),
         serialNumber [1] INTEGER (0..99)
      }
   },
   attributes [1] ISO14823Attributes OPTIONAL
}
*/
struct EXTERN ASN1T_IVI_ISO14823Code {
   struct {
      unsigned attributesPresent : 1;
   } m;
   ASN1T_IVI_ISO14823Code_pictogramCode pictogramCode;
   ASN1T_IVI_ISO14823Attributes attributes;
   ASN1T_IVI_ISO14823Code ();
} ;

EXTERN int asn1PE_IVI_ISO14823Code (OSCTXT* pctxt, ASN1T_IVI_ISO14823Code* pvalue);

EXTERN int asn1PD_IVI_ISO14823Code (OSCTXT* pctxt, ASN1T_IVI_ISO14823Code* pvalue);

EXTERN int XmlEnc_IVI_ISO14823Code (OSCTXT* pctxt, 
   ASN1T_IVI_ISO14823Code* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_ISO14823Code (OSCTXT* pctxt, 
   ASN1T_IVI_ISO14823Code* pvalue);

EXTERN int asn1JsonEnc_IVI_ISO14823Code (OSCTXT *pctxt, ASN1T_IVI_ISO14823Code *pvalue);

EXTERN int asn1JsonDec_IVI_ISO14823Code (OSCTXT *pctxt, ASN1T_IVI_ISO14823Code *pvalue);

EXTERN int asn1PrtToStrm_IVI_ISO14823Code (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_ISO14823Code* pvalue);

EXTERN ASN1T_IVI_ISO14823Code* new_ASN1T_IVI_ISO14823Code (ASN1CType& ccobj);

EXTERN int asn1Init_IVI_ISO14823Code (ASN1T_IVI_ISO14823Code* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_ISO14823Code (OSCTXT *pctxt, ASN1T_IVI_ISO14823Code* pvalue);

/**************************************************************/
/*                                                            */
/*  AnyCatalogue                                              */
/*                                                            */
/**************************************************************/
/*
AnyCatalogue ::= SEQUENCE {
   owner [0] Provider,
   version [1] INTEGER (0..255),
   pictogramCode [2] INTEGER (0..65535),
   value [3] INTEGER (0..65535) OPTIONAL,
   unit [4] RSCUnit OPTIONAL,
   attributes [5] ISO14823Attributes OPTIONAL
}
*/
struct EXTERN ASN1T_IVI_AnyCatalogue {
   struct {
      unsigned valuePresent : 1;
      unsigned unitPresent : 1;
      unsigned attributesPresent : 1;
   } m;
   ASN1T_Provider owner;
   OSUINT8 version;
   OSUINT16 pictogramCode;
   OSUINT16 value;
   ASN1T_IVI_RSCUnit unit;
   ASN1T_IVI_ISO14823Attributes attributes;
   ASN1T_IVI_AnyCatalogue ();
} ;

EXTERN int asn1PE_IVI_AnyCatalogue (OSCTXT* pctxt, ASN1T_IVI_AnyCatalogue* pvalue);

EXTERN int asn1PD_IVI_AnyCatalogue (OSCTXT* pctxt, ASN1T_IVI_AnyCatalogue* pvalue);

EXTERN int XmlEnc_IVI_AnyCatalogue (OSCTXT* pctxt, 
   ASN1T_IVI_AnyCatalogue* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_AnyCatalogue (OSCTXT* pctxt, 
   ASN1T_IVI_AnyCatalogue* pvalue);

EXTERN int asn1JsonEnc_IVI_AnyCatalogue (OSCTXT *pctxt, ASN1T_IVI_AnyCatalogue *pvalue);

EXTERN int asn1JsonDec_IVI_AnyCatalogue (OSCTXT *pctxt, ASN1T_IVI_AnyCatalogue *pvalue);

EXTERN int asn1PrtToStrm_IVI_AnyCatalogue (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_AnyCatalogue* pvalue);

EXTERN ASN1T_IVI_AnyCatalogue* new_ASN1T_IVI_AnyCatalogue (ASN1CType& ccobj);

EXTERN int asn1Init_IVI_AnyCatalogue (ASN1T_IVI_AnyCatalogue* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_AnyCatalogue (OSCTXT *pctxt, ASN1T_IVI_AnyCatalogue* pvalue);

/**************************************************************/
/*                                                            */
/*  RSCode_code                                               */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'RSCode'
*/
/* Choice tag constants */

#define T_IVI_RSCode_code_viennaConvention 1
#define T_IVI_RSCode_code_iso14823      2
#define T_IVI_RSCode_code_itisCodes     3
#define T_IVI_RSCode_code_anyCatalogue  4
#define T_IVI_RSCode_code_extElem1      5

struct EXTERN ASN1T_IVI_RSCode_code {
   OSINT32 t;
   union {
      /* t = 1 */
      ASN1T_IVI_VcCode *viennaConvention;
      /* t = 2 */
      ASN1T_IVI_ISO14823Code *iso14823;
      /* t = 3 */
      OSUINT16 itisCodes;
      /* t = 4 */
      ASN1T_IVI_AnyCatalogue *anyCatalogue;
      /* t = 5 */
      ASN1TOpenType *extElem1;
   } u;
   ASN1T_IVI_RSCode_code () { t = 0; OSCRTLMEMSET (&u, 0, sizeof(u)); }
} ;

EXTERN int asn1PE_IVI_RSCode_code (OSCTXT* pctxt, ASN1T_IVI_RSCode_code* pvalue);

EXTERN int asn1PD_IVI_RSCode_code (OSCTXT* pctxt, ASN1T_IVI_RSCode_code* pvalue);

EXTERN int XmlEnc_IVI_RSCode_code (OSCTXT* pctxt, 
   ASN1T_IVI_RSCode_code* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_RSCode_code (OSCTXT* pctxt, ASN1T_IVI_RSCode_code* pvalue
   );

EXTERN int asn1JsonEnc_IVI_RSCode_code (OSCTXT *pctxt, ASN1T_IVI_RSCode_code *pvalue);

EXTERN int asn1JsonDec_IVI_RSCode_code (OSCTXT *pctxt, ASN1T_IVI_RSCode_code *pvalue);

EXTERN int asn1PrtToStrm_IVI_RSCode_code (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_RSCode_code* pvalue);

EXTERN ASN1T_IVI_RSCode_code* new_ASN1T_IVI_RSCode_code (ASN1CType& ccobj);

EXTERN int asn1Init_IVI_RSCode_code (ASN1T_IVI_RSCode_code* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_RSCode_code (OSCTXT *pctxt, ASN1T_IVI_RSCode_code* pvalue);

/**************************************************************/
/*                                                            */
/*  RSCode                                                    */
/*                                                            */
/**************************************************************/
/*
RSCode ::= SEQUENCE {
   layoutComponentId [0] INTEGER (1..4, ...) OPTIONAL,
   code [1] EXPLICIT CHOICE {
      viennaConvention [0] VcCode, -- see Vienna Convention Annex A
      iso14823 [1] ISO14823Code,
      itisCodes [2] INTEGER (0..65535), -- see SAE J2540
      anyCatalogue [3] AnyCatalogue,
      ...
   }
}
*/
struct EXTERN ASN1T_IVI_RSCode {
   struct {
      unsigned layoutComponentIdPresent : 1;
   } m;
   OSUINT32 layoutComponentId;
   ASN1T_IVI_RSCode_code code;
   ASN1T_IVI_RSCode ();
} ;

EXTERN int asn1PE_IVI_RSCode (OSCTXT* pctxt, ASN1T_IVI_RSCode* pvalue);

EXTERN int asn1PD_IVI_RSCode (OSCTXT* pctxt, ASN1T_IVI_RSCode* pvalue);

EXTERN int XmlEnc_IVI_RSCode (OSCTXT* pctxt, ASN1T_IVI_RSCode* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_RSCode (OSCTXT* pctxt, ASN1T_IVI_RSCode* pvalue);

EXTERN int asn1JsonEnc_IVI_RSCode (OSCTXT *pctxt, ASN1T_IVI_RSCode *pvalue);

EXTERN int asn1JsonDec_IVI_RSCode (OSCTXT *pctxt, ASN1T_IVI_RSCode *pvalue);

EXTERN int asn1PrtToStrm_IVI_RSCode (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_RSCode* pvalue);

EXTERN ASN1T_IVI_RSCode* new_ASN1T_IVI_RSCode (ASN1CType& ccobj);

EXTERN int asn1Init_IVI_RSCode (ASN1T_IVI_RSCode* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_RSCode (OSCTXT *pctxt, ASN1T_IVI_RSCode* pvalue);

/**************************************************************/
/*                                                            */
/*  GicPart_roadSignCodes                                     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'GicPart'
*/
/* List of ASN1T_IVI_RSCode */
typedef ASN1TSeqOfList ASN1T_IVI_GicPart_roadSignCodes;

class EXTERN ASN1C_IVI_GicPart_roadSignCodes :
public ASN1CSeqOfList
{
protected:
   ASN1T_IVI_GicPart_roadSignCodes& msgData;
public:
   /**
    * Control class: ASN1C_IVI_GicPart_roadSignCodes
    * Data class:    ASN1T_IVI_GicPart_roadSignCodes
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_IVI_GicPart_roadSignCodes (ASN1T_IVI_GicPart_roadSignCodes& data);

   /**
    * Control class: ASN1C_IVI_GicPart_roadSignCodes<br/>
    * Data class: ASN1T_IVI_GicPart_roadSignCodes<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_IVI_GicPart_roadSignCodes (OSRTMessageBufferIF& msgBuf
      , ASN1T_IVI_GicPart_roadSignCodes& data);

   /**
    * Control class: ASN1C_IVI_GicPart_roadSignCodes<br/>
    * Data class: ASN1T_IVI_GicPart_roadSignCodes<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_IVI_GicPart_roadSignCodes (ASN1CType& ccobj
      , ASN1T_IVI_GicPart_roadSignCodes& data);

   virtual ~ASN1C_IVI_GicPart_roadSignCodes () {}

   /**
    * Data class: ASN1T_IVI_RSCode<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_IVI_RSCode* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_IVI_RSCode.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_IVI_RSCode* NewElement ();

   /**
    * Data class: ASN1T_IVI_RSCode.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_IVI_RSCode* AppendNewElement ();

private:
   ASN1C_IVI_GicPart_roadSignCodes& operator= (const ASN1C_IVI_GicPart_roadSignCodes&) {return *this;}
} ;

EXTERN int asn1PE_IVI_GicPart_roadSignCodes (OSCTXT* pctxt, ASN1T_IVI_GicPart_roadSignCodes* pvalue);

EXTERN int asn1PD_IVI_GicPart_roadSignCodes (OSCTXT* pctxt, ASN1T_IVI_GicPart_roadSignCodes* pvalue);

EXTERN int XmlEnc_IVI_GicPart_roadSignCodes (OSCTXT* pctxt, 
   ASN1T_IVI_GicPart_roadSignCodes* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_GicPart_roadSignCodes (OSCTXT* pctxt, 
   ASN1T_IVI_GicPart_roadSignCodes* pvalue);

EXTERN int asn1JsonEnc_IVI_GicPart_roadSignCodes (OSCTXT *pctxt, ASN1T_IVI_GicPart_roadSignCodes *pvalue);

EXTERN int asn1JsonDec_IVI_GicPart_roadSignCodes (OSCTXT *pctxt, ASN1T_IVI_GicPart_roadSignCodes *pvalue);

EXTERN int asn1PrtToStrm_IVI_GicPart_roadSignCodes (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_GicPart_roadSignCodes* pvalue);

EXTERN int asn1Init_IVI_GicPart_roadSignCodes (
   ASN1T_IVI_GicPart_roadSignCodes* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_GicPart_roadSignCodes (OSCTXT *pctxt, 
   ASN1T_IVI_GicPart_roadSignCodes* pvalue);

/**************************************************************/
/*                                                            */
/*  Text                                                      */
/*                                                            */
/**************************************************************/
/*
Text ::= SEQUENCE {
   layoutComponentId [0] INTEGER (1..4, ...) OPTIONAL,
   language [1] BIT STRING  (SIZE (10)),
   textContent [2] UTF8String
}
*/
struct EXTERN ASN1T_IVI_Text {
   struct {
      unsigned layoutComponentIdPresent : 1;
   } m;
   OSUINT32 layoutComponentId;
   ASN1TBitStr32 language;
   const OSUTF8CHAR* textContent;
   ASN1T_IVI_Text ();
} ;

EXTERN int asn1PE_IVI_Text (OSCTXT* pctxt, ASN1T_IVI_Text* pvalue);

EXTERN int asn1PD_IVI_Text (OSCTXT* pctxt, ASN1T_IVI_Text* pvalue);

EXTERN int XmlEnc_IVI_Text (OSCTXT* pctxt, ASN1T_IVI_Text* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_Text (OSCTXT* pctxt, ASN1T_IVI_Text* pvalue);

EXTERN int asn1JsonEnc_IVI_Text (OSCTXT *pctxt, ASN1T_IVI_Text *pvalue);

EXTERN int asn1JsonDec_IVI_Text (OSCTXT *pctxt, ASN1T_IVI_Text *pvalue);

EXTERN int asn1PrtToStrm_IVI_Text (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_Text* pvalue);

EXTERN ASN1T_IVI_Text* new_ASN1T_IVI_Text (ASN1CType& ccobj);

EXTERN int asn1Init_IVI_Text (ASN1T_IVI_Text* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_Text (OSCTXT *pctxt, ASN1T_IVI_Text* pvalue);

/**************************************************************/
/*                                                            */
/*  GicPart_extraText                                         */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'GicPart'
*/
/* List of ASN1T_IVI_Text */
typedef ASN1TSeqOfList ASN1T_IVI_GicPart_extraText;

class EXTERN ASN1C_IVI_GicPart_extraText :
public ASN1CSeqOfList
{
protected:
   ASN1T_IVI_GicPart_extraText& msgData;
public:
   /**
    * Control class: ASN1C_IVI_GicPart_extraText
    * Data class:    ASN1T_IVI_GicPart_extraText
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_IVI_GicPart_extraText (ASN1T_IVI_GicPart_extraText& data);

   /**
    * Control class: ASN1C_IVI_GicPart_extraText<br/>
    * Data class: ASN1T_IVI_GicPart_extraText<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_IVI_GicPart_extraText (OSRTMessageBufferIF& msgBuf
      , ASN1T_IVI_GicPart_extraText& data);

   /**
    * Control class: ASN1C_IVI_GicPart_extraText<br/>
    * Data class: ASN1T_IVI_GicPart_extraText<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_IVI_GicPart_extraText (ASN1CType& ccobj
      , ASN1T_IVI_GicPart_extraText& data);

   virtual ~ASN1C_IVI_GicPart_extraText () {}

   /**
    * Data class: ASN1T_IVI_Text<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_IVI_Text* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_IVI_Text.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_IVI_Text* NewElement ();

   /**
    * Data class: ASN1T_IVI_Text.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_IVI_Text* AppendNewElement ();

private:
   ASN1C_IVI_GicPart_extraText& operator= (const ASN1C_IVI_GicPart_extraText&) {return *this;}
} ;

EXTERN int asn1PE_IVI_GicPart_extraText (OSCTXT* pctxt, ASN1T_IVI_GicPart_extraText* pvalue);

EXTERN int asn1PD_IVI_GicPart_extraText (OSCTXT* pctxt, ASN1T_IVI_GicPart_extraText* pvalue);

EXTERN int XmlEnc_IVI_GicPart_extraText (OSCTXT* pctxt, 
   ASN1T_IVI_GicPart_extraText* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_GicPart_extraText (OSCTXT* pctxt, 
   ASN1T_IVI_GicPart_extraText* pvalue);

EXTERN int asn1JsonEnc_IVI_GicPart_extraText (OSCTXT *pctxt, ASN1T_IVI_GicPart_extraText *pvalue);

EXTERN int asn1JsonDec_IVI_GicPart_extraText (OSCTXT *pctxt, ASN1T_IVI_GicPart_extraText *pvalue);

EXTERN int asn1PrtToStrm_IVI_GicPart_extraText (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_GicPart_extraText* pvalue);

EXTERN int asn1Init_IVI_GicPart_extraText (ASN1T_IVI_GicPart_extraText* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_GicPart_extraText (OSCTXT *pctxt, 
   ASN1T_IVI_GicPart_extraText* pvalue);

/**************************************************************/
/*                                                            */
/*  GicPart                                                   */
/*                                                            */
/**************************************************************/
/*
GicPart ::= SEQUENCE {
   detectionZoneIds [0] SEQUENCE (SIZE (1..8, ...)) OF Zid OPTIONAL,
   its-Rrid [1] EXPLICIT VarLengthNumber OPTIONAL,
   relevanceZoneIds [2] SEQUENCE (SIZE (1..8, ...)) OF Zid OPTIONAL,
   direction [3] Direction OPTIONAL,
   driverAwarenessZoneIds [4] SEQUENCE (SIZE (1..8, ...)) OF Zid OPTIONAL,
   minimumAwarenessTime [5] INTEGER (0..255) OPTIONAL,
   applicableLanes [6] SEQUENCE (SIZE (1..8, ...)) OF LanePosition OPTIONAL,
   iviType [7] IviType,
   iviPurpose [8] IviPurpose OPTIONAL,
   laneStatus [9] LaneStatus OPTIONAL,
   vehicleCharacteristics [10] SEQUENCE (SIZE (1..8, ...)) OF CompleteVehicleCharacteristics OPTIONAL,
   driverCharacteristics [11] DriverCharacteristics OPTIONAL,
   layoutId [12] INTEGER (1..4, ...) OPTIONAL,
   preStoredlayoutId [13] INTEGER (1..64, ...) OPTIONAL,
   roadSignCodes [14] SEQUENCE (SIZE (1..4, ...)) OF RSCode,
   extraText [15] SEQUENCE (SIZE (1..4, ...)) OF Text (WITH COMPONENTS { textContent SIZE (1..32), language , layoutComponentId }) OPTIONAL,
   ...
}
*/
struct EXTERN ASN1T_IVI_GicPart {
   struct {
      unsigned detectionZoneIdsPresent : 1;
      unsigned its_RridPresent : 1;
      unsigned relevanceZoneIdsPresent : 1;
      unsigned directionPresent : 1;
      unsigned driverAwarenessZoneIdsPresent : 1;
      unsigned minimumAwarenessTimePresent : 1;
      unsigned applicableLanesPresent : 1;
      unsigned iviPurposePresent : 1;
      unsigned laneStatusPresent : 1;
      unsigned vehicleCharacteristicsPresent : 1;
      unsigned driverCharacteristicsPresent : 1;
      unsigned layoutIdPresent : 1;
      unsigned preStoredlayoutIdPresent : 1;
      unsigned extraTextPresent : 1;
   } m;
   ASN1T_IVI_GicPart_detectionZoneIds detectionZoneIds;
   ASN1T_VarLengthNumber its_Rrid;
   ASN1T_IVI_GicPart_relevanceZoneIds relevanceZoneIds;
   ASN1T_IVI_Direction direction;
   ASN1T_IVI_GicPart_driverAwarenessZoneIds driverAwarenessZoneIds;
   OSUINT8 minimumAwarenessTime;
   ASN1T_IVI_GicPart_applicableLanes applicableLanes;
   ASN1T_IVI_IviType iviType;
   ASN1T_IVI_IviPurpose iviPurpose;
   ASN1T_IVI_LaneStatus laneStatus;
   ASN1T_IVI_GicPart_vehicleCharacteristics vehicleCharacteristics;
   ASN1T_IVI_DriverCharacteristics driverCharacteristics;
   OSUINT32 layoutId;
   OSUINT32 preStoredlayoutId;
   ASN1T_IVI_GicPart_roadSignCodes roadSignCodes;
   ASN1T_IVI_GicPart_extraText extraText;
   ASN1TSeqExt extElem1;
   ASN1T_IVI_GicPart ();
} ;

EXTERN int asn1PE_IVI_GicPart (OSCTXT* pctxt, ASN1T_IVI_GicPart* pvalue);

EXTERN int asn1PD_IVI_GicPart (OSCTXT* pctxt, ASN1T_IVI_GicPart* pvalue);

EXTERN int XmlEnc_IVI_GicPart (OSCTXT* pctxt, ASN1T_IVI_GicPart* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_GicPart (OSCTXT* pctxt, ASN1T_IVI_GicPart* pvalue);

EXTERN int asn1JsonEnc_IVI_GicPart (OSCTXT *pctxt, ASN1T_IVI_GicPart *pvalue);

EXTERN int asn1JsonDec_IVI_GicPart (OSCTXT *pctxt, ASN1T_IVI_GicPart *pvalue);

EXTERN int asn1PrtToStrm_IVI_GicPart (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_GicPart* pvalue);

EXTERN ASN1T_IVI_GicPart* new_ASN1T_IVI_GicPart (ASN1CType& ccobj);

EXTERN int asn1Init_IVI_GicPart (ASN1T_IVI_GicPart* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_GicPart (OSCTXT *pctxt, ASN1T_IVI_GicPart* pvalue);

/**************************************************************/
/*                                                            */
/*  GeneralIviContainer                                       */
/*                                                            */
/**************************************************************/
/*
GeneralIviContainer ::= SEQUENCE (SIZE (1..16, ...)) OF GicPart
*/
/* List of ASN1T_IVI_GicPart */
typedef ASN1TSeqOfList ASN1T_IVI_GeneralIviContainer;

class EXTERN ASN1C_IVI_GeneralIviContainer :
public ASN1CSeqOfList
{
protected:
   ASN1T_IVI_GeneralIviContainer& msgData;
public:
   /**
    * Control class: ASN1C_IVI_GeneralIviContainer
    * Data class:    ASN1T_IVI_GeneralIviContainer
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_IVI_GeneralIviContainer (ASN1T_IVI_GeneralIviContainer& data);

   /**
    * Control class: ASN1C_IVI_GeneralIviContainer<br/>
    * Data class: ASN1T_IVI_GeneralIviContainer<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_IVI_GeneralIviContainer (OSRTMessageBufferIF& msgBuf
      , ASN1T_IVI_GeneralIviContainer& data);

   /**
    * Control class: ASN1C_IVI_GeneralIviContainer<br/>
    * Data class: ASN1T_IVI_GeneralIviContainer<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_IVI_GeneralIviContainer (ASN1CType& ccobj
      , ASN1T_IVI_GeneralIviContainer& data);

   virtual ~ASN1C_IVI_GeneralIviContainer () {}

   /**
    * Data class: ASN1T_IVI_GicPart<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_IVI_GicPart* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_IVI_GicPart.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_IVI_GicPart* NewElement ();

   /**
    * Data class: ASN1T_IVI_GicPart.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_IVI_GicPart* AppendNewElement ();

private:
   ASN1C_IVI_GeneralIviContainer& operator= (const ASN1C_IVI_GeneralIviContainer&) {return *this;}
} ;

EXTERN int asn1PE_IVI_GeneralIviContainer (OSCTXT* pctxt, ASN1T_IVI_GeneralIviContainer* pvalue);

EXTERN int asn1PD_IVI_GeneralIviContainer (OSCTXT* pctxt, ASN1T_IVI_GeneralIviContainer* pvalue);

EXTERN int XmlEnc_IVI_GeneralIviContainer (OSCTXT* pctxt, 
   ASN1T_IVI_GeneralIviContainer* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_GeneralIviContainer (OSCTXT* pctxt, 
   ASN1T_IVI_GeneralIviContainer* pvalue);

EXTERN int asn1JsonEnc_IVI_GeneralIviContainer (OSCTXT *pctxt, ASN1T_IVI_GeneralIviContainer *pvalue);

EXTERN int asn1JsonDec_IVI_GeneralIviContainer (OSCTXT *pctxt, ASN1T_IVI_GeneralIviContainer *pvalue);

EXTERN int asn1PrtToStrm_IVI_GeneralIviContainer (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_GeneralIviContainer* pvalue);

EXTERN int asn1Init_IVI_GeneralIviContainer (ASN1T_IVI_GeneralIviContainer* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_GeneralIviContainer (OSCTXT *pctxt, 
   ASN1T_IVI_GeneralIviContainer* pvalue);

/**************************************************************/
/*                                                            */
/*  RccPart_zoneIds                                           */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'RccPart'
*/
typedef struct EXTERN ASN1T_IVI_RccPart_zoneIds {
   OSSIZE n;
   ASN1T_IVI_Zid *elem;
   ASN1T_IVI_RccPart_zoneIds () : n(0), elem(0) {}
} ASN1T_IVI_RccPart_zoneIds;

class EXTERN ASN1C_IVI_RccPart_zoneIds :
public ASN1CType
{
protected:
   ASN1T_IVI_RccPart_zoneIds& msgData;
public:
   /**
    * Control class: ASN1C_IVI_RccPart_zoneIds
    * Data class:    ASN1T_IVI_RccPart_zoneIds
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_IVI_RccPart_zoneIds (ASN1T_IVI_RccPart_zoneIds& data);

   /**
    * Control class: ASN1C_IVI_RccPart_zoneIds<br/>
    * Data class: ASN1T_IVI_RccPart_zoneIds<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_IVI_RccPart_zoneIds (OSRTMessageBufferIF& msgBuf
      , ASN1T_IVI_RccPart_zoneIds& data);

   /**
    * Control class: ASN1C_IVI_RccPart_zoneIds<br/>
    * Data class: ASN1T_IVI_RccPart_zoneIds<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_IVI_RccPart_zoneIds (ASN1CType& ccobj, ASN1T_IVI_RccPart_zoneIds& data
      );

   virtual ~ASN1C_IVI_RccPart_zoneIds () {}

private:
   ASN1C_IVI_RccPart_zoneIds& operator= (const ASN1C_IVI_RccPart_zoneIds&) {return *this;}
} ;

EXTERN int asn1PE_IVI_RccPart_zoneIds (OSCTXT* pctxt, ASN1T_IVI_RccPart_zoneIds* pvalue);

EXTERN int asn1PD_IVI_RccPart_zoneIds (OSCTXT* pctxt, ASN1T_IVI_RccPart_zoneIds* pvalue);

EXTERN int XmlEnc_IVI_RccPart_zoneIds (OSCTXT* pctxt, 
   ASN1T_IVI_RccPart_zoneIds* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_RccPart_zoneIds (OSCTXT* pctxt, 
   ASN1T_IVI_RccPart_zoneIds* pvalue);

EXTERN int asn1JsonEnc_IVI_RccPart_zoneIds (OSCTXT *pctxt, ASN1T_IVI_RccPart_zoneIds *pvalue);

EXTERN int asn1JsonDec_IVI_RccPart_zoneIds (OSCTXT *pctxt, ASN1T_IVI_RccPart_zoneIds *pvalue);

EXTERN int asn1PrtToStrm_IVI_RccPart_zoneIds (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_RccPart_zoneIds* pvalue);

EXTERN int asn1Init_IVI_RccPart_zoneIds (ASN1T_IVI_RccPart_zoneIds* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_RccPart_zoneIds (OSCTXT *pctxt, 
   ASN1T_IVI_RccPart_zoneIds* pvalue);

/**************************************************************/
/*                                                            */
/*  LaneType                                                  */
/*                                                            */
/**************************************************************/
/*
LaneType ::= INTEGER { traffic(0), through(1), reversible(2), acceleration(3), deceleration(4), leftHandTurning(5), rightHandTurning(6), dedicatedVehicle(7), bus(8), taxi(9), hov(10), hot(11), pedestrian(12), bikeLane(13), median(14), striping(15), trackedVehicle(16), parking(17), emergency(18), verge(19) } (0..31)
*/
struct EXTERN IVI_LaneType {
   enum Root {
      traffic = 0,
      through = 1,
      reversible = 2,
      acceleration = 3,
      deceleration = 4,
      leftHandTurning = 5,
      rightHandTurning = 6,
      dedicatedVehicle = 7,
      bus = 8,
      taxi = 9,
      hov = 10,
      hot = 11,
      pedestrian = 12,
      bikeLane = 13,
      median = 14,
      striping = 15,
      trackedVehicle = 16,
      parking = 17,
      emergency = 18,
      verge = 19
   } ;
} ;

typedef OSUINT8 ASN1T_IVI_LaneType;

EXTERN int asn1PE_IVI_LaneType (OSCTXT* pctxt, ASN1T_IVI_LaneType value);

EXTERN int asn1PD_IVI_LaneType (OSCTXT* pctxt, ASN1T_IVI_LaneType* pvalue);

EXTERN int XmlEnc_IVI_LaneType (OSCTXT* pctxt, ASN1T_IVI_LaneType value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_LaneType (OSCTXT* pctxt, ASN1T_IVI_LaneType* pvalue);

EXTERN int asn1JsonEnc_IVI_LaneType (OSCTXT *pctxt, ASN1T_IVI_LaneType *pvalue);

EXTERN int asn1JsonDec_IVI_LaneType (OSCTXT *pctxt, ASN1T_IVI_LaneType *pvalue);

EXTERN int asn1PrtToStrm_IVI_LaneType (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_LaneType* pvalue);

EXTERN ASN1T_IVI_LaneType* new_ASN1T_IVI_LaneType (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  LaneInformation                                           */
/*                                                            */
/**************************************************************/
/*
LaneInformation ::= SEQUENCE {
   laneNumber [0] LanePosition,
   direction [1] Direction,
   validity [2] DTM OPTIONAL,
   laneType [3] LaneType,
   laneTypeQualifier [4] CompleteVehicleCharacteristics OPTIONAL,
   laneStatus [5] LaneStatus,
   laneWidth [6] IVILaneWidth OPTIONAL,
   ...
}
*/
struct EXTERN ASN1T_IVI_LaneInformation {
   struct {
      unsigned validityPresent : 1;
      unsigned laneTypeQualifierPresent : 1;
      unsigned laneWidthPresent : 1;
   } m;
   ASN1T_ITS_LanePosition laneNumber;
   ASN1T_IVI_Direction direction;
   ASN1T_IVI_DTM validity;
   ASN1T_IVI_LaneType laneType;
   ASN1T_IVI_CompleteVehicleCharacteristics laneTypeQualifier;
   ASN1T_IVI_LaneStatus laneStatus;
   ASN1T_IVI_IVILaneWidth laneWidth;
   ASN1TSeqExt extElem1;
   ASN1T_IVI_LaneInformation ();
} ;

EXTERN int asn1PE_IVI_LaneInformation (OSCTXT* pctxt, ASN1T_IVI_LaneInformation* pvalue);

EXTERN int asn1PD_IVI_LaneInformation (OSCTXT* pctxt, ASN1T_IVI_LaneInformation* pvalue);

EXTERN int XmlEnc_IVI_LaneInformation (OSCTXT* pctxt, 
   ASN1T_IVI_LaneInformation* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_LaneInformation (OSCTXT* pctxt, 
   ASN1T_IVI_LaneInformation* pvalue);

EXTERN int asn1JsonEnc_IVI_LaneInformation (OSCTXT *pctxt, ASN1T_IVI_LaneInformation *pvalue);

EXTERN int asn1JsonDec_IVI_LaneInformation (OSCTXT *pctxt, ASN1T_IVI_LaneInformation *pvalue);

EXTERN int asn1PrtToStrm_IVI_LaneInformation (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_LaneInformation* pvalue);

EXTERN ASN1T_IVI_LaneInformation* 
   new_ASN1T_IVI_LaneInformation (ASN1CType& ccobj);

EXTERN int asn1Init_IVI_LaneInformation (ASN1T_IVI_LaneInformation* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_LaneInformation (OSCTXT *pctxt, 
   ASN1T_IVI_LaneInformation* pvalue);

/**************************************************************/
/*                                                            */
/*  RccPart_laneConfiguration                                 */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'RccPart'
*/
/* List of ASN1T_IVI_LaneInformation */
typedef ASN1TSeqOfList ASN1T_IVI_RccPart_laneConfiguration;

class EXTERN ASN1C_IVI_RccPart_laneConfiguration :
public ASN1CSeqOfList
{
protected:
   ASN1T_IVI_RccPart_laneConfiguration& msgData;
public:
   /**
    * Control class: ASN1C_IVI_RccPart_laneConfiguration
    * Data class:    ASN1T_IVI_RccPart_laneConfiguration
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_IVI_RccPart_laneConfiguration
       (ASN1T_IVI_RccPart_laneConfiguration& data);

   /**
    * Control class: ASN1C_IVI_RccPart_laneConfiguration<br/>
    * Data class: ASN1T_IVI_RccPart_laneConfiguration<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_IVI_RccPart_laneConfiguration (OSRTMessageBufferIF& msgBuf
      , ASN1T_IVI_RccPart_laneConfiguration& data);

   /**
    * Control class: ASN1C_IVI_RccPart_laneConfiguration<br/>
    * Data class: ASN1T_IVI_RccPart_laneConfiguration<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_IVI_RccPart_laneConfiguration (ASN1CType& ccobj
      , ASN1T_IVI_RccPart_laneConfiguration& data);

   virtual ~ASN1C_IVI_RccPart_laneConfiguration () {}

   /**
    * Data class: ASN1T_IVI_LaneInformation<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_IVI_LaneInformation* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_IVI_LaneInformation.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_IVI_LaneInformation* NewElement ();

   /**
    * Data class: ASN1T_IVI_LaneInformation.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_IVI_LaneInformation* AppendNewElement ();

private:
   ASN1C_IVI_RccPart_laneConfiguration& operator= (const ASN1C_IVI_RccPart_laneConfiguration&) {return *this;}
} ;

EXTERN int asn1PE_IVI_RccPart_laneConfiguration (OSCTXT* pctxt, ASN1T_IVI_RccPart_laneConfiguration* pvalue);

EXTERN int asn1PD_IVI_RccPart_laneConfiguration (OSCTXT* pctxt, ASN1T_IVI_RccPart_laneConfiguration* pvalue);

EXTERN int XmlEnc_IVI_RccPart_laneConfiguration (OSCTXT* pctxt, 
   ASN1T_IVI_RccPart_laneConfiguration* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_RccPart_laneConfiguration (OSCTXT* pctxt, 
   ASN1T_IVI_RccPart_laneConfiguration* pvalue);

EXTERN int asn1JsonEnc_IVI_RccPart_laneConfiguration (OSCTXT *pctxt, ASN1T_IVI_RccPart_laneConfiguration *pvalue);

EXTERN int asn1JsonDec_IVI_RccPart_laneConfiguration (OSCTXT *pctxt, ASN1T_IVI_RccPart_laneConfiguration *pvalue);

EXTERN int asn1PrtToStrm_IVI_RccPart_laneConfiguration (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_RccPart_laneConfiguration* pvalue);

EXTERN int asn1Init_IVI_RccPart_laneConfiguration (
   ASN1T_IVI_RccPart_laneConfiguration* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_RccPart_laneConfiguration (OSCTXT *pctxt, 
   ASN1T_IVI_RccPart_laneConfiguration* pvalue);

/**************************************************************/
/*                                                            */
/*  RccPart                                                   */
/*                                                            */
/**************************************************************/
/*
RccPart ::= SEQUENCE {
   zoneIds [0] SEQUENCE (SIZE (1..8, ...)) OF Zid,
   roadType [1] RoadType,
   laneConfiguration [2] SEQUENCE (SIZE (1..16, ...)) OF LaneInformation,
   ...
}
*/
struct EXTERN ASN1T_IVI_RccPart {
   ASN1T_IVI_RccPart_zoneIds zoneIds;
   ASN1T_ITS_RoadType roadType;
   ASN1T_IVI_RccPart_laneConfiguration laneConfiguration;
   ASN1TSeqExt extElem1;
   ASN1T_IVI_RccPart ();
} ;

EXTERN int asn1PE_IVI_RccPart (OSCTXT* pctxt, ASN1T_IVI_RccPart* pvalue);

EXTERN int asn1PD_IVI_RccPart (OSCTXT* pctxt, ASN1T_IVI_RccPart* pvalue);

EXTERN int XmlEnc_IVI_RccPart (OSCTXT* pctxt, ASN1T_IVI_RccPart* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_RccPart (OSCTXT* pctxt, ASN1T_IVI_RccPart* pvalue);

EXTERN int asn1JsonEnc_IVI_RccPart (OSCTXT *pctxt, ASN1T_IVI_RccPart *pvalue);

EXTERN int asn1JsonDec_IVI_RccPart (OSCTXT *pctxt, ASN1T_IVI_RccPart *pvalue);

EXTERN int asn1PrtToStrm_IVI_RccPart (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_RccPart* pvalue);

EXTERN ASN1T_IVI_RccPart* new_ASN1T_IVI_RccPart (ASN1CType& ccobj);

EXTERN int asn1Init_IVI_RccPart (ASN1T_IVI_RccPart* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_RccPart (OSCTXT *pctxt, ASN1T_IVI_RccPart* pvalue);

/**************************************************************/
/*                                                            */
/*  RoadConfigurationContainer                                */
/*                                                            */
/**************************************************************/
/*
RoadConfigurationContainer ::= SEQUENCE (SIZE (1..16, ...)) OF RccPart
*/
/* List of ASN1T_IVI_RccPart */
typedef ASN1TSeqOfList ASN1T_IVI_RoadConfigurationContainer;

class EXTERN ASN1C_IVI_RoadConfigurationContainer :
public ASN1CSeqOfList
{
protected:
   ASN1T_IVI_RoadConfigurationContainer& msgData;
public:
   /**
    * Control class: ASN1C_IVI_RoadConfigurationContainer
    * Data class:    ASN1T_IVI_RoadConfigurationContainer
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_IVI_RoadConfigurationContainer
       (ASN1T_IVI_RoadConfigurationContainer& data);

   /**
    * Control class: ASN1C_IVI_RoadConfigurationContainer<br/>
    * Data class: ASN1T_IVI_RoadConfigurationContainer<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_IVI_RoadConfigurationContainer (OSRTMessageBufferIF& msgBuf
      , ASN1T_IVI_RoadConfigurationContainer& data);

   /**
    * Control class: ASN1C_IVI_RoadConfigurationContainer<br/>
    * Data class: ASN1T_IVI_RoadConfigurationContainer<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_IVI_RoadConfigurationContainer (ASN1CType& ccobj
      , ASN1T_IVI_RoadConfigurationContainer& data);

   virtual ~ASN1C_IVI_RoadConfigurationContainer () {}

   /**
    * Data class: ASN1T_IVI_RccPart<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_IVI_RccPart* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_IVI_RccPart.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_IVI_RccPart* NewElement ();

   /**
    * Data class: ASN1T_IVI_RccPart.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_IVI_RccPart* AppendNewElement ();

private:
   ASN1C_IVI_RoadConfigurationContainer& operator= (const ASN1C_IVI_RoadConfigurationContainer&) {return *this;}
} ;

EXTERN int asn1PE_IVI_RoadConfigurationContainer (OSCTXT* pctxt, ASN1T_IVI_RoadConfigurationContainer* pvalue);

EXTERN int asn1PD_IVI_RoadConfigurationContainer (OSCTXT* pctxt, ASN1T_IVI_RoadConfigurationContainer* pvalue);

EXTERN int XmlEnc_IVI_RoadConfigurationContainer (OSCTXT* pctxt, 
   ASN1T_IVI_RoadConfigurationContainer* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_RoadConfigurationContainer (OSCTXT* pctxt, 
   ASN1T_IVI_RoadConfigurationContainer* pvalue);

EXTERN int asn1JsonEnc_IVI_RoadConfigurationContainer (OSCTXT *pctxt, ASN1T_IVI_RoadConfigurationContainer *pvalue);

EXTERN int asn1JsonDec_IVI_RoadConfigurationContainer (OSCTXT *pctxt, ASN1T_IVI_RoadConfigurationContainer *pvalue);

EXTERN int asn1PrtToStrm_IVI_RoadConfigurationContainer (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_RoadConfigurationContainer* pvalue);

EXTERN int asn1Init_IVI_RoadConfigurationContainer (
   ASN1T_IVI_RoadConfigurationContainer* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_RoadConfigurationContainer (OSCTXT *pctxt, 
   ASN1T_IVI_RoadConfigurationContainer* pvalue);

/**************************************************************/
/*                                                            */
/*  TcPart_detectionZoneIds                                   */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'TcPart'
*/
typedef struct EXTERN ASN1T_IVI_TcPart_detectionZoneIds {
   OSSIZE n;
   ASN1T_IVI_Zid *elem;
   ASN1T_IVI_TcPart_detectionZoneIds () : n(0), elem(0) {}
} ASN1T_IVI_TcPart_detectionZoneIds;

class EXTERN ASN1C_IVI_TcPart_detectionZoneIds :
public ASN1CType
{
protected:
   ASN1T_IVI_TcPart_detectionZoneIds& msgData;
public:
   /**
    * Control class: ASN1C_IVI_TcPart_detectionZoneIds
    * Data class:    ASN1T_IVI_TcPart_detectionZoneIds
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_IVI_TcPart_detectionZoneIds (ASN1T_IVI_TcPart_detectionZoneIds& data);

   /**
    * Control class: ASN1C_IVI_TcPart_detectionZoneIds<br/>
    * Data class: ASN1T_IVI_TcPart_detectionZoneIds<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_IVI_TcPart_detectionZoneIds (OSRTMessageBufferIF& msgBuf
      , ASN1T_IVI_TcPart_detectionZoneIds& data);

   /**
    * Control class: ASN1C_IVI_TcPart_detectionZoneIds<br/>
    * Data class: ASN1T_IVI_TcPart_detectionZoneIds<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_IVI_TcPart_detectionZoneIds (ASN1CType& ccobj
      , ASN1T_IVI_TcPart_detectionZoneIds& data);

   virtual ~ASN1C_IVI_TcPart_detectionZoneIds () {}

private:
   ASN1C_IVI_TcPart_detectionZoneIds& operator= (const ASN1C_IVI_TcPart_detectionZoneIds&) {return *this;}
} ;

EXTERN int asn1PE_IVI_TcPart_detectionZoneIds (OSCTXT* pctxt, ASN1T_IVI_TcPart_detectionZoneIds* pvalue);

EXTERN int asn1PD_IVI_TcPart_detectionZoneIds (OSCTXT* pctxt, ASN1T_IVI_TcPart_detectionZoneIds* pvalue);

EXTERN int XmlEnc_IVI_TcPart_detectionZoneIds (OSCTXT* pctxt, 
   ASN1T_IVI_TcPart_detectionZoneIds* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_TcPart_detectionZoneIds (OSCTXT* pctxt, 
   ASN1T_IVI_TcPart_detectionZoneIds* pvalue);

EXTERN int asn1JsonEnc_IVI_TcPart_detectionZoneIds (OSCTXT *pctxt, ASN1T_IVI_TcPart_detectionZoneIds *pvalue);

EXTERN int asn1JsonDec_IVI_TcPart_detectionZoneIds (OSCTXT *pctxt, ASN1T_IVI_TcPart_detectionZoneIds *pvalue);

EXTERN int asn1PrtToStrm_IVI_TcPart_detectionZoneIds (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_TcPart_detectionZoneIds* pvalue);

EXTERN int asn1Init_IVI_TcPart_detectionZoneIds (
   ASN1T_IVI_TcPart_detectionZoneIds* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_TcPart_detectionZoneIds (OSCTXT *pctxt, 
   ASN1T_IVI_TcPart_detectionZoneIds* pvalue);

/**************************************************************/
/*                                                            */
/*  TcPart_relevanceZoneIds                                   */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'TcPart'
*/
typedef struct EXTERN ASN1T_IVI_TcPart_relevanceZoneIds {
   OSSIZE n;
   ASN1T_IVI_Zid *elem;
   ASN1T_IVI_TcPart_relevanceZoneIds () : n(0), elem(0) {}
} ASN1T_IVI_TcPart_relevanceZoneIds;

class EXTERN ASN1C_IVI_TcPart_relevanceZoneIds :
public ASN1CType
{
protected:
   ASN1T_IVI_TcPart_relevanceZoneIds& msgData;
public:
   /**
    * Control class: ASN1C_IVI_TcPart_relevanceZoneIds
    * Data class:    ASN1T_IVI_TcPart_relevanceZoneIds
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_IVI_TcPart_relevanceZoneIds (ASN1T_IVI_TcPart_relevanceZoneIds& data);

   /**
    * Control class: ASN1C_IVI_TcPart_relevanceZoneIds<br/>
    * Data class: ASN1T_IVI_TcPart_relevanceZoneIds<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_IVI_TcPart_relevanceZoneIds (OSRTMessageBufferIF& msgBuf
      , ASN1T_IVI_TcPart_relevanceZoneIds& data);

   /**
    * Control class: ASN1C_IVI_TcPart_relevanceZoneIds<br/>
    * Data class: ASN1T_IVI_TcPart_relevanceZoneIds<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_IVI_TcPart_relevanceZoneIds (ASN1CType& ccobj
      , ASN1T_IVI_TcPart_relevanceZoneIds& data);

   virtual ~ASN1C_IVI_TcPart_relevanceZoneIds () {}

private:
   ASN1C_IVI_TcPart_relevanceZoneIds& operator= (const ASN1C_IVI_TcPart_relevanceZoneIds&) {return *this;}
} ;

EXTERN int asn1PE_IVI_TcPart_relevanceZoneIds (OSCTXT* pctxt, ASN1T_IVI_TcPart_relevanceZoneIds* pvalue);

EXTERN int asn1PD_IVI_TcPart_relevanceZoneIds (OSCTXT* pctxt, ASN1T_IVI_TcPart_relevanceZoneIds* pvalue);

EXTERN int XmlEnc_IVI_TcPart_relevanceZoneIds (OSCTXT* pctxt, 
   ASN1T_IVI_TcPart_relevanceZoneIds* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_TcPart_relevanceZoneIds (OSCTXT* pctxt, 
   ASN1T_IVI_TcPart_relevanceZoneIds* pvalue);

EXTERN int asn1JsonEnc_IVI_TcPart_relevanceZoneIds (OSCTXT *pctxt, ASN1T_IVI_TcPart_relevanceZoneIds *pvalue);

EXTERN int asn1JsonDec_IVI_TcPart_relevanceZoneIds (OSCTXT *pctxt, ASN1T_IVI_TcPart_relevanceZoneIds *pvalue);

EXTERN int asn1PrtToStrm_IVI_TcPart_relevanceZoneIds (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_TcPart_relevanceZoneIds* pvalue);

EXTERN int asn1Init_IVI_TcPart_relevanceZoneIds (
   ASN1T_IVI_TcPart_relevanceZoneIds* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_TcPart_relevanceZoneIds (OSCTXT *pctxt, 
   ASN1T_IVI_TcPart_relevanceZoneIds* pvalue);

/**************************************************************/
/*                                                            */
/*  TcPart_driverAwarenessZoneIds                             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'TcPart'
*/
typedef struct EXTERN ASN1T_IVI_TcPart_driverAwarenessZoneIds {
   OSSIZE n;
   ASN1T_IVI_Zid *elem;
   ASN1T_IVI_TcPart_driverAwarenessZoneIds () : n(0), elem(0) {}
} ASN1T_IVI_TcPart_driverAwarenessZoneIds;

class EXTERN ASN1C_IVI_TcPart_driverAwarenessZoneIds :
public ASN1CType
{
protected:
   ASN1T_IVI_TcPart_driverAwarenessZoneIds& msgData;
public:
   /**
    * Control class: ASN1C_IVI_TcPart_driverAwarenessZoneIds
    * Data class:    ASN1T_IVI_TcPart_driverAwarenessZoneIds
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_IVI_TcPart_driverAwarenessZoneIds
       (ASN1T_IVI_TcPart_driverAwarenessZoneIds& data);

   /**
    * Control class: ASN1C_IVI_TcPart_driverAwarenessZoneIds<br/>
    * Data class: ASN1T_IVI_TcPart_driverAwarenessZoneIds<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_IVI_TcPart_driverAwarenessZoneIds (OSRTMessageBufferIF& msgBuf
      , ASN1T_IVI_TcPart_driverAwarenessZoneIds& data);

   /**
    * Control class: ASN1C_IVI_TcPart_driverAwarenessZoneIds<br/>
    * Data class: ASN1T_IVI_TcPart_driverAwarenessZoneIds<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_IVI_TcPart_driverAwarenessZoneIds (ASN1CType& ccobj
      , ASN1T_IVI_TcPart_driverAwarenessZoneIds& data);

   virtual ~ASN1C_IVI_TcPart_driverAwarenessZoneIds () {}

private:
   ASN1C_IVI_TcPart_driverAwarenessZoneIds& operator= (const ASN1C_IVI_TcPart_driverAwarenessZoneIds&) {return *this;}
} ;

EXTERN int asn1PE_IVI_TcPart_driverAwarenessZoneIds (OSCTXT* pctxt, ASN1T_IVI_TcPart_driverAwarenessZoneIds* pvalue);

EXTERN int asn1PD_IVI_TcPart_driverAwarenessZoneIds (OSCTXT* pctxt, ASN1T_IVI_TcPart_driverAwarenessZoneIds* pvalue);

EXTERN int XmlEnc_IVI_TcPart_driverAwarenessZoneIds (OSCTXT* pctxt, 
   ASN1T_IVI_TcPart_driverAwarenessZoneIds* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_TcPart_driverAwarenessZoneIds (OSCTXT* pctxt, 
   ASN1T_IVI_TcPart_driverAwarenessZoneIds* pvalue);

EXTERN int asn1JsonEnc_IVI_TcPart_driverAwarenessZoneIds (OSCTXT *pctxt, ASN1T_IVI_TcPart_driverAwarenessZoneIds *pvalue);

EXTERN int asn1JsonDec_IVI_TcPart_driverAwarenessZoneIds (OSCTXT *pctxt, ASN1T_IVI_TcPart_driverAwarenessZoneIds *pvalue);

EXTERN int asn1PrtToStrm_IVI_TcPart_driverAwarenessZoneIds (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_TcPart_driverAwarenessZoneIds* pvalue);

EXTERN int asn1Init_IVI_TcPart_driverAwarenessZoneIds (
   ASN1T_IVI_TcPart_driverAwarenessZoneIds* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_TcPart_driverAwarenessZoneIds (OSCTXT *pctxt, 
   ASN1T_IVI_TcPart_driverAwarenessZoneIds* pvalue);

/**************************************************************/
/*                                                            */
/*  TcPart_applicableLanes                                    */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'TcPart'
*/
typedef struct EXTERN ASN1T_IVI_TcPart_applicableLanes {
   OSSIZE n;
   ASN1T_ITS_LanePosition *elem;
   ASN1T_IVI_TcPart_applicableLanes () : n(0), elem(0) {}
} ASN1T_IVI_TcPart_applicableLanes;

class EXTERN ASN1C_IVI_TcPart_applicableLanes :
public ASN1CType
{
protected:
   ASN1T_IVI_TcPart_applicableLanes& msgData;
public:
   /**
    * Control class: ASN1C_IVI_TcPart_applicableLanes
    * Data class:    ASN1T_IVI_TcPart_applicableLanes
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_IVI_TcPart_applicableLanes (ASN1T_IVI_TcPart_applicableLanes& data);

   /**
    * Control class: ASN1C_IVI_TcPart_applicableLanes<br/>
    * Data class: ASN1T_IVI_TcPart_applicableLanes<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_IVI_TcPart_applicableLanes (OSRTMessageBufferIF& msgBuf
      , ASN1T_IVI_TcPart_applicableLanes& data);

   /**
    * Control class: ASN1C_IVI_TcPart_applicableLanes<br/>
    * Data class: ASN1T_IVI_TcPart_applicableLanes<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_IVI_TcPart_applicableLanes (ASN1CType& ccobj
      , ASN1T_IVI_TcPart_applicableLanes& data);

   virtual ~ASN1C_IVI_TcPart_applicableLanes () {}

private:
   ASN1C_IVI_TcPart_applicableLanes& operator= (const ASN1C_IVI_TcPart_applicableLanes&) {return *this;}
} ;

EXTERN int asn1PE_IVI_TcPart_applicableLanes (OSCTXT* pctxt, ASN1T_IVI_TcPart_applicableLanes* pvalue);

EXTERN int asn1PD_IVI_TcPart_applicableLanes (OSCTXT* pctxt, ASN1T_IVI_TcPart_applicableLanes* pvalue);

EXTERN int XmlEnc_IVI_TcPart_applicableLanes (OSCTXT* pctxt, 
   ASN1T_IVI_TcPart_applicableLanes* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_TcPart_applicableLanes (OSCTXT* pctxt, 
   ASN1T_IVI_TcPart_applicableLanes* pvalue);

EXTERN int asn1JsonEnc_IVI_TcPart_applicableLanes (OSCTXT *pctxt, ASN1T_IVI_TcPart_applicableLanes *pvalue);

EXTERN int asn1JsonDec_IVI_TcPart_applicableLanes (OSCTXT *pctxt, ASN1T_IVI_TcPart_applicableLanes *pvalue);

EXTERN int asn1PrtToStrm_IVI_TcPart_applicableLanes (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_TcPart_applicableLanes* pvalue);

EXTERN int asn1Init_IVI_TcPart_applicableLanes (
   ASN1T_IVI_TcPart_applicableLanes* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_TcPart_applicableLanes (OSCTXT *pctxt, 
   ASN1T_IVI_TcPart_applicableLanes* pvalue);

/**************************************************************/
/*                                                            */
/*  TcPart_text                                               */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'TcPart'
*/
/* List of ASN1T_IVI_Text */
typedef ASN1TSeqOfList ASN1T_IVI_TcPart_text;

class EXTERN ASN1C_IVI_TcPart_text :
public ASN1CSeqOfList
{
protected:
   ASN1T_IVI_TcPart_text& msgData;
public:
   /**
    * Control class: ASN1C_IVI_TcPart_text
    * Data class:    ASN1T_IVI_TcPart_text
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_IVI_TcPart_text (ASN1T_IVI_TcPart_text& data);

   /**
    * Control class: ASN1C_IVI_TcPart_text<br/>
    * Data class: ASN1T_IVI_TcPart_text<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_IVI_TcPart_text (OSRTMessageBufferIF& msgBuf
      , ASN1T_IVI_TcPart_text& data);

   /**
    * Control class: ASN1C_IVI_TcPart_text<br/>
    * Data class: ASN1T_IVI_TcPart_text<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_IVI_TcPart_text (ASN1CType& ccobj, ASN1T_IVI_TcPart_text& data);

   virtual ~ASN1C_IVI_TcPart_text () {}

   /**
    * Data class: ASN1T_IVI_Text<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_IVI_Text* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_IVI_Text.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_IVI_Text* NewElement ();

   /**
    * Data class: ASN1T_IVI_Text.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_IVI_Text* AppendNewElement ();

private:
   ASN1C_IVI_TcPart_text& operator= (const ASN1C_IVI_TcPart_text&) {return *this;}
} ;

EXTERN int asn1PE_IVI_TcPart_text (OSCTXT* pctxt, ASN1T_IVI_TcPart_text* pvalue);

EXTERN int asn1PD_IVI_TcPart_text (OSCTXT* pctxt, ASN1T_IVI_TcPart_text* pvalue);

EXTERN int XmlEnc_IVI_TcPart_text (OSCTXT* pctxt, 
   ASN1T_IVI_TcPart_text* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_TcPart_text (OSCTXT* pctxt, ASN1T_IVI_TcPart_text* pvalue
   );

EXTERN int asn1JsonEnc_IVI_TcPart_text (OSCTXT *pctxt, ASN1T_IVI_TcPart_text *pvalue);

EXTERN int asn1JsonDec_IVI_TcPart_text (OSCTXT *pctxt, ASN1T_IVI_TcPart_text *pvalue);

EXTERN int asn1PrtToStrm_IVI_TcPart_text (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_TcPart_text* pvalue);

EXTERN int asn1Init_IVI_TcPart_text (ASN1T_IVI_TcPart_text* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_TcPart_text (OSCTXT *pctxt, ASN1T_IVI_TcPart_text* pvalue);

/**************************************************************/
/*                                                            */
/*  TcPart                                                    */
/*                                                            */
/**************************************************************/
/*
TcPart ::= SEQUENCE {
   detectionZoneIds [0] SEQUENCE (SIZE (1..8, ...)) OF Zid OPTIONAL,
   relevanceZoneIds [1] SEQUENCE (SIZE (1..8, ...)) OF Zid,
   direction [2] Direction OPTIONAL,
   driverAwarenessZoneIds [3] SEQUENCE (SIZE (1..8, ...)) OF Zid OPTIONAL,
   minimumAwarenessTime [4] INTEGER (0..255) OPTIONAL,
   applicableLanes [5] SEQUENCE (SIZE (1..8, ...)) OF LanePosition OPTIONAL,
   layoutId [6] INTEGER (1..4, ...) OPTIONAL,
   preStoredlayoutId [7] INTEGER (1..64, ...) OPTIONAL,
   text [8] SEQUENCE (SIZE (1..4, ...)) OF Text OPTIONAL,
   data [9] OCTET STRING,
   ...
}
*/
struct EXTERN ASN1T_IVI_TcPart {
   struct {
      unsigned detectionZoneIdsPresent : 1;
      unsigned directionPresent : 1;
      unsigned driverAwarenessZoneIdsPresent : 1;
      unsigned minimumAwarenessTimePresent : 1;
      unsigned applicableLanesPresent : 1;
      unsigned layoutIdPresent : 1;
      unsigned preStoredlayoutIdPresent : 1;
      unsigned textPresent : 1;
   } m;
   ASN1T_IVI_TcPart_detectionZoneIds detectionZoneIds;
   ASN1T_IVI_TcPart_relevanceZoneIds relevanceZoneIds;
   ASN1T_IVI_Direction direction;
   ASN1T_IVI_TcPart_driverAwarenessZoneIds driverAwarenessZoneIds;
   OSUINT8 minimumAwarenessTime;
   ASN1T_IVI_TcPart_applicableLanes applicableLanes;
   OSUINT32 layoutId;
   OSUINT32 preStoredlayoutId;
   ASN1T_IVI_TcPart_text text;
   ASN1TDynOctStr64 data;
   ASN1TSeqExt extElem1;
   ASN1T_IVI_TcPart ();
} ;

EXTERN int asn1PE_IVI_TcPart (OSCTXT* pctxt, ASN1T_IVI_TcPart* pvalue);

EXTERN int asn1PD_IVI_TcPart (OSCTXT* pctxt, ASN1T_IVI_TcPart* pvalue);

EXTERN int XmlEnc_IVI_TcPart (OSCTXT* pctxt, ASN1T_IVI_TcPart* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_TcPart (OSCTXT* pctxt, ASN1T_IVI_TcPart* pvalue);

EXTERN int asn1JsonEnc_IVI_TcPart (OSCTXT *pctxt, ASN1T_IVI_TcPart *pvalue);

EXTERN int asn1JsonDec_IVI_TcPart (OSCTXT *pctxt, ASN1T_IVI_TcPart *pvalue);

EXTERN int asn1PrtToStrm_IVI_TcPart (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_TcPart* pvalue);

EXTERN ASN1T_IVI_TcPart* new_ASN1T_IVI_TcPart (ASN1CType& ccobj);

EXTERN int asn1Init_IVI_TcPart (ASN1T_IVI_TcPart* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_TcPart (OSCTXT *pctxt, ASN1T_IVI_TcPart* pvalue);

/**************************************************************/
/*                                                            */
/*  TextContainer                                             */
/*                                                            */
/**************************************************************/
/*
TextContainer ::= SEQUENCE (SIZE (1..16, ...)) OF TcPart
*/
/* List of ASN1T_IVI_TcPart */
typedef ASN1TSeqOfList ASN1T_IVI_TextContainer;

class EXTERN ASN1C_IVI_TextContainer :
public ASN1CSeqOfList
{
protected:
   ASN1T_IVI_TextContainer& msgData;
public:
   /**
    * Control class: ASN1C_IVI_TextContainer
    * Data class:    ASN1T_IVI_TextContainer
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_IVI_TextContainer (ASN1T_IVI_TextContainer& data);

   /**
    * Control class: ASN1C_IVI_TextContainer<br/>
    * Data class: ASN1T_IVI_TextContainer<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_IVI_TextContainer (OSRTMessageBufferIF& msgBuf
      , ASN1T_IVI_TextContainer& data);

   /**
    * Control class: ASN1C_IVI_TextContainer<br/>
    * Data class: ASN1T_IVI_TextContainer<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_IVI_TextContainer (ASN1CType& ccobj, ASN1T_IVI_TextContainer& data);

   virtual ~ASN1C_IVI_TextContainer () {}

   /**
    * Data class: ASN1T_IVI_TcPart<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_IVI_TcPart* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_IVI_TcPart.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_IVI_TcPart* NewElement ();

   /**
    * Data class: ASN1T_IVI_TcPart.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_IVI_TcPart* AppendNewElement ();

private:
   ASN1C_IVI_TextContainer& operator= (const ASN1C_IVI_TextContainer&) {return *this;}
} ;

EXTERN int asn1PE_IVI_TextContainer (OSCTXT* pctxt, ASN1T_IVI_TextContainer* pvalue);

EXTERN int asn1PD_IVI_TextContainer (OSCTXT* pctxt, ASN1T_IVI_TextContainer* pvalue);

EXTERN int XmlEnc_IVI_TextContainer (OSCTXT* pctxt, 
   ASN1T_IVI_TextContainer* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_TextContainer (OSCTXT* pctxt, 
   ASN1T_IVI_TextContainer* pvalue);

EXTERN int asn1JsonEnc_IVI_TextContainer (OSCTXT *pctxt, ASN1T_IVI_TextContainer *pvalue);

EXTERN int asn1JsonDec_IVI_TextContainer (OSCTXT *pctxt, ASN1T_IVI_TextContainer *pvalue);

EXTERN int asn1PrtToStrm_IVI_TextContainer (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_TextContainer* pvalue);

EXTERN int asn1Init_IVI_TextContainer (ASN1T_IVI_TextContainer* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_TextContainer (OSCTXT *pctxt, 
   ASN1T_IVI_TextContainer* pvalue);

/**************************************************************/
/*                                                            */
/*  LayoutComponent_textScripting                             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'LayoutComponent'
*/
struct EXTERN IVI_LayoutComponent_textScripting {
   enum Root {
      horizontal = 0,
      vertical = 1
   } ;
} ;

typedef OSUINT8 ASN1T_IVI_LayoutComponent_textScripting;

EXTERN int asn1PE_IVI_LayoutComponent_textScripting (OSCTXT* pctxt, ASN1T_IVI_LayoutComponent_textScripting value);

EXTERN int asn1PD_IVI_LayoutComponent_textScripting (OSCTXT* pctxt, ASN1T_IVI_LayoutComponent_textScripting* pvalue);

EXTERN int XmlEnc_IVI_LayoutComponent_textScripting (OSCTXT* pctxt, 
   ASN1T_IVI_LayoutComponent_textScripting value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_LayoutComponent_textScripting (OSCTXT* pctxt, 
   ASN1T_IVI_LayoutComponent_textScripting* pvalue);

EXTERN int asn1JsonEnc_IVI_LayoutComponent_textScripting (OSCTXT *pctxt, ASN1T_IVI_LayoutComponent_textScripting *pvalue);

EXTERN int asn1JsonDec_IVI_LayoutComponent_textScripting (OSCTXT *pctxt, ASN1T_IVI_LayoutComponent_textScripting *pvalue);

EXTERN int asn1PrtToStrm_IVI_LayoutComponent_textScripting (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_LayoutComponent_textScripting* pvalue);

EXTERN ASN1T_IVI_LayoutComponent_textScripting* 
   new_ASN1T_IVI_LayoutComponent_textScripting (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  LayoutComponent                                           */
/*                                                            */
/**************************************************************/
/*
LayoutComponent ::= SEQUENCE {
   layoutComponentId [0] INTEGER (1..8, ...),
   height [1] INTEGER (10..73),
   width [2] INTEGER (10..265),
   x [3] INTEGER (10..265),
   y [4] INTEGER (10..73),
   textScripting [5] INTEGER { horizontal(0), vertical(1) } (0..1)
}
*/
struct EXTERN ASN1T_IVI_LayoutComponent {
   OSUINT32 layoutComponentId;
   OSUINT8 height;
   OSUINT16 width;
   OSUINT16 x;
   OSUINT8 y;
   ASN1T_IVI_LayoutComponent_textScripting textScripting;
} ;

EXTERN int asn1PE_IVI_LayoutComponent (OSCTXT* pctxt, ASN1T_IVI_LayoutComponent* pvalue);

EXTERN int asn1PD_IVI_LayoutComponent (OSCTXT* pctxt, ASN1T_IVI_LayoutComponent* pvalue);

EXTERN int XmlEnc_IVI_LayoutComponent (OSCTXT* pctxt, 
   ASN1T_IVI_LayoutComponent* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_LayoutComponent (OSCTXT* pctxt, 
   ASN1T_IVI_LayoutComponent* pvalue);

EXTERN int asn1JsonEnc_IVI_LayoutComponent (OSCTXT *pctxt, ASN1T_IVI_LayoutComponent *pvalue);

EXTERN int asn1JsonDec_IVI_LayoutComponent (OSCTXT *pctxt, ASN1T_IVI_LayoutComponent *pvalue);

EXTERN int asn1PrtToStrm_IVI_LayoutComponent (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_LayoutComponent* pvalue);

EXTERN ASN1T_IVI_LayoutComponent* 
   new_ASN1T_IVI_LayoutComponent (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  LayoutContainer_layoutComponents                          */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'LayoutContainer'
*/
/* List of ASN1T_IVI_LayoutComponent */
typedef ASN1TSeqOfList ASN1T_IVI_LayoutContainer_layoutComponents;

class EXTERN ASN1C_IVI_LayoutContainer_layoutComponents :
public ASN1CSeqOfList
{
protected:
   ASN1T_IVI_LayoutContainer_layoutComponents& msgData;
public:
   /**
    * Control class: ASN1C_IVI_LayoutContainer_layoutComponents
    * Data class:    ASN1T_IVI_LayoutContainer_layoutComponents
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_IVI_LayoutContainer_layoutComponents
       (ASN1T_IVI_LayoutContainer_layoutComponents& data);

   /**
    * Control class: ASN1C_IVI_LayoutContainer_layoutComponents<br/>
    * Data class: ASN1T_IVI_LayoutContainer_layoutComponents<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_IVI_LayoutContainer_layoutComponents (OSRTMessageBufferIF& msgBuf
      , ASN1T_IVI_LayoutContainer_layoutComponents& data);

   /**
    * Control class: ASN1C_IVI_LayoutContainer_layoutComponents<br/>
    * Data class: ASN1T_IVI_LayoutContainer_layoutComponents<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_IVI_LayoutContainer_layoutComponents (ASN1CType& ccobj
      , ASN1T_IVI_LayoutContainer_layoutComponents& data);

   virtual ~ASN1C_IVI_LayoutContainer_layoutComponents () {}

   /**
    * Data class: ASN1T_IVI_LayoutComponent<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_IVI_LayoutComponent* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_IVI_LayoutComponent.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_IVI_LayoutComponent* NewElement ();

   /**
    * Data class: ASN1T_IVI_LayoutComponent.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_IVI_LayoutComponent* AppendNewElement ();

private:
   ASN1C_IVI_LayoutContainer_layoutComponents& operator= (const ASN1C_IVI_LayoutContainer_layoutComponents&) {return *this;}
} ;

EXTERN int asn1PE_IVI_LayoutContainer_layoutComponents (OSCTXT* pctxt, ASN1T_IVI_LayoutContainer_layoutComponents* pvalue);

EXTERN int asn1PD_IVI_LayoutContainer_layoutComponents (OSCTXT* pctxt, ASN1T_IVI_LayoutContainer_layoutComponents* pvalue);

EXTERN int XmlEnc_IVI_LayoutContainer_layoutComponents (OSCTXT* pctxt, 
   ASN1T_IVI_LayoutContainer_layoutComponents* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_LayoutContainer_layoutComponents (OSCTXT* pctxt, 
   ASN1T_IVI_LayoutContainer_layoutComponents* pvalue);

EXTERN int asn1JsonEnc_IVI_LayoutContainer_layoutComponents (OSCTXT *pctxt, ASN1T_IVI_LayoutContainer_layoutComponents *pvalue);

EXTERN int asn1JsonDec_IVI_LayoutContainer_layoutComponents (OSCTXT *pctxt, ASN1T_IVI_LayoutContainer_layoutComponents *pvalue);

EXTERN int asn1PrtToStrm_IVI_LayoutContainer_layoutComponents (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_LayoutContainer_layoutComponents* pvalue);

EXTERN int asn1Init_IVI_LayoutContainer_layoutComponents (
   ASN1T_IVI_LayoutContainer_layoutComponents* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_LayoutContainer_layoutComponents (OSCTXT *pctxt, 
   ASN1T_IVI_LayoutContainer_layoutComponents* pvalue);

/**************************************************************/
/*                                                            */
/*  LayoutContainer                                           */
/*                                                            */
/**************************************************************/
/*
LayoutContainer ::= SEQUENCE {
   layoutId [0] INTEGER (1..4, ...),
   height [1] INTEGER (10..73) OPTIONAL,
   width [2] INTEGER (10..265) OPTIONAL,
   layoutComponents [3] SEQUENCE (SIZE (1..4, ...)) OF LayoutComponent,
   ...
}
*/
struct EXTERN ASN1T_IVI_LayoutContainer {
   struct {
      unsigned heightPresent : 1;
      unsigned widthPresent : 1;
   } m;
   OSUINT32 layoutId;
   OSUINT8 height;
   OSUINT16 width;
   ASN1T_IVI_LayoutContainer_layoutComponents layoutComponents;
   ASN1TSeqExt extElem1;
   ASN1T_IVI_LayoutContainer ();
} ;

EXTERN int asn1PE_IVI_LayoutContainer (OSCTXT* pctxt, ASN1T_IVI_LayoutContainer* pvalue);

EXTERN int asn1PD_IVI_LayoutContainer (OSCTXT* pctxt, ASN1T_IVI_LayoutContainer* pvalue);

EXTERN int XmlEnc_IVI_LayoutContainer (OSCTXT* pctxt, 
   ASN1T_IVI_LayoutContainer* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_LayoutContainer (OSCTXT* pctxt, 
   ASN1T_IVI_LayoutContainer* pvalue);

EXTERN int asn1JsonEnc_IVI_LayoutContainer (OSCTXT *pctxt, ASN1T_IVI_LayoutContainer *pvalue);

EXTERN int asn1JsonDec_IVI_LayoutContainer (OSCTXT *pctxt, ASN1T_IVI_LayoutContainer *pvalue);

EXTERN int asn1PrtToStrm_IVI_LayoutContainer (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_LayoutContainer* pvalue);

EXTERN ASN1T_IVI_LayoutContainer* 
   new_ASN1T_IVI_LayoutContainer (ASN1CType& ccobj);

EXTERN int asn1Init_IVI_LayoutContainer (ASN1T_IVI_LayoutContainer* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_LayoutContainer (OSCTXT *pctxt, 
   ASN1T_IVI_LayoutContainer* pvalue);

/**************************************************************/
/*                                                            */
/*  IviContainer                                              */
/*                                                            */
/**************************************************************/
/*
Definition of Containers
IviContainer ::= CHOICE {
   glc [0] GeographicLocationContainer,
   giv [1] GeneralIviContainer,
   rcc [2] RoadConfigurationContainer,
   tc [3] TextContainer,
   lac [4] LayoutContainer,
   ...
}
*/
/* Choice tag constants */

#define T_IVI_IviContainer_glc          1
#define T_IVI_IviContainer_giv          2
#define T_IVI_IviContainer_rcc          3
#define T_IVI_IviContainer_tc           4
#define T_IVI_IviContainer_lac          5
#define T_IVI_IviContainer_extElem1     6

struct EXTERN ASN1T_IVI_IviContainer {
   OSINT32 t;
   union {
      /* t = 1 */
      ASN1T_IVI_GeographicLocationContainer *glc;
      /* t = 2 */
      ASN1T_IVI_GeneralIviContainer *giv;
      /* t = 3 */
      ASN1T_IVI_RoadConfigurationContainer *rcc;
      /* t = 4 */
      ASN1T_IVI_TextContainer *tc;
      /* t = 5 */
      ASN1T_IVI_LayoutContainer *lac;
      /* t = 6 */
      ASN1TOpenType *extElem1;
   } u;
   ASN1T_IVI_IviContainer () { t = 0; OSCRTLMEMSET (&u, 0, sizeof(u)); }
} ;

EXTERN int asn1PE_IVI_IviContainer (OSCTXT* pctxt, ASN1T_IVI_IviContainer* pvalue);

EXTERN int asn1PD_IVI_IviContainer (OSCTXT* pctxt, ASN1T_IVI_IviContainer* pvalue);

EXTERN int XmlEnc_IVI_IviContainer (OSCTXT* pctxt, 
   ASN1T_IVI_IviContainer* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_IviContainer (OSCTXT* pctxt, 
   ASN1T_IVI_IviContainer* pvalue);

EXTERN int asn1JsonEnc_IVI_IviContainer (OSCTXT *pctxt, ASN1T_IVI_IviContainer *pvalue);

EXTERN int asn1JsonDec_IVI_IviContainer (OSCTXT *pctxt, ASN1T_IVI_IviContainer *pvalue);

EXTERN int asn1PrtToStrm_IVI_IviContainer (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_IviContainer* pvalue);

EXTERN ASN1T_IVI_IviContainer* new_ASN1T_IVI_IviContainer (ASN1CType& ccobj);

EXTERN int asn1Init_IVI_IviContainer (ASN1T_IVI_IviContainer* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_IviContainer (OSCTXT *pctxt, ASN1T_IVI_IviContainer* pvalue);

/**************************************************************/
/*                                                            */
/*  IviStructure_optional                                     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'IviStructure'
*/
/* List of ASN1T_IVI_IviContainer */
typedef ASN1TSeqOfList ASN1T_IVI_IviStructure_optional;

class EXTERN ASN1C_IVI_IviStructure_optional :
public ASN1CSeqOfList
{
protected:
   ASN1T_IVI_IviStructure_optional& msgData;
public:
   /**
    * Control class: ASN1C_IVI_IviStructure_optional
    * Data class:    ASN1T_IVI_IviStructure_optional
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_IVI_IviStructure_optional (ASN1T_IVI_IviStructure_optional& data);

   /**
    * Control class: ASN1C_IVI_IviStructure_optional<br/>
    * Data class: ASN1T_IVI_IviStructure_optional<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_IVI_IviStructure_optional (OSRTMessageBufferIF& msgBuf
      , ASN1T_IVI_IviStructure_optional& data);

   /**
    * Control class: ASN1C_IVI_IviStructure_optional<br/>
    * Data class: ASN1T_IVI_IviStructure_optional<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_IVI_IviStructure_optional (ASN1CType& ccobj
      , ASN1T_IVI_IviStructure_optional& data);

   virtual ~ASN1C_IVI_IviStructure_optional () {}

   /**
    * Data class: ASN1T_IVI_IviContainer<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_IVI_IviContainer* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_IVI_IviContainer.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_IVI_IviContainer* NewElement ();

   /**
    * Data class: ASN1T_IVI_IviContainer.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_IVI_IviContainer* AppendNewElement ();

private:
   ASN1C_IVI_IviStructure_optional& operator= (const ASN1C_IVI_IviStructure_optional&) {return *this;}
} ;

EXTERN int asn1PE_IVI_IviStructure_optional (OSCTXT* pctxt, ASN1T_IVI_IviStructure_optional* pvalue);

EXTERN int asn1PD_IVI_IviStructure_optional (OSCTXT* pctxt, ASN1T_IVI_IviStructure_optional* pvalue);

EXTERN int XmlEnc_IVI_IviStructure_optional (OSCTXT* pctxt, 
   ASN1T_IVI_IviStructure_optional* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_IviStructure_optional (OSCTXT* pctxt, 
   ASN1T_IVI_IviStructure_optional* pvalue);

EXTERN int asn1JsonEnc_IVI_IviStructure_optional (OSCTXT *pctxt, ASN1T_IVI_IviStructure_optional *pvalue);

EXTERN int asn1JsonDec_IVI_IviStructure_optional (OSCTXT *pctxt, ASN1T_IVI_IviStructure_optional *pvalue);

EXTERN int asn1PrtToStrm_IVI_IviStructure_optional (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_IviStructure_optional* pvalue);

EXTERN int asn1Init_IVI_IviStructure_optional (
   ASN1T_IVI_IviStructure_optional* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_IviStructure_optional (OSCTXT *pctxt, 
   ASN1T_IVI_IviStructure_optional* pvalue);

/**************************************************************/
/*                                                            */
/*  IviStructure                                              */
/*                                                            */
/**************************************************************/
/*
Definition of IVI Structure
IviStructure ::= SEQUENCE {
   mandatory [0] IVIManagementContainer,
   optional [1] SEQUENCE (SIZE (1..8, ...)) OF IviContainer OPTIONAL
}
*/
struct EXTERN ASN1T_IVI_IviStructure {
   struct {
      unsigned optionalPresent : 1;
   } m;
   ASN1T_IVI_IVIManagementContainer mandatory;
   ASN1T_IVI_IviStructure_optional optional;
   ASN1T_IVI_IviStructure ();
} ;

EXTERN int asn1PE_IVI_IviStructure (OSCTXT* pctxt, ASN1T_IVI_IviStructure* pvalue);

EXTERN int asn1PD_IVI_IviStructure (OSCTXT* pctxt, ASN1T_IVI_IviStructure* pvalue);

EXTERN int XmlEnc_IVI_IviStructure (OSCTXT* pctxt, 
   ASN1T_IVI_IviStructure* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_IviStructure (OSCTXT* pctxt, 
   ASN1T_IVI_IviStructure* pvalue);

EXTERN int asn1JsonEnc_IVI_IviStructure (OSCTXT *pctxt, ASN1T_IVI_IviStructure *pvalue);

EXTERN int asn1JsonDec_IVI_IviStructure (OSCTXT *pctxt, ASN1T_IVI_IviStructure *pvalue);

EXTERN int asn1PrtToStrm_IVI_IviStructure (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_IviStructure* pvalue);

EXTERN ASN1T_IVI_IviStructure* new_ASN1T_IVI_IviStructure (ASN1CType& ccobj);

EXTERN int asn1Init_IVI_IviStructure (ASN1T_IVI_IviStructure* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_IviStructure (OSCTXT *pctxt, ASN1T_IVI_IviStructure* pvalue);

/**************************************************************/
/*                                                            */
/*  IVI                                                       */
/*                                                            */
/**************************************************************/
/*
Definition of IVI message to be send over the air is outside of the scope and given for information only:
IVI ::= SEQUENCE {
   header [0] ItsPduHeader,
   ivi [1] IviStructure
}
*/
struct EXTERN ASN1T_IVI_IVI : public ASN1TPDU {
   ASN1T_ITS_ItsPduHeader header;
   ASN1T_IVI_IviStructure ivi;
   ASN1T_IVI_IVI ();
   ~ASN1T_IVI_IVI ();
} ;

class EXTERN ASN1C_IVI_IVI :
public ASN1CType
{
protected:
   ASN1T_IVI_IVI& msgData;
public:
   /**
    * Control class: ASN1C_IVI_IVI
    * Data class:    ASN1T_IVI_IVI
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_IVI_IVI (ASN1T_IVI_IVI& data);

   /**
    * Control class: ASN1C_IVI_IVI<br/>
    * Data class: ASN1T_IVI_IVI<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_IVI_IVI (OSRTMessageBufferIF& msgBuf, ASN1T_IVI_IVI& data);

   virtual ~ASN1C_IVI_IVI () {}

   /**
    * Data class: ASN1T_IVI_IVI<br/>
    *
    * Gets a mutable instance of the data class.
    *
    * @return Reference to a mutable instance of data class ASN1T_IVI_IVI.
    */
   inline ASN1T_IVI_IVI& getData () { return msgData; }

   /**
    * Data class: ASN1T_IVI_IVI<br/>
    * Gets a non-mutable instance of the data class.
    *
    * @return Reference to a non-mutable instance of data class ASN1T_IVI_IVI.
    */
   inline const ASN1T_IVI_IVI& getData () const { return msgData; }

   // standard encode/decode methods (defined in ASN1CType base class):
   // int Encode ();
   // int Decode ();

   // stream encode/decode methods:
   /**
    * Encodes into a specified encode buffer.
    *
    * @param msgBuf Reference to an encode buffer.
    * @return A status value (0 indicates success).
    */
   int EncodeTo (OSRTMessageBufferIF& msgBuf);

   /**
    * Decodes from a specified decode buffer.
    *
    * @param msgBuf Reference to a decode buffer.
    * @return A status value (0 indicates success).
    */
   int DecodeFrom (OSRTMessageBufferIF& msgBuf, OSBOOL free = FALSE);

   /**
    * Frees the memory associated with the instance.
    */
   virtual void MemFree ();

   /**
    * Writes the contents of the object to a user-defined stream using
    * a user-defined print callback function.  See the documentation for
    * the setPrintStream() method.
    *
    * @param name A name for the object's contents.  If not specified,
    *             IVI will be used for the name.
    * @return Always returns 0.
    */
   int toStream (const char* name = "IVI");
   /**
    * Declares a print stream handler function.
    *
    * @param strmCallback Pointer to a function defined according to the
    *                     rtxPrintCallback signature.
    * @return A status value (0 indicates success).
    */
   int setPrintStream (rtxPrintCallback strmCallback, void* pStrmInfo);
private:
   ASN1C_IVI_IVI& operator= (const ASN1C_IVI_IVI&) {return *this;}
} ;

EXTERN int asn1PE_IVI_IVI (OSCTXT* pctxt, ASN1T_IVI_IVI* pvalue);

EXTERN int asn1PD_IVI_IVI (OSCTXT* pctxt, ASN1T_IVI_IVI* pvalue);

EXTERN int XmlEnc_IVI_IVI (OSCTXT* pctxt, ASN1T_IVI_IVI* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_IVI (OSCTXT* pctxt, ASN1T_IVI_IVI* pvalue);

EXTERN int asn1JsonEnc_IVI_IVI (OSCTXT *pctxt, ASN1T_IVI_IVI *pvalue);

EXTERN int asn1JsonDec_IVI_IVI (OSCTXT *pctxt, ASN1T_IVI_IVI *pvalue);

EXTERN int asn1PrtToStrm_IVI_IVI (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_IVI* pvalue);

EXTERN ASN1T_IVI_IVI* new_ASN1T_IVI_IVI (ASN1CType& ccobj);

EXTERN int asn1Init_IVI_IVI (ASN1T_IVI_IVI* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_IVI (OSCTXT *pctxt, ASN1T_IVI_IVI* pvalue);

/**
 * Global element functions.  These functions encode or decode complete
 * XML documents.  They are generated for XSD global elements and/or
 * ASN.1 type definitions that are either:
 *
 * 1) not referenced by any other types, or
 * 2) explicitly declared to be a PDU using the -pdu command line
 *    option, or
 * 3) explicitly declared to be a PDU using the <isPDU/> 
 *    configuration file element.
 */
#endif
