/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).
 */
#ifndef CAM_PDU_DESCRIPTIONS_H
#define CAM_PDU_DESCRIPTIONS_H

#include <stdio.h>
#include <stdlib.h>
#include "rtpersrc/asn1PerCppTypes.h"
#include "rtsrc/asn1CppTypes.h"
#include "rtsrc/rtPrintToStream.h"
#include "rtsrc/asn1type.h"
#include "rtxmlsrc/asn1xml.h"
#include "rtxmlsrc/rtXmlCppMsgBuf.h"
#include "rtsrc/asn1type.h"
#include "rtjsonsrc/asn1json.h"
#include "rtjsonsrc/rtJsonCppMsgBuf.h"

#include "ITS-Container.h"

/**
 * Header file for ASN.1 module CAM-PDU-Descriptions
 */
/**************************************************************/
/*                                                            */
/*  GenerationDeltaTime                                       */
/*                                                            */
/**************************************************************/
/*
GenerationDeltaTime ::= INTEGER { oneMilliSec(1) } (0..65535)
*/
struct EXTERN GenerationDeltaTime {
   enum Root {
      oneMilliSec = 1
   } ;
} ;

typedef OSUINT16 ASN1T_GenerationDeltaTime;

EXTERN int asn1PE_GenerationDeltaTime (OSCTXT* pctxt, ASN1T_GenerationDeltaTime value);

EXTERN int asn1PD_GenerationDeltaTime (OSCTXT* pctxt, ASN1T_GenerationDeltaTime* pvalue);

EXTERN int XmlEnc_GenerationDeltaTime (OSCTXT* pctxt, 
   ASN1T_GenerationDeltaTime value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_GenerationDeltaTime (OSCTXT* pctxt, 
   ASN1T_GenerationDeltaTime* pvalue);

EXTERN int asn1JsonEnc_GenerationDeltaTime (OSCTXT *pctxt, ASN1T_GenerationDeltaTime *pvalue);

EXTERN int asn1JsonDec_GenerationDeltaTime (OSCTXT *pctxt, ASN1T_GenerationDeltaTime *pvalue);

EXTERN int asn1PrtToStrm_GenerationDeltaTime (OSCTXT *pctxt, 
   const char* name, const ASN1T_GenerationDeltaTime* pvalue);

EXTERN ASN1T_GenerationDeltaTime* 
   new_ASN1T_GenerationDeltaTime (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  BasicContainer                                            */
/*                                                            */
/**************************************************************/
/*
BasicContainer ::= SEQUENCE {
   stationType [0] StationType,
   referencePosition [1] ReferencePosition,
   ...
}
*/
struct EXTERN ASN1T_BasicContainer {
   ASN1T_ITS_StationType stationType;
   ASN1T_ITS_ReferencePosition referencePosition;
   ASN1TSeqExt extElem1;
} ;

EXTERN int asn1PE_BasicContainer (OSCTXT* pctxt, ASN1T_BasicContainer* pvalue);

EXTERN int asn1PD_BasicContainer (OSCTXT* pctxt, ASN1T_BasicContainer* pvalue);

EXTERN int XmlEnc_BasicContainer (OSCTXT* pctxt, ASN1T_BasicContainer* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_BasicContainer (OSCTXT* pctxt, ASN1T_BasicContainer* pvalue)
   ;

EXTERN int asn1JsonEnc_BasicContainer (OSCTXT *pctxt, ASN1T_BasicContainer *pvalue);

EXTERN int asn1JsonDec_BasicContainer (OSCTXT *pctxt, ASN1T_BasicContainer *pvalue);

EXTERN int asn1PrtToStrm_BasicContainer (OSCTXT *pctxt, 
   const char* name, const ASN1T_BasicContainer* pvalue);

EXTERN ASN1T_BasicContainer* new_ASN1T_BasicContainer (ASN1CType& ccobj);

EXTERN int asn1Init_BasicContainer (ASN1T_BasicContainer* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_BasicContainer (OSCTXT *pctxt, ASN1T_BasicContainer* pvalue);

/**************************************************************/
/*                                                            */
/*  BasicVehicleContainerHighFrequency                        */
/*                                                            */
/**************************************************************/
/*
BasicVehicleContainerHighFrequency ::= SEQUENCE {
   heading [0] Heading,
   speed [1] Speed,
   driveDirection [2] DriveDirection,
   vehicleLength [3] VehicleLength,
   vehicleWidth [4] VehicleWidth,
   longitudinalAcceleration [5] LongitudinalAcceleration,
   curvature [6] Curvature,
   curvatureCalculationMode [7] CurvatureCalculationMode,
   yawRate [8] YawRate,
   accelerationControl [9] AccelerationControl OPTIONAL,
   lanePosition [10] LanePosition OPTIONAL,
   steeringWheelAngle [11] SteeringWheelAngle OPTIONAL,
   lateralAcceleration [12] LateralAcceleration OPTIONAL,
   verticalAcceleration [13] VerticalAcceleration OPTIONAL,
   performanceClass [14] PerformanceClass OPTIONAL,
   cenDsrcTollingZone [15] CenDsrcTollingZone OPTIONAL
}
*/
struct EXTERN ASN1T_BasicVehicleContainerHighFrequency {
   struct {
      unsigned accelerationControlPresent : 1;
      unsigned lanePositionPresent : 1;
      unsigned steeringWheelAnglePresent : 1;
      unsigned lateralAccelerationPresent : 1;
      unsigned verticalAccelerationPresent : 1;
      unsigned performanceClassPresent : 1;
      unsigned cenDsrcTollingZonePresent : 1;
   } m;
   ASN1T_ITS_Heading heading;
   ASN1T_ITS_Speed speed;
   ASN1T_ITS_DriveDirection driveDirection;
   ASN1T_ITS_VehicleLength vehicleLength;
   ASN1T_ITS_VehicleWidth vehicleWidth;
   ASN1T_ITS_LongitudinalAcceleration longitudinalAcceleration;
   ASN1T_ITS_Curvature curvature;
   ASN1T_ITS_CurvatureCalculationMode curvatureCalculationMode;
   ASN1T_ITS_YawRate yawRate;
   ASN1T_ITS_AccelerationControl accelerationControl;
   ASN1T_ITS_LanePosition lanePosition;
   ASN1T_ITS_SteeringWheelAngle steeringWheelAngle;
   ASN1T_ITS_LateralAcceleration lateralAcceleration;
   ASN1T_ITS_VerticalAcceleration verticalAcceleration;
   ASN1T_ITS_PerformanceClass performanceClass;
   ASN1T_ITS_CenDsrcTollingZone cenDsrcTollingZone;
   ASN1T_BasicVehicleContainerHighFrequency ();
} ;

EXTERN int asn1PE_BasicVehicleContainerHighFrequency (OSCTXT* pctxt, ASN1T_BasicVehicleContainerHighFrequency* pvalue);

EXTERN int asn1PD_BasicVehicleContainerHighFrequency (OSCTXT* pctxt, ASN1T_BasicVehicleContainerHighFrequency* pvalue);

EXTERN int XmlEnc_BasicVehicleContainerHighFrequency (OSCTXT* pctxt, 
   ASN1T_BasicVehicleContainerHighFrequency* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_BasicVehicleContainerHighFrequency (OSCTXT* pctxt, 
   ASN1T_BasicVehicleContainerHighFrequency* pvalue);

EXTERN int asn1JsonEnc_BasicVehicleContainerHighFrequency (OSCTXT *pctxt, ASN1T_BasicVehicleContainerHighFrequency *pvalue);

EXTERN int asn1JsonDec_BasicVehicleContainerHighFrequency (OSCTXT *pctxt, ASN1T_BasicVehicleContainerHighFrequency *pvalue);

EXTERN int asn1PrtToStrm_BasicVehicleContainerHighFrequency (OSCTXT *pctxt, 
   const char* name, const ASN1T_BasicVehicleContainerHighFrequency* pvalue);

EXTERN ASN1T_BasicVehicleContainerHighFrequency* 
   new_ASN1T_BasicVehicleContainerHighFrequency (ASN1CType& ccobj);

EXTERN int asn1Init_BasicVehicleContainerHighFrequency (
   ASN1T_BasicVehicleContainerHighFrequency* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_BasicVehicleContainerHighFrequency (OSCTXT *pctxt, 
   ASN1T_BasicVehicleContainerHighFrequency* pvalue);

/**************************************************************/
/*                                                            */
/*  RSUContainerHighFrequency                                 */
/*                                                            */
/**************************************************************/
/*
RSUContainerHighFrequency ::= SEQUENCE {
   protectedCommunicationZonesRSU [0] ProtectedCommunicationZonesRSU OPTIONAL,
   ...
}
*/
struct EXTERN ASN1T_RSUContainerHighFrequency {
   struct {
      unsigned protectedCommunicationZonesRSUPresent : 1;
   } m;
   ASN1T_ITS_ProtectedCommunicationZonesRSU protectedCommunicationZonesRSU;
   ASN1TSeqExt extElem1;
   ASN1T_RSUContainerHighFrequency ();
} ;

EXTERN int asn1PE_RSUContainerHighFrequency (OSCTXT* pctxt, ASN1T_RSUContainerHighFrequency* pvalue);

EXTERN int asn1PD_RSUContainerHighFrequency (OSCTXT* pctxt, ASN1T_RSUContainerHighFrequency* pvalue);

EXTERN int XmlEnc_RSUContainerHighFrequency (OSCTXT* pctxt, 
   ASN1T_RSUContainerHighFrequency* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_RSUContainerHighFrequency (OSCTXT* pctxt, 
   ASN1T_RSUContainerHighFrequency* pvalue);

EXTERN int asn1JsonEnc_RSUContainerHighFrequency (OSCTXT *pctxt, ASN1T_RSUContainerHighFrequency *pvalue);

EXTERN int asn1JsonDec_RSUContainerHighFrequency (OSCTXT *pctxt, ASN1T_RSUContainerHighFrequency *pvalue);

EXTERN int asn1PrtToStrm_RSUContainerHighFrequency (OSCTXT *pctxt, 
   const char* name, const ASN1T_RSUContainerHighFrequency* pvalue);

EXTERN ASN1T_RSUContainerHighFrequency* 
   new_ASN1T_RSUContainerHighFrequency (ASN1CType& ccobj);

EXTERN int asn1Init_RSUContainerHighFrequency (
   ASN1T_RSUContainerHighFrequency* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_RSUContainerHighFrequency (OSCTXT *pctxt, 
   ASN1T_RSUContainerHighFrequency* pvalue);

/**************************************************************/
/*                                                            */
/*  HighFrequencyContainer                                    */
/*                                                            */
/**************************************************************/
/*
HighFrequencyContainer ::= CHOICE {
   basicVehicleContainerHighFrequency [0] BasicVehicleContainerHighFrequency,
   rsuContainerHighFrequency [1] RSUContainerHighFrequency,
   ...
}
*/
/* Choice tag constants */

#define T_HighFrequencyContainer_basicVehicleContainerHighFrequency 1
#define T_HighFrequencyContainer_rsuContainerHighFrequency 2
#define T_HighFrequencyContainer_extElem1 3

struct EXTERN ASN1T_HighFrequencyContainer {
   OSINT32 t;
   union {
      /* t = 1 */
      ASN1T_BasicVehicleContainerHighFrequency *basicVehicleContainerHighFrequency;
      /* t = 2 */
      ASN1T_RSUContainerHighFrequency *rsuContainerHighFrequency;
      /* t = 3 */
      ASN1TOpenType *extElem1;
   } u;
   ASN1T_HighFrequencyContainer () { t = 0; OSCRTLMEMSET (&u, 0, sizeof(u)); }
} ;

EXTERN int asn1PE_HighFrequencyContainer (OSCTXT* pctxt, ASN1T_HighFrequencyContainer* pvalue);

EXTERN int asn1PD_HighFrequencyContainer (OSCTXT* pctxt, ASN1T_HighFrequencyContainer* pvalue);

EXTERN int XmlEnc_HighFrequencyContainer (OSCTXT* pctxt, 
   ASN1T_HighFrequencyContainer* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_HighFrequencyContainer (OSCTXT* pctxt, 
   ASN1T_HighFrequencyContainer* pvalue);

EXTERN int asn1JsonEnc_HighFrequencyContainer (OSCTXT *pctxt, ASN1T_HighFrequencyContainer *pvalue);

EXTERN int asn1JsonDec_HighFrequencyContainer (OSCTXT *pctxt, ASN1T_HighFrequencyContainer *pvalue);

EXTERN int asn1PrtToStrm_HighFrequencyContainer (OSCTXT *pctxt, 
   const char* name, const ASN1T_HighFrequencyContainer* pvalue);

EXTERN ASN1T_HighFrequencyContainer* 
   new_ASN1T_HighFrequencyContainer (ASN1CType& ccobj);

EXTERN int asn1Init_HighFrequencyContainer (ASN1T_HighFrequencyContainer* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_HighFrequencyContainer (OSCTXT *pctxt, 
   ASN1T_HighFrequencyContainer* pvalue);

/**************************************************************/
/*                                                            */
/*  BasicVehicleContainerLowFrequency                         */
/*                                                            */
/**************************************************************/
/*
BasicVehicleContainerLowFrequency ::= SEQUENCE {
   vehicleRole [0] VehicleRole,
   exteriorLights [1] ExteriorLights,
   pathHistory [2] PathHistory
}
*/
struct EXTERN ASN1T_BasicVehicleContainerLowFrequency {
   ASN1T_ITS_VehicleRole vehicleRole;
   ASN1T_ITS_ExteriorLights exteriorLights;
   ASN1T_ITS_PathHistory pathHistory;
} ;

EXTERN int asn1PE_BasicVehicleContainerLowFrequency (OSCTXT* pctxt, ASN1T_BasicVehicleContainerLowFrequency* pvalue);

EXTERN int asn1PD_BasicVehicleContainerLowFrequency (OSCTXT* pctxt, ASN1T_BasicVehicleContainerLowFrequency* pvalue);

EXTERN int XmlEnc_BasicVehicleContainerLowFrequency (OSCTXT* pctxt, 
   ASN1T_BasicVehicleContainerLowFrequency* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_BasicVehicleContainerLowFrequency (OSCTXT* pctxt, 
   ASN1T_BasicVehicleContainerLowFrequency* pvalue);

EXTERN int asn1JsonEnc_BasicVehicleContainerLowFrequency (OSCTXT *pctxt, ASN1T_BasicVehicleContainerLowFrequency *pvalue);

EXTERN int asn1JsonDec_BasicVehicleContainerLowFrequency (OSCTXT *pctxt, ASN1T_BasicVehicleContainerLowFrequency *pvalue);

EXTERN int asn1PrtToStrm_BasicVehicleContainerLowFrequency (OSCTXT *pctxt, 
   const char* name, const ASN1T_BasicVehicleContainerLowFrequency* pvalue);

EXTERN ASN1T_BasicVehicleContainerLowFrequency* 
   new_ASN1T_BasicVehicleContainerLowFrequency (ASN1CType& ccobj);

EXTERN int asn1Init_BasicVehicleContainerLowFrequency (
   ASN1T_BasicVehicleContainerLowFrequency* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_BasicVehicleContainerLowFrequency (OSCTXT *pctxt, 
   ASN1T_BasicVehicleContainerLowFrequency* pvalue);

/**************************************************************/
/*                                                            */
/*  LowFrequencyContainer                                     */
/*                                                            */
/**************************************************************/
/*
LowFrequencyContainer ::= CHOICE {
   basicVehicleContainerLowFrequency [0] BasicVehicleContainerLowFrequency,
   ...
}
*/
/* Choice tag constants */

#define T_LowFrequencyContainer_basicVehicleContainerLowFrequency 1
#define T_LowFrequencyContainer_extElem1 2

struct EXTERN ASN1T_LowFrequencyContainer {
   OSINT32 t;
   union {
      /* t = 1 */
      ASN1T_BasicVehicleContainerLowFrequency *basicVehicleContainerLowFrequency;
      /* t = 2 */
      ASN1TOpenType *extElem1;
   } u;
   ASN1T_LowFrequencyContainer () { t = 0; OSCRTLMEMSET (&u, 0, sizeof(u)); }
} ;

EXTERN int asn1PE_LowFrequencyContainer (OSCTXT* pctxt, ASN1T_LowFrequencyContainer* pvalue);

EXTERN int asn1PD_LowFrequencyContainer (OSCTXT* pctxt, ASN1T_LowFrequencyContainer* pvalue);

EXTERN int XmlEnc_LowFrequencyContainer (OSCTXT* pctxt, 
   ASN1T_LowFrequencyContainer* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_LowFrequencyContainer (OSCTXT* pctxt, 
   ASN1T_LowFrequencyContainer* pvalue);

EXTERN int asn1JsonEnc_LowFrequencyContainer (OSCTXT *pctxt, ASN1T_LowFrequencyContainer *pvalue);

EXTERN int asn1JsonDec_LowFrequencyContainer (OSCTXT *pctxt, ASN1T_LowFrequencyContainer *pvalue);

EXTERN int asn1PrtToStrm_LowFrequencyContainer (OSCTXT *pctxt, 
   const char* name, const ASN1T_LowFrequencyContainer* pvalue);

EXTERN ASN1T_LowFrequencyContainer* 
   new_ASN1T_LowFrequencyContainer (ASN1CType& ccobj);

EXTERN int asn1Init_LowFrequencyContainer (ASN1T_LowFrequencyContainer* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_LowFrequencyContainer (OSCTXT *pctxt, 
   ASN1T_LowFrequencyContainer* pvalue);

/**************************************************************/
/*                                                            */
/*  PublicTransportContainer                                  */
/*                                                            */
/**************************************************************/
/*
PublicTransportContainer ::= SEQUENCE {
   embarkationStatus [0] EmbarkationStatus,
   ptActivation [1] PtActivation OPTIONAL
}
*/
struct EXTERN ASN1T_PublicTransportContainer {
   struct {
      unsigned ptActivationPresent : 1;
   } m;
   ASN1T_ITS_EmbarkationStatus embarkationStatus;
   ASN1T_ITS_PtActivation ptActivation;
   ASN1T_PublicTransportContainer ();
} ;

EXTERN int asn1PE_PublicTransportContainer (OSCTXT* pctxt, ASN1T_PublicTransportContainer* pvalue);

EXTERN int asn1PD_PublicTransportContainer (OSCTXT* pctxt, ASN1T_PublicTransportContainer* pvalue);

EXTERN int XmlEnc_PublicTransportContainer (OSCTXT* pctxt, 
   ASN1T_PublicTransportContainer* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_PublicTransportContainer (OSCTXT* pctxt, 
   ASN1T_PublicTransportContainer* pvalue);

EXTERN int asn1JsonEnc_PublicTransportContainer (OSCTXT *pctxt, ASN1T_PublicTransportContainer *pvalue);

EXTERN int asn1JsonDec_PublicTransportContainer (OSCTXT *pctxt, ASN1T_PublicTransportContainer *pvalue);

EXTERN int asn1PrtToStrm_PublicTransportContainer (OSCTXT *pctxt, 
   const char* name, const ASN1T_PublicTransportContainer* pvalue);

EXTERN ASN1T_PublicTransportContainer* 
   new_ASN1T_PublicTransportContainer (ASN1CType& ccobj);

EXTERN int asn1Init_PublicTransportContainer (ASN1T_PublicTransportContainer* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

/**************************************************************/
/*                                                            */
/*  SpecialTransportContainer                                 */
/*                                                            */
/**************************************************************/
/*
SpecialTransportContainer ::= SEQUENCE {
   specialTransportType [0] SpecialTransportType,
   lightBarSirenInUse [1] LightBarSirenInUse
}
*/
struct EXTERN ASN1T_SpecialTransportContainer {
   ASN1T_ITS_SpecialTransportType specialTransportType;
   ASN1T_ITS_LightBarSirenInUse lightBarSirenInUse;
} ;

EXTERN int asn1PE_SpecialTransportContainer (OSCTXT* pctxt, ASN1T_SpecialTransportContainer* pvalue);

EXTERN int asn1PD_SpecialTransportContainer (OSCTXT* pctxt, ASN1T_SpecialTransportContainer* pvalue);

EXTERN int XmlEnc_SpecialTransportContainer (OSCTXT* pctxt, 
   ASN1T_SpecialTransportContainer* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_SpecialTransportContainer (OSCTXT* pctxt, 
   ASN1T_SpecialTransportContainer* pvalue);

EXTERN int asn1JsonEnc_SpecialTransportContainer (OSCTXT *pctxt, ASN1T_SpecialTransportContainer *pvalue);

EXTERN int asn1JsonDec_SpecialTransportContainer (OSCTXT *pctxt, ASN1T_SpecialTransportContainer *pvalue);

EXTERN int asn1PrtToStrm_SpecialTransportContainer (OSCTXT *pctxt, 
   const char* name, const ASN1T_SpecialTransportContainer* pvalue);

EXTERN ASN1T_SpecialTransportContainer* 
   new_ASN1T_SpecialTransportContainer (ASN1CType& ccobj);

EXTERN int asn1Init_SpecialTransportContainer (
   ASN1T_SpecialTransportContainer* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

/**************************************************************/
/*                                                            */
/*  DangerousGoodsContainer                                   */
/*                                                            */
/**************************************************************/
/*
DangerousGoodsContainer ::= SEQUENCE {
   dangerousGoodsBasic [0] DangerousGoodsBasic
}
*/
struct EXTERN ASN1T_DangerousGoodsContainer {
   ASN1T_ITS_DangerousGoodsBasic dangerousGoodsBasic;
} ;

EXTERN int asn1PE_DangerousGoodsContainer (OSCTXT* pctxt, ASN1T_DangerousGoodsContainer* pvalue);

EXTERN int asn1PD_DangerousGoodsContainer (OSCTXT* pctxt, ASN1T_DangerousGoodsContainer* pvalue);

EXTERN int XmlEnc_DangerousGoodsContainer (OSCTXT* pctxt, 
   ASN1T_DangerousGoodsContainer* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_DangerousGoodsContainer (OSCTXT* pctxt, 
   ASN1T_DangerousGoodsContainer* pvalue);

EXTERN int asn1JsonEnc_DangerousGoodsContainer (OSCTXT *pctxt, ASN1T_DangerousGoodsContainer *pvalue);

EXTERN int asn1JsonDec_DangerousGoodsContainer (OSCTXT *pctxt, ASN1T_DangerousGoodsContainer *pvalue);

EXTERN int asn1PrtToStrm_DangerousGoodsContainer (OSCTXT *pctxt, 
   const char* name, const ASN1T_DangerousGoodsContainer* pvalue);

EXTERN ASN1T_DangerousGoodsContainer* 
   new_ASN1T_DangerousGoodsContainer (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  RoadWorksContainerBasic                                   */
/*                                                            */
/**************************************************************/
/*
RoadWorksContainerBasic ::= SEQUENCE {
   roadworksSubCauseCode [0] RoadworksSubCauseCode OPTIONAL,
   lightBarSirenInUse [1] LightBarSirenInUse,
   closedLanes [2] ClosedLanes OPTIONAL
}
*/
struct EXTERN ASN1T_RoadWorksContainerBasic {
   struct {
      unsigned roadworksSubCauseCodePresent : 1;
      unsigned closedLanesPresent : 1;
   } m;
   ASN1T_ITS_RoadworksSubCauseCode roadworksSubCauseCode;
   ASN1T_ITS_LightBarSirenInUse lightBarSirenInUse;
   ASN1T_ITS_ClosedLanes closedLanes;
   ASN1T_RoadWorksContainerBasic ();
} ;

EXTERN int asn1PE_RoadWorksContainerBasic (OSCTXT* pctxt, ASN1T_RoadWorksContainerBasic* pvalue);

EXTERN int asn1PD_RoadWorksContainerBasic (OSCTXT* pctxt, ASN1T_RoadWorksContainerBasic* pvalue);

EXTERN int XmlEnc_RoadWorksContainerBasic (OSCTXT* pctxt, 
   ASN1T_RoadWorksContainerBasic* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_RoadWorksContainerBasic (OSCTXT* pctxt, 
   ASN1T_RoadWorksContainerBasic* pvalue);

EXTERN int asn1JsonEnc_RoadWorksContainerBasic (OSCTXT *pctxt, ASN1T_RoadWorksContainerBasic *pvalue);

EXTERN int asn1JsonDec_RoadWorksContainerBasic (OSCTXT *pctxt, ASN1T_RoadWorksContainerBasic *pvalue);

EXTERN int asn1PrtToStrm_RoadWorksContainerBasic (OSCTXT *pctxt, 
   const char* name, const ASN1T_RoadWorksContainerBasic* pvalue);

EXTERN ASN1T_RoadWorksContainerBasic* 
   new_ASN1T_RoadWorksContainerBasic (ASN1CType& ccobj);

EXTERN int asn1Init_RoadWorksContainerBasic (ASN1T_RoadWorksContainerBasic* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_RoadWorksContainerBasic (OSCTXT *pctxt, 
   ASN1T_RoadWorksContainerBasic* pvalue);

/**************************************************************/
/*                                                            */
/*  RescueContainer                                           */
/*                                                            */
/**************************************************************/
/*
RescueContainer ::= SEQUENCE {
   lightBarSirenInUse [0] LightBarSirenInUse
}
*/
struct EXTERN ASN1T_RescueContainer {
   ASN1T_ITS_LightBarSirenInUse lightBarSirenInUse;
} ;

EXTERN int asn1PE_RescueContainer (OSCTXT* pctxt, ASN1T_RescueContainer* pvalue);

EXTERN int asn1PD_RescueContainer (OSCTXT* pctxt, ASN1T_RescueContainer* pvalue);

EXTERN int XmlEnc_RescueContainer (OSCTXT* pctxt, 
   ASN1T_RescueContainer* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_RescueContainer (OSCTXT* pctxt, ASN1T_RescueContainer* pvalue
   );

EXTERN int asn1JsonEnc_RescueContainer (OSCTXT *pctxt, ASN1T_RescueContainer *pvalue);

EXTERN int asn1JsonDec_RescueContainer (OSCTXT *pctxt, ASN1T_RescueContainer *pvalue);

EXTERN int asn1PrtToStrm_RescueContainer (OSCTXT *pctxt, 
   const char* name, const ASN1T_RescueContainer* pvalue);

EXTERN ASN1T_RescueContainer* new_ASN1T_RescueContainer (ASN1CType& ccobj);

EXTERN int asn1Init_RescueContainer (ASN1T_RescueContainer* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

/**************************************************************/
/*                                                            */
/*  EmergencyContainer                                        */
/*                                                            */
/**************************************************************/
/*
EmergencyContainer ::= SEQUENCE {
   lightBarSirenInUse [0] LightBarSirenInUse,
   incidentIndication [1] CauseCode OPTIONAL,
   emergencyPriority [2] EmergencyPriority OPTIONAL
}
*/
struct EXTERN ASN1T_EmergencyContainer {
   struct {
      unsigned incidentIndicationPresent : 1;
      unsigned emergencyPriorityPresent : 1;
   } m;
   ASN1T_ITS_LightBarSirenInUse lightBarSirenInUse;
   ASN1T_ITS_CauseCode incidentIndication;
   ASN1T_ITS_EmergencyPriority emergencyPriority;
   ASN1T_EmergencyContainer ();
} ;

EXTERN int asn1PE_EmergencyContainer (OSCTXT* pctxt, ASN1T_EmergencyContainer* pvalue);

EXTERN int asn1PD_EmergencyContainer (OSCTXT* pctxt, ASN1T_EmergencyContainer* pvalue);

EXTERN int XmlEnc_EmergencyContainer (OSCTXT* pctxt, 
   ASN1T_EmergencyContainer* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_EmergencyContainer (OSCTXT* pctxt, 
   ASN1T_EmergencyContainer* pvalue);

EXTERN int asn1JsonEnc_EmergencyContainer (OSCTXT *pctxt, ASN1T_EmergencyContainer *pvalue);

EXTERN int asn1JsonDec_EmergencyContainer (OSCTXT *pctxt, ASN1T_EmergencyContainer *pvalue);

EXTERN int asn1PrtToStrm_EmergencyContainer (OSCTXT *pctxt, 
   const char* name, const ASN1T_EmergencyContainer* pvalue);

EXTERN ASN1T_EmergencyContainer* 
   new_ASN1T_EmergencyContainer (ASN1CType& ccobj);

EXTERN int asn1Init_EmergencyContainer (ASN1T_EmergencyContainer* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_EmergencyContainer (OSCTXT *pctxt, 
   ASN1T_EmergencyContainer* pvalue);

/**************************************************************/
/*                                                            */
/*  SafetyCarContainer                                        */
/*                                                            */
/**************************************************************/
/*
SafetyCarContainer ::= SEQUENCE {
   lightBarSirenInUse [0] LightBarSirenInUse,
   incidentIndication [1] CauseCode OPTIONAL,
   trafficRule [2] TrafficRule OPTIONAL,
   speedLimit [3] SpeedLimit OPTIONAL
}
*/
struct EXTERN ASN1T_SafetyCarContainer {
   struct {
      unsigned incidentIndicationPresent : 1;
      unsigned trafficRulePresent : 1;
      unsigned speedLimitPresent : 1;
   } m;
   ASN1T_ITS_LightBarSirenInUse lightBarSirenInUse;
   ASN1T_ITS_CauseCode incidentIndication;
   ASN1T_ITS_TrafficRule trafficRule;
   ASN1T_ITS_SpeedLimit speedLimit;
   ASN1T_SafetyCarContainer ();
} ;

EXTERN int asn1PE_SafetyCarContainer (OSCTXT* pctxt, ASN1T_SafetyCarContainer* pvalue);

EXTERN int asn1PD_SafetyCarContainer (OSCTXT* pctxt, ASN1T_SafetyCarContainer* pvalue);

EXTERN int XmlEnc_SafetyCarContainer (OSCTXT* pctxt, 
   ASN1T_SafetyCarContainer* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_SafetyCarContainer (OSCTXT* pctxt, 
   ASN1T_SafetyCarContainer* pvalue);

EXTERN int asn1JsonEnc_SafetyCarContainer (OSCTXT *pctxt, ASN1T_SafetyCarContainer *pvalue);

EXTERN int asn1JsonDec_SafetyCarContainer (OSCTXT *pctxt, ASN1T_SafetyCarContainer *pvalue);

EXTERN int asn1PrtToStrm_SafetyCarContainer (OSCTXT *pctxt, 
   const char* name, const ASN1T_SafetyCarContainer* pvalue);

EXTERN ASN1T_SafetyCarContainer* 
   new_ASN1T_SafetyCarContainer (ASN1CType& ccobj);

EXTERN int asn1Init_SafetyCarContainer (ASN1T_SafetyCarContainer* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_SafetyCarContainer (OSCTXT *pctxt, 
   ASN1T_SafetyCarContainer* pvalue);

/**************************************************************/
/*                                                            */
/*  SpecialVehicleContainer                                   */
/*                                                            */
/**************************************************************/
/*
SpecialVehicleContainer ::= CHOICE {
   publicTransportContainer [0] PublicTransportContainer,
   specialTransportContainer [1] SpecialTransportContainer,
   dangerousGoodsContainer [2] DangerousGoodsContainer,
   roadWorksContainerBasic [3] RoadWorksContainerBasic,
   rescueContainer [4] RescueContainer,
   emergencyContainer [5] EmergencyContainer,
   safetyCarContainer [6] SafetyCarContainer,
   ...
}
*/
/* Choice tag constants */

#define T_SpecialVehicleContainer_publicTransportContainer 1
#define T_SpecialVehicleContainer_specialTransportContainer 2
#define T_SpecialVehicleContainer_dangerousGoodsContainer 3
#define T_SpecialVehicleContainer_roadWorksContainerBasic 4
#define T_SpecialVehicleContainer_rescueContainer 5
#define T_SpecialVehicleContainer_emergencyContainer 6
#define T_SpecialVehicleContainer_safetyCarContainer 7
#define T_SpecialVehicleContainer_extElem1 8

struct EXTERN ASN1T_SpecialVehicleContainer {
   OSINT32 t;
   union {
      /* t = 1 */
      ASN1T_PublicTransportContainer *publicTransportContainer;
      /* t = 2 */
      ASN1T_SpecialTransportContainer *specialTransportContainer;
      /* t = 3 */
      ASN1T_DangerousGoodsContainer *dangerousGoodsContainer;
      /* t = 4 */
      ASN1T_RoadWorksContainerBasic *roadWorksContainerBasic;
      /* t = 5 */
      ASN1T_RescueContainer *rescueContainer;
      /* t = 6 */
      ASN1T_EmergencyContainer *emergencyContainer;
      /* t = 7 */
      ASN1T_SafetyCarContainer *safetyCarContainer;
      /* t = 8 */
      ASN1TOpenType *extElem1;
   } u;
   ASN1T_SpecialVehicleContainer () { t = 0; OSCRTLMEMSET (&u, 0, sizeof(u)); }
} ;

EXTERN int asn1PE_SpecialVehicleContainer (OSCTXT* pctxt, ASN1T_SpecialVehicleContainer* pvalue);

EXTERN int asn1PD_SpecialVehicleContainer (OSCTXT* pctxt, ASN1T_SpecialVehicleContainer* pvalue);

EXTERN int XmlEnc_SpecialVehicleContainer (OSCTXT* pctxt, 
   ASN1T_SpecialVehicleContainer* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_SpecialVehicleContainer (OSCTXT* pctxt, 
   ASN1T_SpecialVehicleContainer* pvalue);

EXTERN int asn1JsonEnc_SpecialVehicleContainer (OSCTXT *pctxt, ASN1T_SpecialVehicleContainer *pvalue);

EXTERN int asn1JsonDec_SpecialVehicleContainer (OSCTXT *pctxt, ASN1T_SpecialVehicleContainer *pvalue);

EXTERN int asn1PrtToStrm_SpecialVehicleContainer (OSCTXT *pctxt, 
   const char* name, const ASN1T_SpecialVehicleContainer* pvalue);

EXTERN ASN1T_SpecialVehicleContainer* 
   new_ASN1T_SpecialVehicleContainer (ASN1CType& ccobj);

EXTERN int asn1Init_SpecialVehicleContainer (ASN1T_SpecialVehicleContainer* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_SpecialVehicleContainer (OSCTXT *pctxt, 
   ASN1T_SpecialVehicleContainer* pvalue);

/**************************************************************/
/*                                                            */
/*  CamParameters                                             */
/*                                                            */
/**************************************************************/
/*
CamParameters ::= SEQUENCE {
   basicContainer [0] BasicContainer,
   highFrequencyContainer [1] EXPLICIT HighFrequencyContainer,
   lowFrequencyContainer [2] EXPLICIT LowFrequencyContainer OPTIONAL,
   specialVehicleContainer [3] EXPLICIT SpecialVehicleContainer OPTIONAL,
   ...
}
*/
struct EXTERN ASN1T_CamParameters {
   struct {
      unsigned lowFrequencyContainerPresent : 1;
      unsigned specialVehicleContainerPresent : 1;
   } m;
   ASN1T_BasicContainer basicContainer;
   ASN1T_HighFrequencyContainer highFrequencyContainer;
   ASN1T_LowFrequencyContainer lowFrequencyContainer;
   ASN1T_SpecialVehicleContainer specialVehicleContainer;
   ASN1TSeqExt extElem1;
   ASN1T_CamParameters ();
} ;

EXTERN int asn1PE_CamParameters (OSCTXT* pctxt, ASN1T_CamParameters* pvalue);

EXTERN int asn1PD_CamParameters (OSCTXT* pctxt, ASN1T_CamParameters* pvalue);

EXTERN int XmlEnc_CamParameters (OSCTXT* pctxt, ASN1T_CamParameters* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_CamParameters (OSCTXT* pctxt, ASN1T_CamParameters* pvalue);

EXTERN int asn1JsonEnc_CamParameters (OSCTXT *pctxt, ASN1T_CamParameters *pvalue);

EXTERN int asn1JsonDec_CamParameters (OSCTXT *pctxt, ASN1T_CamParameters *pvalue);

EXTERN int asn1PrtToStrm_CamParameters (OSCTXT *pctxt, 
   const char* name, const ASN1T_CamParameters* pvalue);

EXTERN ASN1T_CamParameters* new_ASN1T_CamParameters (ASN1CType& ccobj);

EXTERN int asn1Init_CamParameters (ASN1T_CamParameters* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_CamParameters (OSCTXT *pctxt, ASN1T_CamParameters* pvalue);

/**************************************************************/
/*                                                            */
/*  CoopAwareness                                             */
/*                                                            */
/**************************************************************/
/*
CoopAwareness ::= SEQUENCE {
   generationDeltaTime [0] GenerationDeltaTime,
   camParameters [1] CamParameters
}
*/
struct EXTERN ASN1T_CoopAwareness {
   ASN1T_GenerationDeltaTime generationDeltaTime;
   ASN1T_CamParameters camParameters;
} ;

EXTERN int asn1PE_CoopAwareness (OSCTXT* pctxt, ASN1T_CoopAwareness* pvalue);

EXTERN int asn1PD_CoopAwareness (OSCTXT* pctxt, ASN1T_CoopAwareness* pvalue);

EXTERN int XmlEnc_CoopAwareness (OSCTXT* pctxt, ASN1T_CoopAwareness* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_CoopAwareness (OSCTXT* pctxt, ASN1T_CoopAwareness* pvalue);

EXTERN int asn1JsonEnc_CoopAwareness (OSCTXT *pctxt, ASN1T_CoopAwareness *pvalue);

EXTERN int asn1JsonDec_CoopAwareness (OSCTXT *pctxt, ASN1T_CoopAwareness *pvalue);

EXTERN int asn1PrtToStrm_CoopAwareness (OSCTXT *pctxt, 
   const char* name, const ASN1T_CoopAwareness* pvalue);

EXTERN ASN1T_CoopAwareness* new_ASN1T_CoopAwareness (ASN1CType& ccobj);

EXTERN int asn1Init_CoopAwareness (ASN1T_CoopAwareness* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_CoopAwareness (OSCTXT *pctxt, ASN1T_CoopAwareness* pvalue);

/**************************************************************/
/*                                                            */
/*  CAM                                                       */
/*                                                            */
/**************************************************************/
/*
	The root data frame for cooperative awareness messages
CAM ::= SEQUENCE {
   header [0] ItsPduHeader,
   cam [1] CoopAwareness
}
*/
struct EXTERN ASN1T_CAM : public ASN1TPDU {
   ASN1T_ITS_ItsPduHeader header;
   ASN1T_CoopAwareness cam;
   ASN1T_CAM ();
   ~ASN1T_CAM ();
} ;

class EXTERN ASN1C_CAM :
public ASN1CType
{
protected:
   ASN1T_CAM& msgData;
public:
   /**
    * Control class: ASN1C_CAM
    * Data class:    ASN1T_CAM
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_CAM (ASN1T_CAM& data);

   /**
    * Control class: ASN1C_CAM<br/>
    * Data class: ASN1T_CAM<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_CAM (OSRTMessageBufferIF& msgBuf, ASN1T_CAM& data);

   virtual ~ASN1C_CAM () {}

   /**
    * Data class: ASN1T_CAM<br/>
    *
    * Gets a mutable instance of the data class.
    *
    * @return Reference to a mutable instance of data class ASN1T_CAM.
    */
   inline ASN1T_CAM& getData () { return msgData; }

   /**
    * Data class: ASN1T_CAM<br/>
    * Gets a non-mutable instance of the data class.
    *
    * @return Reference to a non-mutable instance of data class ASN1T_CAM.
    */
   inline const ASN1T_CAM& getData () const { return msgData; }

   // standard encode/decode methods (defined in ASN1CType base class):
   // int Encode ();
   // int Decode ();

   // stream encode/decode methods:
   /**
    * Encodes into a specified encode buffer.
    *
    * @param msgBuf Reference to an encode buffer.
    * @return A status value (0 indicates success).
    */
   int EncodeTo (OSRTMessageBufferIF& msgBuf);

   /**
    * Decodes from a specified decode buffer.
    *
    * @param msgBuf Reference to a decode buffer.
    * @return A status value (0 indicates success).
    */
   int DecodeFrom (OSRTMessageBufferIF& msgBuf, OSBOOL free = FALSE);

   /**
    * Frees the memory associated with the instance.
    */
   virtual void MemFree ();

   /**
    * Writes the contents of the object to a user-defined stream using
    * a user-defined print callback function.  See the documentation for
    * the setPrintStream() method.
    *
    * @param name A name for the object's contents.  If not specified,
    *             CAM will be used for the name.
    * @return Always returns 0.
    */
   int toStream (const char* name = "CAM");
   /**
    * Declares a print stream handler function.
    *
    * @param strmCallback Pointer to a function defined according to the
    *                     rtxPrintCallback signature.
    * @return A status value (0 indicates success).
    */
   int setPrintStream (rtxPrintCallback strmCallback, void* pStrmInfo);
private:
   ASN1C_CAM& operator= (const ASN1C_CAM&) {return *this;}
} ;

EXTERN int asn1PE_CAM (OSCTXT* pctxt, ASN1T_CAM* pvalue);

EXTERN int asn1PD_CAM (OSCTXT* pctxt, ASN1T_CAM* pvalue);

EXTERN int XmlEnc_CAM (OSCTXT* pctxt, ASN1T_CAM* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_CAM (OSCTXT* pctxt, ASN1T_CAM* pvalue);

EXTERN int asn1JsonEnc_CAM (OSCTXT *pctxt, ASN1T_CAM *pvalue);

EXTERN int asn1JsonDec_CAM (OSCTXT *pctxt, ASN1T_CAM *pvalue);

EXTERN int asn1PrtToStrm_CAM (OSCTXT *pctxt, 
   const char* name, const ASN1T_CAM* pvalue);

EXTERN ASN1T_CAM* new_ASN1T_CAM (ASN1CType& ccobj);

EXTERN int asn1Init_CAM (ASN1T_CAM* pvalue, OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_CAM (OSCTXT *pctxt, ASN1T_CAM* pvalue);

/**
 * Global element functions.  These functions encode or decode complete
 * XML documents.  They are generated for XSD global elements and/or
 * ASN.1 type definitions that are either:
 *
 * 1) not referenced by any other types, or
 * 2) explicitly declared to be a PDU using the -pdu command line
 *    option, or
 * 3) explicitly declared to be a PDU using the <isPDU/> 
 *    configuration file element.
 */
#endif
