/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).
 */
#ifndef EFCDSRCAPPLICATION_H
#define EFCDSRCAPPLICATION_H

#include <stdio.h>
#include <stdlib.h>
#include "rtpersrc/asn1PerCppTypes.h"
#include "rtsrc/asn1CppTypes.h"
#include "rtsrc/rtPrintToStream.h"
#include "rtsrc/asn1type.h"
#include "rtxmlsrc/asn1xml.h"
#include "rtxmlsrc/rtXmlCppMsgBuf.h"
#include "rtsrc/asn1type.h"
#include "rtjsonsrc/asn1json.h"
#include "rtjsonsrc/rtJsonCppMsgBuf.h"

#include "AVIAEINumberingAndDataStructures.h"
#include "EfcDsrcGeneric.h"

/**
 * Header file for ASN.1 module EfcDsrcApplication
 */
/**************************************************************/
/*                                                            */
/*  Provider                                                  */
/*                                                            */
/**************************************************************/
/*
Provider ::= SEQUENCE {
   countryCode [0] CountryCode,
   providerIdentifier [1] IssuerIdentifier
}
*/
struct EXTERN ASN1T_Provider {
   ASN1T_CountryCode countryCode;
   ASN1T_IssuerIdentifier providerIdentifier;
} ;

EXTERN int asn1PE_Provider (OSCTXT* pctxt, ASN1T_Provider* pvalue);

EXTERN int asn1PD_Provider (OSCTXT* pctxt, ASN1T_Provider* pvalue);

EXTERN int XmlEnc_Provider (OSCTXT* pctxt, ASN1T_Provider* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Provider (OSCTXT* pctxt, ASN1T_Provider* pvalue);

EXTERN int asn1JsonEnc_Provider (OSCTXT *pctxt, ASN1T_Provider *pvalue);

EXTERN int asn1JsonDec_Provider (OSCTXT *pctxt, ASN1T_Provider *pvalue);

EXTERN int asn1PrtToStrm_Provider (OSCTXT *pctxt, 
   const char* name, const ASN1T_Provider* pvalue);

EXTERN ASN1T_Provider* new_ASN1T_Provider (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  EuroValue                                                 */
/*                                                            */
/**************************************************************/
/*
EuroValue ::= ENUMERATED { noEntry(0), euro-1(1), euro-2(2), euro-3(3), euro-4(4), euro-5(5), euro-6(6), reservedForUse1(7), reservedForUse2(8), reservedForUse3(9), reservedForUse4(10), reservedForUse5(11), reservedForUse6(12), reservedForUse7(13), reservedForUse8(14), eev(15) }
   4 bits, EURO-Clases as defined in EC directive 88/77/EEC, annex 1

*/
struct EXTERN EuroValue {
   enum Root {
      noEntry = 0,
      euro_1 = 1,
      euro_2 = 2,
      euro_3 = 3,
      euro_4 = 4,
      euro_5 = 5,
      euro_6 = 6,
      reservedForUse1 = 7,
      reservedForUse2 = 8,
      reservedForUse3 = 9,
      reservedForUse4 = 10,
      reservedForUse5 = 11,
      reservedForUse6 = 12,
      reservedForUse7 = 13,
      reservedForUse8 = 14,
      eev = 15
   } ;
} ;

typedef OSUINT32 ASN1T_EuroValue;

EXTERN int asn1PE_EuroValue (OSCTXT* pctxt, ASN1T_EuroValue value);

EXTERN int asn1PD_EuroValue (OSCTXT* pctxt, ASN1T_EuroValue* pvalue);

EXTERN int XmlEnc_EuroValue (OSCTXT* pctxt, ASN1T_EuroValue value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_EuroValue (OSCTXT* pctxt, ASN1T_EuroValue* pvalue);

EXTERN int asn1JsonEnc_EuroValue (OSCTXT *pctxt, ASN1T_EuroValue *pvalue);

EXTERN int asn1JsonDec_EuroValue (OSCTXT *pctxt, ASN1T_EuroValue *pvalue);

EXTERN int asn1PrtToStrm_EuroValue (OSCTXT *pctxt, 
   const char* name, const ASN1T_EuroValue* pvalue);

EXTERN ASN1T_EuroValue* new_ASN1T_EuroValue (ASN1CType& ccobj);

EXTERN extern const OSEnumItem ASN1T_EuroValue_ENUMTAB[];
#define ASN1T_EuroValue_ENUMTABSIZE 16

EXTERN const OSUTF8CHAR* ASN1T_EuroValue_ToString (OSINT32 value);

EXTERN int ASN1T_EuroValue_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, ASN1T_EuroValue* pvalue);

EXTERN int ASN1T_EuroValue_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, ASN1T_EuroValue* pvalue);

/**************************************************************/
/*                                                            */
/*  CopValue                                                  */
/*                                                            */
/**************************************************************/
/*
 and in 91/542/EEC, 96/1/EC, 1999/96/EC, 2001/27/EC, regulation No 595/2009
 and for EEV in Section 6.2.1 of Annex I in EC directive 2005/55/EC
CopValue ::= ENUMERATED { noEntry(0), co2class1(1), co2class2(2), co2class3(3), co2class4(4), co2class5(5), co2class6(6), co2class7(7), reservedforUse(8) }
   4 bits, reserved for carbon dioxide pollution values as defined in

*/
struct EXTERN CopValue {
   enum Root {
      noEntry = 0,
      co2class1 = 1,
      co2class2 = 2,
      co2class3 = 3,
      co2class4 = 4,
      co2class5 = 5,
      co2class6 = 6,
      co2class7 = 7,
      reservedforUse = 8
   } ;
} ;

typedef OSUINT32 ASN1T_CopValue;

EXTERN int asn1PE_CopValue (OSCTXT* pctxt, ASN1T_CopValue value);

EXTERN int asn1PD_CopValue (OSCTXT* pctxt, ASN1T_CopValue* pvalue);

EXTERN int XmlEnc_CopValue (OSCTXT* pctxt, ASN1T_CopValue value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_CopValue (OSCTXT* pctxt, ASN1T_CopValue* pvalue);

EXTERN int asn1JsonEnc_CopValue (OSCTXT *pctxt, ASN1T_CopValue *pvalue);

EXTERN int asn1JsonDec_CopValue (OSCTXT *pctxt, ASN1T_CopValue *pvalue);

EXTERN int asn1PrtToStrm_CopValue (OSCTXT *pctxt, 
   const char* name, const ASN1T_CopValue* pvalue);

EXTERN ASN1T_CopValue* new_ASN1T_CopValue (ASN1CType& ccobj);

EXTERN extern const OSEnumItem ASN1T_CopValue_ENUMTAB[];
#define ASN1T_CopValue_ENUMTABSIZE 9

EXTERN const OSUTF8CHAR* ASN1T_CopValue_ToString (OSINT32 value);

EXTERN int ASN1T_CopValue_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, ASN1T_CopValue* pvalue);

EXTERN int ASN1T_CopValue_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, ASN1T_CopValue* pvalue);

/**************************************************************/
/*                                                            */
/*  EnvironmentalCharacteristics                              */
/*                                                            */
/**************************************************************/
/*
EnvironmentalCharacteristics ::= SEQUENCE {
   euroValue [0] EuroValue,
   copValue [1] CopValue
}
*/
struct EXTERN ASN1T_EnvironmentalCharacteristics {
   ASN1T_EuroValue euroValue;
   ASN1T_CopValue copValue;
} ;

EXTERN int asn1PE_EnvironmentalCharacteristics (OSCTXT* pctxt, ASN1T_EnvironmentalCharacteristics* pvalue);

EXTERN int asn1PD_EnvironmentalCharacteristics (OSCTXT* pctxt, ASN1T_EnvironmentalCharacteristics* pvalue);

EXTERN int XmlEnc_EnvironmentalCharacteristics (OSCTXT* pctxt, 
   ASN1T_EnvironmentalCharacteristics* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_EnvironmentalCharacteristics (OSCTXT* pctxt, 
   ASN1T_EnvironmentalCharacteristics* pvalue);

EXTERN int asn1JsonEnc_EnvironmentalCharacteristics (OSCTXT *pctxt, ASN1T_EnvironmentalCharacteristics *pvalue);

EXTERN int asn1JsonDec_EnvironmentalCharacteristics (OSCTXT *pctxt, ASN1T_EnvironmentalCharacteristics *pvalue);

EXTERN int asn1PrtToStrm_EnvironmentalCharacteristics (OSCTXT *pctxt, 
   const char* name, const ASN1T_EnvironmentalCharacteristics* pvalue);

EXTERN ASN1T_EnvironmentalCharacteristics* 
   new_ASN1T_EnvironmentalCharacteristics (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  EngineCharacteristics                                     */
/*                                                            */
/**************************************************************/
/*
 EC directive 2003/127/EC'
EngineCharacteristics ::= INTEGER { noEntry(0), noEngine(1), petrolUnleaded(2), petrolLeaded(3), diesel(4), lPG(5), battery(6), solar(7), hybrid(8), hydrogen(9) } (0..255)
*/
struct EXTERN EngineCharacteristics {
   enum Root {
      noEntry = 0,
      noEngine = 1,
      petrolUnleaded = 2,
      petrolLeaded = 3,
      diesel = 4,
      lPG = 5,
      battery = 6,
      solar = 7,
      hybrid = 8,
      hydrogen = 9
   } ;
} ;

typedef OSUINT8 ASN1T_EngineCharacteristics;

EXTERN int asn1PE_EngineCharacteristics (OSCTXT* pctxt, ASN1T_EngineCharacteristics value);

EXTERN int asn1PD_EngineCharacteristics (OSCTXT* pctxt, ASN1T_EngineCharacteristics* pvalue);

EXTERN int XmlEnc_EngineCharacteristics (OSCTXT* pctxt, 
   ASN1T_EngineCharacteristics value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_EngineCharacteristics (OSCTXT* pctxt, 
   ASN1T_EngineCharacteristics* pvalue);

EXTERN int asn1JsonEnc_EngineCharacteristics (OSCTXT *pctxt, ASN1T_EngineCharacteristics *pvalue);

EXTERN int asn1JsonDec_EngineCharacteristics (OSCTXT *pctxt, ASN1T_EngineCharacteristics *pvalue);

EXTERN int asn1PrtToStrm_EngineCharacteristics (OSCTXT *pctxt, 
   const char* name, const ASN1T_EngineCharacteristics* pvalue);

EXTERN ASN1T_EngineCharacteristics* 
   new_ASN1T_EngineCharacteristics (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  Int1                                                      */
/*                                                            */
/**************************************************************/
/*
Int1 ::= INTEGER (0..255)
*/
typedef OSUINT8 ASN1T_Int1;

EXTERN int asn1PE_Int1 (OSCTXT* pctxt, ASN1T_Int1 value);

EXTERN int asn1PD_Int1 (OSCTXT* pctxt, ASN1T_Int1* pvalue);

EXTERN int XmlEnc_Int1 (OSCTXT* pctxt, ASN1T_Int1 value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Int1 (OSCTXT* pctxt, ASN1T_Int1* pvalue);

EXTERN int asn1JsonEnc_Int1 (OSCTXT *pctxt, ASN1T_Int1 *pvalue);

EXTERN int asn1JsonDec_Int1 (OSCTXT *pctxt, ASN1T_Int1 *pvalue);

EXTERN int asn1PrtToStrm_Int1 (OSCTXT *pctxt, 
   const char* name, const ASN1T_Int1* pvalue);

EXTERN ASN1T_Int1* new_ASN1T_Int1 (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  VehicleDimensions                                         */
/*                                                            */
/**************************************************************/
/*
VehicleDimensions ::= SEQUENCE {
   vehicleLengthOverall [0] Int1,
   vehicleHeigthOverall [1] Int1,
   vehicleWidthOverall [2] Int1
}
*/
struct EXTERN ASN1T_VehicleDimensions {
   ASN1T_Int1 vehicleLengthOverall;
   ASN1T_Int1 vehicleHeigthOverall;
   ASN1T_Int1 vehicleWidthOverall;
} ;

EXTERN int asn1PE_VehicleDimensions (OSCTXT* pctxt, ASN1T_VehicleDimensions* pvalue);

EXTERN int asn1PD_VehicleDimensions (OSCTXT* pctxt, ASN1T_VehicleDimensions* pvalue);

EXTERN int XmlEnc_VehicleDimensions (OSCTXT* pctxt, 
   ASN1T_VehicleDimensions* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_VehicleDimensions (OSCTXT* pctxt, 
   ASN1T_VehicleDimensions* pvalue);

EXTERN int asn1JsonEnc_VehicleDimensions (OSCTXT *pctxt, ASN1T_VehicleDimensions *pvalue);

EXTERN int asn1JsonDec_VehicleDimensions (OSCTXT *pctxt, ASN1T_VehicleDimensions *pvalue);

EXTERN int asn1PrtToStrm_VehicleDimensions (OSCTXT *pctxt, 
   const char* name, const ASN1T_VehicleDimensions* pvalue);

EXTERN ASN1T_VehicleDimensions* new_ASN1T_VehicleDimensions (ASN1CType& ccobj)
   ;

/**************************************************************/
/*                                                            */
/*  Int2                                                      */
/*                                                            */
/**************************************************************/
/*
Int2 ::= INTEGER (0..65535)
*/
typedef OSUINT16 ASN1T_Int2;

EXTERN int asn1PE_Int2 (OSCTXT* pctxt, ASN1T_Int2 value);

EXTERN int asn1PD_Int2 (OSCTXT* pctxt, ASN1T_Int2* pvalue);

EXTERN int XmlEnc_Int2 (OSCTXT* pctxt, ASN1T_Int2 value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Int2 (OSCTXT* pctxt, ASN1T_Int2* pvalue);

EXTERN int asn1JsonEnc_Int2 (OSCTXT *pctxt, ASN1T_Int2 *pvalue);

EXTERN int asn1JsonDec_Int2 (OSCTXT *pctxt, ASN1T_Int2 *pvalue);

EXTERN int asn1PrtToStrm_Int2 (OSCTXT *pctxt, 
   const char* name, const ASN1T_Int2* pvalue);

EXTERN ASN1T_Int2* new_ASN1T_Int2 (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  VehicleWeightLimits                                       */
/*                                                            */
/**************************************************************/
/*
VehicleWeightLimits ::= SEQUENCE {
   vehicleMaxLadenWeight [0] Int2,
   vehicleTrainMaximumWeight [1] Int2,
   vehicleWeightUnladen [2] Int2
}
*/
struct EXTERN ASN1T_VehicleWeightLimits {
   ASN1T_Int2 vehicleMaxLadenWeight;
   ASN1T_Int2 vehicleTrainMaximumWeight;
   ASN1T_Int2 vehicleWeightUnladen;
} ;

EXTERN int asn1PE_VehicleWeightLimits (OSCTXT* pctxt, ASN1T_VehicleWeightLimits* pvalue);

EXTERN int asn1PD_VehicleWeightLimits (OSCTXT* pctxt, ASN1T_VehicleWeightLimits* pvalue);

EXTERN int XmlEnc_VehicleWeightLimits (OSCTXT* pctxt, 
   ASN1T_VehicleWeightLimits* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_VehicleWeightLimits (OSCTXT* pctxt, 
   ASN1T_VehicleWeightLimits* pvalue);

EXTERN int asn1JsonEnc_VehicleWeightLimits (OSCTXT *pctxt, ASN1T_VehicleWeightLimits *pvalue);

EXTERN int asn1JsonDec_VehicleWeightLimits (OSCTXT *pctxt, ASN1T_VehicleWeightLimits *pvalue);

EXTERN int asn1PrtToStrm_VehicleWeightLimits (OSCTXT *pctxt, 
   const char* name, const ASN1T_VehicleWeightLimits* pvalue);

EXTERN ASN1T_VehicleWeightLimits* 
   new_ASN1T_VehicleWeightLimits (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  AxleWeightLimits                                          */
/*                                                            */
/**************************************************************/
/*
 NOTE: The following are the definitions of the action and response
 parameters
AxleWeightLimits ::= SEQUENCE {
   maxLadenweightOnAxle1 [0] Int2,
   maxLadenweightOnAxle2 [1] Int2,
   maxLadenweightOnAxle3 [2] Int2,
   maxLadenweightOnAxle4 [3] Int2,
   maxLadenweightOnAxle5 [4] Int2
}
*/
struct EXTERN ASN1T_AxleWeightLimits {
   ASN1T_Int2 maxLadenweightOnAxle1;
   ASN1T_Int2 maxLadenweightOnAxle2;
   ASN1T_Int2 maxLadenweightOnAxle3;
   ASN1T_Int2 maxLadenweightOnAxle4;
   ASN1T_Int2 maxLadenweightOnAxle5;
} ;

EXTERN int asn1PE_AxleWeightLimits (OSCTXT* pctxt, ASN1T_AxleWeightLimits* pvalue);

EXTERN int asn1PD_AxleWeightLimits (OSCTXT* pctxt, ASN1T_AxleWeightLimits* pvalue);

EXTERN int XmlEnc_AxleWeightLimits (OSCTXT* pctxt, 
   ASN1T_AxleWeightLimits* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_AxleWeightLimits (OSCTXT* pctxt, 
   ASN1T_AxleWeightLimits* pvalue);

EXTERN int asn1JsonEnc_AxleWeightLimits (OSCTXT *pctxt, ASN1T_AxleWeightLimits *pvalue);

EXTERN int asn1JsonDec_AxleWeightLimits (OSCTXT *pctxt, ASN1T_AxleWeightLimits *pvalue);

EXTERN int asn1PrtToStrm_AxleWeightLimits (OSCTXT *pctxt, 
   const char* name, const ASN1T_AxleWeightLimits* pvalue);

EXTERN ASN1T_AxleWeightLimits* new_ASN1T_AxleWeightLimits (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  PassengerCapacity                                         */
/*                                                            */
/**************************************************************/
/*
PassengerCapacity ::= SEQUENCE {
   numberOfSeats [0] Int1,
   numberOfStandingPlaces [1] Int1
}
*/
struct EXTERN ASN1T_PassengerCapacity {
   ASN1T_Int1 numberOfSeats;
   ASN1T_Int1 numberOfStandingPlaces;
} ;

EXTERN int asn1PE_PassengerCapacity (OSCTXT* pctxt, ASN1T_PassengerCapacity* pvalue);

EXTERN int asn1PD_PassengerCapacity (OSCTXT* pctxt, ASN1T_PassengerCapacity* pvalue);

EXTERN int XmlEnc_PassengerCapacity (OSCTXT* pctxt, 
   ASN1T_PassengerCapacity* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_PassengerCapacity (OSCTXT* pctxt, 
   ASN1T_PassengerCapacity* pvalue);

EXTERN int asn1JsonEnc_PassengerCapacity (OSCTXT *pctxt, ASN1T_PassengerCapacity *pvalue);

EXTERN int asn1JsonDec_PassengerCapacity (OSCTXT *pctxt, ASN1T_PassengerCapacity *pvalue);

EXTERN int asn1PrtToStrm_PassengerCapacity (OSCTXT *pctxt, 
   const char* name, const ASN1T_PassengerCapacity* pvalue);

EXTERN ASN1T_PassengerCapacity* new_ASN1T_PassengerCapacity (ASN1CType& ccobj)
   ;

/**************************************************************/
/*                                                            */
/*  UnitType                                                  */
/*                                                            */
/**************************************************************/
/*
UnitType ::= ENUMERATED { mg-km(0), mg-kWh(1) }
*/
struct EXTERN UnitType {
   enum Root {
      mg_km = 0,
      mg_kWh = 1
   } ;
} ;

typedef OSUINT32 ASN1T_UnitType;

EXTERN int asn1PE_UnitType (OSCTXT* pctxt, ASN1T_UnitType value);

EXTERN int asn1PD_UnitType (OSCTXT* pctxt, ASN1T_UnitType* pvalue);

EXTERN int XmlEnc_UnitType (OSCTXT* pctxt, ASN1T_UnitType value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_UnitType (OSCTXT* pctxt, ASN1T_UnitType* pvalue);

EXTERN int asn1JsonEnc_UnitType (OSCTXT *pctxt, ASN1T_UnitType *pvalue);

EXTERN int asn1JsonDec_UnitType (OSCTXT *pctxt, ASN1T_UnitType *pvalue);

EXTERN int asn1PrtToStrm_UnitType (OSCTXT *pctxt, 
   const char* name, const ASN1T_UnitType* pvalue);

EXTERN ASN1T_UnitType* new_ASN1T_UnitType (ASN1CType& ccobj);

EXTERN extern const OSEnumItem ASN1T_UnitType_ENUMTAB[];
#define ASN1T_UnitType_ENUMTABSIZE 2

EXTERN const OSUTF8CHAR* ASN1T_UnitType_ToString (OSINT32 value);

EXTERN int ASN1T_UnitType_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, ASN1T_UnitType* pvalue);

EXTERN int ASN1T_UnitType_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, ASN1T_UnitType* pvalue);

/**************************************************************/
/*                                                            */
/*  ExhaustEmissionValues                                     */
/*                                                            */
/**************************************************************/
/*
ExhaustEmissionValues ::= SEQUENCE {
   unitType [0] UnitType,
   emissionCO [1] INTEGER (0..32767),
   emissionHC [2] Int2,
   emissionNOX [3] Int2,
   emissionHCNOX [4] Int2
}
*/
struct EXTERN ASN1T_ExhaustEmissionValues {
   ASN1T_UnitType unitType;
   OSUINT16 emissionCO;
   ASN1T_Int2 emissionHC;
   ASN1T_Int2 emissionNOX;
   ASN1T_Int2 emissionHCNOX;
} ;

EXTERN int asn1PE_ExhaustEmissionValues (OSCTXT* pctxt, ASN1T_ExhaustEmissionValues* pvalue);

EXTERN int asn1PD_ExhaustEmissionValues (OSCTXT* pctxt, ASN1T_ExhaustEmissionValues* pvalue);

EXTERN int XmlEnc_ExhaustEmissionValues (OSCTXT* pctxt, 
   ASN1T_ExhaustEmissionValues* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ExhaustEmissionValues (OSCTXT* pctxt, 
   ASN1T_ExhaustEmissionValues* pvalue);

EXTERN int asn1JsonEnc_ExhaustEmissionValues (OSCTXT *pctxt, ASN1T_ExhaustEmissionValues *pvalue);

EXTERN int asn1JsonDec_ExhaustEmissionValues (OSCTXT *pctxt, ASN1T_ExhaustEmissionValues *pvalue);

EXTERN int asn1PrtToStrm_ExhaustEmissionValues (OSCTXT *pctxt, 
   const char* name, const ASN1T_ExhaustEmissionValues* pvalue);

EXTERN ASN1T_ExhaustEmissionValues* 
   new_ASN1T_ExhaustEmissionValues (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  DieselEmissionValues_particulate                          */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'DieselEmissionValues'
*/
struct EXTERN ASN1T_DieselEmissionValues_particulate {
   ASN1T_UnitType unitType;
   OSUINT16 value;
} ;

EXTERN int asn1PE_DieselEmissionValues_particulate (OSCTXT* pctxt, ASN1T_DieselEmissionValues_particulate* pvalue);

EXTERN int asn1PD_DieselEmissionValues_particulate (OSCTXT* pctxt, ASN1T_DieselEmissionValues_particulate* pvalue);

EXTERN int XmlEnc_DieselEmissionValues_particulate (OSCTXT* pctxt, 
   ASN1T_DieselEmissionValues_particulate* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_DieselEmissionValues_particulate (OSCTXT* pctxt, 
   ASN1T_DieselEmissionValues_particulate* pvalue);

EXTERN int asn1JsonEnc_DieselEmissionValues_particulate (OSCTXT *pctxt, ASN1T_DieselEmissionValues_particulate *pvalue);

EXTERN int asn1JsonDec_DieselEmissionValues_particulate (OSCTXT *pctxt, ASN1T_DieselEmissionValues_particulate *pvalue);

EXTERN int asn1PrtToStrm_DieselEmissionValues_particulate (OSCTXT *pctxt, 
   const char* name, const ASN1T_DieselEmissionValues_particulate* pvalue);

EXTERN ASN1T_DieselEmissionValues_particulate* 
   new_ASN1T_DieselEmissionValues_particulate (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  DieselEmissionValues                                      */
/*                                                            */
/**************************************************************/
/*
DieselEmissionValues ::= SEQUENCE {
   particulate [0] SEQUENCE {
      unitType [0] UnitType,
      value [1] INTEGER (0..32767)
   },
   absorptionCoeff [1] Int2
}
*/
struct EXTERN ASN1T_DieselEmissionValues {
   ASN1T_DieselEmissionValues_particulate particulate;
   ASN1T_Int2 absorptionCoeff;
} ;

EXTERN int asn1PE_DieselEmissionValues (OSCTXT* pctxt, ASN1T_DieselEmissionValues* pvalue);

EXTERN int asn1PD_DieselEmissionValues (OSCTXT* pctxt, ASN1T_DieselEmissionValues* pvalue);

EXTERN int XmlEnc_DieselEmissionValues (OSCTXT* pctxt, 
   ASN1T_DieselEmissionValues* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_DieselEmissionValues (OSCTXT* pctxt, 
   ASN1T_DieselEmissionValues* pvalue);

EXTERN int asn1JsonEnc_DieselEmissionValues (OSCTXT *pctxt, ASN1T_DieselEmissionValues *pvalue);

EXTERN int asn1JsonDec_DieselEmissionValues (OSCTXT *pctxt, ASN1T_DieselEmissionValues *pvalue);

EXTERN int asn1PrtToStrm_DieselEmissionValues (OSCTXT *pctxt, 
   const char* name, const ASN1T_DieselEmissionValues* pvalue);

EXTERN ASN1T_DieselEmissionValues* 
   new_ASN1T_DieselEmissionValues (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  SoundLevel                                                */
/*                                                            */
/**************************************************************/
/*
SoundLevel ::= SEQUENCE {
   soundstationary [0] Int1,
   sounddriveby [1] Int1
}
*/
struct EXTERN ASN1T_SoundLevel {
   ASN1T_Int1 soundstationary;
   ASN1T_Int1 sounddriveby;
} ;

EXTERN int asn1PE_SoundLevel (OSCTXT* pctxt, ASN1T_SoundLevel* pvalue);

EXTERN int asn1PD_SoundLevel (OSCTXT* pctxt, ASN1T_SoundLevel* pvalue);

EXTERN int XmlEnc_SoundLevel (OSCTXT* pctxt, ASN1T_SoundLevel* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_SoundLevel (OSCTXT* pctxt, ASN1T_SoundLevel* pvalue);

EXTERN int asn1JsonEnc_SoundLevel (OSCTXT *pctxt, ASN1T_SoundLevel *pvalue);

EXTERN int asn1JsonDec_SoundLevel (OSCTXT *pctxt, ASN1T_SoundLevel *pvalue);

EXTERN int asn1PrtToStrm_SoundLevel (OSCTXT *pctxt, 
   const char* name, const ASN1T_SoundLevel* pvalue);

EXTERN ASN1T_SoundLevel* new_ASN1T_SoundLevel (ASN1CType& ccobj);

#endif
