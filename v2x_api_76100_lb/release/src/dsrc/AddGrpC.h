/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).
 */
#ifndef ADDGRPC_H
#define ADDGRPC_H

#include <stdio.h>
#include <stdlib.h>
#include "rtpersrc/asn1PerCppTypes.h"
#include "rtsrc/asn1CppTypes.h"
#include "rtsrc/rtPrintToStream.h"
#include "rtsrc/asn1type.h"
#include "rtxmlsrc/asn1xml.h"
#include "rtxmlsrc/rtXmlCppMsgBuf.h"
#include "rtsrc/asn1type.h"
#include "rtjsonsrc/asn1json.h"
#include "rtjsonsrc/rtJsonCppMsgBuf.h"

#include "rtsrc/ASN1CSeqOfList.h"

/**
 * Header file for ASN.1 module AddGrpC
 */
/**************************************************************/
/*                                                            */
/*  AltitudeValue                                             */
/*                                                            */
/**************************************************************/
/*
AltitudeValue ::= INTEGER (-100000..800001)
                                              units of  0.01 meter 
    Where: 
    seaLevel(0), 
    oneCentimeter(1), 
    unavailable(800001)

*/
typedef OSINT32 ASN1T_AltitudeValue;

EXTERN int asn1PE_AltitudeValue (OSCTXT* pctxt, ASN1T_AltitudeValue value);

EXTERN int asn1PD_AltitudeValue (OSCTXT* pctxt, ASN1T_AltitudeValue* pvalue);

EXTERN int XmlEnc_AltitudeValue (OSCTXT* pctxt, ASN1T_AltitudeValue value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_AltitudeValue (OSCTXT* pctxt, ASN1T_AltitudeValue* pvalue);

EXTERN int asn1JsonEnc_AltitudeValue (OSCTXT *pctxt, ASN1T_AltitudeValue *pvalue);

EXTERN int asn1JsonDec_AltitudeValue (OSCTXT *pctxt, ASN1T_AltitudeValue *pvalue);

EXTERN int asn1PrtToStrm_AltitudeValue (OSCTXT *pctxt, 
   const char* name, const ASN1T_AltitudeValue* pvalue);

EXTERN ASN1T_AltitudeValue* new_ASN1T_AltitudeValue (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  AltitudeConfidence                                        */
/*                                                            */
/**************************************************************/
/*
AltitudeConfidence ::= ENUMERATED { alt-000-01(0), alt-000-02(1), alt-000-05(2), alt-000-10(3), alt-000-20(4), alt-000-50(5), alt-001-00(6), alt-002-00(7), alt-005-00(8), alt-010-00(9), alt-020-00(10), alt-050-00(11), alt-100-00(12), alt-200-00(13), outOfRange(14), unavailable(15) }
*/
struct EXTERN AltitudeConfidence {
   enum Root {
      alt_000_01 = 0,
      alt_000_02 = 1,
      alt_000_05 = 2,
      alt_000_10 = 3,
      alt_000_20 = 4,
      alt_000_50 = 5,
      alt_001_00 = 6,
      alt_002_00 = 7,
      alt_005_00 = 8,
      alt_010_00 = 9,
      alt_020_00 = 10,
      alt_050_00 = 11,
      alt_100_00 = 12,
      alt_200_00 = 13,
      outOfRange = 14,
      unavailable = 15
   } ;
} ;

typedef OSUINT32 ASN1T_AltitudeConfidence;

EXTERN int asn1PE_AltitudeConfidence (OSCTXT* pctxt, ASN1T_AltitudeConfidence value);

EXTERN int asn1PD_AltitudeConfidence (OSCTXT* pctxt, ASN1T_AltitudeConfidence* pvalue);

EXTERN int XmlEnc_AltitudeConfidence (OSCTXT* pctxt, 
   ASN1T_AltitudeConfidence value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_AltitudeConfidence (OSCTXT* pctxt, 
   ASN1T_AltitudeConfidence* pvalue);

EXTERN int asn1JsonEnc_AltitudeConfidence (OSCTXT *pctxt, ASN1T_AltitudeConfidence *pvalue);

EXTERN int asn1JsonDec_AltitudeConfidence (OSCTXT *pctxt, ASN1T_AltitudeConfidence *pvalue);

EXTERN int asn1PrtToStrm_AltitudeConfidence (OSCTXT *pctxt, 
   const char* name, const ASN1T_AltitudeConfidence* pvalue);

EXTERN ASN1T_AltitudeConfidence* 
   new_ASN1T_AltitudeConfidence (ASN1CType& ccobj);

EXTERN extern const OSEnumItem ASN1T_AltitudeConfidence_ENUMTAB[];
#define ASN1T_AltitudeConfidence_ENUMTABSIZE 16

EXTERN const OSUTF8CHAR* ASN1T_AltitudeConfidence_ToString (OSINT32 value);

EXTERN int ASN1T_AltitudeConfidence_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, ASN1T_AltitudeConfidence* pvalue);

EXTERN int ASN1T_AltitudeConfidence_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, ASN1T_AltitudeConfidence* pvalue)
      ;

/**************************************************************/
/*                                                            */
/*  Altitude                                                  */
/*                                                            */
/**************************************************************/
/*
Altitude ::= SEQUENCE {
   value [0] AltitudeValue,
   confidence [1] AltitudeConfidence
}
*/
struct EXTERN ASN1T_Altitude {
   ASN1T_AltitudeValue value;
   ASN1T_AltitudeConfidence confidence;
} ;

EXTERN int asn1PE_Altitude (OSCTXT* pctxt, ASN1T_Altitude* pvalue);

EXTERN int asn1PD_Altitude (OSCTXT* pctxt, ASN1T_Altitude* pvalue);

EXTERN int XmlEnc_Altitude (OSCTXT* pctxt, ASN1T_Altitude* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Altitude (OSCTXT* pctxt, ASN1T_Altitude* pvalue);

EXTERN int asn1JsonEnc_Altitude (OSCTXT *pctxt, ASN1T_Altitude *pvalue);

EXTERN int asn1JsonDec_Altitude (OSCTXT *pctxt, ASN1T_Altitude *pvalue);

EXTERN int asn1PrtToStrm_Altitude (OSCTXT *pctxt, 
   const char* name, const ASN1T_Altitude* pvalue);

EXTERN ASN1T_Altitude* new_ASN1T_Altitude (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  Position3D_addGrpC                                        */
/*                                                            */
/**************************************************************/
/*
Position3D-addGrpC ::= SEQUENCE {
   altitude [0] Altitude,
   ...
}
*/
struct EXTERN ASN1T_Position3D_addGrpC {
   ASN1T_Altitude altitude;
   ASN1TSeqExt extElem1;
} ;

EXTERN int asn1PE_Position3D_addGrpC (OSCTXT* pctxt, ASN1T_Position3D_addGrpC* pvalue);

EXTERN int asn1PD_Position3D_addGrpC (OSCTXT* pctxt, ASN1T_Position3D_addGrpC* pvalue);

EXTERN int XmlEnc_Position3D_addGrpC (OSCTXT* pctxt, 
   ASN1T_Position3D_addGrpC* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Position3D_addGrpC (OSCTXT* pctxt, 
   ASN1T_Position3D_addGrpC* pvalue);

EXTERN int asn1JsonEnc_Position3D_addGrpC (OSCTXT *pctxt, ASN1T_Position3D_addGrpC *pvalue);

EXTERN int asn1JsonDec_Position3D_addGrpC (OSCTXT *pctxt, ASN1T_Position3D_addGrpC *pvalue);

EXTERN int asn1PrtToStrm_Position3D_addGrpC (OSCTXT *pctxt, 
   const char* name, const ASN1T_Position3D_addGrpC* pvalue);

EXTERN ASN1T_Position3D_addGrpC* 
   new_ASN1T_Position3D_addGrpC (ASN1CType& ccobj);

EXTERN int asn1Init_Position3D_addGrpC (ASN1T_Position3D_addGrpC* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_Position3D_addGrpC (OSCTXT *pctxt, 
   ASN1T_Position3D_addGrpC* pvalue);

/**************************************************************/
/*                                                            */
/*  EmissionType                                              */
/*                                                            */
/**************************************************************/
/*
EmissionType ::= ENUMERATED { typeA(0), typeB(1), typeC(2), typeD(3), typeE(4), ... }
*/
struct EXTERN EmissionType {
   enum Root {
      typeA = 0,
      typeB = 1,
      typeC = 2,
      typeD = 3,
      typeE = 4
   } ;
} ;

typedef OSUINT32 ASN1T_EmissionType;

EXTERN int asn1PE_EmissionType (OSCTXT* pctxt, ASN1T_EmissionType value);

EXTERN int asn1PD_EmissionType (OSCTXT* pctxt, ASN1T_EmissionType* pvalue);

EXTERN int XmlEnc_EmissionType (OSCTXT* pctxt, ASN1T_EmissionType value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_EmissionType (OSCTXT* pctxt, ASN1T_EmissionType* pvalue);

EXTERN int asn1JsonEnc_EmissionType (OSCTXT *pctxt, ASN1T_EmissionType *pvalue);

EXTERN int asn1JsonDec_EmissionType (OSCTXT *pctxt, ASN1T_EmissionType *pvalue);

EXTERN int asn1PrtToStrm_EmissionType (OSCTXT *pctxt, 
   const char* name, const ASN1T_EmissionType* pvalue);

EXTERN ASN1T_EmissionType* new_ASN1T_EmissionType (ASN1CType& ccobj);

EXTERN extern const OSEnumItem ASN1T_EmissionType_ENUMTAB[];
#define ASN1T_EmissionType_ENUMTABSIZE 5

EXTERN const OSUTF8CHAR* ASN1T_EmissionType_ToString (OSINT32 value);

EXTERN int ASN1T_EmissionType_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, ASN1T_EmissionType* pvalue);

EXTERN int ASN1T_EmissionType_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, ASN1T_EmissionType* pvalue);

/**************************************************************/
/*                                                            */
/*  RestrictionUserType_addGrpC                               */
/*                                                            */
/**************************************************************/
/*
RestrictionUserType-addGrpC ::= SEQUENCE {
   emission [0] EmissionType OPTIONAL,
   ...
}
*/
struct EXTERN ASN1T_RestrictionUserType_addGrpC {
   struct {
      unsigned emissionPresent : 1;
   } m;
   ASN1T_EmissionType emission;
   ASN1TSeqExt extElem1;
   ASN1T_RestrictionUserType_addGrpC ();
} ;

EXTERN int asn1PE_RestrictionUserType_addGrpC (OSCTXT* pctxt, ASN1T_RestrictionUserType_addGrpC* pvalue);

EXTERN int asn1PD_RestrictionUserType_addGrpC (OSCTXT* pctxt, ASN1T_RestrictionUserType_addGrpC* pvalue);

EXTERN int XmlEnc_RestrictionUserType_addGrpC (OSCTXT* pctxt, 
   ASN1T_RestrictionUserType_addGrpC* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_RestrictionUserType_addGrpC (OSCTXT* pctxt, 
   ASN1T_RestrictionUserType_addGrpC* pvalue);

EXTERN int asn1JsonEnc_RestrictionUserType_addGrpC (OSCTXT *pctxt, ASN1T_RestrictionUserType_addGrpC *pvalue);

EXTERN int asn1JsonDec_RestrictionUserType_addGrpC (OSCTXT *pctxt, ASN1T_RestrictionUserType_addGrpC *pvalue);

EXTERN int asn1PrtToStrm_RestrictionUserType_addGrpC (OSCTXT *pctxt, 
   const char* name, const ASN1T_RestrictionUserType_addGrpC* pvalue);

EXTERN ASN1T_RestrictionUserType_addGrpC* 
   new_ASN1T_RestrictionUserType_addGrpC (ASN1CType& ccobj);

EXTERN int asn1Init_RestrictionUserType_addGrpC (
   ASN1T_RestrictionUserType_addGrpC* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_RestrictionUserType_addGrpC (OSCTXT *pctxt, 
   ASN1T_RestrictionUserType_addGrpC* pvalue);

/**************************************************************/
/*                                                            */
/*  SignalHeadLocation                                        */
/*                                                            */
/**************************************************************/
/*
SignalHeadLocation ::= SEQUENCE {
   node [0] EXPLICIT NodeOffsetPointXY, -- the location
   signalGroupID [1] SignalGroupID,
   ...
}
*/
struct EXTERN ASN1T_SignalHeadLocation {
   struct ASN1T_NodeOffsetPointXY *node;
   OSUINT8 signalGroupID;
   ASN1TSeqExt extElem1;
   ASN1T_SignalHeadLocation ();
} ;

EXTERN int asn1PE_SignalHeadLocation (OSCTXT* pctxt, ASN1T_SignalHeadLocation* pvalue);

EXTERN int asn1PD_SignalHeadLocation (OSCTXT* pctxt, ASN1T_SignalHeadLocation* pvalue);

EXTERN int XmlEnc_SignalHeadLocation (OSCTXT* pctxt, 
   ASN1T_SignalHeadLocation* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_SignalHeadLocation (OSCTXT* pctxt, 
   ASN1T_SignalHeadLocation* pvalue);

EXTERN int asn1JsonEnc_SignalHeadLocation (OSCTXT *pctxt, ASN1T_SignalHeadLocation *pvalue);

EXTERN int asn1JsonDec_SignalHeadLocation (OSCTXT *pctxt, ASN1T_SignalHeadLocation *pvalue);

EXTERN int asn1PrtToStrm_SignalHeadLocation (OSCTXT *pctxt, 
   const char* name, const ASN1T_SignalHeadLocation* pvalue);

EXTERN ASN1T_SignalHeadLocation* 
   new_ASN1T_SignalHeadLocation (ASN1CType& ccobj);

EXTERN int asn1Init_SignalHeadLocation (ASN1T_SignalHeadLocation* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_SignalHeadLocation (OSCTXT *pctxt, 
   ASN1T_SignalHeadLocation* pvalue);

/**************************************************************/
/*                                                            */
/*  SignalHeadLocationList                                    */
/*                                                            */
/**************************************************************/
/*
SignalHeadLocationList ::= SEQUENCE (SIZE (1..20)) OF SignalHeadLocation
*/
/* List of ASN1T_SignalHeadLocation */
typedef ASN1TSeqOfList ASN1T_SignalHeadLocationList;

class EXTERN ASN1C_SignalHeadLocationList :
public ASN1CSeqOfList
{
protected:
   ASN1T_SignalHeadLocationList& msgData;
public:
   /**
    * Control class: ASN1C_SignalHeadLocationList
    * Data class:    ASN1T_SignalHeadLocationList
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_SignalHeadLocationList (ASN1T_SignalHeadLocationList& data);

   /**
    * Control class: ASN1C_SignalHeadLocationList<br/>
    * Data class: ASN1T_SignalHeadLocationList<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_SignalHeadLocationList (OSRTMessageBufferIF& msgBuf
      , ASN1T_SignalHeadLocationList& data);

   /**
    * Control class: ASN1C_SignalHeadLocationList<br/>
    * Data class: ASN1T_SignalHeadLocationList<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_SignalHeadLocationList (ASN1CType& ccobj
      , ASN1T_SignalHeadLocationList& data);

   virtual ~ASN1C_SignalHeadLocationList () {}

   /**
    * Data class: ASN1T_SignalHeadLocation<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_SignalHeadLocation* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_SignalHeadLocation.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_SignalHeadLocation* NewElement ();

   /**
    * Data class: ASN1T_SignalHeadLocation.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_SignalHeadLocation* AppendNewElement ();

private:
   ASN1C_SignalHeadLocationList& operator= (const ASN1C_SignalHeadLocationList&) {return *this;}
} ;

EXTERN int asn1PE_SignalHeadLocationList (OSCTXT* pctxt, ASN1T_SignalHeadLocationList* pvalue);

EXTERN int asn1PD_SignalHeadLocationList (OSCTXT* pctxt, ASN1T_SignalHeadLocationList* pvalue);

EXTERN int XmlEnc_SignalHeadLocationList (OSCTXT* pctxt, 
   ASN1T_SignalHeadLocationList* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_SignalHeadLocationList (OSCTXT* pctxt, 
   ASN1T_SignalHeadLocationList* pvalue);

EXTERN int asn1JsonEnc_SignalHeadLocationList (OSCTXT *pctxt, ASN1T_SignalHeadLocationList *pvalue);

EXTERN int asn1JsonDec_SignalHeadLocationList (OSCTXT *pctxt, ASN1T_SignalHeadLocationList *pvalue);

EXTERN int asn1PrtToStrm_SignalHeadLocationList (OSCTXT *pctxt, 
   const char* name, const ASN1T_SignalHeadLocationList* pvalue);

EXTERN int asn1Init_SignalHeadLocationList (ASN1T_SignalHeadLocationList* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_SignalHeadLocationList (OSCTXT *pctxt, 
   ASN1T_SignalHeadLocationList* pvalue);

/**************************************************************/
/*                                                            */
/*  MapData_addGrpC                                           */
/*                                                            */
/**************************************************************/
/*
MapData-addGrpC ::= SEQUENCE {
   signalHeadLocations [0] SignalHeadLocationList OPTIONAL,
   ...
}
*/
struct EXTERN ASN1T_MapData_addGrpC {
   struct {
      unsigned signalHeadLocationsPresent : 1;
   } m;
   ASN1T_SignalHeadLocationList signalHeadLocations;
   ASN1TSeqExt extElem1;
   ASN1T_MapData_addGrpC ();
} ;

EXTERN int asn1PE_MapData_addGrpC (OSCTXT* pctxt, ASN1T_MapData_addGrpC* pvalue);

EXTERN int asn1PD_MapData_addGrpC (OSCTXT* pctxt, ASN1T_MapData_addGrpC* pvalue);

EXTERN int XmlEnc_MapData_addGrpC (OSCTXT* pctxt, 
   ASN1T_MapData_addGrpC* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_MapData_addGrpC (OSCTXT* pctxt, ASN1T_MapData_addGrpC* pvalue
   );

EXTERN int asn1JsonEnc_MapData_addGrpC (OSCTXT *pctxt, ASN1T_MapData_addGrpC *pvalue);

EXTERN int asn1JsonDec_MapData_addGrpC (OSCTXT *pctxt, ASN1T_MapData_addGrpC *pvalue);

EXTERN int asn1PrtToStrm_MapData_addGrpC (OSCTXT *pctxt, 
   const char* name, const ASN1T_MapData_addGrpC* pvalue);

EXTERN ASN1T_MapData_addGrpC* new_ASN1T_MapData_addGrpC (ASN1CType& ccobj);

EXTERN int asn1Init_MapData_addGrpC (ASN1T_MapData_addGrpC* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_MapData_addGrpC (OSCTXT *pctxt, ASN1T_MapData_addGrpC* pvalue);

/**************************************************************/
/*                                                            */
/*  VehicleToLanePosition                                     */
/*                                                            */
/**************************************************************/
/*
VehicleToLanePosition ::= SEQUENCE {
   stationID [0] StationID,
   laneID [1] LaneID,
   ...
}
*/
struct EXTERN ASN1T_VehicleToLanePosition {
   OSUINT32 stationID;
   OSUINT8 laneID;
   ASN1TSeqExt extElem1;
} ;

EXTERN int asn1PE_VehicleToLanePosition (OSCTXT* pctxt, ASN1T_VehicleToLanePosition* pvalue);

EXTERN int asn1PD_VehicleToLanePosition (OSCTXT* pctxt, ASN1T_VehicleToLanePosition* pvalue);

EXTERN int XmlEnc_VehicleToLanePosition (OSCTXT* pctxt, 
   ASN1T_VehicleToLanePosition* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_VehicleToLanePosition (OSCTXT* pctxt, 
   ASN1T_VehicleToLanePosition* pvalue);

EXTERN int asn1JsonEnc_VehicleToLanePosition (OSCTXT *pctxt, ASN1T_VehicleToLanePosition *pvalue);

EXTERN int asn1JsonDec_VehicleToLanePosition (OSCTXT *pctxt, ASN1T_VehicleToLanePosition *pvalue);

EXTERN int asn1PrtToStrm_VehicleToLanePosition (OSCTXT *pctxt, 
   const char* name, const ASN1T_VehicleToLanePosition* pvalue);

EXTERN ASN1T_VehicleToLanePosition* 
   new_ASN1T_VehicleToLanePosition (ASN1CType& ccobj);

EXTERN int asn1Init_VehicleToLanePosition (ASN1T_VehicleToLanePosition* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_VehicleToLanePosition (OSCTXT *pctxt, 
   ASN1T_VehicleToLanePosition* pvalue);

/**************************************************************/
/*                                                            */
/*  VehicleToLanePositionList                                 */
/*                                                            */
/**************************************************************/
/*
VehicleToLanePositionList ::= SEQUENCE (SIZE (1..5)) OF VehicleToLanePosition
*/
/* List of ASN1T_VehicleToLanePosition */
typedef ASN1TSeqOfList ASN1T_VehicleToLanePositionList;

class EXTERN ASN1C_VehicleToLanePositionList :
public ASN1CSeqOfList
{
protected:
   ASN1T_VehicleToLanePositionList& msgData;
public:
   /**
    * Control class: ASN1C_VehicleToLanePositionList
    * Data class:    ASN1T_VehicleToLanePositionList
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_VehicleToLanePositionList (ASN1T_VehicleToLanePositionList& data);

   /**
    * Control class: ASN1C_VehicleToLanePositionList<br/>
    * Data class: ASN1T_VehicleToLanePositionList<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_VehicleToLanePositionList (OSRTMessageBufferIF& msgBuf
      , ASN1T_VehicleToLanePositionList& data);

   /**
    * Control class: ASN1C_VehicleToLanePositionList<br/>
    * Data class: ASN1T_VehicleToLanePositionList<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_VehicleToLanePositionList (ASN1CType& ccobj
      , ASN1T_VehicleToLanePositionList& data);

   virtual ~ASN1C_VehicleToLanePositionList () {}

   /**
    * Data class: ASN1T_VehicleToLanePosition<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_VehicleToLanePosition* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_VehicleToLanePosition.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_VehicleToLanePosition* NewElement ();

   /**
    * Data class: ASN1T_VehicleToLanePosition.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_VehicleToLanePosition* AppendNewElement ();

private:
   ASN1C_VehicleToLanePositionList& operator= (const ASN1C_VehicleToLanePositionList&) {return *this;}
} ;

EXTERN int asn1PE_VehicleToLanePositionList (OSCTXT* pctxt, ASN1T_VehicleToLanePositionList* pvalue);

EXTERN int asn1PD_VehicleToLanePositionList (OSCTXT* pctxt, ASN1T_VehicleToLanePositionList* pvalue);

EXTERN int XmlEnc_VehicleToLanePositionList (OSCTXT* pctxt, 
   ASN1T_VehicleToLanePositionList* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_VehicleToLanePositionList (OSCTXT* pctxt, 
   ASN1T_VehicleToLanePositionList* pvalue);

EXTERN int asn1JsonEnc_VehicleToLanePositionList (OSCTXT *pctxt, ASN1T_VehicleToLanePositionList *pvalue);

EXTERN int asn1JsonDec_VehicleToLanePositionList (OSCTXT *pctxt, ASN1T_VehicleToLanePositionList *pvalue);

EXTERN int asn1PrtToStrm_VehicleToLanePositionList (OSCTXT *pctxt, 
   const char* name, const ASN1T_VehicleToLanePositionList* pvalue);

EXTERN int asn1Init_VehicleToLanePositionList (
   ASN1T_VehicleToLanePositionList* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_VehicleToLanePositionList (OSCTXT *pctxt, 
   ASN1T_VehicleToLanePositionList* pvalue);

/**************************************************************/
/*                                                            */
/*  ConnectionManeuverAssist_addGrpC                          */
/*                                                            */
/**************************************************************/
/*
ConnectionManeuverAssist-addGrpC ::= SEQUENCE {
   vehicleToLanePositions [0] VehicleToLanePositionList,
   rsuDistanceFromAnchor [1] EXPLICIT NodeOffsetPointXY OPTIONAL
}
*/
struct EXTERN ASN1T_ConnectionManeuverAssist_addGrpC {
   struct {
      unsigned rsuDistanceFromAnchorPresent : 1;
   } m;
   ASN1T_VehicleToLanePositionList vehicleToLanePositions;
   struct ASN1T_NodeOffsetPointXY *rsuDistanceFromAnchor;
   ASN1T_ConnectionManeuverAssist_addGrpC ();
} ;

EXTERN int asn1PE_ConnectionManeuverAssist_addGrpC (OSCTXT* pctxt, ASN1T_ConnectionManeuverAssist_addGrpC* pvalue);

EXTERN int asn1PD_ConnectionManeuverAssist_addGrpC (OSCTXT* pctxt, ASN1T_ConnectionManeuverAssist_addGrpC* pvalue);

EXTERN int XmlEnc_ConnectionManeuverAssist_addGrpC (OSCTXT* pctxt, 
   ASN1T_ConnectionManeuverAssist_addGrpC* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ConnectionManeuverAssist_addGrpC (OSCTXT* pctxt, 
   ASN1T_ConnectionManeuverAssist_addGrpC* pvalue);

EXTERN int asn1JsonEnc_ConnectionManeuverAssist_addGrpC (OSCTXT *pctxt, ASN1T_ConnectionManeuverAssist_addGrpC *pvalue);

EXTERN int asn1JsonDec_ConnectionManeuverAssist_addGrpC (OSCTXT *pctxt, ASN1T_ConnectionManeuverAssist_addGrpC *pvalue);

EXTERN int asn1PrtToStrm_ConnectionManeuverAssist_addGrpC (OSCTXT *pctxt, 
   const char* name, const ASN1T_ConnectionManeuverAssist_addGrpC* pvalue);

EXTERN ASN1T_ConnectionManeuverAssist_addGrpC* 
   new_ASN1T_ConnectionManeuverAssist_addGrpC (ASN1CType& ccobj);

EXTERN int asn1Init_ConnectionManeuverAssist_addGrpC (
   ASN1T_ConnectionManeuverAssist_addGrpC* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ConnectionManeuverAssist_addGrpC (OSCTXT *pctxt, 
   ASN1T_ConnectionManeuverAssist_addGrpC* pvalue);

/**************************************************************/
/*                                                            */
/*  PrioritizationResponse                                    */
/*                                                            */
/**************************************************************/
/*
PrioritizationResponse ::= SEQUENCE {
   stationID [0] StationID,
                  -- Id of requesting vehicle
                  -- Note that the stationID has to remain unchanged 
                  -- during the whole prioritizationprocess
   priorState [1] PrioritizationResponseStatus,
                  -- State of prioritization request
   signalGroup [2] SignalGroupID,
   ...
}
*/
struct EXTERN ASN1T_PrioritizationResponse {
   OSUINT32 stationID;
   OSUINT32 priorState;
   OSUINT8 signalGroup;
   ASN1TSeqExt extElem1;
} ;

EXTERN int asn1PE_PrioritizationResponse (OSCTXT* pctxt, ASN1T_PrioritizationResponse* pvalue);

EXTERN int asn1PD_PrioritizationResponse (OSCTXT* pctxt, ASN1T_PrioritizationResponse* pvalue);

EXTERN int XmlEnc_PrioritizationResponse (OSCTXT* pctxt, 
   ASN1T_PrioritizationResponse* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_PrioritizationResponse (OSCTXT* pctxt, 
   ASN1T_PrioritizationResponse* pvalue);

EXTERN int asn1JsonEnc_PrioritizationResponse (OSCTXT *pctxt, ASN1T_PrioritizationResponse *pvalue);

EXTERN int asn1JsonDec_PrioritizationResponse (OSCTXT *pctxt, ASN1T_PrioritizationResponse *pvalue);

EXTERN int asn1PrtToStrm_PrioritizationResponse (OSCTXT *pctxt, 
   const char* name, const ASN1T_PrioritizationResponse* pvalue);

EXTERN ASN1T_PrioritizationResponse* 
   new_ASN1T_PrioritizationResponse (ASN1CType& ccobj);

EXTERN int asn1Init_PrioritizationResponse (ASN1T_PrioritizationResponse* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_PrioritizationResponse (OSCTXT *pctxt, 
   ASN1T_PrioritizationResponse* pvalue);

/**************************************************************/
/*                                                            */
/*  PrioritizationResponseList                                */
/*                                                            */
/**************************************************************/
/*
PrioritizationResponseList ::= SEQUENCE (SIZE (1..10)) OF PrioritizationResponse
*/
/* List of ASN1T_PrioritizationResponse */
typedef ASN1TSeqOfList ASN1T_PrioritizationResponseList;

class EXTERN ASN1C_PrioritizationResponseList :
public ASN1CSeqOfList
{
protected:
   ASN1T_PrioritizationResponseList& msgData;
public:
   /**
    * Control class: ASN1C_PrioritizationResponseList
    * Data class:    ASN1T_PrioritizationResponseList
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_PrioritizationResponseList (ASN1T_PrioritizationResponseList& data);

   /**
    * Control class: ASN1C_PrioritizationResponseList<br/>
    * Data class: ASN1T_PrioritizationResponseList<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_PrioritizationResponseList (OSRTMessageBufferIF& msgBuf
      , ASN1T_PrioritizationResponseList& data);

   /**
    * Control class: ASN1C_PrioritizationResponseList<br/>
    * Data class: ASN1T_PrioritizationResponseList<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_PrioritizationResponseList (ASN1CType& ccobj
      , ASN1T_PrioritizationResponseList& data);

   virtual ~ASN1C_PrioritizationResponseList () {}

   /**
    * Data class: ASN1T_PrioritizationResponse<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_PrioritizationResponse* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_PrioritizationResponse.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_PrioritizationResponse* NewElement ();

   /**
    * Data class: ASN1T_PrioritizationResponse.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_PrioritizationResponse* AppendNewElement ();

private:
   ASN1C_PrioritizationResponseList& operator= (const ASN1C_PrioritizationResponseList&) {return *this;}
} ;

EXTERN int asn1PE_PrioritizationResponseList (OSCTXT* pctxt, ASN1T_PrioritizationResponseList* pvalue);

EXTERN int asn1PD_PrioritizationResponseList (OSCTXT* pctxt, ASN1T_PrioritizationResponseList* pvalue);

EXTERN int XmlEnc_PrioritizationResponseList (OSCTXT* pctxt, 
   ASN1T_PrioritizationResponseList* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_PrioritizationResponseList (OSCTXT* pctxt, 
   ASN1T_PrioritizationResponseList* pvalue);

EXTERN int asn1JsonEnc_PrioritizationResponseList (OSCTXT *pctxt, ASN1T_PrioritizationResponseList *pvalue);

EXTERN int asn1JsonDec_PrioritizationResponseList (OSCTXT *pctxt, ASN1T_PrioritizationResponseList *pvalue);

EXTERN int asn1PrtToStrm_PrioritizationResponseList (OSCTXT *pctxt, 
   const char* name, const ASN1T_PrioritizationResponseList* pvalue);

EXTERN int asn1Init_PrioritizationResponseList (
   ASN1T_PrioritizationResponseList* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_PrioritizationResponseList (OSCTXT *pctxt, 
   ASN1T_PrioritizationResponseList* pvalue);

/**************************************************************/
/*                                                            */
/*  IntersectionState_addGrpC                                 */
/*                                                            */
/**************************************************************/
/*
IntersectionState-addGrpC ::= SEQUENCE {
   activePrioritizations [0] PrioritizationResponseList OPTIONAL,
   ...
}
*/
struct EXTERN ASN1T_IntersectionState_addGrpC {
   struct {
      unsigned activePrioritizationsPresent : 1;
   } m;
   ASN1T_PrioritizationResponseList activePrioritizations;
   ASN1TSeqExt extElem1;
   ASN1T_IntersectionState_addGrpC ();
} ;

EXTERN int asn1PE_IntersectionState_addGrpC (OSCTXT* pctxt, ASN1T_IntersectionState_addGrpC* pvalue);

EXTERN int asn1PD_IntersectionState_addGrpC (OSCTXT* pctxt, ASN1T_IntersectionState_addGrpC* pvalue);

EXTERN int XmlEnc_IntersectionState_addGrpC (OSCTXT* pctxt, 
   ASN1T_IntersectionState_addGrpC* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IntersectionState_addGrpC (OSCTXT* pctxt, 
   ASN1T_IntersectionState_addGrpC* pvalue);

EXTERN int asn1JsonEnc_IntersectionState_addGrpC (OSCTXT *pctxt, ASN1T_IntersectionState_addGrpC *pvalue);

EXTERN int asn1JsonDec_IntersectionState_addGrpC (OSCTXT *pctxt, ASN1T_IntersectionState_addGrpC *pvalue);

EXTERN int asn1PrtToStrm_IntersectionState_addGrpC (OSCTXT *pctxt, 
   const char* name, const ASN1T_IntersectionState_addGrpC* pvalue);

EXTERN ASN1T_IntersectionState_addGrpC* 
   new_ASN1T_IntersectionState_addGrpC (ASN1CType& ccobj);

EXTERN int asn1Init_IntersectionState_addGrpC (
   ASN1T_IntersectionState_addGrpC* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IntersectionState_addGrpC (OSCTXT *pctxt, 
   ASN1T_IntersectionState_addGrpC* pvalue);

#endif
