/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).
 */
#ifndef GDD_H
#define GDD_H

#include <stdio.h>
#include <stdlib.h>
#include "rtpersrc/asn1PerCppTypes.h"
#include "rtsrc/asn1CppTypes.h"
#include "rtsrc/rtPrintToStream.h"
#include "rtsrc/asn1type.h"
#include "rtxmlsrc/asn1xml.h"
#include "rtxmlsrc/rtXmlCppMsgBuf.h"
#include "rtsrc/asn1type.h"
#include "rtjsonsrc/asn1json.h"
#include "rtjsonsrc/rtJsonCppMsgBuf.h"

#include "rtsrc/ASN1CBitStr.h"
#include "rtsrc/ASN1CSeqOfList.h"

/**
 * Header file for ASN.1 module GDD
 */
/**************************************************************/
/*                                                            */
/*  InternationalSign_applicablePeriod_year                   */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'InternationalSign-applicablePeriod'
*/
struct EXTERN ASN1T_InternationalSign_applicablePeriod_year {
   OSUINT32 yearRangeStartYear;
   OSUINT32 yearRangeEndYear;
} ;

EXTERN int asn1PE_InternationalSign_applicablePeriod_year (OSCTXT* pctxt, ASN1T_InternationalSign_applicablePeriod_year* pvalue);

EXTERN int asn1PD_InternationalSign_applicablePeriod_year (OSCTXT* pctxt, ASN1T_InternationalSign_applicablePeriod_year* pvalue);

EXTERN int XmlEnc_InternationalSign_applicablePeriod_year (OSCTXT* pctxt, 
   ASN1T_InternationalSign_applicablePeriod_year* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_InternationalSign_applicablePeriod_year (OSCTXT* pctxt, 
   ASN1T_InternationalSign_applicablePeriod_year* pvalue);

EXTERN int asn1JsonEnc_InternationalSign_applicablePeriod_year (OSCTXT *pctxt, ASN1T_InternationalSign_applicablePeriod_year *pvalue);

EXTERN int asn1JsonDec_InternationalSign_applicablePeriod_year (OSCTXT *pctxt, ASN1T_InternationalSign_applicablePeriod_year *pvalue);

EXTERN int asn1PrtToStrm_InternationalSign_applicablePeriod_year (OSCTXT *pctxt, 
   const char* name, const ASN1T_InternationalSign_applicablePeriod_year* pvalue);

EXTERN ASN1T_InternationalSign_applicablePeriod_year* 
   new_ASN1T_InternationalSign_applicablePeriod_year (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  MonthDay                                                  */
/*                                                            */
/**************************************************************/
/*
MonthDay ::= SEQUENCE {
   month [0] INTEGER (1..12),
   day [1] INTEGER (1..31)
}
*/
struct EXTERN ASN1T_MonthDay {
   OSUINT8 month;
   OSUINT8 day;
} ;

EXTERN int asn1PE_MonthDay (OSCTXT* pctxt, ASN1T_MonthDay* pvalue);

EXTERN int asn1PD_MonthDay (OSCTXT* pctxt, ASN1T_MonthDay* pvalue);

EXTERN int XmlEnc_MonthDay (OSCTXT* pctxt, ASN1T_MonthDay* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_MonthDay (OSCTXT* pctxt, ASN1T_MonthDay* pvalue);

EXTERN int asn1JsonEnc_MonthDay (OSCTXT *pctxt, ASN1T_MonthDay *pvalue);

EXTERN int asn1JsonDec_MonthDay (OSCTXT *pctxt, ASN1T_MonthDay *pvalue);

EXTERN int asn1PrtToStrm_MonthDay (OSCTXT *pctxt, 
   const char* name, const ASN1T_MonthDay* pvalue);

EXTERN ASN1T_MonthDay* new_ASN1T_MonthDay (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  InternationalSign_applicablePeriod_month_day              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'InternationalSign-applicablePeriod'
*/
struct EXTERN ASN1T_InternationalSign_applicablePeriod_month_day {
   ASN1T_MonthDay dateRangeStartMonthDay;
   ASN1T_MonthDay dateRangeEndMonthDay;
} ;

EXTERN int asn1PE_InternationalSign_applicablePeriod_month_day (OSCTXT* pctxt, ASN1T_InternationalSign_applicablePeriod_month_day* pvalue);

EXTERN int asn1PD_InternationalSign_applicablePeriod_month_day (OSCTXT* pctxt, ASN1T_InternationalSign_applicablePeriod_month_day* pvalue);

EXTERN int XmlEnc_InternationalSign_applicablePeriod_month_day (OSCTXT* pctxt, 
   ASN1T_InternationalSign_applicablePeriod_month_day* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_InternationalSign_applicablePeriod_month_day (OSCTXT* pctxt, 
   ASN1T_InternationalSign_applicablePeriod_month_day* pvalue);

EXTERN int asn1JsonEnc_InternationalSign_applicablePeriod_month_day (OSCTXT *pctxt, ASN1T_InternationalSign_applicablePeriod_month_day *pvalue);

EXTERN int asn1JsonDec_InternationalSign_applicablePeriod_month_day (OSCTXT *pctxt, ASN1T_InternationalSign_applicablePeriod_month_day *pvalue);

EXTERN int asn1PrtToStrm_InternationalSign_applicablePeriod_month_day (OSCTXT *pctxt, 
   const char* name, const ASN1T_InternationalSign_applicablePeriod_month_day* pvalue);

EXTERN ASN1T_InternationalSign_applicablePeriod_month_day* 
   new_ASN1T_InternationalSign_applicablePeriod_month_day (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  RepeatingPeriodDayTypes                                   */
/*                                                            */
/**************************************************************/
/*
RepeatingPeriodDayTypes ::= BIT STRING  { national-holiday(0), even-days(1), odd-days(2), market-day(3) } (SIZE (4))
*/
struct EXTERN ASN1T_RepeatingPeriodDayTypes {
   OSOCTET data[1];
   // ctors
   ASN1T_RepeatingPeriodDayTypes ()  {}
   ASN1T_RepeatingPeriodDayTypes (const OSOCTET* _data) {
      OSCRTLSAFEMEMCPY (data, 1, _data, 1);
   }
} ;

class EXTERN ASN1C_RepeatingPeriodDayTypes :
public ASN1CBitStr
{
protected:
   ASN1T_RepeatingPeriodDayTypes& msgData;
public:
   // named bits
   enum { national_holiday = 0, even_days = 1, odd_days = 2, market_day = 3 };

   /**
    * Control class: ASN1C_RepeatingPeriodDayTypes
    * Data class:    ASN1T_RepeatingPeriodDayTypes
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_RepeatingPeriodDayTypes (ASN1T_RepeatingPeriodDayTypes& data);

   /**
    * Control class: ASN1C_RepeatingPeriodDayTypes<br/>
    * Data class: ASN1T_RepeatingPeriodDayTypes<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_RepeatingPeriodDayTypes (OSRTMessageBufferIF& msgBuf
      , ASN1T_RepeatingPeriodDayTypes& data);

   virtual ~ASN1C_RepeatingPeriodDayTypes () {}

private:
   ASN1C_RepeatingPeriodDayTypes& operator= (const ASN1C_RepeatingPeriodDayTypes&) {return *this;}
} ;

EXTERN int asn1PE_RepeatingPeriodDayTypes (OSCTXT* pctxt, ASN1T_RepeatingPeriodDayTypes* pvalue);

EXTERN int asn1PD_RepeatingPeriodDayTypes (OSCTXT* pctxt, ASN1T_RepeatingPeriodDayTypes* pvalue);

EXTERN int XmlEnc_RepeatingPeriodDayTypes (OSCTXT* pctxt, 
   ASN1T_RepeatingPeriodDayTypes* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_RepeatingPeriodDayTypes (OSCTXT* pctxt, 
   ASN1T_RepeatingPeriodDayTypes* pvalue);

EXTERN int asn1JsonEnc_RepeatingPeriodDayTypes (OSCTXT *pctxt, ASN1T_RepeatingPeriodDayTypes *pvalue);

EXTERN int asn1JsonDec_RepeatingPeriodDayTypes (OSCTXT *pctxt, ASN1T_RepeatingPeriodDayTypes *pvalue);

EXTERN int asn1PrtToStrm_RepeatingPeriodDayTypes (OSCTXT *pctxt, 
   const char* name, const ASN1T_RepeatingPeriodDayTypes* pvalue);

extern EXTERN struct OSBitMapItem g_ASN1T_RepeatingPeriodDayTypes_NAMEDBITTAB[5];

EXTERN ASN1T_RepeatingPeriodDayTypes* 
   new_ASN1T_RepeatingPeriodDayTypes (ASN1CType& ccobj);

EXTERN int asn1Init_RepeatingPeriodDayTypes (ASN1T_RepeatingPeriodDayTypes* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

/**************************************************************/
/*                                                            */
/*  HoursMinutes                                              */
/*                                                            */
/**************************************************************/
/*
HoursMinutes ::= SEQUENCE {
   hours [0] INTEGER (0..23), -- number of hours after midnight
   mins [1] INTEGER (0..59) -- number of minutes after the hour
}
*/
struct EXTERN ASN1T_HoursMinutes {
   OSUINT8 hours;
   OSUINT8 mins;
} ;

EXTERN int asn1PE_HoursMinutes (OSCTXT* pctxt, ASN1T_HoursMinutes* pvalue);

EXTERN int asn1PD_HoursMinutes (OSCTXT* pctxt, ASN1T_HoursMinutes* pvalue);

EXTERN int XmlEnc_HoursMinutes (OSCTXT* pctxt, ASN1T_HoursMinutes* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_HoursMinutes (OSCTXT* pctxt, ASN1T_HoursMinutes* pvalue);

EXTERN int asn1JsonEnc_HoursMinutes (OSCTXT *pctxt, ASN1T_HoursMinutes *pvalue);

EXTERN int asn1JsonDec_HoursMinutes (OSCTXT *pctxt, ASN1T_HoursMinutes *pvalue);

EXTERN int asn1PrtToStrm_HoursMinutes (OSCTXT *pctxt, 
   const char* name, const ASN1T_HoursMinutes* pvalue);

EXTERN ASN1T_HoursMinutes* new_ASN1T_HoursMinutes (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  InternationalSign_applicablePeriod_hourMinutes            */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'InternationalSign-applicablePeriod'
*/
struct EXTERN ASN1T_InternationalSign_applicablePeriod_hourMinutes {
   ASN1T_HoursMinutes timeRangeStartTime;
   ASN1T_HoursMinutes timeRangeEndTime;
} ;

EXTERN int asn1PE_InternationalSign_applicablePeriod_hourMinutes (OSCTXT* pctxt, ASN1T_InternationalSign_applicablePeriod_hourMinutes* pvalue);

EXTERN int asn1PD_InternationalSign_applicablePeriod_hourMinutes (OSCTXT* pctxt, ASN1T_InternationalSign_applicablePeriod_hourMinutes* pvalue);

EXTERN int XmlEnc_InternationalSign_applicablePeriod_hourMinutes 
   (OSCTXT* pctxt, 
   ASN1T_InternationalSign_applicablePeriod_hourMinutes* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_InternationalSign_applicablePeriod_hourMinutes 
   (OSCTXT* pctxt, ASN1T_InternationalSign_applicablePeriod_hourMinutes* pvalue
   );

EXTERN int asn1JsonEnc_InternationalSign_applicablePeriod_hourMinutes (OSCTXT *pctxt, ASN1T_InternationalSign_applicablePeriod_hourMinutes *pvalue);

EXTERN int asn1JsonDec_InternationalSign_applicablePeriod_hourMinutes (OSCTXT *pctxt, ASN1T_InternationalSign_applicablePeriod_hourMinutes *pvalue);

EXTERN int asn1PrtToStrm_InternationalSign_applicablePeriod_hourMinutes (OSCTXT *pctxt, 
   const char* name, const ASN1T_InternationalSign_applicablePeriod_hourMinutes* pvalue);

EXTERN ASN1T_InternationalSign_applicablePeriod_hourMinutes* 
   new_ASN1T_InternationalSign_applicablePeriod_hourMinutes (ASN1CType& ccobj)
   ;

/**************************************************************/
/*                                                            */
/*  DayOfWeek                                                 */
/*                                                            */
/**************************************************************/
/*
DayOfWeek ::= BIT STRING  { unused(0), monday(1), tuesday(2), wednesday(3), thursday(4), friday(5), saturday(6), sunday(7) } (SIZE (8))
*/
struct EXTERN ASN1T_DayOfWeek {
   OSOCTET data[1];
   // ctors
   ASN1T_DayOfWeek ()  {}
   ASN1T_DayOfWeek (const OSOCTET* _data) {
      OSCRTLSAFEMEMCPY (data, 1, _data, 1);
   }
} ;

class EXTERN ASN1C_DayOfWeek :
public ASN1CBitStr
{
protected:
   ASN1T_DayOfWeek& msgData;
public:
   // named bits
   enum { unused = 0, monday = 1, tuesday = 2, wednesday = 3, thursday = 4, friday = 5, saturday = 6, sunday = 7 };

   /**
    * Control class: ASN1C_DayOfWeek
    * Data class:    ASN1T_DayOfWeek
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_DayOfWeek (ASN1T_DayOfWeek& data);

   /**
    * Control class: ASN1C_DayOfWeek<br/>
    * Data class: ASN1T_DayOfWeek<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_DayOfWeek (OSRTMessageBufferIF& msgBuf, ASN1T_DayOfWeek& data);

   virtual ~ASN1C_DayOfWeek () {}

private:
   ASN1C_DayOfWeek& operator= (const ASN1C_DayOfWeek&) {return *this;}
} ;

EXTERN int asn1PE_DayOfWeek (OSCTXT* pctxt, ASN1T_DayOfWeek* pvalue);

EXTERN int asn1PD_DayOfWeek (OSCTXT* pctxt, ASN1T_DayOfWeek* pvalue);

EXTERN int XmlEnc_DayOfWeek (OSCTXT* pctxt, ASN1T_DayOfWeek* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_DayOfWeek (OSCTXT* pctxt, ASN1T_DayOfWeek* pvalue);

EXTERN int asn1JsonEnc_DayOfWeek (OSCTXT *pctxt, ASN1T_DayOfWeek *pvalue);

EXTERN int asn1JsonDec_DayOfWeek (OSCTXT *pctxt, ASN1T_DayOfWeek *pvalue);

EXTERN int asn1PrtToStrm_DayOfWeek (OSCTXT *pctxt, 
   const char* name, const ASN1T_DayOfWeek* pvalue);

extern EXTERN struct OSBitMapItem g_ASN1T_DayOfWeek_NAMEDBITTAB[9];

EXTERN ASN1T_DayOfWeek* new_ASN1T_DayOfWeek (ASN1CType& ccobj);

EXTERN int asn1Init_DayOfWeek (ASN1T_DayOfWeek* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

/**************************************************************/
/*                                                            */
/*  InternationalSign_applicablePeriod                        */
/*                                                            */
/**************************************************************/
/*
InternationalSign-applicablePeriod ::= SEQUENCE {
   year [0] SEQUENCE {
                     -- contains yearRangeStartYear and yearRangeEndYear
      yearRangeStartYear [0] INTEGER (2000..2127, ...),
      yearRangeEndYear [1] INTEGER (2000..2127, ...)
   } OPTIONAL,
   month-day [1] SEQUENCE {
                         -- contains dateRangeStartMonth&Date and dateRangeEndMonth&Date
      dateRangeStartMonthDay [0] MonthDay,
      dateRangeEndMonthDay [1] MonthDay
   } OPTIONAL,
   repeatingPeriodDayTypes [2] RepeatingPeriodDayTypes OPTIONAL,
   hourMinutes [3] SEQUENCE {
                           -- contains timeRangeStartTime and timeRangeEndTime
      timeRangeStartTime [0] HoursMinutes,
      timeRangeEndTime [1] HoursMinutes
   } OPTIONAL,
   dateRangeOfWeek [4] DayOfWeek OPTIONAL,
   durationHourMinute [5] HoursMinutes OPTIONAL
}
*/
struct EXTERN ASN1T_InternationalSign_applicablePeriod {
   struct {
      unsigned yearPresent : 1;
      unsigned month_dayPresent : 1;
      unsigned repeatingPeriodDayTypesPresent : 1;
      unsigned hourMinutesPresent : 1;
      unsigned dateRangeOfWeekPresent : 1;
      unsigned durationHourMinutePresent : 1;
   } m;
   ASN1T_InternationalSign_applicablePeriod_year year;
   ASN1T_InternationalSign_applicablePeriod_month_day month_day;
   ASN1T_RepeatingPeriodDayTypes repeatingPeriodDayTypes;
   ASN1T_InternationalSign_applicablePeriod_hourMinutes hourMinutes;
   ASN1T_DayOfWeek dateRangeOfWeek;
   ASN1T_HoursMinutes durationHourMinute;
   ASN1T_InternationalSign_applicablePeriod ();
} ;

EXTERN int asn1PE_InternationalSign_applicablePeriod (OSCTXT* pctxt, ASN1T_InternationalSign_applicablePeriod* pvalue);

EXTERN int asn1PD_InternationalSign_applicablePeriod (OSCTXT* pctxt, ASN1T_InternationalSign_applicablePeriod* pvalue);

EXTERN int XmlEnc_InternationalSign_applicablePeriod (OSCTXT* pctxt, 
   ASN1T_InternationalSign_applicablePeriod* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_InternationalSign_applicablePeriod (OSCTXT* pctxt, 
   ASN1T_InternationalSign_applicablePeriod* pvalue);

EXTERN int asn1JsonEnc_InternationalSign_applicablePeriod (OSCTXT *pctxt, ASN1T_InternationalSign_applicablePeriod *pvalue);

EXTERN int asn1JsonDec_InternationalSign_applicablePeriod (OSCTXT *pctxt, ASN1T_InternationalSign_applicablePeriod *pvalue);

EXTERN int asn1PrtToStrm_InternationalSign_applicablePeriod (OSCTXT *pctxt, 
   const char* name, const ASN1T_InternationalSign_applicablePeriod* pvalue);

EXTERN ASN1T_InternationalSign_applicablePeriod* 
   new_ASN1T_InternationalSign_applicablePeriod (ASN1CType& ccobj);

EXTERN int asn1Init_InternationalSign_applicablePeriod (
   ASN1T_InternationalSign_applicablePeriod* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

/**************************************************************/
/*                                                            */
/*  InternationalSign_exemptedApplicablePeriod                */
/*                                                            */
/**************************************************************/
/*
InternationalSign-exemptedApplicablePeriod ::= InternationalSign-applicablePeriod
*/
typedef ASN1T_InternationalSign_applicablePeriod ASN1T_InternationalSign_exemptedApplicablePeriod;

EXTERN int asn1PE_InternationalSign_exemptedApplicablePeriod (OSCTXT* pctxt, ASN1T_InternationalSign_exemptedApplicablePeriod* pvalue);

EXTERN int asn1PD_InternationalSign_exemptedApplicablePeriod (OSCTXT* pctxt, ASN1T_InternationalSign_exemptedApplicablePeriod* pvalue);

EXTERN int XmlEnc_InternationalSign_exemptedApplicablePeriod (OSCTXT* pctxt, 
   ASN1T_InternationalSign_exemptedApplicablePeriod* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_InternationalSign_exemptedApplicablePeriod (OSCTXT* pctxt, 
   ASN1T_InternationalSign_exemptedApplicablePeriod* pvalue);

EXTERN int asn1JsonEnc_InternationalSign_exemptedApplicablePeriod (OSCTXT *pctxt, ASN1T_InternationalSign_exemptedApplicablePeriod *pvalue);

EXTERN int asn1JsonDec_InternationalSign_exemptedApplicablePeriod (OSCTXT *pctxt, ASN1T_InternationalSign_exemptedApplicablePeriod *pvalue);

EXTERN int asn1PrtToStrm_InternationalSign_exemptedApplicablePeriod (OSCTXT *pctxt, 
   const char* name, const ASN1T_InternationalSign_exemptedApplicablePeriod* pvalue);

EXTERN ASN1T_InternationalSign_exemptedApplicablePeriod* 
   new_ASN1T_InternationalSign_exemptedApplicablePeriod (ASN1CType& ccobj);

EXTERN int asn1Init_InternationalSign_exemptedApplicablePeriod (
   ASN1T_InternationalSign_exemptedApplicablePeriod* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

/**************************************************************/
/*                                                            */
/*  InternationalSign_directionalFlowOfLane                   */
/*                                                            */
/**************************************************************/
/*
InternationalSign-directionalFlowOfLane ::= INTEGER { sDL(1), sLT(2), sRT(3), lTO(4), rTO(5), cLL(6), cRI(7), oVL(8) } (1..8)
*/
struct EXTERN InternationalSign_directionalFlowOfLane {
   enum Root {
      sDL = 1,
      sLT = 2,
      sRT = 3,
      lTO = 4,
      rTO = 5,
      cLL = 6,
      cRI = 7,
      oVL = 8
   } ;
} ;

typedef OSUINT8 ASN1T_InternationalSign_directionalFlowOfLane;

EXTERN int asn1PE_InternationalSign_directionalFlowOfLane (OSCTXT* pctxt, ASN1T_InternationalSign_directionalFlowOfLane value);

EXTERN int asn1PD_InternationalSign_directionalFlowOfLane (OSCTXT* pctxt, ASN1T_InternationalSign_directionalFlowOfLane* pvalue);

EXTERN int XmlEnc_InternationalSign_directionalFlowOfLane (OSCTXT* pctxt, 
   ASN1T_InternationalSign_directionalFlowOfLane value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_InternationalSign_directionalFlowOfLane (OSCTXT* pctxt, 
   ASN1T_InternationalSign_directionalFlowOfLane* pvalue);

EXTERN int asn1JsonEnc_InternationalSign_directionalFlowOfLane (OSCTXT *pctxt, ASN1T_InternationalSign_directionalFlowOfLane *pvalue);

EXTERN int asn1JsonDec_InternationalSign_directionalFlowOfLane (OSCTXT *pctxt, ASN1T_InternationalSign_directionalFlowOfLane *pvalue);

EXTERN int asn1PrtToStrm_InternationalSign_directionalFlowOfLane (OSCTXT *pctxt, 
   const char* name, const ASN1T_InternationalSign_directionalFlowOfLane* pvalue);

EXTERN ASN1T_InternationalSign_directionalFlowOfLane* 
   new_ASN1T_InternationalSign_directionalFlowOfLane (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  Code_Units                                                */
/*                                                            */
/**************************************************************/
/*
 Definition of data elements used in ISO 14823 attributes
Code-Units ::= INTEGER { kmperh(0), milesperh(1), kilometre(2), metre(3), decimetre(4), centimetre(5), mile(6), yard(7), foot(8), minutesOfTime(9), tonnes(10), hundredkg(11), pound(12), rateOfIncline(13), durationinminutes(14) } (0..15)
*/
struct EXTERN Code_Units {
   enum Root {
      kmperh = 0,
      milesperh = 1,
      kilometre = 2,
      metre = 3,
      decimetre = 4,
      centimetre = 5,
      mile = 6,
      yard = 7,
      foot = 8,
      minutesOfTime = 9,
      tonnes = 10,
      hundredkg = 11,
      pound = 12,
      rateOfIncline = 13,
      durationinminutes = 14
   } ;
} ;

typedef OSUINT8 ASN1T_Code_Units;

EXTERN int asn1PE_Code_Units (OSCTXT* pctxt, ASN1T_Code_Units value);

EXTERN int asn1PD_Code_Units (OSCTXT* pctxt, ASN1T_Code_Units* pvalue);

EXTERN int XmlEnc_Code_Units (OSCTXT* pctxt, ASN1T_Code_Units value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Code_Units (OSCTXT* pctxt, ASN1T_Code_Units* pvalue);

EXTERN int asn1JsonEnc_Code_Units (OSCTXT *pctxt, ASN1T_Code_Units *pvalue);

EXTERN int asn1JsonDec_Code_Units (OSCTXT *pctxt, ASN1T_Code_Units *pvalue);

EXTERN int asn1PrtToStrm_Code_Units (OSCTXT *pctxt, 
   const char* name, const ASN1T_Code_Units* pvalue);

EXTERN ASN1T_Code_Units* new_ASN1T_Code_Units (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  Distance                                                  */
/*                                                            */
/**************************************************************/
/*
Distance ::= SEQUENCE {
   value [0] INTEGER (1..16384),
   unit [1] Code-Units (2..4 | 6..8)
}
*/
struct EXTERN ASN1T_Distance {
   OSUINT16 value;
   OSUINT8 unit;
} ;

EXTERN int asn1PE_Distance (OSCTXT* pctxt, ASN1T_Distance* pvalue);

EXTERN int asn1PD_Distance (OSCTXT* pctxt, ASN1T_Distance* pvalue);

EXTERN int XmlEnc_Distance (OSCTXT* pctxt, ASN1T_Distance* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Distance (OSCTXT* pctxt, ASN1T_Distance* pvalue);

EXTERN int asn1JsonEnc_Distance (OSCTXT *pctxt, ASN1T_Distance *pvalue);

EXTERN int asn1JsonDec_Distance (OSCTXT *pctxt, ASN1T_Distance *pvalue);

EXTERN int asn1PrtToStrm_Distance (OSCTXT *pctxt, 
   const char* name, const ASN1T_Distance* pvalue);

EXTERN ASN1T_Distance* new_ASN1T_Distance (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  Weight                                                    */
/*                                                            */
/**************************************************************/
/*
Weight ::= SEQUENCE {
   value [0] INTEGER (1..16384),
   unit [1] Code-Units (10..12)
}
*/
struct EXTERN ASN1T_Weight {
   OSUINT16 value;
   OSUINT8 unit;
} ;

EXTERN int asn1PE_Weight (OSCTXT* pctxt, ASN1T_Weight* pvalue);

EXTERN int asn1PD_Weight (OSCTXT* pctxt, ASN1T_Weight* pvalue);

EXTERN int XmlEnc_Weight (OSCTXT* pctxt, ASN1T_Weight* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Weight (OSCTXT* pctxt, ASN1T_Weight* pvalue);

EXTERN int asn1JsonEnc_Weight (OSCTXT *pctxt, ASN1T_Weight *pvalue);

EXTERN int asn1JsonDec_Weight (OSCTXT *pctxt, ASN1T_Weight *pvalue);

EXTERN int asn1PrtToStrm_Weight (OSCTXT *pctxt, 
   const char* name, const ASN1T_Weight* pvalue);

EXTERN ASN1T_Weight* new_ASN1T_Weight (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  InternationalSign_applicableVehicleDimensions             */
/*                                                            */
/**************************************************************/
/*
InternationalSign-applicableVehicleDimensions ::= SEQUENCE {
   vehicleHeight [0] Distance OPTIONAL,
   vehicleWidth [1] Distance OPTIONAL,
   vehicleLength [2] Distance OPTIONAL,
   vehicleWeight [3] Weight OPTIONAL
}
*/
struct EXTERN ASN1T_InternationalSign_applicableVehicleDimensions {
   struct {
      unsigned vehicleHeightPresent : 1;
      unsigned vehicleWidthPresent : 1;
      unsigned vehicleLengthPresent : 1;
      unsigned vehicleWeightPresent : 1;
   } m;
   ASN1T_Distance vehicleHeight;
   ASN1T_Distance vehicleWidth;
   ASN1T_Distance vehicleLength;
   ASN1T_Weight vehicleWeight;
   ASN1T_InternationalSign_applicableVehicleDimensions ();
} ;

EXTERN int asn1PE_InternationalSign_applicableVehicleDimensions (OSCTXT* pctxt, ASN1T_InternationalSign_applicableVehicleDimensions* pvalue);

EXTERN int asn1PD_InternationalSign_applicableVehicleDimensions (OSCTXT* pctxt, ASN1T_InternationalSign_applicableVehicleDimensions* pvalue);

EXTERN int XmlEnc_InternationalSign_applicableVehicleDimensions 
   (OSCTXT* pctxt, 
   ASN1T_InternationalSign_applicableVehicleDimensions* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_InternationalSign_applicableVehicleDimensions 
   (OSCTXT* pctxt, ASN1T_InternationalSign_applicableVehicleDimensions* pvalue)
   ;

EXTERN int asn1JsonEnc_InternationalSign_applicableVehicleDimensions (OSCTXT *pctxt, ASN1T_InternationalSign_applicableVehicleDimensions *pvalue);

EXTERN int asn1JsonDec_InternationalSign_applicableVehicleDimensions (OSCTXT *pctxt, ASN1T_InternationalSign_applicableVehicleDimensions *pvalue);

EXTERN int asn1PrtToStrm_InternationalSign_applicableVehicleDimensions (OSCTXT *pctxt, 
   const char* name, const ASN1T_InternationalSign_applicableVehicleDimensions* pvalue);

EXTERN ASN1T_InternationalSign_applicableVehicleDimensions* 
   new_ASN1T_InternationalSign_applicableVehicleDimensions (ASN1CType& ccobj);

EXTERN int asn1Init_InternationalSign_applicableVehicleDimensions (
   ASN1T_InternationalSign_applicableVehicleDimensions* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

/**************************************************************/
/*                                                            */
/*  InternationalSign_speedLimits                             */
/*                                                            */
/**************************************************************/
/*
InternationalSign-speedLimits ::= SEQUENCE {
   speedLimitMax [0] INTEGER (0..250) OPTIONAL,
   speedLimitMin [1] INTEGER (0..250) OPTIONAL,
   unit [2] Code-Units (0..1)
}
*/
struct EXTERN ASN1T_InternationalSign_speedLimits {
   struct {
      unsigned speedLimitMaxPresent : 1;
      unsigned speedLimitMinPresent : 1;
   } m;
   OSUINT8 speedLimitMax;
   OSUINT8 speedLimitMin;
   OSUINT8 unit;
   ASN1T_InternationalSign_speedLimits ();
} ;

EXTERN int asn1PE_InternationalSign_speedLimits (OSCTXT* pctxt, ASN1T_InternationalSign_speedLimits* pvalue);

EXTERN int asn1PD_InternationalSign_speedLimits (OSCTXT* pctxt, ASN1T_InternationalSign_speedLimits* pvalue);

EXTERN int XmlEnc_InternationalSign_speedLimits (OSCTXT* pctxt, 
   ASN1T_InternationalSign_speedLimits* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_InternationalSign_speedLimits (OSCTXT* pctxt, 
   ASN1T_InternationalSign_speedLimits* pvalue);

EXTERN int asn1JsonEnc_InternationalSign_speedLimits (OSCTXT *pctxt, ASN1T_InternationalSign_speedLimits *pvalue);

EXTERN int asn1JsonDec_InternationalSign_speedLimits (OSCTXT *pctxt, ASN1T_InternationalSign_speedLimits *pvalue);

EXTERN int asn1PrtToStrm_InternationalSign_speedLimits (OSCTXT *pctxt, 
   const char* name, const ASN1T_InternationalSign_speedLimits* pvalue);

EXTERN ASN1T_InternationalSign_speedLimits* 
   new_ASN1T_InternationalSign_speedLimits (ASN1CType& ccobj);

EXTERN int asn1Init_InternationalSign_speedLimits (
   ASN1T_InternationalSign_speedLimits* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

/**************************************************************/
/*                                                            */
/*  InternationalSign_rateOfIncline                           */
/*                                                            */
/**************************************************************/
/*
InternationalSign-rateOfIncline ::= INTEGER (1..32)
*/
typedef OSUINT8 ASN1T_InternationalSign_rateOfIncline;

EXTERN int asn1PE_InternationalSign_rateOfIncline (OSCTXT* pctxt, ASN1T_InternationalSign_rateOfIncline value);

EXTERN int asn1PD_InternationalSign_rateOfIncline (OSCTXT* pctxt, ASN1T_InternationalSign_rateOfIncline* pvalue);

EXTERN int XmlEnc_InternationalSign_rateOfIncline (OSCTXT* pctxt, 
   ASN1T_InternationalSign_rateOfIncline value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_InternationalSign_rateOfIncline (OSCTXT* pctxt, 
   ASN1T_InternationalSign_rateOfIncline* pvalue);

EXTERN int asn1JsonEnc_InternationalSign_rateOfIncline (OSCTXT *pctxt, ASN1T_InternationalSign_rateOfIncline *pvalue);

EXTERN int asn1JsonDec_InternationalSign_rateOfIncline (OSCTXT *pctxt, ASN1T_InternationalSign_rateOfIncline *pvalue);

EXTERN int asn1PrtToStrm_InternationalSign_rateOfIncline (OSCTXT *pctxt, 
   const char* name, const ASN1T_InternationalSign_rateOfIncline* pvalue);

EXTERN ASN1T_InternationalSign_rateOfIncline* 
   new_ASN1T_InternationalSign_rateOfIncline (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  InternationalSign_distanceBetweenVehicles                 */
/*                                                            */
/**************************************************************/
/*
InternationalSign-distanceBetweenVehicles ::= Distance
*/
typedef ASN1T_Distance ASN1T_InternationalSign_distanceBetweenVehicles;

EXTERN int asn1PE_InternationalSign_distanceBetweenVehicles (OSCTXT* pctxt, ASN1T_InternationalSign_distanceBetweenVehicles* pvalue);

EXTERN int asn1PD_InternationalSign_distanceBetweenVehicles (OSCTXT* pctxt, ASN1T_InternationalSign_distanceBetweenVehicles* pvalue);

EXTERN int XmlEnc_InternationalSign_distanceBetweenVehicles (OSCTXT* pctxt, 
   ASN1T_InternationalSign_distanceBetweenVehicles* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_InternationalSign_distanceBetweenVehicles (OSCTXT* pctxt, 
   ASN1T_InternationalSign_distanceBetweenVehicles* pvalue);

EXTERN int asn1JsonEnc_InternationalSign_distanceBetweenVehicles (OSCTXT *pctxt, ASN1T_InternationalSign_distanceBetweenVehicles *pvalue);

EXTERN int asn1JsonDec_InternationalSign_distanceBetweenVehicles (OSCTXT *pctxt, ASN1T_InternationalSign_distanceBetweenVehicles *pvalue);

EXTERN int asn1PrtToStrm_InternationalSign_distanceBetweenVehicles (OSCTXT *pctxt, 
   const char* name, const ASN1T_InternationalSign_distanceBetweenVehicles* pvalue);

EXTERN ASN1T_InternationalSign_distanceBetweenVehicles* 
   new_ASN1T_InternationalSign_distanceBetweenVehicles (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  DestinationType                                           */
/*                                                            */
/**************************************************************/
/*
DestinationType ::= INTEGER { none(0), importantArea(1), principalArea(2), generalArea(3), wellKnownPoint(4), country(5), city(6), street(7), industrialArea(8), historicArea(9), touristicArea(10), culturalArea(11), touristicRoute(12), recommendedRoute(13), touristicAttraction(14), geographicArea(15) } (0..15, ...)
*/
struct EXTERN DestinationType {
   enum Root {
      none = 0,
      importantArea = 1,
      principalArea = 2,
      generalArea = 3,
      wellKnownPoint = 4,
      country = 5,
      city = 6,
      street = 7,
      industrialArea = 8,
      historicArea = 9,
      touristicArea = 10,
      culturalArea = 11,
      touristicRoute = 12,
      recommendedRoute = 13,
      touristicAttraction = 14,
      geographicArea = 15
   } ;
} ;

typedef OSUINT32 ASN1T_DestinationType;

EXTERN int asn1PE_DestinationType (OSCTXT* pctxt, ASN1T_DestinationType value);

EXTERN int asn1PD_DestinationType (OSCTXT* pctxt, ASN1T_DestinationType* pvalue);

EXTERN int XmlEnc_DestinationType (OSCTXT* pctxt, ASN1T_DestinationType value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_DestinationType (OSCTXT* pctxt, ASN1T_DestinationType* pvalue
   );

EXTERN int asn1JsonEnc_DestinationType (OSCTXT *pctxt, ASN1T_DestinationType *pvalue);

EXTERN int asn1JsonDec_DestinationType (OSCTXT *pctxt, ASN1T_DestinationType *pvalue);

EXTERN int asn1PrtToStrm_DestinationType (OSCTXT *pctxt, 
   const char* name, const ASN1T_DestinationType* pvalue);

EXTERN ASN1T_DestinationType* new_ASN1T_DestinationType (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  GddStructure_pictogramCode_serviceCategoryCode_trafficSi  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'GddStructure'
*/
struct EXTERN GddStructure_pictogramCode_serviceCategoryCode_trafficSignPictogram {
   enum Root {
      dangerWarning = 0,
      regulatory = 1,
      informative = 2
   } ;
} ;

typedef OSUINT32 ASN1T_GddStructure_pictogramCode_serviceCategoryCode_trafficSignPictogram;

EXTERN int asn1PE_GddStructure_pictogramCode_serviceCategoryCode_trafficSignPictogram (OSCTXT* pctxt, ASN1T_GddStructure_pictogramCode_serviceCategoryCode_trafficSignPictogram value);

EXTERN int asn1PD_GddStructure_pictogramCode_serviceCategoryCode_trafficSignPictogram (OSCTXT* pctxt, ASN1T_GddStructure_pictogramCode_serviceCategoryCode_trafficSignPictogram* pvalue);

EXTERN 
   int XmlEnc_GddStructure_pictogramCode_serviceCategoryCode_trafficSignPictogram 
   (OSCTXT* pctxt, 
   ASN1T_GddStructure_pictogramCode_serviceCategoryCode_trafficSignPictogram value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN 
   int XmlDec_GddStructure_pictogramCode_serviceCategoryCode_trafficSignPictogram 
   (OSCTXT* pctxt, 
   ASN1T_GddStructure_pictogramCode_serviceCategoryCode_trafficSignPictogram* pvalue
   );

EXTERN int asn1JsonEnc_GddStructure_pictogramCode_serviceCategoryCode_trafficSignPictogram (OSCTXT *pctxt, ASN1T_GddStructure_pictogramCode_serviceCategoryCode_trafficSignPictogram *pvalue);

EXTERN int asn1JsonDec_GddStructure_pictogramCode_serviceCategoryCode_trafficSignPictogram (OSCTXT *pctxt, ASN1T_GddStructure_pictogramCode_serviceCategoryCode_trafficSignPictogram *pvalue);

EXTERN int asn1PrtToStrm_GddStructure_pictogramCode_serviceCategoryCode_trafficSignPictogram (OSCTXT *pctxt, 
   const char* name, const ASN1T_GddStructure_pictogramCode_serviceCategoryCode_trafficSignPictogram* pvalue);

EXTERN 
   ASN1T_GddStructure_pictogramCode_serviceCategoryCode_trafficSignPictogram* 
   new_ASN1T_GddStructure_pictogramCode_serviceCategoryCode_trafficSignPictogram (ASN1CType& ccobj)
   ;

EXTERN extern const OSEnumItem ASN1T_GddStructure_pictogramCode_serviceCategoryCode_trafficSignPictogram_ENUMTAB[];
#define ASN1T_GddStructure_pictogramCode_serviceCategoryCode_trafficSignPictogram_ENUMTABSIZE 3

EXTERN const OSUTF8CHAR* ASN1T_GddStructure_pictogramCode_serviceCategoryCode_trafficSignPictogram_ToString (OSINT32 value);

EXTERN 
   int ASN1T_GddStructure_pictogramCode_serviceCategoryCode_trafficSignPictogram_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, 
      ASN1T_GddStructure_pictogramCode_serviceCategoryCode_trafficSignPictogram* pvalue)
      ;

EXTERN 
   int ASN1T_GddStructure_pictogramCode_serviceCategoryCode_trafficSignPictogram_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      ASN1T_GddStructure_pictogramCode_serviceCategoryCode_trafficSignPictogram* pvalue)
      ;

/**************************************************************/
/*                                                            */
/*  GddStructure_pictogramCode_serviceCategoryCode_publicFac  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'GddStructure'
*/
struct EXTERN GddStructure_pictogramCode_serviceCategoryCode_publicFacilitiesPictogram {
   enum Root {
      publicFacilities = 0
   } ;
} ;

typedef OSUINT32 ASN1T_GddStructure_pictogramCode_serviceCategoryCode_publicFacilitiesPictogram;

EXTERN int asn1PE_GddStructure_pictogramCode_serviceCategoryCode_publicFacilitiesPictogram (OSCTXT* pctxt, ASN1T_GddStructure_pictogramCode_serviceCategoryCode_publicFacilitiesPictogram value);

EXTERN int asn1PD_GddStructure_pictogramCode_serviceCategoryCode_publicFacilitiesPictogram (OSCTXT* pctxt, ASN1T_GddStructure_pictogramCode_serviceCategoryCode_publicFacilitiesPictogram* pvalue);

EXTERN 
   int XmlEnc_GddStructure_pictogramCode_serviceCategoryCode_publicFacilitiesPictogram 
   (OSCTXT* pctxt, 
   ASN1T_GddStructure_pictogramCode_serviceCategoryCode_publicFacilitiesPictogram value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN 
   int XmlDec_GddStructure_pictogramCode_serviceCategoryCode_publicFacilitiesPictogram 
   (OSCTXT* pctxt, 
   ASN1T_GddStructure_pictogramCode_serviceCategoryCode_publicFacilitiesPictogram* pvalue
   );

EXTERN int asn1JsonEnc_GddStructure_pictogramCode_serviceCategoryCode_publicFacilitiesPictogram (OSCTXT *pctxt, ASN1T_GddStructure_pictogramCode_serviceCategoryCode_publicFacilitiesPictogram *pvalue);

EXTERN int asn1JsonDec_GddStructure_pictogramCode_serviceCategoryCode_publicFacilitiesPictogram (OSCTXT *pctxt, ASN1T_GddStructure_pictogramCode_serviceCategoryCode_publicFacilitiesPictogram *pvalue);

EXTERN int asn1PrtToStrm_GddStructure_pictogramCode_serviceCategoryCode_publicFacilitiesPictogram (OSCTXT *pctxt, 
   const char* name, const ASN1T_GddStructure_pictogramCode_serviceCategoryCode_publicFacilitiesPictogram* pvalue);

EXTERN 
   ASN1T_GddStructure_pictogramCode_serviceCategoryCode_publicFacilitiesPictogram* 
   new_ASN1T_GddStructure_pictogramCode_serviceCategoryCode_publicFacilitiesPictogram (ASN1CType& ccobj)
   ;

EXTERN extern const OSEnumItem ASN1T_GddStructure_pictogramCode_serviceCategoryCode_publicFacilitiesPictogram_ENUMTAB[];
#define ASN1T_GddStructure_pictogramCode_serviceCategoryCode_publicFacilitiesPictogram_ENUMTABSIZE 1

EXTERN const OSUTF8CHAR* ASN1T_GddStructure_pictogramCode_serviceCategoryCode_publicFacilitiesPictogram_ToString (OSINT32 value);

EXTERN 
   int ASN1T_GddStructure_pictogramCode_serviceCategoryCode_publicFacilitiesPictogram_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, 
      ASN1T_GddStructure_pictogramCode_serviceCategoryCode_publicFacilitiesPictogram* pvalue)
      ;

EXTERN 
   int ASN1T_GddStructure_pictogramCode_serviceCategoryCode_publicFacilitiesPictogram_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      ASN1T_GddStructure_pictogramCode_serviceCategoryCode_publicFacilitiesPictogram* pvalue)
      ;

/**************************************************************/
/*                                                            */
/*  GddStructure_pictogramCode_serviceCategoryCode_ambientOr  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'GddStructure'
*/
struct EXTERN GddStructure_pictogramCode_serviceCategoryCode_ambientOrRoadConditionPictogram {
   enum Root {
      ambientCondition = 0,
      roadCondition = 1
   } ;
} ;

typedef OSUINT32 ASN1T_GddStructure_pictogramCode_serviceCategoryCode_ambientOrRoadConditionPictogram;

EXTERN int asn1PE_GddStructure_pictogramCode_serviceCategoryCode_ambientOrRoadConditionPictogram (OSCTXT* pctxt, ASN1T_GddStructure_pictogramCode_serviceCategoryCode_ambientOrRoadConditionPictogram value);

EXTERN int asn1PD_GddStructure_pictogramCode_serviceCategoryCode_ambientOrRoadConditionPictogram (OSCTXT* pctxt, ASN1T_GddStructure_pictogramCode_serviceCategoryCode_ambientOrRoadConditionPictogram* pvalue);

EXTERN 
   int XmlEnc_GddStructure_pictogramCode_serviceCategoryCode_ambientOrRoadConditionPictogram 
   (OSCTXT* pctxt, 
   ASN1T_GddStructure_pictogramCode_serviceCategoryCode_ambientOrRoadConditionPictogram value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN 
   int XmlDec_GddStructure_pictogramCode_serviceCategoryCode_ambientOrRoadConditionPictogram 
   (OSCTXT* pctxt, 
   ASN1T_GddStructure_pictogramCode_serviceCategoryCode_ambientOrRoadConditionPictogram* pvalue
   );

EXTERN int asn1JsonEnc_GddStructure_pictogramCode_serviceCategoryCode_ambientOrRoadConditionPictogram (OSCTXT *pctxt, ASN1T_GddStructure_pictogramCode_serviceCategoryCode_ambientOrRoadConditionPictogram *pvalue);

EXTERN int asn1JsonDec_GddStructure_pictogramCode_serviceCategoryCode_ambientOrRoadConditionPictogram (OSCTXT *pctxt, ASN1T_GddStructure_pictogramCode_serviceCategoryCode_ambientOrRoadConditionPictogram *pvalue);

EXTERN int asn1PrtToStrm_GddStructure_pictogramCode_serviceCategoryCode_ambientOrRoadConditionPictogram (OSCTXT *pctxt, 
   const char* name, const ASN1T_GddStructure_pictogramCode_serviceCategoryCode_ambientOrRoadConditionPictogram* pvalue);

EXTERN 
   ASN1T_GddStructure_pictogramCode_serviceCategoryCode_ambientOrRoadConditionPictogram* 
   new_ASN1T_GddStructure_pictogramCode_serviceCategoryCode_ambientOrRoadConditionPictogram (ASN1CType& ccobj)
   ;

EXTERN extern const OSEnumItem ASN1T_GddStructure_pictogramCode_serviceCategoryCode_ambientOrRoadConditionPictogram_ENUMTAB[];
#define ASN1T_GddStructure_pictogramCode_serviceCategoryCode_ambientOrRoadConditionPictogram_ENUMTABSIZE 2

EXTERN const OSUTF8CHAR* ASN1T_GddStructure_pictogramCode_serviceCategoryCode_ambientOrRoadConditionPictogram_ToString (OSINT32 value);

EXTERN 
   int ASN1T_GddStructure_pictogramCode_serviceCategoryCode_ambientOrRoadConditionPictogram_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, 
      ASN1T_GddStructure_pictogramCode_serviceCategoryCode_ambientOrRoadConditionPictogram* pvalue)
      ;

EXTERN 
   int ASN1T_GddStructure_pictogramCode_serviceCategoryCode_ambientOrRoadConditionPictogram_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      ASN1T_GddStructure_pictogramCode_serviceCategoryCode_ambientOrRoadConditionPictogram* pvalue)
      ;

/**************************************************************/
/*                                                            */
/*  GddStructure_pictogramCode_serviceCategoryCode            */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'GddStructure'
*/
/* Choice tag constants */

#define T_GddStructure_pictogramCode_serviceCategoryCode_trafficSignPictogram 1
#define T_GddStructure_pictogramCode_serviceCategoryCode_publicFacilitiesPictogram 2
#define T_GddStructure_pictogramCode_serviceCategoryCode_ambientOrRoadConditionPictogram 3
#define T_GddStructure_pictogramCode_serviceCategoryCode_extElem1 4

struct EXTERN ASN1T_GddStructure_pictogramCode_serviceCategoryCode {
   OSINT32 t;
   union {
      /* t = 1 */
      ASN1T_GddStructure_pictogramCode_serviceCategoryCode_trafficSignPictogram trafficSignPictogram;
      /* t = 2 */
      ASN1T_GddStructure_pictogramCode_serviceCategoryCode_publicFacilitiesPictogram publicFacilitiesPictogram;
      /* t = 3 */
      ASN1T_GddStructure_pictogramCode_serviceCategoryCode_ambientOrRoadConditionPictogram ambientOrRoadConditionPictogram;
      /* t = 4 */
      ASN1TOpenType *extElem1;
   } u;
   ASN1T_GddStructure_pictogramCode_serviceCategoryCode () { t = 0; OSCRTLMEMSET (&u, 0, sizeof(u)); }
} ;

EXTERN int asn1PE_GddStructure_pictogramCode_serviceCategoryCode (OSCTXT* pctxt, ASN1T_GddStructure_pictogramCode_serviceCategoryCode* pvalue);

EXTERN int asn1PD_GddStructure_pictogramCode_serviceCategoryCode (OSCTXT* pctxt, ASN1T_GddStructure_pictogramCode_serviceCategoryCode* pvalue);

EXTERN int XmlEnc_GddStructure_pictogramCode_serviceCategoryCode 
   (OSCTXT* pctxt, 
   ASN1T_GddStructure_pictogramCode_serviceCategoryCode* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_GddStructure_pictogramCode_serviceCategoryCode 
   (OSCTXT* pctxt, ASN1T_GddStructure_pictogramCode_serviceCategoryCode* pvalue
   );

EXTERN int asn1JsonEnc_GddStructure_pictogramCode_serviceCategoryCode (OSCTXT *pctxt, ASN1T_GddStructure_pictogramCode_serviceCategoryCode *pvalue);

EXTERN int asn1JsonDec_GddStructure_pictogramCode_serviceCategoryCode (OSCTXT *pctxt, ASN1T_GddStructure_pictogramCode_serviceCategoryCode *pvalue);

EXTERN int asn1PrtToStrm_GddStructure_pictogramCode_serviceCategoryCode (OSCTXT *pctxt, 
   const char* name, const ASN1T_GddStructure_pictogramCode_serviceCategoryCode* pvalue);

EXTERN ASN1T_GddStructure_pictogramCode_serviceCategoryCode* 
   new_ASN1T_GddStructure_pictogramCode_serviceCategoryCode (ASN1CType& ccobj)
   ;

EXTERN int asn1Init_GddStructure_pictogramCode_serviceCategoryCode (
   ASN1T_GddStructure_pictogramCode_serviceCategoryCode* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_GddStructure_pictogramCode_serviceCategoryCode (OSCTXT *pctxt, 
   ASN1T_GddStructure_pictogramCode_serviceCategoryCode* pvalue);

/**************************************************************/
/*                                                            */
/*  GddStructure_pictogramCode_pictogramCategoryCode          */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'GddStructure'
*/
struct EXTERN ASN1T_GddStructure_pictogramCode_pictogramCategoryCode {
   OSUINT8 nature;
   OSUINT8 serialNumber;
} ;

EXTERN int asn1PE_GddStructure_pictogramCode_pictogramCategoryCode (OSCTXT* pctxt, ASN1T_GddStructure_pictogramCode_pictogramCategoryCode* pvalue);

EXTERN int asn1PD_GddStructure_pictogramCode_pictogramCategoryCode (OSCTXT* pctxt, ASN1T_GddStructure_pictogramCode_pictogramCategoryCode* pvalue);

EXTERN int XmlEnc_GddStructure_pictogramCode_pictogramCategoryCode 
   (OSCTXT* pctxt, 
   ASN1T_GddStructure_pictogramCode_pictogramCategoryCode* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_GddStructure_pictogramCode_pictogramCategoryCode 
   (OSCTXT* pctxt, 
   ASN1T_GddStructure_pictogramCode_pictogramCategoryCode* pvalue);

EXTERN int asn1JsonEnc_GddStructure_pictogramCode_pictogramCategoryCode (OSCTXT *pctxt, ASN1T_GddStructure_pictogramCode_pictogramCategoryCode *pvalue);

EXTERN int asn1JsonDec_GddStructure_pictogramCode_pictogramCategoryCode (OSCTXT *pctxt, ASN1T_GddStructure_pictogramCode_pictogramCategoryCode *pvalue);

EXTERN int asn1PrtToStrm_GddStructure_pictogramCode_pictogramCategoryCode (OSCTXT *pctxt, 
   const char* name, const ASN1T_GddStructure_pictogramCode_pictogramCategoryCode* pvalue);

EXTERN ASN1T_GddStructure_pictogramCode_pictogramCategoryCode* 
   new_ASN1T_GddStructure_pictogramCode_pictogramCategoryCode (ASN1CType& ccobj)
   ;

/**************************************************************/
/*                                                            */
/*  GddStructure_pictogramCode                                */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'GddStructure'
*/
struct EXTERN ASN1T_GddStructure_pictogramCode {
   struct {
      unsigned countryCodePresent : 1;
   } m;
   OSOCTET countryCode[2];
   ASN1T_GddStructure_pictogramCode_serviceCategoryCode serviceCategoryCode;
   ASN1T_GddStructure_pictogramCode_pictogramCategoryCode pictogramCategoryCode;
   ASN1T_GddStructure_pictogramCode ();
} ;

EXTERN int asn1PE_GddStructure_pictogramCode (OSCTXT* pctxt, ASN1T_GddStructure_pictogramCode* pvalue);

EXTERN int asn1PD_GddStructure_pictogramCode (OSCTXT* pctxt, ASN1T_GddStructure_pictogramCode* pvalue);

EXTERN int XmlEnc_GddStructure_pictogramCode (OSCTXT* pctxt, 
   ASN1T_GddStructure_pictogramCode* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_GddStructure_pictogramCode (OSCTXT* pctxt, 
   ASN1T_GddStructure_pictogramCode* pvalue);

EXTERN int asn1JsonEnc_GddStructure_pictogramCode (OSCTXT *pctxt, ASN1T_GddStructure_pictogramCode *pvalue);

EXTERN int asn1JsonDec_GddStructure_pictogramCode (OSCTXT *pctxt, ASN1T_GddStructure_pictogramCode *pvalue);

EXTERN int asn1PrtToStrm_GddStructure_pictogramCode (OSCTXT *pctxt, 
   const char* name, const ASN1T_GddStructure_pictogramCode* pvalue);

EXTERN ASN1T_GddStructure_pictogramCode* 
   new_ASN1T_GddStructure_pictogramCode (ASN1CType& ccobj);

EXTERN int asn1Init_GddStructure_pictogramCode (
   ASN1T_GddStructure_pictogramCode* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_GddStructure_pictogramCode (OSCTXT *pctxt, 
   ASN1T_GddStructure_pictogramCode* pvalue);

/**************************************************************/
/*                                                            */
/*  InternationalSign_section                                 */
/*                                                            */
/**************************************************************/
/*
InternationalSign-section ::= SEQUENCE {
   startingPointLength [0] Distance OPTIONAL,
   continuityLength [1] Distance OPTIONAL
}
*/
struct EXTERN ASN1T_InternationalSign_section {
   struct {
      unsigned startingPointLengthPresent : 1;
      unsigned continuityLengthPresent : 1;
   } m;
   ASN1T_Distance startingPointLength;
   ASN1T_Distance continuityLength;
   ASN1T_InternationalSign_section ();
} ;

EXTERN int asn1PE_InternationalSign_section (OSCTXT* pctxt, ASN1T_InternationalSign_section* pvalue);

EXTERN int asn1PD_InternationalSign_section (OSCTXT* pctxt, ASN1T_InternationalSign_section* pvalue);

EXTERN int XmlEnc_InternationalSign_section (OSCTXT* pctxt, 
   ASN1T_InternationalSign_section* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_InternationalSign_section (OSCTXT* pctxt, 
   ASN1T_InternationalSign_section* pvalue);

EXTERN int asn1JsonEnc_InternationalSign_section (OSCTXT *pctxt, ASN1T_InternationalSign_section *pvalue);

EXTERN int asn1JsonDec_InternationalSign_section (OSCTXT *pctxt, ASN1T_InternationalSign_section *pvalue);

EXTERN int asn1PrtToStrm_InternationalSign_section (OSCTXT *pctxt, 
   const char* name, const ASN1T_InternationalSign_section* pvalue);

EXTERN ASN1T_InternationalSign_section* 
   new_ASN1T_InternationalSign_section (ASN1CType& ccobj);

EXTERN int asn1Init_InternationalSign_section (
   ASN1T_InternationalSign_section* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

/**************************************************************/
/*                                                            */
/*  InternationalSign_numberOfLane                            */
/*                                                            */
/**************************************************************/
/*
InternationalSign-numberOfLane ::= INTEGER (0..99)
*/
typedef OSUINT8 ASN1T_InternationalSign_numberOfLane;

EXTERN int asn1PE_InternationalSign_numberOfLane (OSCTXT* pctxt, ASN1T_InternationalSign_numberOfLane value);

EXTERN int asn1PD_InternationalSign_numberOfLane (OSCTXT* pctxt, ASN1T_InternationalSign_numberOfLane* pvalue);

EXTERN int XmlEnc_InternationalSign_numberOfLane (OSCTXT* pctxt, 
   ASN1T_InternationalSign_numberOfLane value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_InternationalSign_numberOfLane (OSCTXT* pctxt, 
   ASN1T_InternationalSign_numberOfLane* pvalue);

EXTERN int asn1JsonEnc_InternationalSign_numberOfLane (OSCTXT *pctxt, ASN1T_InternationalSign_numberOfLane *pvalue);

EXTERN int asn1JsonDec_InternationalSign_numberOfLane (OSCTXT *pctxt, ASN1T_InternationalSign_numberOfLane *pvalue);

EXTERN int asn1PrtToStrm_InternationalSign_numberOfLane (OSCTXT *pctxt, 
   const char* name, const ASN1T_InternationalSign_numberOfLane* pvalue);

EXTERN ASN1T_InternationalSign_numberOfLane* 
   new_ASN1T_InternationalSign_numberOfLane (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  GddAttribute                                              */
/*                                                            */
/**************************************************************/
/*
GddAttribute ::= CHOICE {
   dtm [0] InternationalSign-applicablePeriod, -- Date/Time/Period
   edt [1] InternationalSign-exemptedApplicablePeriod, -- Exemption status of Date/Time/Period
   dfl [2] InternationalSign-directionalFlowOfLane, -- Directional Flow of Lane
   ved [3] InternationalSign-applicableVehicleDimensions, -- Vehicle Dimensions
   spe [4] InternationalSign-speedLimits, -- Speed
   roi [5] InternationalSign-rateOfIncline, -- Rate of Incline
   dbv [6] InternationalSign-distanceBetweenVehicles, -- Distance Between Vehicles
   ddd [7] InternationalSign-destinationInformation, -- Destination/Direction/Distance
   set [8] InternationalSign-section, -- Section
   nol [9] InternationalSign-numberOfLane
}
*/
/* Choice tag constants */

#define T_GddAttribute_dtm              1
#define T_GddAttribute_edt              2
#define T_GddAttribute_dfl              3
#define T_GddAttribute_ved              4
#define T_GddAttribute_spe              5
#define T_GddAttribute_roi              6
#define T_GddAttribute_dbv              7
#define T_GddAttribute_ddd              8
#define T_GddAttribute_set              9
#define T_GddAttribute_nol              10

struct EXTERN ASN1T_GddAttribute {
   OSINT32 t;
   union {
      /* t = 1 */
      ASN1T_InternationalSign_applicablePeriod *dtm;
      /* t = 2 */
      ASN1T_InternationalSign_exemptedApplicablePeriod *edt;
      /* t = 3 */
      ASN1T_InternationalSign_directionalFlowOfLane dfl;
      /* t = 4 */
      ASN1T_InternationalSign_applicableVehicleDimensions *ved;
      /* t = 5 */
      ASN1T_InternationalSign_speedLimits *spe;
      /* t = 6 */
      ASN1T_InternationalSign_rateOfIncline roi;
      /* t = 7 */
      ASN1T_InternationalSign_distanceBetweenVehicles *dbv;
      /* t = 8 */
      struct ASN1T_InternationalSign_destinationInformation *ddd;
      /* t = 9 */
      ASN1T_InternationalSign_section *set;
      /* t = 10 */
      ASN1T_InternationalSign_numberOfLane nol;
   } u;
   ASN1T_GddAttribute () { t = 0; OSCRTLMEMSET (&u, 0, sizeof(u)); }
} ;

EXTERN int asn1PE_GddAttribute (OSCTXT* pctxt, ASN1T_GddAttribute* pvalue);

EXTERN int asn1PD_GddAttribute (OSCTXT* pctxt, ASN1T_GddAttribute* pvalue);

EXTERN int XmlEnc_GddAttribute (OSCTXT* pctxt, ASN1T_GddAttribute* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_GddAttribute (OSCTXT* pctxt, ASN1T_GddAttribute* pvalue);

EXTERN int asn1JsonEnc_GddAttribute (OSCTXT *pctxt, ASN1T_GddAttribute *pvalue);

EXTERN int asn1JsonDec_GddAttribute (OSCTXT *pctxt, ASN1T_GddAttribute *pvalue);

EXTERN int asn1PrtToStrm_GddAttribute (OSCTXT *pctxt, 
   const char* name, const ASN1T_GddAttribute* pvalue);

EXTERN ASN1T_GddAttribute* new_ASN1T_GddAttribute (ASN1CType& ccobj);

EXTERN int asn1Init_GddAttribute (ASN1T_GddAttribute* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_GddAttribute (OSCTXT *pctxt, ASN1T_GddAttribute* pvalue);

/**************************************************************/
/*                                                            */
/*  GddAttributes                                             */
/*                                                            */
/**************************************************************/
/*
 Definition of the single ISO 14823 Attributes
GddAttributes ::= SEQUENCE (SIZE (1..8, ...), ...) OF GddAttribute
*/
/* List of ASN1T_GddAttribute */
typedef ASN1TSeqOfList ASN1T_GddAttributes;

class EXTERN ASN1C_GddAttributes :
public ASN1CSeqOfList
{
protected:
   ASN1T_GddAttributes& msgData;
public:
   /**
    * Control class: ASN1C_GddAttributes
    * Data class:    ASN1T_GddAttributes
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_GddAttributes (ASN1T_GddAttributes& data);

   /**
    * Control class: ASN1C_GddAttributes<br/>
    * Data class: ASN1T_GddAttributes<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_GddAttributes (OSRTMessageBufferIF& msgBuf, ASN1T_GddAttributes& data);

   /**
    * Control class: ASN1C_GddAttributes<br/>
    * Data class: ASN1T_GddAttributes<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_GddAttributes (ASN1CType& ccobj, ASN1T_GddAttributes& data);

   virtual ~ASN1C_GddAttributes () {}

   /**
    * Data class: ASN1T_GddAttribute<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_GddAttribute* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_GddAttribute.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_GddAttribute* NewElement ();

   /**
    * Data class: ASN1T_GddAttribute.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_GddAttribute* AppendNewElement ();

private:
   ASN1C_GddAttributes& operator= (const ASN1C_GddAttributes&) {return *this;}
} ;

EXTERN int asn1PE_GddAttributes (OSCTXT* pctxt, ASN1T_GddAttributes* pvalue);

EXTERN int asn1PD_GddAttributes (OSCTXT* pctxt, ASN1T_GddAttributes* pvalue);

EXTERN int XmlEnc_GddAttributes (OSCTXT* pctxt, ASN1T_GddAttributes* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_GddAttributes (OSCTXT* pctxt, ASN1T_GddAttributes* pvalue);

EXTERN int asn1JsonEnc_GddAttributes (OSCTXT *pctxt, ASN1T_GddAttributes *pvalue);

EXTERN int asn1JsonDec_GddAttributes (OSCTXT *pctxt, ASN1T_GddAttributes *pvalue);

EXTERN int asn1PrtToStrm_GddAttributes (OSCTXT *pctxt, 
   const char* name, const ASN1T_GddAttributes* pvalue);

EXTERN int asn1Init_GddAttributes (ASN1T_GddAttributes* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_GddAttributes (OSCTXT *pctxt, ASN1T_GddAttributes* pvalue);

/**************************************************************/
/*                                                            */
/*  GddStructure                                              */
/*                                                            */
/**************************************************************/
/*
Definition of GDD Structure
GddStructure ::= SEQUENCE {
   pictogramCode [0] SEQUENCE {
      countryCode [0] OCTET STRING (SIZE (2)) OPTIONAL,
      serviceCategoryCode [1] EXPLICIT CHOICE {
         trafficSignPictogram [0] ENUMERATED { dangerWarning(0), regulatory(1), informative(2), ... },
         publicFacilitiesPictogram [1] ENUMERATED { publicFacilities(0), ... },
         ambientOrRoadConditionPictogram [2] ENUMERATED { ambientCondition(0), roadCondition(1), ... },
         ...
      },
      pictogramCategoryCode [2] SEQUENCE {
         nature [0] INTEGER (1..9),
         serialNumber [1] INTEGER (0..99)
      }
   },
   attributes [1] GddAttributes OPTIONAL
}
*/
struct EXTERN ASN1T_GddStructure {
   struct {
      unsigned attributesPresent : 1;
   } m;
   ASN1T_GddStructure_pictogramCode pictogramCode;
   ASN1T_GddAttributes attributes;
   ASN1T_GddStructure ();
} ;

EXTERN int asn1PE_GddStructure (OSCTXT* pctxt, ASN1T_GddStructure* pvalue);

EXTERN int asn1PD_GddStructure (OSCTXT* pctxt, ASN1T_GddStructure* pvalue);

EXTERN int XmlEnc_GddStructure (OSCTXT* pctxt, ASN1T_GddStructure* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_GddStructure (OSCTXT* pctxt, ASN1T_GddStructure* pvalue);

EXTERN int asn1JsonEnc_GddStructure (OSCTXT *pctxt, ASN1T_GddStructure *pvalue);

EXTERN int asn1JsonDec_GddStructure (OSCTXT *pctxt, ASN1T_GddStructure *pvalue);

EXTERN int asn1PrtToStrm_GddStructure (OSCTXT *pctxt, 
   const char* name, const ASN1T_GddStructure* pvalue);

EXTERN ASN1T_GddStructure* new_ASN1T_GddStructure (ASN1CType& ccobj);

EXTERN int asn1Init_GddStructure (ASN1T_GddStructure* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_GddStructure (OSCTXT *pctxt, ASN1T_GddStructure* pvalue);

/**************************************************************/
/*                                                            */
/*  DestinationPlace                                          */
/*                                                            */
/**************************************************************/
/*
DestinationPlace ::= SEQUENCE {
   destType [0] DestinationType,
   destRSCode [1] GddStructure (WITH COMPONENTS {..., attributes ABSENT}) OPTIONAL,
   destBlob [2] OCTET STRING OPTIONAL,
   placeNameIdentification [3] INTEGER (1..999) OPTIONAL,
   placeNameText [4] UTF8String OPTIONAL
}
*/
struct EXTERN ASN1T_DestinationPlace {
   struct {
      unsigned destRSCodePresent : 1;
      unsigned destBlobPresent : 1;
      unsigned placeNameIdentificationPresent : 1;
      unsigned placeNameTextPresent : 1;
   } m;
   ASN1T_DestinationType destType;
   ASN1T_GddStructure destRSCode;
   ASN1TDynOctStr64 destBlob;
   OSUINT16 placeNameIdentification;
   const OSUTF8CHAR* placeNameText;
   ASN1T_DestinationPlace ();
} ;

EXTERN int asn1PE_DestinationPlace (OSCTXT* pctxt, ASN1T_DestinationPlace* pvalue);

EXTERN int asn1PD_DestinationPlace (OSCTXT* pctxt, ASN1T_DestinationPlace* pvalue);

EXTERN int XmlEnc_DestinationPlace (OSCTXT* pctxt, 
   ASN1T_DestinationPlace* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_DestinationPlace (OSCTXT* pctxt, 
   ASN1T_DestinationPlace* pvalue);

EXTERN int asn1JsonEnc_DestinationPlace (OSCTXT *pctxt, ASN1T_DestinationPlace *pvalue);

EXTERN int asn1JsonDec_DestinationPlace (OSCTXT *pctxt, ASN1T_DestinationPlace *pvalue);

EXTERN int asn1PrtToStrm_DestinationPlace (OSCTXT *pctxt, 
   const char* name, const ASN1T_DestinationPlace* pvalue);

EXTERN ASN1T_DestinationPlace* new_ASN1T_DestinationPlace (ASN1CType& ccobj);

EXTERN int asn1Init_DestinationPlace (ASN1T_DestinationPlace* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_DestinationPlace (OSCTXT *pctxt, ASN1T_DestinationPlace* pvalue);

/**************************************************************/
/*                                                            */
/*  DestinationPlaces                                         */
/*                                                            */
/**************************************************************/
/*
DestinationPlaces ::= SEQUENCE (SIZE (1..4, ...)) OF DestinationPlace
*/
/* List of ASN1T_DestinationPlace */
typedef ASN1TSeqOfList ASN1T_DestinationPlaces;

class EXTERN ASN1C_DestinationPlaces :
public ASN1CSeqOfList
{
protected:
   ASN1T_DestinationPlaces& msgData;
public:
   /**
    * Control class: ASN1C_DestinationPlaces
    * Data class:    ASN1T_DestinationPlaces
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_DestinationPlaces (ASN1T_DestinationPlaces& data);

   /**
    * Control class: ASN1C_DestinationPlaces<br/>
    * Data class: ASN1T_DestinationPlaces<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_DestinationPlaces (OSRTMessageBufferIF& msgBuf
      , ASN1T_DestinationPlaces& data);

   /**
    * Control class: ASN1C_DestinationPlaces<br/>
    * Data class: ASN1T_DestinationPlaces<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_DestinationPlaces (ASN1CType& ccobj, ASN1T_DestinationPlaces& data);

   virtual ~ASN1C_DestinationPlaces () {}

   /**
    * Data class: ASN1T_DestinationPlace<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_DestinationPlace* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_DestinationPlace.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_DestinationPlace* NewElement ();

   /**
    * Data class: ASN1T_DestinationPlace.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_DestinationPlace* AppendNewElement ();

private:
   ASN1C_DestinationPlaces& operator= (const ASN1C_DestinationPlaces&) {return *this;}
} ;

EXTERN int asn1PE_DestinationPlaces (OSCTXT* pctxt, ASN1T_DestinationPlaces* pvalue);

EXTERN int asn1PD_DestinationPlaces (OSCTXT* pctxt, ASN1T_DestinationPlaces* pvalue);

EXTERN int XmlEnc_DestinationPlaces (OSCTXT* pctxt, 
   ASN1T_DestinationPlaces* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_DestinationPlaces (OSCTXT* pctxt, 
   ASN1T_DestinationPlaces* pvalue);

EXTERN int asn1JsonEnc_DestinationPlaces (OSCTXT *pctxt, ASN1T_DestinationPlaces *pvalue);

EXTERN int asn1JsonDec_DestinationPlaces (OSCTXT *pctxt, ASN1T_DestinationPlaces *pvalue);

EXTERN int asn1PrtToStrm_DestinationPlaces (OSCTXT *pctxt, 
   const char* name, const ASN1T_DestinationPlaces* pvalue);

EXTERN int asn1Init_DestinationPlaces (ASN1T_DestinationPlaces* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_DestinationPlaces (OSCTXT *pctxt, 
   ASN1T_DestinationPlaces* pvalue);

/**************************************************************/
/*                                                            */
/*  DestinationRoadType                                       */
/*                                                            */
/**************************************************************/
/*
DestinationRoadType ::= INTEGER { none(0), nationalHighway(1), localHighway(2), tollExpresswayMotorway(3), internationalHighway(4), highway(5), expressway(6), nationalRoad(7), regionalProvincialRoad(8), localRoad(9), motorwayJunction(10), diversion(11), rfu1(12), rfu2(13), rfu3(14), rfu4(15) } (0..15, ...)
*/
struct EXTERN DestinationRoadType {
   enum Root {
      none = 0,
      nationalHighway = 1,
      localHighway = 2,
      tollExpresswayMotorway = 3,
      internationalHighway = 4,
      highway = 5,
      expressway = 6,
      nationalRoad = 7,
      regionalProvincialRoad = 8,
      localRoad = 9,
      motorwayJunction = 10,
      diversion = 11,
      rfu1 = 12,
      rfu2 = 13,
      rfu3 = 14,
      rfu4 = 15
   } ;
} ;

typedef OSUINT32 ASN1T_DestinationRoadType;

EXTERN int asn1PE_DestinationRoadType (OSCTXT* pctxt, ASN1T_DestinationRoadType value);

EXTERN int asn1PD_DestinationRoadType (OSCTXT* pctxt, ASN1T_DestinationRoadType* pvalue);

EXTERN int XmlEnc_DestinationRoadType (OSCTXT* pctxt, 
   ASN1T_DestinationRoadType value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_DestinationRoadType (OSCTXT* pctxt, 
   ASN1T_DestinationRoadType* pvalue);

EXTERN int asn1JsonEnc_DestinationRoadType (OSCTXT *pctxt, ASN1T_DestinationRoadType *pvalue);

EXTERN int asn1JsonDec_DestinationRoadType (OSCTXT *pctxt, ASN1T_DestinationRoadType *pvalue);

EXTERN int asn1PrtToStrm_DestinationRoadType (OSCTXT *pctxt, 
   const char* name, const ASN1T_DestinationRoadType* pvalue);

EXTERN ASN1T_DestinationRoadType* 
   new_ASN1T_DestinationRoadType (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  DestinationRoad                                           */
/*                                                            */
/**************************************************************/
/*
DestinationRoad ::= SEQUENCE {
   derType [0] DestinationRoadType,
   roadNumberIdentifier [1] INTEGER (1..999) OPTIONAL,
   roadNumberText [2] UTF8String OPTIONAL
}
*/
struct EXTERN ASN1T_DestinationRoad {
   struct {
      unsigned roadNumberIdentifierPresent : 1;
      unsigned roadNumberTextPresent : 1;
   } m;
   ASN1T_DestinationRoadType derType;
   OSUINT16 roadNumberIdentifier;
   const OSUTF8CHAR* roadNumberText;
   ASN1T_DestinationRoad ();
} ;

EXTERN int asn1PE_DestinationRoad (OSCTXT* pctxt, ASN1T_DestinationRoad* pvalue);

EXTERN int asn1PD_DestinationRoad (OSCTXT* pctxt, ASN1T_DestinationRoad* pvalue);

EXTERN int XmlEnc_DestinationRoad (OSCTXT* pctxt, 
   ASN1T_DestinationRoad* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_DestinationRoad (OSCTXT* pctxt, ASN1T_DestinationRoad* pvalue
   );

EXTERN int asn1JsonEnc_DestinationRoad (OSCTXT *pctxt, ASN1T_DestinationRoad *pvalue);

EXTERN int asn1JsonDec_DestinationRoad (OSCTXT *pctxt, ASN1T_DestinationRoad *pvalue);

EXTERN int asn1PrtToStrm_DestinationRoad (OSCTXT *pctxt, 
   const char* name, const ASN1T_DestinationRoad* pvalue);

EXTERN ASN1T_DestinationRoad* new_ASN1T_DestinationRoad (ASN1CType& ccobj);

EXTERN int asn1Init_DestinationRoad (ASN1T_DestinationRoad* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_DestinationRoad (OSCTXT *pctxt, ASN1T_DestinationRoad* pvalue);

/**************************************************************/
/*                                                            */
/*  DestinationRoads                                          */
/*                                                            */
/**************************************************************/
/*
DestinationRoads ::= SEQUENCE (SIZE (1..4, ...)) OF DestinationRoad
*/
/* List of ASN1T_DestinationRoad */
typedef ASN1TSeqOfList ASN1T_DestinationRoads;

class EXTERN ASN1C_DestinationRoads :
public ASN1CSeqOfList
{
protected:
   ASN1T_DestinationRoads& msgData;
public:
   /**
    * Control class: ASN1C_DestinationRoads
    * Data class:    ASN1T_DestinationRoads
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_DestinationRoads (ASN1T_DestinationRoads& data);

   /**
    * Control class: ASN1C_DestinationRoads<br/>
    * Data class: ASN1T_DestinationRoads<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_DestinationRoads (OSRTMessageBufferIF& msgBuf
      , ASN1T_DestinationRoads& data);

   /**
    * Control class: ASN1C_DestinationRoads<br/>
    * Data class: ASN1T_DestinationRoads<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_DestinationRoads (ASN1CType& ccobj, ASN1T_DestinationRoads& data);

   virtual ~ASN1C_DestinationRoads () {}

   /**
    * Data class: ASN1T_DestinationRoad<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_DestinationRoad* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_DestinationRoad.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_DestinationRoad* NewElement ();

   /**
    * Data class: ASN1T_DestinationRoad.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_DestinationRoad* AppendNewElement ();

private:
   ASN1C_DestinationRoads& operator= (const ASN1C_DestinationRoads&) {return *this;}
} ;

EXTERN int asn1PE_DestinationRoads (OSCTXT* pctxt, ASN1T_DestinationRoads* pvalue);

EXTERN int asn1PD_DestinationRoads (OSCTXT* pctxt, ASN1T_DestinationRoads* pvalue);

EXTERN int XmlEnc_DestinationRoads (OSCTXT* pctxt, 
   ASN1T_DestinationRoads* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_DestinationRoads (OSCTXT* pctxt, 
   ASN1T_DestinationRoads* pvalue);

EXTERN int asn1JsonEnc_DestinationRoads (OSCTXT *pctxt, ASN1T_DestinationRoads *pvalue);

EXTERN int asn1JsonDec_DestinationRoads (OSCTXT *pctxt, ASN1T_DestinationRoads *pvalue);

EXTERN int asn1PrtToStrm_DestinationRoads (OSCTXT *pctxt, 
   const char* name, const ASN1T_DestinationRoads* pvalue);

EXTERN int asn1Init_DestinationRoads (ASN1T_DestinationRoads* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_DestinationRoads (OSCTXT *pctxt, ASN1T_DestinationRoads* pvalue);

/**************************************************************/
/*                                                            */
/*  DistanceOrDuration                                        */
/*                                                            */
/**************************************************************/
/*
DistanceOrDuration ::= SEQUENCE {
   value [0] INTEGER (1..16384),
   unit [1] Code-Units (2..9)
}
*/
struct EXTERN ASN1T_DistanceOrDuration {
   OSUINT16 value;
   OSUINT8 unit;
} ;

EXTERN int asn1PE_DistanceOrDuration (OSCTXT* pctxt, ASN1T_DistanceOrDuration* pvalue);

EXTERN int asn1PD_DistanceOrDuration (OSCTXT* pctxt, ASN1T_DistanceOrDuration* pvalue);

EXTERN int XmlEnc_DistanceOrDuration (OSCTXT* pctxt, 
   ASN1T_DistanceOrDuration* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_DistanceOrDuration (OSCTXT* pctxt, 
   ASN1T_DistanceOrDuration* pvalue);

EXTERN int asn1JsonEnc_DistanceOrDuration (OSCTXT *pctxt, ASN1T_DistanceOrDuration *pvalue);

EXTERN int asn1JsonDec_DistanceOrDuration (OSCTXT *pctxt, ASN1T_DistanceOrDuration *pvalue);

EXTERN int asn1PrtToStrm_DistanceOrDuration (OSCTXT *pctxt, 
   const char* name, const ASN1T_DistanceOrDuration* pvalue);

EXTERN ASN1T_DistanceOrDuration* 
   new_ASN1T_DistanceOrDuration (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  DDD_IO                                                    */
/*                                                            */
/**************************************************************/
/*
DDD-IO ::= SEQUENCE {
   arrowDirection [0] INTEGER (0..7),
   destPlace [1] DestinationPlaces OPTIONAL,
   destRoad [2] DestinationRoads OPTIONAL,
   roadNumberIdentifier [3] INTEGER (1..999) OPTIONAL,
   streetName [4] INTEGER (1..999) OPTIONAL,
   streetNameText [5] UTF8String OPTIONAL,
   distanceToDivergingPoint [6] DistanceOrDuration OPTIONAL,
   distanceToDestinationPlace [7] DistanceOrDuration OPTIONAL
}
*/
struct EXTERN ASN1T_DDD_IO {
   struct {
      unsigned destPlacePresent : 1;
      unsigned destRoadPresent : 1;
      unsigned roadNumberIdentifierPresent : 1;
      unsigned streetNamePresent : 1;
      unsigned streetNameTextPresent : 1;
      unsigned distanceToDivergingPointPresent : 1;
      unsigned distanceToDestinationPlacePresent : 1;
   } m;
   OSUINT8 arrowDirection;
   ASN1T_DestinationPlaces destPlace;
   ASN1T_DestinationRoads destRoad;
   OSUINT16 roadNumberIdentifier;
   OSUINT16 streetName;
   const OSUTF8CHAR* streetNameText;
   ASN1T_DistanceOrDuration distanceToDivergingPoint;
   ASN1T_DistanceOrDuration distanceToDestinationPlace;
   ASN1T_DDD_IO ();
} ;

EXTERN int asn1PE_DDD_IO (OSCTXT* pctxt, ASN1T_DDD_IO* pvalue);

EXTERN int asn1PD_DDD_IO (OSCTXT* pctxt, ASN1T_DDD_IO* pvalue);

EXTERN int XmlEnc_DDD_IO (OSCTXT* pctxt, ASN1T_DDD_IO* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_DDD_IO (OSCTXT* pctxt, ASN1T_DDD_IO* pvalue);

EXTERN int asn1JsonEnc_DDD_IO (OSCTXT *pctxt, ASN1T_DDD_IO *pvalue);

EXTERN int asn1JsonDec_DDD_IO (OSCTXT *pctxt, ASN1T_DDD_IO *pvalue);

EXTERN int asn1PrtToStrm_DDD_IO (OSCTXT *pctxt, 
   const char* name, const ASN1T_DDD_IO* pvalue);

EXTERN ASN1T_DDD_IO* new_ASN1T_DDD_IO (ASN1CType& ccobj);

EXTERN int asn1Init_DDD_IO (ASN1T_DDD_IO* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_DDD_IO (OSCTXT *pctxt, ASN1T_DDD_IO* pvalue);

/**************************************************************/
/*                                                            */
/*  DDD_IO_LIST                                               */
/*                                                            */
/**************************************************************/
/*
DDD-IO-LIST ::= SEQUENCE (SIZE (1..8, ...)) OF DDD-IO
*/
/* List of ASN1T_DDD_IO */
typedef ASN1TSeqOfList ASN1T_DDD_IO_LIST;

class EXTERN ASN1C_DDD_IO_LIST :
public ASN1CSeqOfList
{
protected:
   ASN1T_DDD_IO_LIST& msgData;
public:
   /**
    * Control class: ASN1C_DDD_IO_LIST
    * Data class:    ASN1T_DDD_IO_LIST
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_DDD_IO_LIST (ASN1T_DDD_IO_LIST& data);

   /**
    * Control class: ASN1C_DDD_IO_LIST<br/>
    * Data class: ASN1T_DDD_IO_LIST<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_DDD_IO_LIST (OSRTMessageBufferIF& msgBuf, ASN1T_DDD_IO_LIST& data);

   /**
    * Control class: ASN1C_DDD_IO_LIST<br/>
    * Data class: ASN1T_DDD_IO_LIST<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_DDD_IO_LIST (ASN1CType& ccobj, ASN1T_DDD_IO_LIST& data);

   virtual ~ASN1C_DDD_IO_LIST () {}

   /**
    * Data class: ASN1T_DDD_IO<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_DDD_IO* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_DDD_IO.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_DDD_IO* NewElement ();

   /**
    * Data class: ASN1T_DDD_IO.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_DDD_IO* AppendNewElement ();

private:
   ASN1C_DDD_IO_LIST& operator= (const ASN1C_DDD_IO_LIST&) {return *this;}
} ;

EXTERN int asn1PE_DDD_IO_LIST (OSCTXT* pctxt, ASN1T_DDD_IO_LIST* pvalue);

EXTERN int asn1PD_DDD_IO_LIST (OSCTXT* pctxt, ASN1T_DDD_IO_LIST* pvalue);

EXTERN int XmlEnc_DDD_IO_LIST (OSCTXT* pctxt, ASN1T_DDD_IO_LIST* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_DDD_IO_LIST (OSCTXT* pctxt, ASN1T_DDD_IO_LIST* pvalue);

EXTERN int asn1JsonEnc_DDD_IO_LIST (OSCTXT *pctxt, ASN1T_DDD_IO_LIST *pvalue);

EXTERN int asn1JsonDec_DDD_IO_LIST (OSCTXT *pctxt, ASN1T_DDD_IO_LIST *pvalue);

EXTERN int asn1PrtToStrm_DDD_IO_LIST (OSCTXT *pctxt, 
   const char* name, const ASN1T_DDD_IO_LIST* pvalue);

EXTERN int asn1Init_DDD_IO_LIST (ASN1T_DDD_IO_LIST* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_DDD_IO_LIST (OSCTXT *pctxt, ASN1T_DDD_IO_LIST* pvalue);

/**************************************************************/
/*                                                            */
/*  InternationalSign_destinationInformation                  */
/*                                                            */
/**************************************************************/
/*
InternationalSign-destinationInformation ::= SEQUENCE {
   junctionDirection [0] INTEGER (1..128) OPTIONAL,
   roundaboutCwDirection [1] INTEGER (1..128) OPTIONAL,
   roundaboutCcwDirection [2] INTEGER (1..128) OPTIONAL,
   ioList [3] DDD-IO-LIST
}
*/
struct EXTERN ASN1T_InternationalSign_destinationInformation {
   struct {
      unsigned junctionDirectionPresent : 1;
      unsigned roundaboutCwDirectionPresent : 1;
      unsigned roundaboutCcwDirectionPresent : 1;
   } m;
   OSUINT8 junctionDirection;
   OSUINT8 roundaboutCwDirection;
   OSUINT8 roundaboutCcwDirection;
   ASN1T_DDD_IO_LIST ioList;
   ASN1T_InternationalSign_destinationInformation ();
} ;

EXTERN int asn1PE_InternationalSign_destinationInformation (OSCTXT* pctxt, ASN1T_InternationalSign_destinationInformation* pvalue);

EXTERN int asn1PD_InternationalSign_destinationInformation (OSCTXT* pctxt, ASN1T_InternationalSign_destinationInformation* pvalue);

EXTERN int XmlEnc_InternationalSign_destinationInformation (OSCTXT* pctxt, 
   ASN1T_InternationalSign_destinationInformation* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_InternationalSign_destinationInformation (OSCTXT* pctxt, 
   ASN1T_InternationalSign_destinationInformation* pvalue);

EXTERN int asn1JsonEnc_InternationalSign_destinationInformation (OSCTXT *pctxt, ASN1T_InternationalSign_destinationInformation *pvalue);

EXTERN int asn1JsonDec_InternationalSign_destinationInformation (OSCTXT *pctxt, ASN1T_InternationalSign_destinationInformation *pvalue);

EXTERN int asn1PrtToStrm_InternationalSign_destinationInformation (OSCTXT *pctxt, 
   const char* name, const ASN1T_InternationalSign_destinationInformation* pvalue);

EXTERN ASN1T_InternationalSign_destinationInformation* 
   new_ASN1T_InternationalSign_destinationInformation (ASN1CType& ccobj);

EXTERN int asn1Init_InternationalSign_destinationInformation (
   ASN1T_InternationalSign_destinationInformation* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_InternationalSign_destinationInformation (OSCTXT *pctxt, 
   ASN1T_InternationalSign_destinationInformation* pvalue);

#endif
