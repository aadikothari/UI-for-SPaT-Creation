/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).
 */
#ifndef EFCDSRCGENERIC_H
#define EFCDSRCGENERIC_H

#include <stdio.h>
#include <stdlib.h>
#include "rtpersrc/asn1PerCppTypes.h"
#include "rtsrc/asn1CppTypes.h"
#include "rtsrc/rtPrintToStream.h"
#include "rtsrc/asn1type.h"
#include "rtxmlsrc/asn1xml.h"
#include "rtxmlsrc/rtXmlCppMsgBuf.h"
#include "rtsrc/asn1type.h"
#include "rtjsonsrc/asn1json.h"
#include "rtjsonsrc/rtJsonCppMsgBuf.h"

/**
 * Header file for ASN.1 module EfcDsrcGeneric
 */
/**************************************************************/
/*                                                            */
/*  AttributeIdList                                           */
/*                                                            */
/**************************************************************/
/*
AttributeIdList ::= SEQUENCE (SIZE (0..127, ...)) OF INTEGER (0..127, ...)
*/
typedef struct EXTERN ASN1T_AttributeIdList {
   OSSIZE n;
   OSUINT32 *elem;
   ASN1T_AttributeIdList () : n(0), elem(0) {}
} ASN1T_AttributeIdList;

class EXTERN ASN1C_AttributeIdList :
public ASN1CType
{
protected:
   ASN1T_AttributeIdList& msgData;
public:
   /**
    * Control class: ASN1C_AttributeIdList
    * Data class:    ASN1T_AttributeIdList
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_AttributeIdList (ASN1T_AttributeIdList& data);

   /**
    * Control class: ASN1C_AttributeIdList<br/>
    * Data class: ASN1T_AttributeIdList<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_AttributeIdList (OSRTMessageBufferIF& msgBuf
      , ASN1T_AttributeIdList& data);

   /**
    * Control class: ASN1C_AttributeIdList<br/>
    * Data class: ASN1T_AttributeIdList<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_AttributeIdList (ASN1CType& ccobj, ASN1T_AttributeIdList& data);

   virtual ~ASN1C_AttributeIdList () {}

private:
   ASN1C_AttributeIdList& operator= (const ASN1C_AttributeIdList&) {return *this;}
} ;

EXTERN int asn1PE_AttributeIdList (OSCTXT* pctxt, ASN1T_AttributeIdList* pvalue);

EXTERN int asn1PD_AttributeIdList (OSCTXT* pctxt, ASN1T_AttributeIdList* pvalue);

EXTERN int XmlEnc_AttributeIdList (OSCTXT* pctxt, 
   ASN1T_AttributeIdList* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_AttributeIdList (OSCTXT* pctxt, ASN1T_AttributeIdList* pvalue
   );

EXTERN int asn1JsonEnc_AttributeIdList (OSCTXT *pctxt, ASN1T_AttributeIdList *pvalue);

EXTERN int asn1JsonDec_AttributeIdList (OSCTXT *pctxt, ASN1T_AttributeIdList *pvalue);

EXTERN int asn1PrtToStrm_AttributeIdList (OSCTXT *pctxt, 
   const char* name, const ASN1T_AttributeIdList* pvalue);

EXTERN int asn1Init_AttributeIdList (ASN1T_AttributeIdList* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_AttributeIdList (OSCTXT *pctxt, ASN1T_AttributeIdList* pvalue);

#endif
