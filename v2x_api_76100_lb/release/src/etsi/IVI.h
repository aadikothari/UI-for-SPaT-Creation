/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).
 */
#ifndef IVI_H
#define IVI_H

#include <stdio.h>
#include <stdlib.h>
#include "rtpersrc/asn1PerCppTypes.h"
#include "rtsrc/asn1CppTypes.h"
#include "rtsrc/rtPrintToStream.h"
#include "rtsrc/asn1type.h"
#include "rtxmlsrc/asn1xml.h"
#include "rtxmlsrc/rtXmlCppMsgBuf.h"
#include "rtsrc/asn1type.h"
#include "rtjsonsrc/asn1json.h"
#include "rtjsonsrc/rtJsonCppMsgBuf.h"

#include "rtsrc/ASN1CSeqOfList.h"
#include "ITS-Container.h"
#include "EfcDsrcApplication.h"
#include "ElectronicRegistrationIdentificationVehicleDataModule.h"
#include "CITSapplMgmtIDs.h"
#include "etsi_dsrc.h"
#include "GDD.h"

/**
 * Header file for ASN.1 module IVI
 */
/**************************************************************/
/*                                                            */
/*  IviIdentificationNumber                                   */
/*                                                            */
/**************************************************************/
/*
IviIdentificationNumber ::= INTEGER (1..32767, ...)
*/
typedef OSUINT32 ASN1T_IVI_IviIdentificationNumber;

EXTERN int asn1PE_IVI_IviIdentificationNumber (OSCTXT* pctxt, ASN1T_IVI_IviIdentificationNumber value);

EXTERN int asn1PD_IVI_IviIdentificationNumber (OSCTXT* pctxt, ASN1T_IVI_IviIdentificationNumber* pvalue);

EXTERN int XmlEnc_IVI_IviIdentificationNumber (OSCTXT* pctxt, 
   ASN1T_IVI_IviIdentificationNumber value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_IviIdentificationNumber (OSCTXT* pctxt, 
   ASN1T_IVI_IviIdentificationNumber* pvalue);

EXTERN int asn1JsonEnc_IVI_IviIdentificationNumber (OSCTXT *pctxt, ASN1T_IVI_IviIdentificationNumber *pvalue);

EXTERN int asn1JsonDec_IVI_IviIdentificationNumber (OSCTXT *pctxt, ASN1T_IVI_IviIdentificationNumber *pvalue);

EXTERN int asn1PrtToStrm_IVI_IviIdentificationNumber (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_IviIdentificationNumber* pvalue);

EXTERN ASN1T_IVI_IviIdentificationNumber* 
   new_ASN1T_IVI_IviIdentificationNumber (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  IviIdentificationNumbers                                  */
/*                                                            */
/**************************************************************/
/*
IviIdentificationNumbers ::= SEQUENCE (SIZE (1..8)) OF IviIdentificationNumber
*/
typedef struct EXTERN ASN1T_IVI_IviIdentificationNumbers {
   OSUINT8 n;
   ASN1T_IVI_IviIdentificationNumber elem[8];
   ASN1T_IVI_IviIdentificationNumbers () : n(0) {}
} ASN1T_IVI_IviIdentificationNumbers;

class EXTERN ASN1C_IVI_IviIdentificationNumbers :
public ASN1CType
{
protected:
   ASN1T_IVI_IviIdentificationNumbers& msgData;
public:
   /**
    * Control class: ASN1C_IVI_IviIdentificationNumbers
    * Data class:    ASN1T_IVI_IviIdentificationNumbers
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_IVI_IviIdentificationNumbers
       (ASN1T_IVI_IviIdentificationNumbers& data);

   /**
    * Control class: ASN1C_IVI_IviIdentificationNumbers<br/>
    * Data class: ASN1T_IVI_IviIdentificationNumbers<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_IVI_IviIdentificationNumbers (OSRTMessageBufferIF& msgBuf
      , ASN1T_IVI_IviIdentificationNumbers& data);

   /**
    * Control class: ASN1C_IVI_IviIdentificationNumbers<br/>
    * Data class: ASN1T_IVI_IviIdentificationNumbers<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_IVI_IviIdentificationNumbers (ASN1CType& ccobj
      , ASN1T_IVI_IviIdentificationNumbers& data);

   virtual ~ASN1C_IVI_IviIdentificationNumbers () {}

private:
   ASN1C_IVI_IviIdentificationNumbers& operator= (const ASN1C_IVI_IviIdentificationNumbers&) {return *this;}
} ;

EXTERN int asn1PE_IVI_IviIdentificationNumbers (OSCTXT* pctxt, ASN1T_IVI_IviIdentificationNumbers* pvalue);

EXTERN int asn1PD_IVI_IviIdentificationNumbers (OSCTXT* pctxt, ASN1T_IVI_IviIdentificationNumbers* pvalue);

EXTERN int XmlEnc_IVI_IviIdentificationNumbers (OSCTXT* pctxt, 
   ASN1T_IVI_IviIdentificationNumbers* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_IviIdentificationNumbers (OSCTXT* pctxt, 
   ASN1T_IVI_IviIdentificationNumbers* pvalue);

EXTERN int asn1JsonEnc_IVI_IviIdentificationNumbers (OSCTXT *pctxt, ASN1T_IVI_IviIdentificationNumbers *pvalue);

EXTERN int asn1JsonDec_IVI_IviIdentificationNumbers (OSCTXT *pctxt, ASN1T_IVI_IviIdentificationNumbers *pvalue);

EXTERN int asn1PrtToStrm_IVI_IviIdentificationNumbers (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_IviIdentificationNumbers* pvalue);

EXTERN int asn1Init_IVI_IviIdentificationNumbers (
   ASN1T_IVI_IviIdentificationNumbers* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

/**************************************************************/
/*                                                            */
/*  IviStatus                                                 */
/*                                                            */
/**************************************************************/
/*
IviStatus ::= INTEGER { new(0), update(1), cancellation(2), negation(3) } (0..7)
*/
struct EXTERN IVI_IviStatus {
   enum Root {
      new_ = 0,
      update = 1,
      cancellation = 2,
      negation = 3
   } ;
} ;

typedef OSUINT8 ASN1T_IVI_IviStatus;

EXTERN int asn1PE_IVI_IviStatus (OSCTXT* pctxt, ASN1T_IVI_IviStatus value);

EXTERN int asn1PD_IVI_IviStatus (OSCTXT* pctxt, ASN1T_IVI_IviStatus* pvalue);

EXTERN int XmlEnc_IVI_IviStatus (OSCTXT* pctxt, ASN1T_IVI_IviStatus value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_IviStatus (OSCTXT* pctxt, ASN1T_IVI_IviStatus* pvalue);

EXTERN int asn1JsonEnc_IVI_IviStatus (OSCTXT *pctxt, ASN1T_IVI_IviStatus *pvalue);

EXTERN int asn1JsonDec_IVI_IviStatus (OSCTXT *pctxt, ASN1T_IVI_IviStatus *pvalue);

EXTERN int asn1PrtToStrm_IVI_IviStatus (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_IviStatus* pvalue);

EXTERN ASN1T_IVI_IviStatus* new_ASN1T_IVI_IviStatus (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  ConnectedDenms                                            */
/*                                                            */
/**************************************************************/
/*
ConnectedDenms ::= SEQUENCE (SIZE (1..8, ...)) OF ActionID
                                                          new DF in V2

*/
/* List of ASN1T_ITS_ActionID */
typedef ASN1TSeqOfList ASN1T_IVI_ConnectedDenms;

class EXTERN ASN1C_IVI_ConnectedDenms :
public ASN1CSeqOfList
{
protected:
   ASN1T_IVI_ConnectedDenms& msgData;
public:
   /**
    * Control class: ASN1C_IVI_ConnectedDenms
    * Data class:    ASN1T_IVI_ConnectedDenms
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_IVI_ConnectedDenms (ASN1T_IVI_ConnectedDenms& data);

   /**
    * Control class: ASN1C_IVI_ConnectedDenms<br/>
    * Data class: ASN1T_IVI_ConnectedDenms<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_IVI_ConnectedDenms (OSRTMessageBufferIF& msgBuf
      , ASN1T_IVI_ConnectedDenms& data);

   /**
    * Control class: ASN1C_IVI_ConnectedDenms<br/>
    * Data class: ASN1T_IVI_ConnectedDenms<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_IVI_ConnectedDenms (ASN1CType& ccobj, ASN1T_IVI_ConnectedDenms& data);

   virtual ~ASN1C_IVI_ConnectedDenms () {}

   /**
    * Data class: ASN1T_ITS_ActionID<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_ITS_ActionID* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_ITS_ActionID.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_ITS_ActionID* NewElement ();

   /**
    * Data class: ASN1T_ITS_ActionID.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_ITS_ActionID* AppendNewElement ();

private:
   ASN1C_IVI_ConnectedDenms& operator= (const ASN1C_IVI_ConnectedDenms&) {return *this;}
} ;

EXTERN int asn1PE_IVI_ConnectedDenms (OSCTXT* pctxt, ASN1T_IVI_ConnectedDenms* pvalue);

EXTERN int asn1PD_IVI_ConnectedDenms (OSCTXT* pctxt, ASN1T_IVI_ConnectedDenms* pvalue);

EXTERN int XmlEnc_IVI_ConnectedDenms (OSCTXT* pctxt, 
   ASN1T_IVI_ConnectedDenms* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_ConnectedDenms (OSCTXT* pctxt, 
   ASN1T_IVI_ConnectedDenms* pvalue);

EXTERN int asn1JsonEnc_IVI_ConnectedDenms (OSCTXT *pctxt, ASN1T_IVI_ConnectedDenms *pvalue);

EXTERN int asn1JsonDec_IVI_ConnectedDenms (OSCTXT *pctxt, ASN1T_IVI_ConnectedDenms *pvalue);

EXTERN int asn1PrtToStrm_IVI_ConnectedDenms (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_ConnectedDenms* pvalue);

EXTERN int asn1Init_IVI_ConnectedDenms (ASN1T_IVI_ConnectedDenms* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_ConnectedDenms (OSCTXT *pctxt, 
   ASN1T_IVI_ConnectedDenms* pvalue);

/**************************************************************/
/*                                                            */
/*  IviManagementContainer                                    */
/*                                                            */
/**************************************************************/
/*
IviManagementContainer ::= SEQUENCE {
   serviceProviderId [0] Provider,
   iviIdentificationNumber [1] IviIdentificationNumber,
   timeStamp [2] TimestampIts OPTIONAL,
   validFrom [3] TimestampIts OPTIONAL,
   validTo [4] TimestampIts OPTIONAL,
   connectedIviStructures [5] IviIdentificationNumbers OPTIONAL,
   iviStatus [6] IviStatus,
            -- original extension indicator of V1
   ...,
   connectedDenms [7] ConnectedDenms OPTIONAL -- Extension in V2
}
*/
struct EXTERN ASN1T_IVI_IviManagementContainer {
   struct {
      unsigned timeStampPresent : 1;
      unsigned validFromPresent : 1;
      unsigned validToPresent : 1;
      unsigned connectedIviStructuresPresent : 1;
      unsigned connectedDenmsPresent : 1;
   } m;
   ASN1T_Provider serviceProviderId;
   ASN1T_IVI_IviIdentificationNumber iviIdentificationNumber;
   ASN1T_ITS_TimestampIts timeStamp;
   ASN1T_ITS_TimestampIts validFrom;
   ASN1T_ITS_TimestampIts validTo;
   ASN1T_IVI_IviIdentificationNumbers connectedIviStructures;
   ASN1T_IVI_IviStatus iviStatus;
   ASN1T_IVI_ConnectedDenms connectedDenms;
   ASN1TSeqExt extElem1;
   ASN1T_IVI_IviManagementContainer ();
} ;

EXTERN int asn1PE_IVI_IviManagementContainer (OSCTXT* pctxt, ASN1T_IVI_IviManagementContainer* pvalue);

EXTERN int asn1PD_IVI_IviManagementContainer (OSCTXT* pctxt, ASN1T_IVI_IviManagementContainer* pvalue);

EXTERN int XmlEnc_IVI_IviManagementContainer (OSCTXT* pctxt, 
   ASN1T_IVI_IviManagementContainer* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_IviManagementContainer (OSCTXT* pctxt, 
   ASN1T_IVI_IviManagementContainer* pvalue);

EXTERN int asn1JsonEnc_IVI_IviManagementContainer (OSCTXT *pctxt, ASN1T_IVI_IviManagementContainer *pvalue);

EXTERN int asn1JsonDec_IVI_IviManagementContainer (OSCTXT *pctxt, ASN1T_IVI_IviManagementContainer *pvalue);

EXTERN int asn1PrtToStrm_IVI_IviManagementContainer (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_IviManagementContainer* pvalue);

EXTERN ASN1T_IVI_IviManagementContainer* 
   new_ASN1T_IVI_IviManagementContainer (ASN1CType& ccobj);

EXTERN int asn1Init_IVI_IviManagementContainer (
   ASN1T_IVI_IviManagementContainer* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_IviManagementContainer (OSCTXT *pctxt, 
   ASN1T_IVI_IviManagementContainer* pvalue);

/**************************************************************/
/*                                                            */
/*  Zid                                                       */
/*                                                            */
/**************************************************************/
/*
Zid ::= INTEGER (1..32, ...)
*/
typedef OSUINT32 ASN1T_IVI_Zid;

EXTERN int asn1PE_IVI_Zid (OSCTXT* pctxt, ASN1T_IVI_Zid value);

EXTERN int asn1PD_IVI_Zid (OSCTXT* pctxt, ASN1T_IVI_Zid* pvalue);

EXTERN int XmlEnc_IVI_Zid (OSCTXT* pctxt, ASN1T_IVI_Zid value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_Zid (OSCTXT* pctxt, ASN1T_IVI_Zid* pvalue);

EXTERN int asn1JsonEnc_IVI_Zid (OSCTXT *pctxt, ASN1T_IVI_Zid *pvalue);

EXTERN int asn1JsonDec_IVI_Zid (OSCTXT *pctxt, ASN1T_IVI_Zid *pvalue);

EXTERN int asn1PrtToStrm_IVI_Zid (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_Zid* pvalue);

EXTERN ASN1T_IVI_Zid* new_ASN1T_IVI_Zid (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  DeltaPosition                                             */
/*                                                            */
/**************************************************************/
/*
DeltaPosition ::= SEQUENCE {
   deltaLatitude [0] DeltaLatitude,
   deltaLongitude [1] DeltaLongitude
}
*/
struct EXTERN ASN1T_IVI_DeltaPosition {
   ASN1T_ITS_DeltaLatitude deltaLatitude;
   ASN1T_ITS_DeltaLongitude deltaLongitude;
} ;

EXTERN int asn1PE_IVI_DeltaPosition (OSCTXT* pctxt, ASN1T_IVI_DeltaPosition* pvalue);

EXTERN int asn1PD_IVI_DeltaPosition (OSCTXT* pctxt, ASN1T_IVI_DeltaPosition* pvalue);

EXTERN int XmlEnc_IVI_DeltaPosition (OSCTXT* pctxt, 
   ASN1T_IVI_DeltaPosition* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_DeltaPosition (OSCTXT* pctxt, 
   ASN1T_IVI_DeltaPosition* pvalue);

EXTERN int asn1JsonEnc_IVI_DeltaPosition (OSCTXT *pctxt, ASN1T_IVI_DeltaPosition *pvalue);

EXTERN int asn1JsonDec_IVI_DeltaPosition (OSCTXT *pctxt, ASN1T_IVI_DeltaPosition *pvalue);

EXTERN int asn1PrtToStrm_IVI_DeltaPosition (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_DeltaPosition* pvalue);

EXTERN ASN1T_IVI_DeltaPosition* new_ASN1T_IVI_DeltaPosition (ASN1CType& ccobj)
   ;

/**************************************************************/
/*                                                            */
/*  DeltaPositions                                            */
/*                                                            */
/**************************************************************/
/*
DeltaPositions ::= SEQUENCE (SIZE (1..32, ..., 100)) OF DeltaPosition
                                                                    size extension in V2

*/
/* List of ASN1T_IVI_DeltaPosition */
typedef ASN1TSeqOfList ASN1T_IVI_DeltaPositions;

class EXTERN ASN1C_IVI_DeltaPositions :
public ASN1CSeqOfList
{
protected:
   ASN1T_IVI_DeltaPositions& msgData;
public:
   /**
    * Control class: ASN1C_IVI_DeltaPositions
    * Data class:    ASN1T_IVI_DeltaPositions
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_IVI_DeltaPositions (ASN1T_IVI_DeltaPositions& data);

   /**
    * Control class: ASN1C_IVI_DeltaPositions<br/>
    * Data class: ASN1T_IVI_DeltaPositions<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_IVI_DeltaPositions (OSRTMessageBufferIF& msgBuf
      , ASN1T_IVI_DeltaPositions& data);

   /**
    * Control class: ASN1C_IVI_DeltaPositions<br/>
    * Data class: ASN1T_IVI_DeltaPositions<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_IVI_DeltaPositions (ASN1CType& ccobj, ASN1T_IVI_DeltaPositions& data);

   virtual ~ASN1C_IVI_DeltaPositions () {}

   /**
    * Data class: ASN1T_IVI_DeltaPosition<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_IVI_DeltaPosition* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_IVI_DeltaPosition.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_IVI_DeltaPosition* NewElement ();

   /**
    * Data class: ASN1T_IVI_DeltaPosition.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_IVI_DeltaPosition* AppendNewElement ();

private:
   ASN1C_IVI_DeltaPositions& operator= (const ASN1C_IVI_DeltaPositions&) {return *this;}
} ;

EXTERN int asn1PE_IVI_DeltaPositions (OSCTXT* pctxt, ASN1T_IVI_DeltaPositions* pvalue);

EXTERN int asn1PD_IVI_DeltaPositions (OSCTXT* pctxt, ASN1T_IVI_DeltaPositions* pvalue);

EXTERN int XmlEnc_IVI_DeltaPositions (OSCTXT* pctxt, 
   ASN1T_IVI_DeltaPositions* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_DeltaPositions (OSCTXT* pctxt, 
   ASN1T_IVI_DeltaPositions* pvalue);

EXTERN int asn1JsonEnc_IVI_DeltaPositions (OSCTXT *pctxt, ASN1T_IVI_DeltaPositions *pvalue);

EXTERN int asn1JsonDec_IVI_DeltaPositions (OSCTXT *pctxt, ASN1T_IVI_DeltaPositions *pvalue);

EXTERN int asn1PrtToStrm_IVI_DeltaPositions (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_DeltaPositions* pvalue);

EXTERN int asn1Init_IVI_DeltaPositions (ASN1T_IVI_DeltaPositions* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_DeltaPositions (OSCTXT *pctxt, 
   ASN1T_IVI_DeltaPositions* pvalue);

/**************************************************************/
/*                                                            */
/*  DeltaReferencePositions                                   */
/*                                                            */
/**************************************************************/
/*
DeltaReferencePositions ::= SEQUENCE (SIZE (1..32, ..., 100)) OF DeltaReferencePosition
                                                                                       size extension in V2

*/
/* List of ASN1T_ITS_DeltaReferencePosition */
typedef ASN1TSeqOfList ASN1T_IVI_DeltaReferencePositions;

class EXTERN ASN1C_IVI_DeltaReferencePositions :
public ASN1CSeqOfList
{
protected:
   ASN1T_IVI_DeltaReferencePositions& msgData;
public:
   /**
    * Control class: ASN1C_IVI_DeltaReferencePositions
    * Data class:    ASN1T_IVI_DeltaReferencePositions
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_IVI_DeltaReferencePositions (ASN1T_IVI_DeltaReferencePositions& data);

   /**
    * Control class: ASN1C_IVI_DeltaReferencePositions<br/>
    * Data class: ASN1T_IVI_DeltaReferencePositions<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_IVI_DeltaReferencePositions (OSRTMessageBufferIF& msgBuf
      , ASN1T_IVI_DeltaReferencePositions& data);

   /**
    * Control class: ASN1C_IVI_DeltaReferencePositions<br/>
    * Data class: ASN1T_IVI_DeltaReferencePositions<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_IVI_DeltaReferencePositions (ASN1CType& ccobj
      , ASN1T_IVI_DeltaReferencePositions& data);

   virtual ~ASN1C_IVI_DeltaReferencePositions () {}

   /**
    * Data class: ASN1T_ITS_DeltaReferencePosition<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_ITS_DeltaReferencePosition* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_ITS_DeltaReferencePosition.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_ITS_DeltaReferencePosition* NewElement ();

   /**
    * Data class: ASN1T_ITS_DeltaReferencePosition.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_ITS_DeltaReferencePosition* AppendNewElement ();

private:
   ASN1C_IVI_DeltaReferencePositions& operator= (const ASN1C_IVI_DeltaReferencePositions&) {return *this;}
} ;

EXTERN int asn1PE_IVI_DeltaReferencePositions (OSCTXT* pctxt, ASN1T_IVI_DeltaReferencePositions* pvalue);

EXTERN int asn1PD_IVI_DeltaReferencePositions (OSCTXT* pctxt, ASN1T_IVI_DeltaReferencePositions* pvalue);

EXTERN int XmlEnc_IVI_DeltaReferencePositions (OSCTXT* pctxt, 
   ASN1T_IVI_DeltaReferencePositions* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_DeltaReferencePositions (OSCTXT* pctxt, 
   ASN1T_IVI_DeltaReferencePositions* pvalue);

EXTERN int asn1JsonEnc_IVI_DeltaReferencePositions (OSCTXT *pctxt, ASN1T_IVI_DeltaReferencePositions *pvalue);

EXTERN int asn1JsonDec_IVI_DeltaReferencePositions (OSCTXT *pctxt, ASN1T_IVI_DeltaReferencePositions *pvalue);

EXTERN int asn1PrtToStrm_IVI_DeltaReferencePositions (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_DeltaReferencePositions* pvalue);

EXTERN int asn1Init_IVI_DeltaReferencePositions (
   ASN1T_IVI_DeltaReferencePositions* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_DeltaReferencePositions (OSCTXT *pctxt, 
   ASN1T_IVI_DeltaReferencePositions* pvalue);

/**************************************************************/
/*                                                            */
/*  AbsolutePosition                                          */
/*                                                            */
/**************************************************************/
/*
  Definition of Data Frames
AbsolutePosition ::= SEQUENCE {
   latitude [0] Latitude,
   longitude [1] Longitude
}
*/
struct EXTERN ASN1T_IVI_AbsolutePosition {
   ASN1T_ITS_Latitude latitude;
   ASN1T_ITS_Longitude longitude;
} ;

EXTERN int asn1PE_IVI_AbsolutePosition (OSCTXT* pctxt, ASN1T_IVI_AbsolutePosition* pvalue);

EXTERN int asn1PD_IVI_AbsolutePosition (OSCTXT* pctxt, ASN1T_IVI_AbsolutePosition* pvalue);

EXTERN int XmlEnc_IVI_AbsolutePosition (OSCTXT* pctxt, 
   ASN1T_IVI_AbsolutePosition* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_AbsolutePosition (OSCTXT* pctxt, 
   ASN1T_IVI_AbsolutePosition* pvalue);

EXTERN int asn1JsonEnc_IVI_AbsolutePosition (OSCTXT *pctxt, ASN1T_IVI_AbsolutePosition *pvalue);

EXTERN int asn1JsonDec_IVI_AbsolutePosition (OSCTXT *pctxt, ASN1T_IVI_AbsolutePosition *pvalue);

EXTERN int asn1PrtToStrm_IVI_AbsolutePosition (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_AbsolutePosition* pvalue);

EXTERN ASN1T_IVI_AbsolutePosition* 
   new_ASN1T_IVI_AbsolutePosition (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  AbsolutePositions                                         */
/*                                                            */
/**************************************************************/
/*
 Definition of data frames which are lists of data frames
 note: those definitions are to avoid "implicit type definitions" but are bit compatible with V1
AbsolutePositions ::= SEQUENCE (SIZE (1..8, ...)) OF AbsolutePosition
*/
/* List of ASN1T_IVI_AbsolutePosition */
typedef ASN1TSeqOfList ASN1T_IVI_AbsolutePositions;

class EXTERN ASN1C_IVI_AbsolutePositions :
public ASN1CSeqOfList
{
protected:
   ASN1T_IVI_AbsolutePositions& msgData;
public:
   /**
    * Control class: ASN1C_IVI_AbsolutePositions
    * Data class:    ASN1T_IVI_AbsolutePositions
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_IVI_AbsolutePositions (ASN1T_IVI_AbsolutePositions& data);

   /**
    * Control class: ASN1C_IVI_AbsolutePositions<br/>
    * Data class: ASN1T_IVI_AbsolutePositions<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_IVI_AbsolutePositions (OSRTMessageBufferIF& msgBuf
      , ASN1T_IVI_AbsolutePositions& data);

   /**
    * Control class: ASN1C_IVI_AbsolutePositions<br/>
    * Data class: ASN1T_IVI_AbsolutePositions<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_IVI_AbsolutePositions (ASN1CType& ccobj
      , ASN1T_IVI_AbsolutePositions& data);

   virtual ~ASN1C_IVI_AbsolutePositions () {}

   /**
    * Data class: ASN1T_IVI_AbsolutePosition<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_IVI_AbsolutePosition* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_IVI_AbsolutePosition.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_IVI_AbsolutePosition* NewElement ();

   /**
    * Data class: ASN1T_IVI_AbsolutePosition.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_IVI_AbsolutePosition* AppendNewElement ();

private:
   ASN1C_IVI_AbsolutePositions& operator= (const ASN1C_IVI_AbsolutePositions&) {return *this;}
} ;

EXTERN int asn1PE_IVI_AbsolutePositions (OSCTXT* pctxt, ASN1T_IVI_AbsolutePositions* pvalue);

EXTERN int asn1PD_IVI_AbsolutePositions (OSCTXT* pctxt, ASN1T_IVI_AbsolutePositions* pvalue);

EXTERN int XmlEnc_IVI_AbsolutePositions (OSCTXT* pctxt, 
   ASN1T_IVI_AbsolutePositions* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_AbsolutePositions (OSCTXT* pctxt, 
   ASN1T_IVI_AbsolutePositions* pvalue);

EXTERN int asn1JsonEnc_IVI_AbsolutePositions (OSCTXT *pctxt, ASN1T_IVI_AbsolutePositions *pvalue);

EXTERN int asn1JsonDec_IVI_AbsolutePositions (OSCTXT *pctxt, ASN1T_IVI_AbsolutePositions *pvalue);

EXTERN int asn1PrtToStrm_IVI_AbsolutePositions (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_AbsolutePositions* pvalue);

EXTERN int asn1Init_IVI_AbsolutePositions (ASN1T_IVI_AbsolutePositions* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_AbsolutePositions (OSCTXT *pctxt, 
   ASN1T_IVI_AbsolutePositions* pvalue);

/**************************************************************/
/*                                                            */
/*  AbsolutePositionWAltitude                                 */
/*                                                            */
/**************************************************************/
/*
AbsolutePositionWAltitude ::= SEQUENCE {
   latitude [0] Latitude,
   longitude [1] Longitude,
   altitude [2] Altitude
}
*/
struct EXTERN ASN1T_IVI_AbsolutePositionWAltitude {
   ASN1T_ITS_Latitude latitude;
   ASN1T_ITS_Longitude longitude;
   ASN1T_ITS_Altitude altitude;
} ;

EXTERN int asn1PE_IVI_AbsolutePositionWAltitude (OSCTXT* pctxt, ASN1T_IVI_AbsolutePositionWAltitude* pvalue);

EXTERN int asn1PD_IVI_AbsolutePositionWAltitude (OSCTXT* pctxt, ASN1T_IVI_AbsolutePositionWAltitude* pvalue);

EXTERN int XmlEnc_IVI_AbsolutePositionWAltitude (OSCTXT* pctxt, 
   ASN1T_IVI_AbsolutePositionWAltitude* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_AbsolutePositionWAltitude (OSCTXT* pctxt, 
   ASN1T_IVI_AbsolutePositionWAltitude* pvalue);

EXTERN int asn1JsonEnc_IVI_AbsolutePositionWAltitude (OSCTXT *pctxt, ASN1T_IVI_AbsolutePositionWAltitude *pvalue);

EXTERN int asn1JsonDec_IVI_AbsolutePositionWAltitude (OSCTXT *pctxt, ASN1T_IVI_AbsolutePositionWAltitude *pvalue);

EXTERN int asn1PrtToStrm_IVI_AbsolutePositionWAltitude (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_AbsolutePositionWAltitude* pvalue);

EXTERN ASN1T_IVI_AbsolutePositionWAltitude* 
   new_ASN1T_IVI_AbsolutePositionWAltitude (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  AbsolutePositionsWAltitude                                */
/*                                                            */
/**************************************************************/
/*
AbsolutePositionsWAltitude ::= SEQUENCE (SIZE (1..8, ...)) OF AbsolutePositionWAltitude
*/
/* List of ASN1T_IVI_AbsolutePositionWAltitude */
typedef ASN1TSeqOfList ASN1T_IVI_AbsolutePositionsWAltitude;

class EXTERN ASN1C_IVI_AbsolutePositionsWAltitude :
public ASN1CSeqOfList
{
protected:
   ASN1T_IVI_AbsolutePositionsWAltitude& msgData;
public:
   /**
    * Control class: ASN1C_IVI_AbsolutePositionsWAltitude
    * Data class:    ASN1T_IVI_AbsolutePositionsWAltitude
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_IVI_AbsolutePositionsWAltitude
       (ASN1T_IVI_AbsolutePositionsWAltitude& data);

   /**
    * Control class: ASN1C_IVI_AbsolutePositionsWAltitude<br/>
    * Data class: ASN1T_IVI_AbsolutePositionsWAltitude<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_IVI_AbsolutePositionsWAltitude (OSRTMessageBufferIF& msgBuf
      , ASN1T_IVI_AbsolutePositionsWAltitude& data);

   /**
    * Control class: ASN1C_IVI_AbsolutePositionsWAltitude<br/>
    * Data class: ASN1T_IVI_AbsolutePositionsWAltitude<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_IVI_AbsolutePositionsWAltitude (ASN1CType& ccobj
      , ASN1T_IVI_AbsolutePositionsWAltitude& data);

   virtual ~ASN1C_IVI_AbsolutePositionsWAltitude () {}

   /**
    * Data class: ASN1T_IVI_AbsolutePositionWAltitude<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_IVI_AbsolutePositionWAltitude* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_IVI_AbsolutePositionWAltitude.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_IVI_AbsolutePositionWAltitude* NewElement ();

   /**
    * Data class: ASN1T_IVI_AbsolutePositionWAltitude.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_IVI_AbsolutePositionWAltitude* AppendNewElement ();

private:
   ASN1C_IVI_AbsolutePositionsWAltitude& operator= (const ASN1C_IVI_AbsolutePositionsWAltitude&) {return *this;}
} ;

EXTERN int asn1PE_IVI_AbsolutePositionsWAltitude (OSCTXT* pctxt, ASN1T_IVI_AbsolutePositionsWAltitude* pvalue);

EXTERN int asn1PD_IVI_AbsolutePositionsWAltitude (OSCTXT* pctxt, ASN1T_IVI_AbsolutePositionsWAltitude* pvalue);

EXTERN int XmlEnc_IVI_AbsolutePositionsWAltitude (OSCTXT* pctxt, 
   ASN1T_IVI_AbsolutePositionsWAltitude* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_AbsolutePositionsWAltitude (OSCTXT* pctxt, 
   ASN1T_IVI_AbsolutePositionsWAltitude* pvalue);

EXTERN int asn1JsonEnc_IVI_AbsolutePositionsWAltitude (OSCTXT *pctxt, ASN1T_IVI_AbsolutePositionsWAltitude *pvalue);

EXTERN int asn1JsonDec_IVI_AbsolutePositionsWAltitude (OSCTXT *pctxt, ASN1T_IVI_AbsolutePositionsWAltitude *pvalue);

EXTERN int asn1PrtToStrm_IVI_AbsolutePositionsWAltitude (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_AbsolutePositionsWAltitude* pvalue);

EXTERN int asn1Init_IVI_AbsolutePositionsWAltitude (
   ASN1T_IVI_AbsolutePositionsWAltitude* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_AbsolutePositionsWAltitude (OSCTXT *pctxt, 
   ASN1T_IVI_AbsolutePositionsWAltitude* pvalue);

/**************************************************************/
/*                                                            */
/*  PolygonalLine                                             */
/*                                                            */
/**************************************************************/
/*
PolygonalLine ::= CHOICE {
   deltaPositions [0] DeltaPositions,
   deltaPositionsWithAltitude [1] DeltaReferencePositions,
   absolutePositions [2] AbsolutePositions,
   absolutePositionsWithAltitude [3] AbsolutePositionsWAltitude,
   ...
}
*/
/* Choice tag constants */

#define T_IVI_PolygonalLine_deltaPositions 1
#define T_IVI_PolygonalLine_deltaPositionsWithAltitude 2
#define T_IVI_PolygonalLine_absolutePositions 3
#define T_IVI_PolygonalLine_absolutePositionsWithAltitude 4
#define T_IVI_PolygonalLine_extElem1    5

struct EXTERN ASN1T_IVI_PolygonalLine {
   OSINT32 t;
   union {
      /* t = 1 */
      ASN1T_IVI_DeltaPositions *deltaPositions;
      /* t = 2 */
      ASN1T_IVI_DeltaReferencePositions *deltaPositionsWithAltitude;
      /* t = 3 */
      ASN1T_IVI_AbsolutePositions *absolutePositions;
      /* t = 4 */
      ASN1T_IVI_AbsolutePositionsWAltitude *absolutePositionsWithAltitude;
      /* t = 5 */
      ASN1TOpenType *extElem1;
   } u;
   ASN1T_IVI_PolygonalLine () { t = 0; OSCRTLMEMSET (&u, 0, sizeof(u)); }
} ;

EXTERN int asn1PE_IVI_PolygonalLine (OSCTXT* pctxt, ASN1T_IVI_PolygonalLine* pvalue);

EXTERN int asn1PD_IVI_PolygonalLine (OSCTXT* pctxt, ASN1T_IVI_PolygonalLine* pvalue);

EXTERN int XmlEnc_IVI_PolygonalLine (OSCTXT* pctxt, 
   ASN1T_IVI_PolygonalLine* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_PolygonalLine (OSCTXT* pctxt, 
   ASN1T_IVI_PolygonalLine* pvalue);

EXTERN int asn1JsonEnc_IVI_PolygonalLine (OSCTXT *pctxt, ASN1T_IVI_PolygonalLine *pvalue);

EXTERN int asn1JsonDec_IVI_PolygonalLine (OSCTXT *pctxt, ASN1T_IVI_PolygonalLine *pvalue);

EXTERN int asn1PrtToStrm_IVI_PolygonalLine (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_PolygonalLine* pvalue);

EXTERN ASN1T_IVI_PolygonalLine* new_ASN1T_IVI_PolygonalLine (ASN1CType& ccobj)
   ;

EXTERN int asn1Init_IVI_PolygonalLine (ASN1T_IVI_PolygonalLine* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_PolygonalLine (OSCTXT *pctxt, 
   ASN1T_IVI_PolygonalLine* pvalue);

/**************************************************************/
/*                                                            */
/*  IviLaneWidth                                              */
/*                                                            */
/**************************************************************/
/*
IviLaneWidth ::= INTEGER (0..1023)
                                   only renamed from V1, no change

*/
typedef OSUINT16 ASN1T_IVI_IviLaneWidth;

EXTERN int asn1PE_IVI_IviLaneWidth (OSCTXT* pctxt, ASN1T_IVI_IviLaneWidth value);

EXTERN int asn1PD_IVI_IviLaneWidth (OSCTXT* pctxt, ASN1T_IVI_IviLaneWidth* pvalue);

EXTERN int XmlEnc_IVI_IviLaneWidth (OSCTXT* pctxt, 
   ASN1T_IVI_IviLaneWidth value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_IviLaneWidth (OSCTXT* pctxt, 
   ASN1T_IVI_IviLaneWidth* pvalue);

EXTERN int asn1JsonEnc_IVI_IviLaneWidth (OSCTXT *pctxt, ASN1T_IVI_IviLaneWidth *pvalue);

EXTERN int asn1JsonDec_IVI_IviLaneWidth (OSCTXT *pctxt, ASN1T_IVI_IviLaneWidth *pvalue);

EXTERN int asn1PrtToStrm_IVI_IviLaneWidth (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_IviLaneWidth* pvalue);

EXTERN ASN1T_IVI_IviLaneWidth* new_ASN1T_IVI_IviLaneWidth (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  Segment                                                   */
/*                                                            */
/**************************************************************/
/*
Segment ::= SEQUENCE {
   line [0] EXPLICIT PolygonalLine,
   laneWidth [1] IviLaneWidth OPTIONAL
}
*/
struct EXTERN ASN1T_IVI_Segment {
   struct {
      unsigned laneWidthPresent : 1;
   } m;
   ASN1T_IVI_PolygonalLine line;
   ASN1T_IVI_IviLaneWidth laneWidth;
   ASN1T_IVI_Segment ();
} ;

EXTERN int asn1PE_IVI_Segment (OSCTXT* pctxt, ASN1T_IVI_Segment* pvalue);

EXTERN int asn1PD_IVI_Segment (OSCTXT* pctxt, ASN1T_IVI_Segment* pvalue);

EXTERN int XmlEnc_IVI_Segment (OSCTXT* pctxt, ASN1T_IVI_Segment* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_Segment (OSCTXT* pctxt, ASN1T_IVI_Segment* pvalue);

EXTERN int asn1JsonEnc_IVI_Segment (OSCTXT *pctxt, ASN1T_IVI_Segment *pvalue);

EXTERN int asn1JsonDec_IVI_Segment (OSCTXT *pctxt, ASN1T_IVI_Segment *pvalue);

EXTERN int asn1PrtToStrm_IVI_Segment (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_Segment* pvalue);

EXTERN ASN1T_IVI_Segment* new_ASN1T_IVI_Segment (ASN1CType& ccobj);

EXTERN int asn1Init_IVI_Segment (ASN1T_IVI_Segment* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_Segment (OSCTXT *pctxt, ASN1T_IVI_Segment* pvalue);

/**************************************************************/
/*                                                            */
/*  ComputedSegment                                           */
/*                                                            */
/**************************************************************/
/*
ComputedSegment ::= SEQUENCE {
   zoneId [0] Zid,
   laneNumber [1] LanePosition,
   laneWidth [2] IviLaneWidth,
   offsetDistance [3] INTEGER (-32768..32767) OPTIONAL,
   offsetPosition [4] DeltaReferencePosition OPTIONAL
}
*/
struct EXTERN ASN1T_IVI_ComputedSegment {
   struct {
      unsigned offsetDistancePresent : 1;
      unsigned offsetPositionPresent : 1;
   } m;
   ASN1T_IVI_Zid zoneId;
   ASN1T_ITS_LanePosition laneNumber;
   ASN1T_IVI_IviLaneWidth laneWidth;
   OSINT16 offsetDistance;
   ASN1T_ITS_DeltaReferencePosition offsetPosition;
   ASN1T_IVI_ComputedSegment ();
} ;

EXTERN int asn1PE_IVI_ComputedSegment (OSCTXT* pctxt, ASN1T_IVI_ComputedSegment* pvalue);

EXTERN int asn1PD_IVI_ComputedSegment (OSCTXT* pctxt, ASN1T_IVI_ComputedSegment* pvalue);

EXTERN int XmlEnc_IVI_ComputedSegment (OSCTXT* pctxt, 
   ASN1T_IVI_ComputedSegment* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_ComputedSegment (OSCTXT* pctxt, 
   ASN1T_IVI_ComputedSegment* pvalue);

EXTERN int asn1JsonEnc_IVI_ComputedSegment (OSCTXT *pctxt, ASN1T_IVI_ComputedSegment *pvalue);

EXTERN int asn1JsonDec_IVI_ComputedSegment (OSCTXT *pctxt, ASN1T_IVI_ComputedSegment *pvalue);

EXTERN int asn1PrtToStrm_IVI_ComputedSegment (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_ComputedSegment* pvalue);

EXTERN ASN1T_IVI_ComputedSegment* 
   new_ASN1T_IVI_ComputedSegment (ASN1CType& ccobj);

EXTERN int asn1Init_IVI_ComputedSegment (ASN1T_IVI_ComputedSegment* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

/**************************************************************/
/*                                                            */
/*  Zone                                                      */
/*                                                            */
/**************************************************************/
/*
Zone ::= CHOICE {
   segment [0] Segment,
   area [1] EXPLICIT PolygonalLine,
   computedSegment [2] ComputedSegment,
   ...
}
*/
/* Choice tag constants */

#define T_IVI_Zone_segment              1
#define T_IVI_Zone_area                 2
#define T_IVI_Zone_computedSegment      3
#define T_IVI_Zone_extElem1             4

struct EXTERN ASN1T_IVI_Zone {
   OSINT32 t;
   union {
      /* t = 1 */
      ASN1T_IVI_Segment *segment;
      /* t = 2 */
      ASN1T_IVI_PolygonalLine *area;
      /* t = 3 */
      ASN1T_IVI_ComputedSegment *computedSegment;
      /* t = 4 */
      ASN1TOpenType *extElem1;
   } u;
   ASN1T_IVI_Zone () { t = 0; OSCRTLMEMSET (&u, 0, sizeof(u)); }
} ;

EXTERN int asn1PE_IVI_Zone (OSCTXT* pctxt, ASN1T_IVI_Zone* pvalue);

EXTERN int asn1PD_IVI_Zone (OSCTXT* pctxt, ASN1T_IVI_Zone* pvalue);

EXTERN int XmlEnc_IVI_Zone (OSCTXT* pctxt, ASN1T_IVI_Zone* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_Zone (OSCTXT* pctxt, ASN1T_IVI_Zone* pvalue);

EXTERN int asn1JsonEnc_IVI_Zone (OSCTXT *pctxt, ASN1T_IVI_Zone *pvalue);

EXTERN int asn1JsonDec_IVI_Zone (OSCTXT *pctxt, ASN1T_IVI_Zone *pvalue);

EXTERN int asn1PrtToStrm_IVI_Zone (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_Zone* pvalue);

EXTERN ASN1T_IVI_Zone* new_ASN1T_IVI_Zone (ASN1CType& ccobj);

EXTERN int asn1Init_IVI_Zone (ASN1T_IVI_Zone* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_Zone (OSCTXT *pctxt, ASN1T_IVI_Zone* pvalue);

/**************************************************************/
/*                                                            */
/*  GlcPart                                                   */
/*                                                            */
/**************************************************************/
/*
GlcPart ::= SEQUENCE {
   zoneId [0] Zid,
   laneNumber [1] LanePosition OPTIONAL,
   zoneExtension [2] INTEGER (0..255) OPTIONAL,
   zoneHeading [3] HeadingValue OPTIONAL,
   zone [4] EXPLICIT Zone OPTIONAL,
   ...
}
*/
struct EXTERN ASN1T_IVI_GlcPart {
   struct {
      unsigned laneNumberPresent : 1;
      unsigned zoneExtensionPresent : 1;
      unsigned zoneHeadingPresent : 1;
      unsigned zonePresent : 1;
   } m;
   ASN1T_IVI_Zid zoneId;
   ASN1T_ITS_LanePosition laneNumber;
   OSUINT8 zoneExtension;
   ASN1T_ITS_HeadingValue zoneHeading;
   ASN1T_IVI_Zone zone;
   ASN1TSeqExt extElem1;
   ASN1T_IVI_GlcPart ();
} ;

EXTERN int asn1PE_IVI_GlcPart (OSCTXT* pctxt, ASN1T_IVI_GlcPart* pvalue);

EXTERN int asn1PD_IVI_GlcPart (OSCTXT* pctxt, ASN1T_IVI_GlcPart* pvalue);

EXTERN int XmlEnc_IVI_GlcPart (OSCTXT* pctxt, ASN1T_IVI_GlcPart* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_GlcPart (OSCTXT* pctxt, ASN1T_IVI_GlcPart* pvalue);

EXTERN int asn1JsonEnc_IVI_GlcPart (OSCTXT *pctxt, ASN1T_IVI_GlcPart *pvalue);

EXTERN int asn1JsonDec_IVI_GlcPart (OSCTXT *pctxt, ASN1T_IVI_GlcPart *pvalue);

EXTERN int asn1PrtToStrm_IVI_GlcPart (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_GlcPart* pvalue);

EXTERN ASN1T_IVI_GlcPart* new_ASN1T_IVI_GlcPart (ASN1CType& ccobj);

EXTERN int asn1Init_IVI_GlcPart (ASN1T_IVI_GlcPart* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_GlcPart (OSCTXT *pctxt, ASN1T_IVI_GlcPart* pvalue);

/**************************************************************/
/*                                                            */
/*  GlcParts                                                  */
/*                                                            */
/**************************************************************/
/*
GlcParts ::= SEQUENCE (SIZE (1..16, ...)) OF GlcPart
*/
/* List of ASN1T_IVI_GlcPart */
typedef ASN1TSeqOfList ASN1T_IVI_GlcParts;

class EXTERN ASN1C_IVI_GlcParts :
public ASN1CSeqOfList
{
protected:
   ASN1T_IVI_GlcParts& msgData;
public:
   /**
    * Control class: ASN1C_IVI_GlcParts
    * Data class:    ASN1T_IVI_GlcParts
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_IVI_GlcParts (ASN1T_IVI_GlcParts& data);

   /**
    * Control class: ASN1C_IVI_GlcParts<br/>
    * Data class: ASN1T_IVI_GlcParts<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_IVI_GlcParts (OSRTMessageBufferIF& msgBuf, ASN1T_IVI_GlcParts& data);

   /**
    * Control class: ASN1C_IVI_GlcParts<br/>
    * Data class: ASN1T_IVI_GlcParts<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_IVI_GlcParts (ASN1CType& ccobj, ASN1T_IVI_GlcParts& data);

   virtual ~ASN1C_IVI_GlcParts () {}

   /**
    * Data class: ASN1T_IVI_GlcPart<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_IVI_GlcPart* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_IVI_GlcPart.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_IVI_GlcPart* NewElement ();

   /**
    * Data class: ASN1T_IVI_GlcPart.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_IVI_GlcPart* AppendNewElement ();

private:
   ASN1C_IVI_GlcParts& operator= (const ASN1C_IVI_GlcParts&) {return *this;}
} ;

EXTERN int asn1PE_IVI_GlcParts (OSCTXT* pctxt, ASN1T_IVI_GlcParts* pvalue);

EXTERN int asn1PD_IVI_GlcParts (OSCTXT* pctxt, ASN1T_IVI_GlcParts* pvalue);

EXTERN int XmlEnc_IVI_GlcParts (OSCTXT* pctxt, ASN1T_IVI_GlcParts* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_GlcParts (OSCTXT* pctxt, ASN1T_IVI_GlcParts* pvalue);

EXTERN int asn1JsonEnc_IVI_GlcParts (OSCTXT *pctxt, ASN1T_IVI_GlcParts *pvalue);

EXTERN int asn1JsonDec_IVI_GlcParts (OSCTXT *pctxt, ASN1T_IVI_GlcParts *pvalue);

EXTERN int asn1PrtToStrm_IVI_GlcParts (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_GlcParts* pvalue);

EXTERN int asn1Init_IVI_GlcParts (ASN1T_IVI_GlcParts* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_GlcParts (OSCTXT *pctxt, ASN1T_IVI_GlcParts* pvalue);

/**************************************************************/
/*                                                            */
/*  GeographicLocationContainer                               */
/*                                                            */
/**************************************************************/
/*
GeographicLocationContainer ::= SEQUENCE {
   referencePosition [0] ReferencePosition,
   referencePositionTime [1] TimestampIts OPTIONAL,
   referencePositionHeading [2] Heading OPTIONAL,
   referencePositionSpeed [3] Speed OPTIONAL,
   parts [4] GlcParts,
   ...
}
*/
struct EXTERN ASN1T_IVI_GeographicLocationContainer {
   struct {
      unsigned referencePositionTimePresent : 1;
      unsigned referencePositionHeadingPresent : 1;
      unsigned referencePositionSpeedPresent : 1;
   } m;
   ASN1T_ITS_ReferencePosition referencePosition;
   ASN1T_ITS_TimestampIts referencePositionTime;
   ASN1T_ITS_Heading referencePositionHeading;
   ASN1T_ITS_Speed referencePositionSpeed;
   ASN1T_IVI_GlcParts parts;
   ASN1TSeqExt extElem1;
   ASN1T_IVI_GeographicLocationContainer ();
} ;

EXTERN int asn1PE_IVI_GeographicLocationContainer (OSCTXT* pctxt, ASN1T_IVI_GeographicLocationContainer* pvalue);

EXTERN int asn1PD_IVI_GeographicLocationContainer (OSCTXT* pctxt, ASN1T_IVI_GeographicLocationContainer* pvalue);

EXTERN int XmlEnc_IVI_GeographicLocationContainer (OSCTXT* pctxt, 
   ASN1T_IVI_GeographicLocationContainer* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_GeographicLocationContainer (OSCTXT* pctxt, 
   ASN1T_IVI_GeographicLocationContainer* pvalue);

EXTERN int asn1JsonEnc_IVI_GeographicLocationContainer (OSCTXT *pctxt, ASN1T_IVI_GeographicLocationContainer *pvalue);

EXTERN int asn1JsonDec_IVI_GeographicLocationContainer (OSCTXT *pctxt, ASN1T_IVI_GeographicLocationContainer *pvalue);

EXTERN int asn1PrtToStrm_IVI_GeographicLocationContainer (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_GeographicLocationContainer* pvalue);

EXTERN ASN1T_IVI_GeographicLocationContainer* 
   new_ASN1T_IVI_GeographicLocationContainer (ASN1CType& ccobj);

EXTERN int asn1Init_IVI_GeographicLocationContainer (
   ASN1T_IVI_GeographicLocationContainer* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_GeographicLocationContainer (OSCTXT *pctxt, 
   ASN1T_IVI_GeographicLocationContainer* pvalue);

/**************************************************************/
/*                                                            */
/*  ZoneIds                                                   */
/*                                                            */
/**************************************************************/
/*
ZoneIds ::= SEQUENCE (SIZE (1..8, ...)) OF Zid
*/
typedef struct EXTERN ASN1T_IVI_ZoneIds {
   OSSIZE n;
   ASN1T_IVI_Zid *elem;
   ASN1T_IVI_ZoneIds () : n(0), elem(0) {}
} ASN1T_IVI_ZoneIds;

class EXTERN ASN1C_IVI_ZoneIds :
public ASN1CType
{
protected:
   ASN1T_IVI_ZoneIds& msgData;
public:
   /**
    * Control class: ASN1C_IVI_ZoneIds
    * Data class:    ASN1T_IVI_ZoneIds
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_IVI_ZoneIds (ASN1T_IVI_ZoneIds& data);

   /**
    * Control class: ASN1C_IVI_ZoneIds<br/>
    * Data class: ASN1T_IVI_ZoneIds<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_IVI_ZoneIds (OSRTMessageBufferIF& msgBuf, ASN1T_IVI_ZoneIds& data);

   /**
    * Control class: ASN1C_IVI_ZoneIds<br/>
    * Data class: ASN1T_IVI_ZoneIds<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_IVI_ZoneIds (ASN1CType& ccobj, ASN1T_IVI_ZoneIds& data);

   virtual ~ASN1C_IVI_ZoneIds () {}

private:
   ASN1C_IVI_ZoneIds& operator= (const ASN1C_IVI_ZoneIds&) {return *this;}
} ;

EXTERN int asn1PE_IVI_ZoneIds (OSCTXT* pctxt, ASN1T_IVI_ZoneIds* pvalue);

EXTERN int asn1PD_IVI_ZoneIds (OSCTXT* pctxt, ASN1T_IVI_ZoneIds* pvalue);

EXTERN int XmlEnc_IVI_ZoneIds (OSCTXT* pctxt, ASN1T_IVI_ZoneIds* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_ZoneIds (OSCTXT* pctxt, ASN1T_IVI_ZoneIds* pvalue);

EXTERN int asn1JsonEnc_IVI_ZoneIds (OSCTXT *pctxt, ASN1T_IVI_ZoneIds *pvalue);

EXTERN int asn1JsonDec_IVI_ZoneIds (OSCTXT *pctxt, ASN1T_IVI_ZoneIds *pvalue);

EXTERN int asn1PrtToStrm_IVI_ZoneIds (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_ZoneIds* pvalue);

EXTERN int asn1Init_IVI_ZoneIds (ASN1T_IVI_ZoneIds* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_ZoneIds (OSCTXT *pctxt, ASN1T_IVI_ZoneIds* pvalue);

/**************************************************************/
/*                                                            */
/*  Direction                                                 */
/*                                                            */
/**************************************************************/
/*
Direction ::= INTEGER { sameDirection(0), oppositeDirection(1), bothDirections(2), valueNotUsed(3) } (0..3)
*/
struct EXTERN IVI_Direction {
   enum Root {
      sameDirection = 0,
      oppositeDirection = 1,
      bothDirections = 2,
      valueNotUsed = 3
   } ;
} ;

typedef OSUINT8 ASN1T_IVI_Direction;

EXTERN int asn1PE_IVI_Direction (OSCTXT* pctxt, ASN1T_IVI_Direction value);

EXTERN int asn1PD_IVI_Direction (OSCTXT* pctxt, ASN1T_IVI_Direction* pvalue);

EXTERN int XmlEnc_IVI_Direction (OSCTXT* pctxt, ASN1T_IVI_Direction value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_Direction (OSCTXT* pctxt, ASN1T_IVI_Direction* pvalue);

EXTERN int asn1JsonEnc_IVI_Direction (OSCTXT *pctxt, ASN1T_IVI_Direction *pvalue);

EXTERN int asn1JsonDec_IVI_Direction (OSCTXT *pctxt, ASN1T_IVI_Direction *pvalue);

EXTERN int asn1PrtToStrm_IVI_Direction (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_Direction* pvalue);

EXTERN ASN1T_IVI_Direction* new_ASN1T_IVI_Direction (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  LanePositions                                             */
/*                                                            */
/**************************************************************/
/*
LanePositions ::= SEQUENCE (SIZE (1..8, ...)) OF LanePosition
*/
typedef struct EXTERN ASN1T_IVI_LanePositions {
   OSSIZE n;
   ASN1T_ITS_LanePosition *elem;
   ASN1T_IVI_LanePositions () : n(0), elem(0) {}
} ASN1T_IVI_LanePositions;

class EXTERN ASN1C_IVI_LanePositions :
public ASN1CType
{
protected:
   ASN1T_IVI_LanePositions& msgData;
public:
   /**
    * Control class: ASN1C_IVI_LanePositions
    * Data class:    ASN1T_IVI_LanePositions
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_IVI_LanePositions (ASN1T_IVI_LanePositions& data);

   /**
    * Control class: ASN1C_IVI_LanePositions<br/>
    * Data class: ASN1T_IVI_LanePositions<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_IVI_LanePositions (OSRTMessageBufferIF& msgBuf
      , ASN1T_IVI_LanePositions& data);

   /**
    * Control class: ASN1C_IVI_LanePositions<br/>
    * Data class: ASN1T_IVI_LanePositions<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_IVI_LanePositions (ASN1CType& ccobj, ASN1T_IVI_LanePositions& data);

   virtual ~ASN1C_IVI_LanePositions () {}

private:
   ASN1C_IVI_LanePositions& operator= (const ASN1C_IVI_LanePositions&) {return *this;}
} ;

EXTERN int asn1PE_IVI_LanePositions (OSCTXT* pctxt, ASN1T_IVI_LanePositions* pvalue);

EXTERN int asn1PD_IVI_LanePositions (OSCTXT* pctxt, ASN1T_IVI_LanePositions* pvalue);

EXTERN int XmlEnc_IVI_LanePositions (OSCTXT* pctxt, 
   ASN1T_IVI_LanePositions* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_LanePositions (OSCTXT* pctxt, 
   ASN1T_IVI_LanePositions* pvalue);

EXTERN int asn1JsonEnc_IVI_LanePositions (OSCTXT *pctxt, ASN1T_IVI_LanePositions *pvalue);

EXTERN int asn1JsonDec_IVI_LanePositions (OSCTXT *pctxt, ASN1T_IVI_LanePositions *pvalue);

EXTERN int asn1PrtToStrm_IVI_LanePositions (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_LanePositions* pvalue);

EXTERN int asn1Init_IVI_LanePositions (ASN1T_IVI_LanePositions* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_LanePositions (OSCTXT *pctxt, 
   ASN1T_IVI_LanePositions* pvalue);

/**************************************************************/
/*                                                            */
/*  IviType                                                   */
/*                                                            */
/**************************************************************/
/*
IviType ::= INTEGER { immediateDangerWarningMessages(0), regulatoryMessages(1), trafficRelatedInformationMessages(2), pollutionMessages(3), notTrafficRelatedInformationMessages(4) } (0..7)
*/
struct EXTERN IVI_IviType {
   enum Root {
      immediateDangerWarningMessages = 0,
      regulatoryMessages = 1,
      trafficRelatedInformationMessages = 2,
      pollutionMessages = 3,
      notTrafficRelatedInformationMessages = 4
   } ;
} ;

typedef OSUINT8 ASN1T_IVI_IviType;

EXTERN int asn1PE_IVI_IviType (OSCTXT* pctxt, ASN1T_IVI_IviType value);

EXTERN int asn1PD_IVI_IviType (OSCTXT* pctxt, ASN1T_IVI_IviType* pvalue);

EXTERN int XmlEnc_IVI_IviType (OSCTXT* pctxt, ASN1T_IVI_IviType value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_IviType (OSCTXT* pctxt, ASN1T_IVI_IviType* pvalue);

EXTERN int asn1JsonEnc_IVI_IviType (OSCTXT *pctxt, ASN1T_IVI_IviType *pvalue);

EXTERN int asn1JsonDec_IVI_IviType (OSCTXT *pctxt, ASN1T_IVI_IviType *pvalue);

EXTERN int asn1PrtToStrm_IVI_IviType (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_IviType* pvalue);

EXTERN ASN1T_IVI_IviType* new_ASN1T_IVI_IviType (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  IviPurpose                                                */
/*                                                            */
/**************************************************************/
/*
IviPurpose ::= INTEGER { safety(0), environmental(1), trafficOptimisation(2) } (0..3)
*/
struct EXTERN IVI_IviPurpose {
   enum Root {
      safety = 0,
      environmental = 1,
      trafficOptimisation = 2
   } ;
} ;

typedef OSUINT8 ASN1T_IVI_IviPurpose;

EXTERN int asn1PE_IVI_IviPurpose (OSCTXT* pctxt, ASN1T_IVI_IviPurpose value);

EXTERN int asn1PD_IVI_IviPurpose (OSCTXT* pctxt, ASN1T_IVI_IviPurpose* pvalue);

EXTERN int XmlEnc_IVI_IviPurpose (OSCTXT* pctxt, ASN1T_IVI_IviPurpose value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_IviPurpose (OSCTXT* pctxt, ASN1T_IVI_IviPurpose* pvalue)
   ;

EXTERN int asn1JsonEnc_IVI_IviPurpose (OSCTXT *pctxt, ASN1T_IVI_IviPurpose *pvalue);

EXTERN int asn1JsonDec_IVI_IviPurpose (OSCTXT *pctxt, ASN1T_IVI_IviPurpose *pvalue);

EXTERN int asn1PrtToStrm_IVI_IviPurpose (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_IviPurpose* pvalue);

EXTERN ASN1T_IVI_IviPurpose* new_ASN1T_IVI_IviPurpose (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  LaneStatus                                                */
/*                                                            */
/**************************************************************/
/*
LaneStatus ::= INTEGER { open(0), closed(1), mergeR(2), mergeL(3), mergeLR(4), provisionallyOpen(5), diverging(6) } (0..7, ...)
*/
struct EXTERN IVI_LaneStatus {
   enum Root {
      open_ = 0,
      closed = 1,
      mergeR = 2,
      mergeL = 3,
      mergeLR = 4,
      provisionallyOpen = 5,
      diverging = 6
   } ;
} ;

typedef OSUINT32 ASN1T_IVI_LaneStatus;

EXTERN int asn1PE_IVI_LaneStatus (OSCTXT* pctxt, ASN1T_IVI_LaneStatus value);

EXTERN int asn1PD_IVI_LaneStatus (OSCTXT* pctxt, ASN1T_IVI_LaneStatus* pvalue);

EXTERN int XmlEnc_IVI_LaneStatus (OSCTXT* pctxt, ASN1T_IVI_LaneStatus value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_LaneStatus (OSCTXT* pctxt, ASN1T_IVI_LaneStatus* pvalue)
   ;

EXTERN int asn1JsonEnc_IVI_LaneStatus (OSCTXT *pctxt, ASN1T_IVI_LaneStatus *pvalue);

EXTERN int asn1JsonDec_IVI_LaneStatus (OSCTXT *pctxt, ASN1T_IVI_LaneStatus *pvalue);

EXTERN int asn1PrtToStrm_IVI_LaneStatus (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_LaneStatus* pvalue);

EXTERN ASN1T_IVI_LaneStatus* new_ASN1T_IVI_LaneStatus (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  GoodsType                                                 */
/*                                                            */
/**************************************************************/
/*
GoodsType ::= INTEGER { ammunition(0), chemicals(1), empty(2), fuel(3), glass(4), dangerous(5), liquid(6), liveStock(7), dangerousForPeople(8), dangerousForTheEnvironment(9), dangerousForWater(10), perishableProducts(11), pharmaceutical(12), vehicles(13) } (0..15, ...)
*/
struct EXTERN IVI_GoodsType {
   enum Root {
      ammunition = 0,
      chemicals = 1,
      empty = 2,
      fuel = 3,
      glass = 4,
      dangerous = 5,
      liquid = 6,
      liveStock = 7,
      dangerousForPeople = 8,
      dangerousForTheEnvironment = 9,
      dangerousForWater = 10,
      perishableProducts = 11,
      pharmaceutical = 12,
      vehicles = 13
   } ;
} ;

typedef OSUINT32 ASN1T_IVI_GoodsType;

EXTERN int asn1PE_IVI_GoodsType (OSCTXT* pctxt, ASN1T_IVI_GoodsType value);

EXTERN int asn1PD_IVI_GoodsType (OSCTXT* pctxt, ASN1T_IVI_GoodsType* pvalue);

EXTERN int XmlEnc_IVI_GoodsType (OSCTXT* pctxt, ASN1T_IVI_GoodsType value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_GoodsType (OSCTXT* pctxt, ASN1T_IVI_GoodsType* pvalue);

EXTERN int asn1JsonEnc_IVI_GoodsType (OSCTXT *pctxt, ASN1T_IVI_GoodsType *pvalue);

EXTERN int asn1JsonDec_IVI_GoodsType (OSCTXT *pctxt, ASN1T_IVI_GoodsType *pvalue);

EXTERN int asn1PrtToStrm_IVI_GoodsType (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_GoodsType* pvalue);

EXTERN ASN1T_IVI_GoodsType* new_ASN1T_IVI_GoodsType (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  LoadType                                                  */
/*                                                            */
/**************************************************************/
/*
LoadType ::= SEQUENCE {
   goodsType [0] GoodsType,
   dangerousGoodsType [1] DangerousGoodsBasic,
   specialTransportType [2] SpecialTransportType
}
*/
struct EXTERN ASN1T_IVI_LoadType {
   ASN1T_IVI_GoodsType goodsType;
   ASN1T_ITS_DangerousGoodsBasic dangerousGoodsType;
   ASN1T_ITS_SpecialTransportType specialTransportType;
} ;

EXTERN int asn1PE_IVI_LoadType (OSCTXT* pctxt, ASN1T_IVI_LoadType* pvalue);

EXTERN int asn1PD_IVI_LoadType (OSCTXT* pctxt, ASN1T_IVI_LoadType* pvalue);

EXTERN int XmlEnc_IVI_LoadType (OSCTXT* pctxt, ASN1T_IVI_LoadType* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_LoadType (OSCTXT* pctxt, ASN1T_IVI_LoadType* pvalue);

EXTERN int asn1JsonEnc_IVI_LoadType (OSCTXT *pctxt, ASN1T_IVI_LoadType *pvalue);

EXTERN int asn1JsonDec_IVI_LoadType (OSCTXT *pctxt, ASN1T_IVI_LoadType *pvalue);

EXTERN int asn1PrtToStrm_IVI_LoadType (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_LoadType* pvalue);

EXTERN ASN1T_IVI_LoadType* new_ASN1T_IVI_LoadType (ASN1CType& ccobj);

EXTERN int asn1Init_IVI_LoadType (ASN1T_IVI_LoadType* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

/**************************************************************/
/*                                                            */
/*  VehicleCharacteristicsFixValues                           */
/*                                                            */
/**************************************************************/
/*
VehicleCharacteristicsFixValues ::= CHOICE {
   simpleVehicleType [0] StationType,
   euVehicleCategoryCode [1] EXPLICIT EuVehicleCategoryCode,
   iso3833VehicleType [2] Iso3833VehicleType,
   euroAndCo2value [3] EnvironmentalCharacteristics,
   engineCharacteristics [4] EngineCharacteristics,
   loadType [5] LoadType,
   usage [6] VehicleRole,
   ...
}
*/
/* Choice tag constants */

#define T_IVI_VehicleCharacteristicsFixValues_simpleVehicleType 1
#define T_IVI_VehicleCharacteristicsFixValues_euVehicleCategoryCode 2
#define T_IVI_VehicleCharacteristicsFixValues_iso3833VehicleType 3
#define T_IVI_VehicleCharacteristicsFixValues_euroAndCo2value 4
#define T_IVI_VehicleCharacteristicsFixValues_engineCharacteristics 5
#define T_IVI_VehicleCharacteristicsFixValues_loadType 6
#define T_IVI_VehicleCharacteristicsFixValues_usage 7
#define T_IVI_VehicleCharacteristicsFixValues_extElem1 8

struct EXTERN ASN1T_IVI_VehicleCharacteristicsFixValues {
   OSINT32 t;
   union {
      /* t = 1 */
      ASN1T_ITS_StationType simpleVehicleType;
      /* t = 2 */
      ASN1T_EuVehicleCategoryCode *euVehicleCategoryCode;
      /* t = 3 */
      ASN1T_Iso3833VehicleType iso3833VehicleType;
      /* t = 4 */
      ASN1T_EnvironmentalCharacteristics *euroAndCo2value;
      /* t = 5 */
      ASN1T_EngineCharacteristics engineCharacteristics;
      /* t = 6 */
      ASN1T_IVI_LoadType *loadType;
      /* t = 7 */
      ASN1T_ITS_VehicleRole usage;
      /* t = 8 */
      ASN1TOpenType *extElem1;
   } u;
   ASN1T_IVI_VehicleCharacteristicsFixValues () { t = 0; OSCRTLMEMSET (&u, 0, sizeof(u)); }
} ;

EXTERN int asn1PE_IVI_VehicleCharacteristicsFixValues (OSCTXT* pctxt, ASN1T_IVI_VehicleCharacteristicsFixValues* pvalue);

EXTERN int asn1PD_IVI_VehicleCharacteristicsFixValues (OSCTXT* pctxt, ASN1T_IVI_VehicleCharacteristicsFixValues* pvalue);

EXTERN int XmlEnc_IVI_VehicleCharacteristicsFixValues (OSCTXT* pctxt, 
   ASN1T_IVI_VehicleCharacteristicsFixValues* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_VehicleCharacteristicsFixValues (OSCTXT* pctxt, 
   ASN1T_IVI_VehicleCharacteristicsFixValues* pvalue);

EXTERN int asn1JsonEnc_IVI_VehicleCharacteristicsFixValues (OSCTXT *pctxt, ASN1T_IVI_VehicleCharacteristicsFixValues *pvalue);

EXTERN int asn1JsonDec_IVI_VehicleCharacteristicsFixValues (OSCTXT *pctxt, ASN1T_IVI_VehicleCharacteristicsFixValues *pvalue);

EXTERN int asn1PrtToStrm_IVI_VehicleCharacteristicsFixValues (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_VehicleCharacteristicsFixValues* pvalue);

EXTERN ASN1T_IVI_VehicleCharacteristicsFixValues* 
   new_ASN1T_IVI_VehicleCharacteristicsFixValues (ASN1CType& ccobj);

EXTERN int asn1Init_IVI_VehicleCharacteristicsFixValues (
   ASN1T_IVI_VehicleCharacteristicsFixValues* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_VehicleCharacteristicsFixValues (OSCTXT *pctxt, 
   ASN1T_IVI_VehicleCharacteristicsFixValues* pvalue);

/**************************************************************/
/*                                                            */
/*  VehicleCharacteristicsFixValuesList                       */
/*                                                            */
/**************************************************************/
/*
VehicleCharacteristicsFixValuesList ::= SEQUENCE (SIZE (1..4, ...)) OF VehicleCharacteristicsFixValues
*/
/* List of ASN1T_IVI_VehicleCharacteristicsFixValues */
typedef ASN1TSeqOfList ASN1T_IVI_VehicleCharacteristicsFixValuesList;

class EXTERN ASN1C_IVI_VehicleCharacteristicsFixValuesList :
public ASN1CSeqOfList
{
protected:
   ASN1T_IVI_VehicleCharacteristicsFixValuesList& msgData;
public:
   /**
    * Control class: ASN1C_IVI_VehicleCharacteristicsFixValuesList
    * Data class:    ASN1T_IVI_VehicleCharacteristicsFixValuesList
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_IVI_VehicleCharacteristicsFixValuesList
       (ASN1T_IVI_VehicleCharacteristicsFixValuesList& data);

   /**
    * Control class: ASN1C_IVI_VehicleCharacteristicsFixValuesList<br/>
    * Data class: ASN1T_IVI_VehicleCharacteristicsFixValuesList<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_IVI_VehicleCharacteristicsFixValuesList (OSRTMessageBufferIF& msgBuf
      , ASN1T_IVI_VehicleCharacteristicsFixValuesList& data);

   /**
    * Control class: ASN1C_IVI_VehicleCharacteristicsFixValuesList<br/>
    * Data class: ASN1T_IVI_VehicleCharacteristicsFixValuesList<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_IVI_VehicleCharacteristicsFixValuesList (ASN1CType& ccobj
      , ASN1T_IVI_VehicleCharacteristicsFixValuesList& data);

   virtual ~ASN1C_IVI_VehicleCharacteristicsFixValuesList () {}

   /**
    * Data class: ASN1T_IVI_VehicleCharacteristicsFixValues<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_IVI_VehicleCharacteristicsFixValues* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_IVI_VehicleCharacteristicsFixValues.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_IVI_VehicleCharacteristicsFixValues* NewElement ();

   /**
    * Data class: ASN1T_IVI_VehicleCharacteristicsFixValues.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_IVI_VehicleCharacteristicsFixValues* AppendNewElement ();

private:
   ASN1C_IVI_VehicleCharacteristicsFixValuesList& operator= (const ASN1C_IVI_VehicleCharacteristicsFixValuesList&) {return *this;}
} ;

EXTERN int asn1PE_IVI_VehicleCharacteristicsFixValuesList (OSCTXT* pctxt, ASN1T_IVI_VehicleCharacteristicsFixValuesList* pvalue);

EXTERN int asn1PD_IVI_VehicleCharacteristicsFixValuesList (OSCTXT* pctxt, ASN1T_IVI_VehicleCharacteristicsFixValuesList* pvalue);

EXTERN int XmlEnc_IVI_VehicleCharacteristicsFixValuesList (OSCTXT* pctxt, 
   ASN1T_IVI_VehicleCharacteristicsFixValuesList* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_VehicleCharacteristicsFixValuesList (OSCTXT* pctxt, 
   ASN1T_IVI_VehicleCharacteristicsFixValuesList* pvalue);

EXTERN int asn1JsonEnc_IVI_VehicleCharacteristicsFixValuesList (OSCTXT *pctxt, ASN1T_IVI_VehicleCharacteristicsFixValuesList *pvalue);

EXTERN int asn1JsonDec_IVI_VehicleCharacteristicsFixValuesList (OSCTXT *pctxt, ASN1T_IVI_VehicleCharacteristicsFixValuesList *pvalue);

EXTERN int asn1PrtToStrm_IVI_VehicleCharacteristicsFixValuesList (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_VehicleCharacteristicsFixValuesList* pvalue);

EXTERN int asn1Init_IVI_VehicleCharacteristicsFixValuesList (
   ASN1T_IVI_VehicleCharacteristicsFixValuesList* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_VehicleCharacteristicsFixValuesList (OSCTXT *pctxt, 
   ASN1T_IVI_VehicleCharacteristicsFixValuesList* pvalue);

/**************************************************************/
/*                                                            */
/*  ComparisonOperator                                        */
/*                                                            */
/**************************************************************/
/*
ComparisonOperator ::= INTEGER { greaterThan(0), greaterThanOrEqualTo(1), lessThan(2), lessThanOrEqualTo(3) } (0..3)
*/
struct EXTERN IVI_ComparisonOperator {
   enum Root {
      greaterThan = 0,
      greaterThanOrEqualTo = 1,
      lessThan = 2,
      lessThanOrEqualTo = 3
   } ;
} ;

typedef OSUINT8 ASN1T_IVI_ComparisonOperator;

EXTERN int asn1PE_IVI_ComparisonOperator (OSCTXT* pctxt, ASN1T_IVI_ComparisonOperator value);

EXTERN int asn1PD_IVI_ComparisonOperator (OSCTXT* pctxt, ASN1T_IVI_ComparisonOperator* pvalue);

EXTERN int XmlEnc_IVI_ComparisonOperator (OSCTXT* pctxt, 
   ASN1T_IVI_ComparisonOperator value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_ComparisonOperator (OSCTXT* pctxt, 
   ASN1T_IVI_ComparisonOperator* pvalue);

EXTERN int asn1JsonEnc_IVI_ComparisonOperator (OSCTXT *pctxt, ASN1T_IVI_ComparisonOperator *pvalue);

EXTERN int asn1JsonDec_IVI_ComparisonOperator (OSCTXT *pctxt, ASN1T_IVI_ComparisonOperator *pvalue);

EXTERN int asn1PrtToStrm_IVI_ComparisonOperator (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_ComparisonOperator* pvalue);

EXTERN ASN1T_IVI_ComparisonOperator* 
   new_ASN1T_IVI_ComparisonOperator (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  VehicleCharacteristicsRanges_limits                       */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'VehicleCharacteristicsRanges'
*/
/* Choice tag constants */

#define T_IVI_VehicleCharacteristicsRanges_limits_numberOfAxles 1
#define T_IVI_VehicleCharacteristicsRanges_limits_vehicleDimensions 2
#define T_IVI_VehicleCharacteristicsRanges_limits_vehicleWeightLimits 3
#define T_IVI_VehicleCharacteristicsRanges_limits_axleWeightLimits 4
#define T_IVI_VehicleCharacteristicsRanges_limits_passengerCapacity 5
#define T_IVI_VehicleCharacteristicsRanges_limits_exhaustEmissionValues 6
#define T_IVI_VehicleCharacteristicsRanges_limits_dieselEmissionValues 7
#define T_IVI_VehicleCharacteristicsRanges_limits_soundLevel 8
#define T_IVI_VehicleCharacteristicsRanges_limits_extElem1 9

struct EXTERN ASN1T_IVI_VehicleCharacteristicsRanges_limits {
   OSINT32 t;
   union {
      /* t = 1 */
      OSUINT8 numberOfAxles;
      /* t = 2 */
      ASN1T_VehicleDimensions *vehicleDimensions;
      /* t = 3 */
      ASN1T_VehicleWeightLimits *vehicleWeightLimits;
      /* t = 4 */
      ASN1T_AxleWeightLimits *axleWeightLimits;
      /* t = 5 */
      ASN1T_PassengerCapacity *passengerCapacity;
      /* t = 6 */
      ASN1T_ExhaustEmissionValues *exhaustEmissionValues;
      /* t = 7 */
      ASN1T_DieselEmissionValues *dieselEmissionValues;
      /* t = 8 */
      ASN1T_SoundLevel *soundLevel;
      /* t = 9 */
      ASN1TOpenType *extElem1;
   } u;
   ASN1T_IVI_VehicleCharacteristicsRanges_limits () { t = 0; OSCRTLMEMSET (&u, 0, sizeof(u)); }
} ;

EXTERN int asn1PE_IVI_VehicleCharacteristicsRanges_limits (OSCTXT* pctxt, ASN1T_IVI_VehicleCharacteristicsRanges_limits* pvalue);

EXTERN int asn1PD_IVI_VehicleCharacteristicsRanges_limits (OSCTXT* pctxt, ASN1T_IVI_VehicleCharacteristicsRanges_limits* pvalue);

EXTERN int XmlEnc_IVI_VehicleCharacteristicsRanges_limits (OSCTXT* pctxt, 
   ASN1T_IVI_VehicleCharacteristicsRanges_limits* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_VehicleCharacteristicsRanges_limits (OSCTXT* pctxt, 
   ASN1T_IVI_VehicleCharacteristicsRanges_limits* pvalue);

EXTERN int asn1JsonEnc_IVI_VehicleCharacteristicsRanges_limits (OSCTXT *pctxt, ASN1T_IVI_VehicleCharacteristicsRanges_limits *pvalue);

EXTERN int asn1JsonDec_IVI_VehicleCharacteristicsRanges_limits (OSCTXT *pctxt, ASN1T_IVI_VehicleCharacteristicsRanges_limits *pvalue);

EXTERN int asn1PrtToStrm_IVI_VehicleCharacteristicsRanges_limits (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_VehicleCharacteristicsRanges_limits* pvalue);

EXTERN ASN1T_IVI_VehicleCharacteristicsRanges_limits* 
   new_ASN1T_IVI_VehicleCharacteristicsRanges_limits (ASN1CType& ccobj);

EXTERN int asn1Init_IVI_VehicleCharacteristicsRanges_limits (
   ASN1T_IVI_VehicleCharacteristicsRanges_limits* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_VehicleCharacteristicsRanges_limits (OSCTXT *pctxt, 
   ASN1T_IVI_VehicleCharacteristicsRanges_limits* pvalue);

/**************************************************************/
/*                                                            */
/*  VehicleCharacteristicsRanges                              */
/*                                                            */
/**************************************************************/
/*
VehicleCharacteristicsRanges ::= SEQUENCE {
   comparisonOperator [0] ComparisonOperator,
   limits [1] EXPLICIT CHOICE {
      numberOfAxles [0] INTEGER (0..7),
      vehicleDimensions [1] VehicleDimensions,
      vehicleWeightLimits [2] VehicleWeightLimits,
      axleWeightLimits [3] AxleWeightLimits,
      passengerCapacity [4] PassengerCapacity,
      exhaustEmissionValues [5] ExhaustEmissionValues,
      dieselEmissionValues [6] DieselEmissionValues,
      soundLevel [7] SoundLevel,
      ...
   }
}
*/
struct EXTERN ASN1T_IVI_VehicleCharacteristicsRanges {
   ASN1T_IVI_ComparisonOperator comparisonOperator;
   ASN1T_IVI_VehicleCharacteristicsRanges_limits limits;
} ;

EXTERN int asn1PE_IVI_VehicleCharacteristicsRanges (OSCTXT* pctxt, ASN1T_IVI_VehicleCharacteristicsRanges* pvalue);

EXTERN int asn1PD_IVI_VehicleCharacteristicsRanges (OSCTXT* pctxt, ASN1T_IVI_VehicleCharacteristicsRanges* pvalue);

EXTERN int XmlEnc_IVI_VehicleCharacteristicsRanges (OSCTXT* pctxt, 
   ASN1T_IVI_VehicleCharacteristicsRanges* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_VehicleCharacteristicsRanges (OSCTXT* pctxt, 
   ASN1T_IVI_VehicleCharacteristicsRanges* pvalue);

EXTERN int asn1JsonEnc_IVI_VehicleCharacteristicsRanges (OSCTXT *pctxt, ASN1T_IVI_VehicleCharacteristicsRanges *pvalue);

EXTERN int asn1JsonDec_IVI_VehicleCharacteristicsRanges (OSCTXT *pctxt, ASN1T_IVI_VehicleCharacteristicsRanges *pvalue);

EXTERN int asn1PrtToStrm_IVI_VehicleCharacteristicsRanges (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_VehicleCharacteristicsRanges* pvalue);

EXTERN ASN1T_IVI_VehicleCharacteristicsRanges* 
   new_ASN1T_IVI_VehicleCharacteristicsRanges (ASN1CType& ccobj);

EXTERN int asn1Init_IVI_VehicleCharacteristicsRanges (
   ASN1T_IVI_VehicleCharacteristicsRanges* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_VehicleCharacteristicsRanges (OSCTXT *pctxt, 
   ASN1T_IVI_VehicleCharacteristicsRanges* pvalue);

/**************************************************************/
/*                                                            */
/*  VehicleCharacteristicsRangesList                          */
/*                                                            */
/**************************************************************/
/*
VehicleCharacteristicsRangesList ::= SEQUENCE (SIZE (1..4, ...)) OF VehicleCharacteristicsRanges
*/
/* List of ASN1T_IVI_VehicleCharacteristicsRanges */
typedef ASN1TSeqOfList ASN1T_IVI_VehicleCharacteristicsRangesList;

class EXTERN ASN1C_IVI_VehicleCharacteristicsRangesList :
public ASN1CSeqOfList
{
protected:
   ASN1T_IVI_VehicleCharacteristicsRangesList& msgData;
public:
   /**
    * Control class: ASN1C_IVI_VehicleCharacteristicsRangesList
    * Data class:    ASN1T_IVI_VehicleCharacteristicsRangesList
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_IVI_VehicleCharacteristicsRangesList
       (ASN1T_IVI_VehicleCharacteristicsRangesList& data);

   /**
    * Control class: ASN1C_IVI_VehicleCharacteristicsRangesList<br/>
    * Data class: ASN1T_IVI_VehicleCharacteristicsRangesList<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_IVI_VehicleCharacteristicsRangesList (OSRTMessageBufferIF& msgBuf
      , ASN1T_IVI_VehicleCharacteristicsRangesList& data);

   /**
    * Control class: ASN1C_IVI_VehicleCharacteristicsRangesList<br/>
    * Data class: ASN1T_IVI_VehicleCharacteristicsRangesList<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_IVI_VehicleCharacteristicsRangesList (ASN1CType& ccobj
      , ASN1T_IVI_VehicleCharacteristicsRangesList& data);

   virtual ~ASN1C_IVI_VehicleCharacteristicsRangesList () {}

   /**
    * Data class: ASN1T_IVI_VehicleCharacteristicsRanges<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_IVI_VehicleCharacteristicsRanges* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_IVI_VehicleCharacteristicsRanges.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_IVI_VehicleCharacteristicsRanges* NewElement ();

   /**
    * Data class: ASN1T_IVI_VehicleCharacteristicsRanges.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_IVI_VehicleCharacteristicsRanges* AppendNewElement ();

private:
   ASN1C_IVI_VehicleCharacteristicsRangesList& operator= (const ASN1C_IVI_VehicleCharacteristicsRangesList&) {return *this;}
} ;

EXTERN int asn1PE_IVI_VehicleCharacteristicsRangesList (OSCTXT* pctxt, ASN1T_IVI_VehicleCharacteristicsRangesList* pvalue);

EXTERN int asn1PD_IVI_VehicleCharacteristicsRangesList (OSCTXT* pctxt, ASN1T_IVI_VehicleCharacteristicsRangesList* pvalue);

EXTERN int XmlEnc_IVI_VehicleCharacteristicsRangesList (OSCTXT* pctxt, 
   ASN1T_IVI_VehicleCharacteristicsRangesList* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_VehicleCharacteristicsRangesList (OSCTXT* pctxt, 
   ASN1T_IVI_VehicleCharacteristicsRangesList* pvalue);

EXTERN int asn1JsonEnc_IVI_VehicleCharacteristicsRangesList (OSCTXT *pctxt, ASN1T_IVI_VehicleCharacteristicsRangesList *pvalue);

EXTERN int asn1JsonDec_IVI_VehicleCharacteristicsRangesList (OSCTXT *pctxt, ASN1T_IVI_VehicleCharacteristicsRangesList *pvalue);

EXTERN int asn1PrtToStrm_IVI_VehicleCharacteristicsRangesList (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_VehicleCharacteristicsRangesList* pvalue);

EXTERN int asn1Init_IVI_VehicleCharacteristicsRangesList (
   ASN1T_IVI_VehicleCharacteristicsRangesList* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_VehicleCharacteristicsRangesList (OSCTXT *pctxt, 
   ASN1T_IVI_VehicleCharacteristicsRangesList* pvalue);

/**************************************************************/
/*                                                            */
/*  TractorCharacteristics                                    */
/*                                                            */
/**************************************************************/
/*
TractorCharacteristics ::= SEQUENCE {
   equalTo [0] VehicleCharacteristicsFixValuesList OPTIONAL,
   notEqualTo [1] VehicleCharacteristicsFixValuesList OPTIONAL,
   ranges [2] VehicleCharacteristicsRangesList OPTIONAL
}
*/
struct EXTERN ASN1T_IVI_TractorCharacteristics {
   struct {
      unsigned equalToPresent : 1;
      unsigned notEqualToPresent : 1;
      unsigned rangesPresent : 1;
   } m;
   ASN1T_IVI_VehicleCharacteristicsFixValuesList equalTo;
   ASN1T_IVI_VehicleCharacteristicsFixValuesList notEqualTo;
   ASN1T_IVI_VehicleCharacteristicsRangesList ranges;
   ASN1T_IVI_TractorCharacteristics ();
} ;

EXTERN int asn1PE_IVI_TractorCharacteristics (OSCTXT* pctxt, ASN1T_IVI_TractorCharacteristics* pvalue);

EXTERN int asn1PD_IVI_TractorCharacteristics (OSCTXT* pctxt, ASN1T_IVI_TractorCharacteristics* pvalue);

EXTERN int XmlEnc_IVI_TractorCharacteristics (OSCTXT* pctxt, 
   ASN1T_IVI_TractorCharacteristics* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_TractorCharacteristics (OSCTXT* pctxt, 
   ASN1T_IVI_TractorCharacteristics* pvalue);

EXTERN int asn1JsonEnc_IVI_TractorCharacteristics (OSCTXT *pctxt, ASN1T_IVI_TractorCharacteristics *pvalue);

EXTERN int asn1JsonDec_IVI_TractorCharacteristics (OSCTXT *pctxt, ASN1T_IVI_TractorCharacteristics *pvalue);

EXTERN int asn1PrtToStrm_IVI_TractorCharacteristics (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_TractorCharacteristics* pvalue);

EXTERN ASN1T_IVI_TractorCharacteristics* 
   new_ASN1T_IVI_TractorCharacteristics (ASN1CType& ccobj);

EXTERN int asn1Init_IVI_TractorCharacteristics (
   ASN1T_IVI_TractorCharacteristics* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_TractorCharacteristics (OSCTXT *pctxt, 
   ASN1T_IVI_TractorCharacteristics* pvalue);

/**************************************************************/
/*                                                            */
/*  TrailerCharacteristicsFixValuesList                       */
/*                                                            */
/**************************************************************/
/*
TrailerCharacteristicsFixValuesList ::= SEQUENCE (SIZE (1..4, ...)) OF VehicleCharacteristicsFixValues (WITH COMPONENTS {..., engineCharacteristics ABSENT, euroAndCo2value ABSENT})
*/
/* List of ASN1T_IVI_VehicleCharacteristicsFixValues */
typedef ASN1TSeqOfList ASN1T_IVI_TrailerCharacteristicsFixValuesList;

class EXTERN ASN1C_IVI_TrailerCharacteristicsFixValuesList :
public ASN1CSeqOfList
{
protected:
   ASN1T_IVI_TrailerCharacteristicsFixValuesList& msgData;
public:
   /**
    * Control class: ASN1C_IVI_TrailerCharacteristicsFixValuesList
    * Data class:    ASN1T_IVI_TrailerCharacteristicsFixValuesList
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_IVI_TrailerCharacteristicsFixValuesList
       (ASN1T_IVI_TrailerCharacteristicsFixValuesList& data);

   /**
    * Control class: ASN1C_IVI_TrailerCharacteristicsFixValuesList<br/>
    * Data class: ASN1T_IVI_TrailerCharacteristicsFixValuesList<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_IVI_TrailerCharacteristicsFixValuesList (OSRTMessageBufferIF& msgBuf
      , ASN1T_IVI_TrailerCharacteristicsFixValuesList& data);

   /**
    * Control class: ASN1C_IVI_TrailerCharacteristicsFixValuesList<br/>
    * Data class: ASN1T_IVI_TrailerCharacteristicsFixValuesList<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_IVI_TrailerCharacteristicsFixValuesList (ASN1CType& ccobj
      , ASN1T_IVI_TrailerCharacteristicsFixValuesList& data);

   virtual ~ASN1C_IVI_TrailerCharacteristicsFixValuesList () {}

   /**
    * Data class: ASN1T_IVI_VehicleCharacteristicsFixValues<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_IVI_VehicleCharacteristicsFixValues* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_IVI_VehicleCharacteristicsFixValues.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_IVI_VehicleCharacteristicsFixValues* NewElement ();

   /**
    * Data class: ASN1T_IVI_VehicleCharacteristicsFixValues.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_IVI_VehicleCharacteristicsFixValues* AppendNewElement ();

private:
   ASN1C_IVI_TrailerCharacteristicsFixValuesList& operator= (const ASN1C_IVI_TrailerCharacteristicsFixValuesList&) {return *this;}
} ;

EXTERN int asn1PE_IVI_TrailerCharacteristicsFixValuesList (OSCTXT* pctxt, ASN1T_IVI_TrailerCharacteristicsFixValuesList* pvalue);

EXTERN int asn1PD_IVI_TrailerCharacteristicsFixValuesList (OSCTXT* pctxt, ASN1T_IVI_TrailerCharacteristicsFixValuesList* pvalue);

EXTERN int XmlEnc_IVI_TrailerCharacteristicsFixValuesList (OSCTXT* pctxt, 
   ASN1T_IVI_TrailerCharacteristicsFixValuesList* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_TrailerCharacteristicsFixValuesList (OSCTXT* pctxt, 
   ASN1T_IVI_TrailerCharacteristicsFixValuesList* pvalue);

EXTERN int asn1JsonEnc_IVI_TrailerCharacteristicsFixValuesList (OSCTXT *pctxt, ASN1T_IVI_TrailerCharacteristicsFixValuesList *pvalue);

EXTERN int asn1JsonDec_IVI_TrailerCharacteristicsFixValuesList (OSCTXT *pctxt, ASN1T_IVI_TrailerCharacteristicsFixValuesList *pvalue);

EXTERN int asn1PrtToStrm_IVI_TrailerCharacteristicsFixValuesList (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_TrailerCharacteristicsFixValuesList* pvalue);

EXTERN int asn1Init_IVI_TrailerCharacteristicsFixValuesList (
   ASN1T_IVI_TrailerCharacteristicsFixValuesList* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_TrailerCharacteristicsFixValuesList (OSCTXT *pctxt, 
   ASN1T_IVI_TrailerCharacteristicsFixValuesList* pvalue);

/**************************************************************/
/*                                                            */
/*  TrailerCharacteristicsRangesList                          */
/*                                                            */
/**************************************************************/
/*
TrailerCharacteristicsRangesList ::= SEQUENCE (SIZE (1..4, ...)) OF VehicleCharacteristicsRanges (WITH COMPONENTS { limits WITH COMPONENTS {..., soundLevel ABSENT, dieselEmissionValues ABSENT, exhaustEmissionValues ABSENT}, comparisonOperator })
*/
/* List of ASN1T_IVI_VehicleCharacteristicsRanges */
typedef ASN1TSeqOfList ASN1T_IVI_TrailerCharacteristicsRangesList;

class EXTERN ASN1C_IVI_TrailerCharacteristicsRangesList :
public ASN1CSeqOfList
{
protected:
   ASN1T_IVI_TrailerCharacteristicsRangesList& msgData;
public:
   /**
    * Control class: ASN1C_IVI_TrailerCharacteristicsRangesList
    * Data class:    ASN1T_IVI_TrailerCharacteristicsRangesList
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_IVI_TrailerCharacteristicsRangesList
       (ASN1T_IVI_TrailerCharacteristicsRangesList& data);

   /**
    * Control class: ASN1C_IVI_TrailerCharacteristicsRangesList<br/>
    * Data class: ASN1T_IVI_TrailerCharacteristicsRangesList<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_IVI_TrailerCharacteristicsRangesList (OSRTMessageBufferIF& msgBuf
      , ASN1T_IVI_TrailerCharacteristicsRangesList& data);

   /**
    * Control class: ASN1C_IVI_TrailerCharacteristicsRangesList<br/>
    * Data class: ASN1T_IVI_TrailerCharacteristicsRangesList<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_IVI_TrailerCharacteristicsRangesList (ASN1CType& ccobj
      , ASN1T_IVI_TrailerCharacteristicsRangesList& data);

   virtual ~ASN1C_IVI_TrailerCharacteristicsRangesList () {}

   /**
    * Data class: ASN1T_IVI_VehicleCharacteristicsRanges<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_IVI_VehicleCharacteristicsRanges* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_IVI_VehicleCharacteristicsRanges.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_IVI_VehicleCharacteristicsRanges* NewElement ();

   /**
    * Data class: ASN1T_IVI_VehicleCharacteristicsRanges.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_IVI_VehicleCharacteristicsRanges* AppendNewElement ();

private:
   ASN1C_IVI_TrailerCharacteristicsRangesList& operator= (const ASN1C_IVI_TrailerCharacteristicsRangesList&) {return *this;}
} ;

EXTERN int asn1PE_IVI_TrailerCharacteristicsRangesList (OSCTXT* pctxt, ASN1T_IVI_TrailerCharacteristicsRangesList* pvalue);

EXTERN int asn1PD_IVI_TrailerCharacteristicsRangesList (OSCTXT* pctxt, ASN1T_IVI_TrailerCharacteristicsRangesList* pvalue);

EXTERN int XmlEnc_IVI_TrailerCharacteristicsRangesList (OSCTXT* pctxt, 
   ASN1T_IVI_TrailerCharacteristicsRangesList* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_TrailerCharacteristicsRangesList (OSCTXT* pctxt, 
   ASN1T_IVI_TrailerCharacteristicsRangesList* pvalue);

EXTERN int asn1JsonEnc_IVI_TrailerCharacteristicsRangesList (OSCTXT *pctxt, ASN1T_IVI_TrailerCharacteristicsRangesList *pvalue);

EXTERN int asn1JsonDec_IVI_TrailerCharacteristicsRangesList (OSCTXT *pctxt, ASN1T_IVI_TrailerCharacteristicsRangesList *pvalue);

EXTERN int asn1PrtToStrm_IVI_TrailerCharacteristicsRangesList (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_TrailerCharacteristicsRangesList* pvalue);

EXTERN int asn1Init_IVI_TrailerCharacteristicsRangesList (
   ASN1T_IVI_TrailerCharacteristicsRangesList* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_TrailerCharacteristicsRangesList (OSCTXT *pctxt, 
   ASN1T_IVI_TrailerCharacteristicsRangesList* pvalue);

/**************************************************************/
/*                                                            */
/*  TrailerCharacteristics                                    */
/*                                                            */
/**************************************************************/
/*
TrailerCharacteristics ::= SEQUENCE {
   equalTo [0] TrailerCharacteristicsFixValuesList OPTIONAL,
   notEqualTo [1] TrailerCharacteristicsFixValuesList OPTIONAL,
   ranges [2] TrailerCharacteristicsRangesList OPTIONAL
}
*/
struct EXTERN ASN1T_IVI_TrailerCharacteristics {
   struct {
      unsigned equalToPresent : 1;
      unsigned notEqualToPresent : 1;
      unsigned rangesPresent : 1;
   } m;
   ASN1T_IVI_TrailerCharacteristicsFixValuesList equalTo;
   ASN1T_IVI_TrailerCharacteristicsFixValuesList notEqualTo;
   ASN1T_IVI_TrailerCharacteristicsRangesList ranges;
   ASN1T_IVI_TrailerCharacteristics ();
} ;

EXTERN int asn1PE_IVI_TrailerCharacteristics (OSCTXT* pctxt, ASN1T_IVI_TrailerCharacteristics* pvalue);

EXTERN int asn1PD_IVI_TrailerCharacteristics (OSCTXT* pctxt, ASN1T_IVI_TrailerCharacteristics* pvalue);

EXTERN int XmlEnc_IVI_TrailerCharacteristics (OSCTXT* pctxt, 
   ASN1T_IVI_TrailerCharacteristics* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_TrailerCharacteristics (OSCTXT* pctxt, 
   ASN1T_IVI_TrailerCharacteristics* pvalue);

EXTERN int asn1JsonEnc_IVI_TrailerCharacteristics (OSCTXT *pctxt, ASN1T_IVI_TrailerCharacteristics *pvalue);

EXTERN int asn1JsonDec_IVI_TrailerCharacteristics (OSCTXT *pctxt, ASN1T_IVI_TrailerCharacteristics *pvalue);

EXTERN int asn1PrtToStrm_IVI_TrailerCharacteristics (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_TrailerCharacteristics* pvalue);

EXTERN ASN1T_IVI_TrailerCharacteristics* 
   new_ASN1T_IVI_TrailerCharacteristics (ASN1CType& ccobj);

EXTERN int asn1Init_IVI_TrailerCharacteristics (
   ASN1T_IVI_TrailerCharacteristics* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_TrailerCharacteristics (OSCTXT *pctxt, 
   ASN1T_IVI_TrailerCharacteristics* pvalue);

/**************************************************************/
/*                                                            */
/*  TrailerCharacteristicsList                                */
/*                                                            */
/**************************************************************/
/*
TrailerCharacteristicsList ::= SEQUENCE (SIZE (1..3)) OF TrailerCharacteristics
*/
/* List of ASN1T_IVI_TrailerCharacteristics */
typedef ASN1TSeqOfList ASN1T_IVI_TrailerCharacteristicsList;

class EXTERN ASN1C_IVI_TrailerCharacteristicsList :
public ASN1CSeqOfList
{
protected:
   ASN1T_IVI_TrailerCharacteristicsList& msgData;
public:
   /**
    * Control class: ASN1C_IVI_TrailerCharacteristicsList
    * Data class:    ASN1T_IVI_TrailerCharacteristicsList
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_IVI_TrailerCharacteristicsList
       (ASN1T_IVI_TrailerCharacteristicsList& data);

   /**
    * Control class: ASN1C_IVI_TrailerCharacteristicsList<br/>
    * Data class: ASN1T_IVI_TrailerCharacteristicsList<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_IVI_TrailerCharacteristicsList (OSRTMessageBufferIF& msgBuf
      , ASN1T_IVI_TrailerCharacteristicsList& data);

   /**
    * Control class: ASN1C_IVI_TrailerCharacteristicsList<br/>
    * Data class: ASN1T_IVI_TrailerCharacteristicsList<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_IVI_TrailerCharacteristicsList (ASN1CType& ccobj
      , ASN1T_IVI_TrailerCharacteristicsList& data);

   virtual ~ASN1C_IVI_TrailerCharacteristicsList () {}

   /**
    * Data class: ASN1T_IVI_TrailerCharacteristics<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_IVI_TrailerCharacteristics* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_IVI_TrailerCharacteristics.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_IVI_TrailerCharacteristics* NewElement ();

   /**
    * Data class: ASN1T_IVI_TrailerCharacteristics.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_IVI_TrailerCharacteristics* AppendNewElement ();

private:
   ASN1C_IVI_TrailerCharacteristicsList& operator= (const ASN1C_IVI_TrailerCharacteristicsList&) {return *this;}
} ;

EXTERN int asn1PE_IVI_TrailerCharacteristicsList (OSCTXT* pctxt, ASN1T_IVI_TrailerCharacteristicsList* pvalue);

EXTERN int asn1PD_IVI_TrailerCharacteristicsList (OSCTXT* pctxt, ASN1T_IVI_TrailerCharacteristicsList* pvalue);

EXTERN int XmlEnc_IVI_TrailerCharacteristicsList (OSCTXT* pctxt, 
   ASN1T_IVI_TrailerCharacteristicsList* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_TrailerCharacteristicsList (OSCTXT* pctxt, 
   ASN1T_IVI_TrailerCharacteristicsList* pvalue);

EXTERN int asn1JsonEnc_IVI_TrailerCharacteristicsList (OSCTXT *pctxt, ASN1T_IVI_TrailerCharacteristicsList *pvalue);

EXTERN int asn1JsonDec_IVI_TrailerCharacteristicsList (OSCTXT *pctxt, ASN1T_IVI_TrailerCharacteristicsList *pvalue);

EXTERN int asn1PrtToStrm_IVI_TrailerCharacteristicsList (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_TrailerCharacteristicsList* pvalue);

EXTERN int asn1Init_IVI_TrailerCharacteristicsList (
   ASN1T_IVI_TrailerCharacteristicsList* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_TrailerCharacteristicsList (OSCTXT *pctxt, 
   ASN1T_IVI_TrailerCharacteristicsList* pvalue);

/**************************************************************/
/*                                                            */
/*  TrainCharacteristics                                      */
/*                                                            */
/**************************************************************/
/*
TrainCharacteristics ::= TractorCharacteristics
*/
typedef ASN1T_IVI_TractorCharacteristics ASN1T_IVI_TrainCharacteristics;

EXTERN int asn1PE_IVI_TrainCharacteristics (OSCTXT* pctxt, ASN1T_IVI_TrainCharacteristics* pvalue);

EXTERN int asn1PD_IVI_TrainCharacteristics (OSCTXT* pctxt, ASN1T_IVI_TrainCharacteristics* pvalue);

EXTERN int XmlEnc_IVI_TrainCharacteristics (OSCTXT* pctxt, 
   ASN1T_IVI_TrainCharacteristics* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_TrainCharacteristics (OSCTXT* pctxt, 
   ASN1T_IVI_TrainCharacteristics* pvalue);

EXTERN int asn1JsonEnc_IVI_TrainCharacteristics (OSCTXT *pctxt, ASN1T_IVI_TrainCharacteristics *pvalue);

EXTERN int asn1JsonDec_IVI_TrainCharacteristics (OSCTXT *pctxt, ASN1T_IVI_TrainCharacteristics *pvalue);

EXTERN int asn1PrtToStrm_IVI_TrainCharacteristics (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_TrainCharacteristics* pvalue);

EXTERN ASN1T_IVI_TrainCharacteristics* 
   new_ASN1T_IVI_TrainCharacteristics (ASN1CType& ccobj);

EXTERN int asn1Init_IVI_TrainCharacteristics (ASN1T_IVI_TrainCharacteristics* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_TrainCharacteristics (OSCTXT *pctxt, 
   ASN1T_IVI_TrainCharacteristics* pvalue);

/**************************************************************/
/*                                                            */
/*  CompleteVehicleCharacteristics                            */
/*                                                            */
/**************************************************************/
/*
CompleteVehicleCharacteristics ::= SEQUENCE {
   tractor [0] TractorCharacteristics OPTIONAL,
   trailer [1] TrailerCharacteristicsList OPTIONAL,
   train [2] TrainCharacteristics OPTIONAL
}
*/
struct EXTERN ASN1T_IVI_CompleteVehicleCharacteristics {
   struct {
      unsigned tractorPresent : 1;
      unsigned trailerPresent : 1;
      unsigned trainPresent : 1;
   } m;
   ASN1T_IVI_TractorCharacteristics tractor;
   ASN1T_IVI_TrailerCharacteristicsList trailer;
   ASN1T_IVI_TrainCharacteristics train;
   ASN1T_IVI_CompleteVehicleCharacteristics ();
} ;

EXTERN int asn1PE_IVI_CompleteVehicleCharacteristics (OSCTXT* pctxt, ASN1T_IVI_CompleteVehicleCharacteristics* pvalue);

EXTERN int asn1PD_IVI_CompleteVehicleCharacteristics (OSCTXT* pctxt, ASN1T_IVI_CompleteVehicleCharacteristics* pvalue);

EXTERN int XmlEnc_IVI_CompleteVehicleCharacteristics (OSCTXT* pctxt, 
   ASN1T_IVI_CompleteVehicleCharacteristics* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_CompleteVehicleCharacteristics (OSCTXT* pctxt, 
   ASN1T_IVI_CompleteVehicleCharacteristics* pvalue);

EXTERN int asn1JsonEnc_IVI_CompleteVehicleCharacteristics (OSCTXT *pctxt, ASN1T_IVI_CompleteVehicleCharacteristics *pvalue);

EXTERN int asn1JsonDec_IVI_CompleteVehicleCharacteristics (OSCTXT *pctxt, ASN1T_IVI_CompleteVehicleCharacteristics *pvalue);

EXTERN int asn1PrtToStrm_IVI_CompleteVehicleCharacteristics (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_CompleteVehicleCharacteristics* pvalue);

EXTERN ASN1T_IVI_CompleteVehicleCharacteristics* 
   new_ASN1T_IVI_CompleteVehicleCharacteristics (ASN1CType& ccobj);

EXTERN int asn1Init_IVI_CompleteVehicleCharacteristics (
   ASN1T_IVI_CompleteVehicleCharacteristics* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_CompleteVehicleCharacteristics (OSCTXT *pctxt, 
   ASN1T_IVI_CompleteVehicleCharacteristics* pvalue);

/**************************************************************/
/*                                                            */
/*  VehicleCharacteristicsList                                */
/*                                                            */
/**************************************************************/
/*
VehicleCharacteristicsList ::= SEQUENCE (SIZE (1..8, ...)) OF CompleteVehicleCharacteristics
*/
/* List of ASN1T_IVI_CompleteVehicleCharacteristics */
typedef ASN1TSeqOfList ASN1T_IVI_VehicleCharacteristicsList;

class EXTERN ASN1C_IVI_VehicleCharacteristicsList :
public ASN1CSeqOfList
{
protected:
   ASN1T_IVI_VehicleCharacteristicsList& msgData;
public:
   /**
    * Control class: ASN1C_IVI_VehicleCharacteristicsList
    * Data class:    ASN1T_IVI_VehicleCharacteristicsList
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_IVI_VehicleCharacteristicsList
       (ASN1T_IVI_VehicleCharacteristicsList& data);

   /**
    * Control class: ASN1C_IVI_VehicleCharacteristicsList<br/>
    * Data class: ASN1T_IVI_VehicleCharacteristicsList<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_IVI_VehicleCharacteristicsList (OSRTMessageBufferIF& msgBuf
      , ASN1T_IVI_VehicleCharacteristicsList& data);

   /**
    * Control class: ASN1C_IVI_VehicleCharacteristicsList<br/>
    * Data class: ASN1T_IVI_VehicleCharacteristicsList<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_IVI_VehicleCharacteristicsList (ASN1CType& ccobj
      , ASN1T_IVI_VehicleCharacteristicsList& data);

   virtual ~ASN1C_IVI_VehicleCharacteristicsList () {}

   /**
    * Data class: ASN1T_IVI_CompleteVehicleCharacteristics<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_IVI_CompleteVehicleCharacteristics* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_IVI_CompleteVehicleCharacteristics.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_IVI_CompleteVehicleCharacteristics* NewElement ();

   /**
    * Data class: ASN1T_IVI_CompleteVehicleCharacteristics.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_IVI_CompleteVehicleCharacteristics* AppendNewElement ();

private:
   ASN1C_IVI_VehicleCharacteristicsList& operator= (const ASN1C_IVI_VehicleCharacteristicsList&) {return *this;}
} ;

EXTERN int asn1PE_IVI_VehicleCharacteristicsList (OSCTXT* pctxt, ASN1T_IVI_VehicleCharacteristicsList* pvalue);

EXTERN int asn1PD_IVI_VehicleCharacteristicsList (OSCTXT* pctxt, ASN1T_IVI_VehicleCharacteristicsList* pvalue);

EXTERN int XmlEnc_IVI_VehicleCharacteristicsList (OSCTXT* pctxt, 
   ASN1T_IVI_VehicleCharacteristicsList* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_VehicleCharacteristicsList (OSCTXT* pctxt, 
   ASN1T_IVI_VehicleCharacteristicsList* pvalue);

EXTERN int asn1JsonEnc_IVI_VehicleCharacteristicsList (OSCTXT *pctxt, ASN1T_IVI_VehicleCharacteristicsList *pvalue);

EXTERN int asn1JsonDec_IVI_VehicleCharacteristicsList (OSCTXT *pctxt, ASN1T_IVI_VehicleCharacteristicsList *pvalue);

EXTERN int asn1PrtToStrm_IVI_VehicleCharacteristicsList (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_VehicleCharacteristicsList* pvalue);

EXTERN int asn1Init_IVI_VehicleCharacteristicsList (
   ASN1T_IVI_VehicleCharacteristicsList* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_VehicleCharacteristicsList (OSCTXT *pctxt, 
   ASN1T_IVI_VehicleCharacteristicsList* pvalue);

/**************************************************************/
/*                                                            */
/*  DriverCharacteristics                                     */
/*                                                            */
/**************************************************************/
/*
DriverCharacteristics ::= INTEGER { unexperiencedDrivers(0), experiencedDrivers(1), rfu1(2), rfu2(3) } (0..3)
*/
struct EXTERN IVI_DriverCharacteristics {
   enum Root {
      unexperiencedDrivers = 0,
      experiencedDrivers = 1,
      rfu1 = 2,
      rfu2 = 3
   } ;
} ;

typedef OSUINT8 ASN1T_IVI_DriverCharacteristics;

EXTERN int asn1PE_IVI_DriverCharacteristics (OSCTXT* pctxt, ASN1T_IVI_DriverCharacteristics value);

EXTERN int asn1PD_IVI_DriverCharacteristics (OSCTXT* pctxt, ASN1T_IVI_DriverCharacteristics* pvalue);

EXTERN int XmlEnc_IVI_DriverCharacteristics (OSCTXT* pctxt, 
   ASN1T_IVI_DriverCharacteristics value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_DriverCharacteristics (OSCTXT* pctxt, 
   ASN1T_IVI_DriverCharacteristics* pvalue);

EXTERN int asn1JsonEnc_IVI_DriverCharacteristics (OSCTXT *pctxt, ASN1T_IVI_DriverCharacteristics *pvalue);

EXTERN int asn1JsonDec_IVI_DriverCharacteristics (OSCTXT *pctxt, ASN1T_IVI_DriverCharacteristics *pvalue);

EXTERN int asn1PrtToStrm_IVI_DriverCharacteristics (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_DriverCharacteristics* pvalue);

EXTERN ASN1T_IVI_DriverCharacteristics* 
   new_ASN1T_IVI_DriverCharacteristics (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  VcClass                                                   */
/*                                                            */
/**************************************************************/
/*
VcClass ::= INTEGER { classA(0), classB(1), classC(2), classD(3), classE(4), classF(5), classG(6), classH(7) } (0..7)
*/
struct EXTERN IVI_VcClass {
   enum Root {
      classA = 0,
      classB = 1,
      classC = 2,
      classD = 3,
      classE = 4,
      classF = 5,
      classG = 6,
      classH = 7
   } ;
} ;

typedef OSUINT8 ASN1T_IVI_VcClass;

EXTERN int asn1PE_IVI_VcClass (OSCTXT* pctxt, ASN1T_IVI_VcClass value);

EXTERN int asn1PD_IVI_VcClass (OSCTXT* pctxt, ASN1T_IVI_VcClass* pvalue);

EXTERN int XmlEnc_IVI_VcClass (OSCTXT* pctxt, ASN1T_IVI_VcClass value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_VcClass (OSCTXT* pctxt, ASN1T_IVI_VcClass* pvalue);

EXTERN int asn1JsonEnc_IVI_VcClass (OSCTXT *pctxt, ASN1T_IVI_VcClass *pvalue);

EXTERN int asn1JsonDec_IVI_VcClass (OSCTXT *pctxt, ASN1T_IVI_VcClass *pvalue);

EXTERN int asn1PrtToStrm_IVI_VcClass (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_VcClass* pvalue);

EXTERN ASN1T_IVI_VcClass* new_ASN1T_IVI_VcClass (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  VcOption                                                  */
/*                                                            */
/**************************************************************/
/*
VcOption ::= INTEGER { none(0), a(1), b(2), c(3), d(4), e(5), f(6), g(7) } (0..7)
*/
struct EXTERN IVI_VcOption {
   enum Root {
      none = 0,
      a = 1,
      b = 2,
      c = 3,
      d = 4,
      e = 5,
      f = 6,
      g = 7
   } ;
} ;

typedef OSUINT8 ASN1T_IVI_VcOption;

EXTERN int asn1PE_IVI_VcOption (OSCTXT* pctxt, ASN1T_IVI_VcOption value);

EXTERN int asn1PD_IVI_VcOption (OSCTXT* pctxt, ASN1T_IVI_VcOption* pvalue);

EXTERN int XmlEnc_IVI_VcOption (OSCTXT* pctxt, ASN1T_IVI_VcOption value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_VcOption (OSCTXT* pctxt, ASN1T_IVI_VcOption* pvalue);

EXTERN int asn1JsonEnc_IVI_VcOption (OSCTXT *pctxt, ASN1T_IVI_VcOption *pvalue);

EXTERN int asn1JsonDec_IVI_VcOption (OSCTXT *pctxt, ASN1T_IVI_VcOption *pvalue);

EXTERN int asn1PrtToStrm_IVI_VcOption (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_VcOption* pvalue);

EXTERN ASN1T_IVI_VcOption* new_ASN1T_IVI_VcOption (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  ValidityPeriods                                           */
/*                                                            */
/**************************************************************/
/*
ValidityPeriods ::= SEQUENCE (SIZE (1..8, ...), ...) OF InternationalSign-applicablePeriod
*/
/* List of ASN1T_InternationalSign_applicablePeriod */
typedef ASN1TSeqOfList ASN1T_IVI_ValidityPeriods;

class EXTERN ASN1C_IVI_ValidityPeriods :
public ASN1CSeqOfList
{
protected:
   ASN1T_IVI_ValidityPeriods& msgData;
public:
   /**
    * Control class: ASN1C_IVI_ValidityPeriods
    * Data class:    ASN1T_IVI_ValidityPeriods
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_IVI_ValidityPeriods (ASN1T_IVI_ValidityPeriods& data);

   /**
    * Control class: ASN1C_IVI_ValidityPeriods<br/>
    * Data class: ASN1T_IVI_ValidityPeriods<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_IVI_ValidityPeriods (OSRTMessageBufferIF& msgBuf
      , ASN1T_IVI_ValidityPeriods& data);

   /**
    * Control class: ASN1C_IVI_ValidityPeriods<br/>
    * Data class: ASN1T_IVI_ValidityPeriods<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_IVI_ValidityPeriods (ASN1CType& ccobj, ASN1T_IVI_ValidityPeriods& data
      );

   virtual ~ASN1C_IVI_ValidityPeriods () {}

   /**
    * Data class: ASN1T_InternationalSign_applicablePeriod<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_InternationalSign_applicablePeriod* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_InternationalSign_applicablePeriod.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_InternationalSign_applicablePeriod* NewElement ();

   /**
    * Data class: ASN1T_InternationalSign_applicablePeriod.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_InternationalSign_applicablePeriod* AppendNewElement ();

private:
   ASN1C_IVI_ValidityPeriods& operator= (const ASN1C_IVI_ValidityPeriods&) {return *this;}
} ;

EXTERN int asn1PE_IVI_ValidityPeriods (OSCTXT* pctxt, ASN1T_IVI_ValidityPeriods* pvalue);

EXTERN int asn1PD_IVI_ValidityPeriods (OSCTXT* pctxt, ASN1T_IVI_ValidityPeriods* pvalue);

EXTERN int XmlEnc_IVI_ValidityPeriods (OSCTXT* pctxt, 
   ASN1T_IVI_ValidityPeriods* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_ValidityPeriods (OSCTXT* pctxt, 
   ASN1T_IVI_ValidityPeriods* pvalue);

EXTERN int asn1JsonEnc_IVI_ValidityPeriods (OSCTXT *pctxt, ASN1T_IVI_ValidityPeriods *pvalue);

EXTERN int asn1JsonDec_IVI_ValidityPeriods (OSCTXT *pctxt, ASN1T_IVI_ValidityPeriods *pvalue);

EXTERN int asn1PrtToStrm_IVI_ValidityPeriods (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_ValidityPeriods* pvalue);

EXTERN int asn1Init_IVI_ValidityPeriods (ASN1T_IVI_ValidityPeriods* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_ValidityPeriods (OSCTXT *pctxt, 
   ASN1T_IVI_ValidityPeriods* pvalue);

/**************************************************************/
/*                                                            */
/*  RSCUnit                                                   */
/*                                                            */
/**************************************************************/
/*
RSCUnit ::= INTEGER { kmperh(0), milesperh(1), kilometer(2), meter(3), decimeter(4), centimeter(5), mile(6), yard(7), foot(8), minutesOfTime(9), tonnes(10), hundredkg(11), pound(12), rateOfIncline(13) } (0..15)
*/
struct EXTERN IVI_RSCUnit {
   enum Root {
      kmperh = 0,
      milesperh = 1,
      kilometer = 2,
      meter = 3,
      decimeter = 4,
      centimeter = 5,
      mile = 6,
      yard = 7,
      foot = 8,
      minutesOfTime = 9,
      tonnes = 10,
      hundredkg = 11,
      pound = 12,
      rateOfIncline = 13
   } ;
} ;

typedef OSUINT8 ASN1T_IVI_RSCUnit;

EXTERN int asn1PE_IVI_RSCUnit (OSCTXT* pctxt, ASN1T_IVI_RSCUnit value);

EXTERN int asn1PD_IVI_RSCUnit (OSCTXT* pctxt, ASN1T_IVI_RSCUnit* pvalue);

EXTERN int XmlEnc_IVI_RSCUnit (OSCTXT* pctxt, ASN1T_IVI_RSCUnit value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_RSCUnit (OSCTXT* pctxt, ASN1T_IVI_RSCUnit* pvalue);

EXTERN int asn1JsonEnc_IVI_RSCUnit (OSCTXT *pctxt, ASN1T_IVI_RSCUnit *pvalue);

EXTERN int asn1JsonDec_IVI_RSCUnit (OSCTXT *pctxt, ASN1T_IVI_RSCUnit *pvalue);

EXTERN int asn1PrtToStrm_IVI_RSCUnit (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_RSCUnit* pvalue);

EXTERN ASN1T_IVI_RSCUnit* new_ASN1T_IVI_RSCUnit (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  VcCode                                                    */
/*                                                            */
/**************************************************************/
/*
VcCode ::= SEQUENCE {
   roadSignClass [0] VcClass, -- see Vienna Convention 
   roadSignCode [1] INTEGER (1..64),
   vcOption [2] VcOption, -- e.g. the "a" in H, 3a
   validity [3] ValidityPeriods OPTIONAL,
   value [4] INTEGER (0..65535) OPTIONAL,
   unit [5] RSCUnit OPTIONAL
}
*/
struct EXTERN ASN1T_IVI_VcCode {
   struct {
      unsigned validityPresent : 1;
      unsigned valuePresent : 1;
      unsigned unitPresent : 1;
   } m;
   ASN1T_IVI_VcClass roadSignClass;
   OSUINT8 roadSignCode;
   ASN1T_IVI_VcOption vcOption;
   ASN1T_IVI_ValidityPeriods validity;
   OSUINT16 value;
   ASN1T_IVI_RSCUnit unit;
   ASN1T_IVI_VcCode ();
} ;

EXTERN int asn1PE_IVI_VcCode (OSCTXT* pctxt, ASN1T_IVI_VcCode* pvalue);

EXTERN int asn1PD_IVI_VcCode (OSCTXT* pctxt, ASN1T_IVI_VcCode* pvalue);

EXTERN int XmlEnc_IVI_VcCode (OSCTXT* pctxt, ASN1T_IVI_VcCode* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_VcCode (OSCTXT* pctxt, ASN1T_IVI_VcCode* pvalue);

EXTERN int asn1JsonEnc_IVI_VcCode (OSCTXT *pctxt, ASN1T_IVI_VcCode *pvalue);

EXTERN int asn1JsonDec_IVI_VcCode (OSCTXT *pctxt, ASN1T_IVI_VcCode *pvalue);

EXTERN int asn1PrtToStrm_IVI_VcCode (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_VcCode* pvalue);

EXTERN ASN1T_IVI_VcCode* new_ASN1T_IVI_VcCode (ASN1CType& ccobj);

EXTERN int asn1Init_IVI_VcCode (ASN1T_IVI_VcCode* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_VcCode (OSCTXT *pctxt, ASN1T_IVI_VcCode* pvalue);

/**************************************************************/
/*                                                            */
/*  ISO14823Code_pictogramCode_serviceCategoryCode_trafficSi  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ISO14823Code'
*/
struct EXTERN IVI_ISO14823Code_pictogramCode_serviceCategoryCode_trafficSignPictogram {
   enum Root {
      dangerWarning = 0,
      regulatory = 1,
      informative = 2
   } ;
} ;

typedef OSUINT32 ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_trafficSignPictogram;

EXTERN int asn1PE_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_trafficSignPictogram (OSCTXT* pctxt, ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_trafficSignPictogram value);

EXTERN int asn1PD_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_trafficSignPictogram (OSCTXT* pctxt, ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_trafficSignPictogram* pvalue);

EXTERN 
   int XmlEnc_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_trafficSignPictogram 
   (OSCTXT* pctxt, 
   ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_trafficSignPictogram value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN 
   int XmlDec_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_trafficSignPictogram 
   (OSCTXT* pctxt, 
   ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_trafficSignPictogram* pvalue
   );

EXTERN int asn1JsonEnc_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_trafficSignPictogram (OSCTXT *pctxt, ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_trafficSignPictogram *pvalue);

EXTERN int asn1JsonDec_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_trafficSignPictogram (OSCTXT *pctxt, ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_trafficSignPictogram *pvalue);

EXTERN int asn1PrtToStrm_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_trafficSignPictogram (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_trafficSignPictogram* pvalue);

EXTERN 
   ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_trafficSignPictogram* 
   new_ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_trafficSignPictogram (ASN1CType& ccobj)
   ;

EXTERN extern const OSEnumItem ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_trafficSignPictogram_ENUMTAB[];
#define ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_trafficSignPictogram_ENUMTABSIZE 3

EXTERN const OSUTF8CHAR* ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_trafficSignPictogram_ToString (OSINT32 value);

EXTERN 
   int ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_trafficSignPictogram_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, 
      ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_trafficSignPictogram* pvalue)
      ;

EXTERN 
   int ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_trafficSignPictogram_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_trafficSignPictogram* pvalue)
      ;

/**************************************************************/
/*                                                            */
/*  ISO14823Code_pictogramCode_serviceCategoryCode_publicFac  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ISO14823Code'
*/
struct EXTERN IVI_ISO14823Code_pictogramCode_serviceCategoryCode_publicFacilitiesPictogram {
   enum Root {
      publicFacilities = 0
   } ;
} ;

typedef OSUINT32 ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_publicFacilitiesPictogram;

EXTERN int asn1PE_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_publicFacilitiesPictogram (OSCTXT* pctxt, ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_publicFacilitiesPictogram value);

EXTERN int asn1PD_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_publicFacilitiesPictogram (OSCTXT* pctxt, ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_publicFacilitiesPictogram* pvalue);

EXTERN 
   int XmlEnc_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_publicFacilitiesPictogram 
   (OSCTXT* pctxt, 
   ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_publicFacilitiesPictogram value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN 
   int XmlDec_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_publicFacilitiesPictogram 
   (OSCTXT* pctxt, 
   ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_publicFacilitiesPictogram* pvalue
   );

EXTERN int asn1JsonEnc_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_publicFacilitiesPictogram (OSCTXT *pctxt, ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_publicFacilitiesPictogram *pvalue);

EXTERN int asn1JsonDec_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_publicFacilitiesPictogram (OSCTXT *pctxt, ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_publicFacilitiesPictogram *pvalue);

EXTERN int asn1PrtToStrm_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_publicFacilitiesPictogram (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_publicFacilitiesPictogram* pvalue);

EXTERN 
   ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_publicFacilitiesPictogram* 
   new_ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_publicFacilitiesPictogram (ASN1CType& ccobj)
   ;

EXTERN extern const OSEnumItem ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_publicFacilitiesPictogram_ENUMTAB[];
#define ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_publicFacilitiesPictogram_ENUMTABSIZE 1

EXTERN const OSUTF8CHAR* ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_publicFacilitiesPictogram_ToString (OSINT32 value);

EXTERN 
   int ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_publicFacilitiesPictogram_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, 
      ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_publicFacilitiesPictogram* pvalue)
      ;

EXTERN 
   int ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_publicFacilitiesPictogram_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_publicFacilitiesPictogram* pvalue)
      ;

/**************************************************************/
/*                                                            */
/*  ISO14823Code_pictogramCode_serviceCategoryCode_ambientOr  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ISO14823Code'
*/
struct EXTERN IVI_ISO14823Code_pictogramCode_serviceCategoryCode_ambientOrRoadConditionPictogram {
   enum Root {
      ambientCondition = 0,
      roadCondition = 1
   } ;
} ;

typedef OSUINT32 ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_ambientOrRoadConditionPictogram;

EXTERN int asn1PE_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_ambientOrRoadConditionPictogram (OSCTXT* pctxt, ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_ambientOrRoadConditionPictogram value);

EXTERN int asn1PD_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_ambientOrRoadConditionPictogram (OSCTXT* pctxt, ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_ambientOrRoadConditionPictogram* pvalue);

EXTERN 
   int XmlEnc_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_ambientOrRoadConditionPictogram 
   (OSCTXT* pctxt, 
   ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_ambientOrRoadConditionPictogram value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN 
   int XmlDec_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_ambientOrRoadConditionPictogram 
   (OSCTXT* pctxt, 
   ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_ambientOrRoadConditionPictogram* pvalue
   );

EXTERN int asn1JsonEnc_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_ambientOrRoadConditionPictogram (OSCTXT *pctxt, ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_ambientOrRoadConditionPictogram *pvalue);

EXTERN int asn1JsonDec_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_ambientOrRoadConditionPictogram (OSCTXT *pctxt, ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_ambientOrRoadConditionPictogram *pvalue);

EXTERN int asn1PrtToStrm_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_ambientOrRoadConditionPictogram (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_ambientOrRoadConditionPictogram* pvalue);

EXTERN 
   ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_ambientOrRoadConditionPictogram* 
   new_ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_ambientOrRoadConditionPictogram (ASN1CType& ccobj)
   ;

EXTERN extern const OSEnumItem ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_ambientOrRoadConditionPictogram_ENUMTAB[];
#define ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_ambientOrRoadConditionPictogram_ENUMTABSIZE 2

EXTERN const OSUTF8CHAR* ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_ambientOrRoadConditionPictogram_ToString (OSINT32 value);

EXTERN 
   int ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_ambientOrRoadConditionPictogram_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, 
      ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_ambientOrRoadConditionPictogram* pvalue)
      ;

EXTERN 
   int ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_ambientOrRoadConditionPictogram_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_ambientOrRoadConditionPictogram* pvalue)
      ;

/**************************************************************/
/*                                                            */
/*  ISO14823Code_pictogramCode_serviceCategoryCode            */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ISO14823Code'
*/
/* Choice tag constants */

#define T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_trafficSignPictogram 1
#define T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_publicFacilitiesPictogram 2
#define T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_ambientOrRoadConditionPictogram 3
#define T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_extElem1 4

struct EXTERN ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode {
   OSINT32 t;
   union {
      /* t = 1 */
      ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_trafficSignPictogram trafficSignPictogram;
      /* t = 2 */
      ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_publicFacilitiesPictogram publicFacilitiesPictogram;
      /* t = 3 */
      ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode_ambientOrRoadConditionPictogram ambientOrRoadConditionPictogram;
      /* t = 4 */
      ASN1TOpenType *extElem1;
   } u;
   ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode () { t = 0; OSCRTLMEMSET (&u, 0, sizeof(u)); }
} ;

EXTERN int asn1PE_IVI_ISO14823Code_pictogramCode_serviceCategoryCode (OSCTXT* pctxt, ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode* pvalue);

EXTERN int asn1PD_IVI_ISO14823Code_pictogramCode_serviceCategoryCode (OSCTXT* pctxt, ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode* pvalue);

EXTERN int XmlEnc_IVI_ISO14823Code_pictogramCode_serviceCategoryCode 
   (OSCTXT* pctxt, 
   ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_ISO14823Code_pictogramCode_serviceCategoryCode 
   (OSCTXT* pctxt, 
   ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode* pvalue);

EXTERN int asn1JsonEnc_IVI_ISO14823Code_pictogramCode_serviceCategoryCode (OSCTXT *pctxt, ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode *pvalue);

EXTERN int asn1JsonDec_IVI_ISO14823Code_pictogramCode_serviceCategoryCode (OSCTXT *pctxt, ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode *pvalue);

EXTERN int asn1PrtToStrm_IVI_ISO14823Code_pictogramCode_serviceCategoryCode (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode* pvalue);

EXTERN ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode* 
   new_ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode (ASN1CType& ccobj)
   ;

EXTERN int asn1Init_IVI_ISO14823Code_pictogramCode_serviceCategoryCode (
   ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_ISO14823Code_pictogramCode_serviceCategoryCode (OSCTXT *pctxt, 
   ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode* pvalue);

/**************************************************************/
/*                                                            */
/*  ISO14823Code_pictogramCode_pictogramCategoryCode          */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ISO14823Code'
*/
struct EXTERN ASN1T_IVI_ISO14823Code_pictogramCode_pictogramCategoryCode {
   OSUINT8 nature;
   OSUINT8 serialNumber;
} ;

EXTERN int asn1PE_IVI_ISO14823Code_pictogramCode_pictogramCategoryCode (OSCTXT* pctxt, ASN1T_IVI_ISO14823Code_pictogramCode_pictogramCategoryCode* pvalue);

EXTERN int asn1PD_IVI_ISO14823Code_pictogramCode_pictogramCategoryCode (OSCTXT* pctxt, ASN1T_IVI_ISO14823Code_pictogramCode_pictogramCategoryCode* pvalue);

EXTERN int XmlEnc_IVI_ISO14823Code_pictogramCode_pictogramCategoryCode 
   (OSCTXT* pctxt, 
   ASN1T_IVI_ISO14823Code_pictogramCode_pictogramCategoryCode* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_ISO14823Code_pictogramCode_pictogramCategoryCode 
   (OSCTXT* pctxt, 
   ASN1T_IVI_ISO14823Code_pictogramCode_pictogramCategoryCode* pvalue);

EXTERN int asn1JsonEnc_IVI_ISO14823Code_pictogramCode_pictogramCategoryCode (OSCTXT *pctxt, ASN1T_IVI_ISO14823Code_pictogramCode_pictogramCategoryCode *pvalue);

EXTERN int asn1JsonDec_IVI_ISO14823Code_pictogramCode_pictogramCategoryCode (OSCTXT *pctxt, ASN1T_IVI_ISO14823Code_pictogramCode_pictogramCategoryCode *pvalue);

EXTERN int asn1PrtToStrm_IVI_ISO14823Code_pictogramCode_pictogramCategoryCode (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_ISO14823Code_pictogramCode_pictogramCategoryCode* pvalue);

EXTERN ASN1T_IVI_ISO14823Code_pictogramCode_pictogramCategoryCode* 
   new_ASN1T_IVI_ISO14823Code_pictogramCode_pictogramCategoryCode (ASN1CType& ccobj)
   ;

/**************************************************************/
/*                                                            */
/*  ISO14823Code_pictogramCode                                */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ISO14823Code'
*/
struct EXTERN ASN1T_IVI_ISO14823Code_pictogramCode {
   struct {
      unsigned countryCodePresent : 1;
   } m;
   OSOCTET countryCode[2];
   ASN1T_IVI_ISO14823Code_pictogramCode_serviceCategoryCode serviceCategoryCode;
   ASN1T_IVI_ISO14823Code_pictogramCode_pictogramCategoryCode pictogramCategoryCode;
   ASN1T_IVI_ISO14823Code_pictogramCode ();
} ;

EXTERN int asn1PE_IVI_ISO14823Code_pictogramCode (OSCTXT* pctxt, ASN1T_IVI_ISO14823Code_pictogramCode* pvalue);

EXTERN int asn1PD_IVI_ISO14823Code_pictogramCode (OSCTXT* pctxt, ASN1T_IVI_ISO14823Code_pictogramCode* pvalue);

EXTERN int XmlEnc_IVI_ISO14823Code_pictogramCode (OSCTXT* pctxt, 
   ASN1T_IVI_ISO14823Code_pictogramCode* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_ISO14823Code_pictogramCode (OSCTXT* pctxt, 
   ASN1T_IVI_ISO14823Code_pictogramCode* pvalue);

EXTERN int asn1JsonEnc_IVI_ISO14823Code_pictogramCode (OSCTXT *pctxt, ASN1T_IVI_ISO14823Code_pictogramCode *pvalue);

EXTERN int asn1JsonDec_IVI_ISO14823Code_pictogramCode (OSCTXT *pctxt, ASN1T_IVI_ISO14823Code_pictogramCode *pvalue);

EXTERN int asn1PrtToStrm_IVI_ISO14823Code_pictogramCode (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_ISO14823Code_pictogramCode* pvalue);

EXTERN ASN1T_IVI_ISO14823Code_pictogramCode* 
   new_ASN1T_IVI_ISO14823Code_pictogramCode (ASN1CType& ccobj);

EXTERN int asn1Init_IVI_ISO14823Code_pictogramCode (
   ASN1T_IVI_ISO14823Code_pictogramCode* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_ISO14823Code_pictogramCode (OSCTXT *pctxt, 
   ASN1T_IVI_ISO14823Code_pictogramCode* pvalue);

/**************************************************************/
/*                                                            */
/*  ISO14823Attribute                                         */
/*                                                            */
/**************************************************************/
/*
ISO14823Attribute ::= CHOICE {
   dtm [0] InternationalSign-applicablePeriod, -- Date/Time/Period
   edt [1] InternationalSign-exemptedApplicablePeriod, -- Exemption status of Date/Time/Period
   dfl [2] InternationalSign-directionalFlowOfLane, -- Directional Flow of Lane
   ved [3] InternationalSign-applicableVehicleDimensions, -- Vehicle Dimensions
   spe [4] InternationalSign-speedLimits, -- Speed
   roi [5] InternationalSign-rateOfIncline, -- Rate of Incline
   dbv [6] InternationalSign-distanceBetweenVehicles, -- Distance Between Vehicles
   ddd [7] InternationalSign-destinationInformation
}
*/
/* Choice tag constants */

#define T_IVI_ISO14823Attribute_dtm     1
#define T_IVI_ISO14823Attribute_edt     2
#define T_IVI_ISO14823Attribute_dfl     3
#define T_IVI_ISO14823Attribute_ved     4
#define T_IVI_ISO14823Attribute_spe     5
#define T_IVI_ISO14823Attribute_roi     6
#define T_IVI_ISO14823Attribute_dbv     7
#define T_IVI_ISO14823Attribute_ddd     8

struct EXTERN ASN1T_IVI_ISO14823Attribute {
   OSINT32 t;
   union {
      /* t = 1 */
      ASN1T_InternationalSign_applicablePeriod *dtm;
      /* t = 2 */
      ASN1T_InternationalSign_exemptedApplicablePeriod *edt;
      /* t = 3 */
      ASN1T_InternationalSign_directionalFlowOfLane dfl;
      /* t = 4 */
      ASN1T_InternationalSign_applicableVehicleDimensions *ved;
      /* t = 5 */
      ASN1T_InternationalSign_speedLimits *spe;
      /* t = 6 */
      ASN1T_InternationalSign_rateOfIncline roi;
      /* t = 7 */
      ASN1T_InternationalSign_distanceBetweenVehicles *dbv;
      /* t = 8 */
      ASN1T_InternationalSign_destinationInformation *ddd;
   } u;
   ASN1T_IVI_ISO14823Attribute () { t = 0; OSCRTLMEMSET (&u, 0, sizeof(u)); }
} ;

EXTERN int asn1PE_IVI_ISO14823Attribute (OSCTXT* pctxt, ASN1T_IVI_ISO14823Attribute* pvalue);

EXTERN int asn1PD_IVI_ISO14823Attribute (OSCTXT* pctxt, ASN1T_IVI_ISO14823Attribute* pvalue);

EXTERN int XmlEnc_IVI_ISO14823Attribute (OSCTXT* pctxt, 
   ASN1T_IVI_ISO14823Attribute* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_ISO14823Attribute (OSCTXT* pctxt, 
   ASN1T_IVI_ISO14823Attribute* pvalue);

EXTERN int asn1JsonEnc_IVI_ISO14823Attribute (OSCTXT *pctxt, ASN1T_IVI_ISO14823Attribute *pvalue);

EXTERN int asn1JsonDec_IVI_ISO14823Attribute (OSCTXT *pctxt, ASN1T_IVI_ISO14823Attribute *pvalue);

EXTERN int asn1PrtToStrm_IVI_ISO14823Attribute (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_ISO14823Attribute* pvalue);

EXTERN ASN1T_IVI_ISO14823Attribute* 
   new_ASN1T_IVI_ISO14823Attribute (ASN1CType& ccobj);

EXTERN int asn1Init_IVI_ISO14823Attribute (ASN1T_IVI_ISO14823Attribute* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_ISO14823Attribute (OSCTXT *pctxt, 
   ASN1T_IVI_ISO14823Attribute* pvalue);

/**************************************************************/
/*                                                            */
/*  ISO14823Attributes                                        */
/*                                                            */
/**************************************************************/
/*
ISO14823Attributes ::= SEQUENCE (SIZE (1..8, ...), ...) OF ISO14823Attribute
*/
/* List of ASN1T_IVI_ISO14823Attribute */
typedef ASN1TSeqOfList ASN1T_IVI_ISO14823Attributes;

class EXTERN ASN1C_IVI_ISO14823Attributes :
public ASN1CSeqOfList
{
protected:
   ASN1T_IVI_ISO14823Attributes& msgData;
public:
   /**
    * Control class: ASN1C_IVI_ISO14823Attributes
    * Data class:    ASN1T_IVI_ISO14823Attributes
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_IVI_ISO14823Attributes (ASN1T_IVI_ISO14823Attributes& data);

   /**
    * Control class: ASN1C_IVI_ISO14823Attributes<br/>
    * Data class: ASN1T_IVI_ISO14823Attributes<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_IVI_ISO14823Attributes (OSRTMessageBufferIF& msgBuf
      , ASN1T_IVI_ISO14823Attributes& data);

   /**
    * Control class: ASN1C_IVI_ISO14823Attributes<br/>
    * Data class: ASN1T_IVI_ISO14823Attributes<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_IVI_ISO14823Attributes (ASN1CType& ccobj
      , ASN1T_IVI_ISO14823Attributes& data);

   virtual ~ASN1C_IVI_ISO14823Attributes () {}

   /**
    * Data class: ASN1T_IVI_ISO14823Attribute<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_IVI_ISO14823Attribute* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_IVI_ISO14823Attribute.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_IVI_ISO14823Attribute* NewElement ();

   /**
    * Data class: ASN1T_IVI_ISO14823Attribute.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_IVI_ISO14823Attribute* AppendNewElement ();

private:
   ASN1C_IVI_ISO14823Attributes& operator= (const ASN1C_IVI_ISO14823Attributes&) {return *this;}
} ;

EXTERN int asn1PE_IVI_ISO14823Attributes (OSCTXT* pctxt, ASN1T_IVI_ISO14823Attributes* pvalue);

EXTERN int asn1PD_IVI_ISO14823Attributes (OSCTXT* pctxt, ASN1T_IVI_ISO14823Attributes* pvalue);

EXTERN int XmlEnc_IVI_ISO14823Attributes (OSCTXT* pctxt, 
   ASN1T_IVI_ISO14823Attributes* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_ISO14823Attributes (OSCTXT* pctxt, 
   ASN1T_IVI_ISO14823Attributes* pvalue);

EXTERN int asn1JsonEnc_IVI_ISO14823Attributes (OSCTXT *pctxt, ASN1T_IVI_ISO14823Attributes *pvalue);

EXTERN int asn1JsonDec_IVI_ISO14823Attributes (OSCTXT *pctxt, ASN1T_IVI_ISO14823Attributes *pvalue);

EXTERN int asn1PrtToStrm_IVI_ISO14823Attributes (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_ISO14823Attributes* pvalue);

EXTERN int asn1Init_IVI_ISO14823Attributes (ASN1T_IVI_ISO14823Attributes* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_ISO14823Attributes (OSCTXT *pctxt, 
   ASN1T_IVI_ISO14823Attributes* pvalue);

/**************************************************************/
/*                                                            */
/*  ISO14823Code                                              */
/*                                                            */
/**************************************************************/
/*
ISO14823Code ::= SEQUENCE {
   pictogramCode [0] SEQUENCE {
      countryCode [0] OCTET STRING (SIZE (2)) OPTIONAL,
      serviceCategoryCode [1] EXPLICIT CHOICE {
         trafficSignPictogram [0] ENUMERATED { dangerWarning(0), regulatory(1), informative(2), ... },
         publicFacilitiesPictogram [1] ENUMERATED { publicFacilities(0), ... },
         ambientOrRoadConditionPictogram [2] ENUMERATED { ambientCondition(0), roadCondition(1), ... },
         ...
      },
      pictogramCategoryCode [2] SEQUENCE {
         nature [0] INTEGER (1..9),
         serialNumber [1] INTEGER (0..99)
      }
   },
   attributes [1] ISO14823Attributes OPTIONAL
}
*/
struct EXTERN ASN1T_IVI_ISO14823Code {
   struct {
      unsigned attributesPresent : 1;
   } m;
   ASN1T_IVI_ISO14823Code_pictogramCode pictogramCode;
   ASN1T_IVI_ISO14823Attributes attributes;
   ASN1T_IVI_ISO14823Code ();
} ;

EXTERN int asn1PE_IVI_ISO14823Code (OSCTXT* pctxt, ASN1T_IVI_ISO14823Code* pvalue);

EXTERN int asn1PD_IVI_ISO14823Code (OSCTXT* pctxt, ASN1T_IVI_ISO14823Code* pvalue);

EXTERN int XmlEnc_IVI_ISO14823Code (OSCTXT* pctxt, 
   ASN1T_IVI_ISO14823Code* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_ISO14823Code (OSCTXT* pctxt, 
   ASN1T_IVI_ISO14823Code* pvalue);

EXTERN int asn1JsonEnc_IVI_ISO14823Code (OSCTXT *pctxt, ASN1T_IVI_ISO14823Code *pvalue);

EXTERN int asn1JsonDec_IVI_ISO14823Code (OSCTXT *pctxt, ASN1T_IVI_ISO14823Code *pvalue);

EXTERN int asn1PrtToStrm_IVI_ISO14823Code (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_ISO14823Code* pvalue);

EXTERN ASN1T_IVI_ISO14823Code* new_ASN1T_IVI_ISO14823Code (ASN1CType& ccobj);

EXTERN int asn1Init_IVI_ISO14823Code (ASN1T_IVI_ISO14823Code* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_ISO14823Code (OSCTXT *pctxt, ASN1T_IVI_ISO14823Code* pvalue);

/**************************************************************/
/*                                                            */
/*  AnyCatalogue                                              */
/*                                                            */
/**************************************************************/
/*
AnyCatalogue ::= SEQUENCE {
   owner [0] Provider,
   version [1] INTEGER (0..255),
   pictogramCode [2] INTEGER (0..65535),
   value [3] INTEGER (0..65535) OPTIONAL,
   unit [4] RSCUnit OPTIONAL,
   attributes [5] ISO14823Attributes OPTIONAL
}
*/
struct EXTERN ASN1T_IVI_AnyCatalogue {
   struct {
      unsigned valuePresent : 1;
      unsigned unitPresent : 1;
      unsigned attributesPresent : 1;
   } m;
   ASN1T_Provider owner;
   OSUINT8 version;
   OSUINT16 pictogramCode;
   OSUINT16 value;
   ASN1T_IVI_RSCUnit unit;
   ASN1T_IVI_ISO14823Attributes attributes;
   ASN1T_IVI_AnyCatalogue ();
} ;

EXTERN int asn1PE_IVI_AnyCatalogue (OSCTXT* pctxt, ASN1T_IVI_AnyCatalogue* pvalue);

EXTERN int asn1PD_IVI_AnyCatalogue (OSCTXT* pctxt, ASN1T_IVI_AnyCatalogue* pvalue);

EXTERN int XmlEnc_IVI_AnyCatalogue (OSCTXT* pctxt, 
   ASN1T_IVI_AnyCatalogue* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_AnyCatalogue (OSCTXT* pctxt, 
   ASN1T_IVI_AnyCatalogue* pvalue);

EXTERN int asn1JsonEnc_IVI_AnyCatalogue (OSCTXT *pctxt, ASN1T_IVI_AnyCatalogue *pvalue);

EXTERN int asn1JsonDec_IVI_AnyCatalogue (OSCTXT *pctxt, ASN1T_IVI_AnyCatalogue *pvalue);

EXTERN int asn1PrtToStrm_IVI_AnyCatalogue (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_AnyCatalogue* pvalue);

EXTERN ASN1T_IVI_AnyCatalogue* new_ASN1T_IVI_AnyCatalogue (ASN1CType& ccobj);

EXTERN int asn1Init_IVI_AnyCatalogue (ASN1T_IVI_AnyCatalogue* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_AnyCatalogue (OSCTXT *pctxt, ASN1T_IVI_AnyCatalogue* pvalue);

/**************************************************************/
/*                                                            */
/*  RSCode_code                                               */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'RSCode'
*/
/* Choice tag constants */

#define T_IVI_RSCode_code_viennaConvention 1
#define T_IVI_RSCode_code_iso14823      2
#define T_IVI_RSCode_code_itisCodes     3
#define T_IVI_RSCode_code_anyCatalogue  4
#define T_IVI_RSCode_code_extElem1      5

struct EXTERN ASN1T_IVI_RSCode_code {
   OSINT32 t;
   union {
      /* t = 1 */
      ASN1T_IVI_VcCode *viennaConvention;
      /* t = 2 */
      ASN1T_IVI_ISO14823Code *iso14823;
      /* t = 3 */
      OSUINT16 itisCodes;
      /* t = 4 */
      ASN1T_IVI_AnyCatalogue *anyCatalogue;
      /* t = 5 */
      ASN1TOpenType *extElem1;
   } u;
   ASN1T_IVI_RSCode_code () { t = 0; OSCRTLMEMSET (&u, 0, sizeof(u)); }
} ;

EXTERN int asn1PE_IVI_RSCode_code (OSCTXT* pctxt, ASN1T_IVI_RSCode_code* pvalue);

EXTERN int asn1PD_IVI_RSCode_code (OSCTXT* pctxt, ASN1T_IVI_RSCode_code* pvalue);

EXTERN int XmlEnc_IVI_RSCode_code (OSCTXT* pctxt, 
   ASN1T_IVI_RSCode_code* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_RSCode_code (OSCTXT* pctxt, ASN1T_IVI_RSCode_code* pvalue
   );

EXTERN int asn1JsonEnc_IVI_RSCode_code (OSCTXT *pctxt, ASN1T_IVI_RSCode_code *pvalue);

EXTERN int asn1JsonDec_IVI_RSCode_code (OSCTXT *pctxt, ASN1T_IVI_RSCode_code *pvalue);

EXTERN int asn1PrtToStrm_IVI_RSCode_code (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_RSCode_code* pvalue);

EXTERN ASN1T_IVI_RSCode_code* new_ASN1T_IVI_RSCode_code (ASN1CType& ccobj);

EXTERN int asn1Init_IVI_RSCode_code (ASN1T_IVI_RSCode_code* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_RSCode_code (OSCTXT *pctxt, ASN1T_IVI_RSCode_code* pvalue);

/**************************************************************/
/*                                                            */
/*  RSCode                                                    */
/*                                                            */
/**************************************************************/
/*
RSCode ::= SEQUENCE {
   layoutComponentId [0] INTEGER (1..4, ...) OPTIONAL,
   code [1] EXPLICIT CHOICE {
      viennaConvention [0] VcCode, -- see Vienna Convention Annex A
      iso14823 [1] ISO14823Code,
      itisCodes [2] INTEGER (0..65535), -- see SAE J2540
      anyCatalogue [3] AnyCatalogue,
      ...
   }
}
*/
struct EXTERN ASN1T_IVI_RSCode {
   struct {
      unsigned layoutComponentIdPresent : 1;
   } m;
   OSUINT32 layoutComponentId;
   ASN1T_IVI_RSCode_code code;
   ASN1T_IVI_RSCode ();
} ;

EXTERN int asn1PE_IVI_RSCode (OSCTXT* pctxt, ASN1T_IVI_RSCode* pvalue);

EXTERN int asn1PD_IVI_RSCode (OSCTXT* pctxt, ASN1T_IVI_RSCode* pvalue);

EXTERN int XmlEnc_IVI_RSCode (OSCTXT* pctxt, ASN1T_IVI_RSCode* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_RSCode (OSCTXT* pctxt, ASN1T_IVI_RSCode* pvalue);

EXTERN int asn1JsonEnc_IVI_RSCode (OSCTXT *pctxt, ASN1T_IVI_RSCode *pvalue);

EXTERN int asn1JsonDec_IVI_RSCode (OSCTXT *pctxt, ASN1T_IVI_RSCode *pvalue);

EXTERN int asn1PrtToStrm_IVI_RSCode (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_RSCode* pvalue);

EXTERN ASN1T_IVI_RSCode* new_ASN1T_IVI_RSCode (ASN1CType& ccobj);

EXTERN int asn1Init_IVI_RSCode (ASN1T_IVI_RSCode* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_RSCode (OSCTXT *pctxt, ASN1T_IVI_RSCode* pvalue);

/**************************************************************/
/*                                                            */
/*  RoadSignCodes                                             */
/*                                                            */
/**************************************************************/
/*
RoadSignCodes ::= SEQUENCE (SIZE (1..4, ...), ...) OF RSCode
*/
/* List of ASN1T_IVI_RSCode */
typedef ASN1TSeqOfList ASN1T_IVI_RoadSignCodes;

class EXTERN ASN1C_IVI_RoadSignCodes :
public ASN1CSeqOfList
{
protected:
   ASN1T_IVI_RoadSignCodes& msgData;
public:
   /**
    * Control class: ASN1C_IVI_RoadSignCodes
    * Data class:    ASN1T_IVI_RoadSignCodes
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_IVI_RoadSignCodes (ASN1T_IVI_RoadSignCodes& data);

   /**
    * Control class: ASN1C_IVI_RoadSignCodes<br/>
    * Data class: ASN1T_IVI_RoadSignCodes<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_IVI_RoadSignCodes (OSRTMessageBufferIF& msgBuf
      , ASN1T_IVI_RoadSignCodes& data);

   /**
    * Control class: ASN1C_IVI_RoadSignCodes<br/>
    * Data class: ASN1T_IVI_RoadSignCodes<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_IVI_RoadSignCodes (ASN1CType& ccobj, ASN1T_IVI_RoadSignCodes& data);

   virtual ~ASN1C_IVI_RoadSignCodes () {}

   /**
    * Data class: ASN1T_IVI_RSCode<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_IVI_RSCode* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_IVI_RSCode.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_IVI_RSCode* NewElement ();

   /**
    * Data class: ASN1T_IVI_RSCode.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_IVI_RSCode* AppendNewElement ();

private:
   ASN1C_IVI_RoadSignCodes& operator= (const ASN1C_IVI_RoadSignCodes&) {return *this;}
} ;

EXTERN int asn1PE_IVI_RoadSignCodes (OSCTXT* pctxt, ASN1T_IVI_RoadSignCodes* pvalue);

EXTERN int asn1PD_IVI_RoadSignCodes (OSCTXT* pctxt, ASN1T_IVI_RoadSignCodes* pvalue);

EXTERN int XmlEnc_IVI_RoadSignCodes (OSCTXT* pctxt, 
   ASN1T_IVI_RoadSignCodes* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_RoadSignCodes (OSCTXT* pctxt, 
   ASN1T_IVI_RoadSignCodes* pvalue);

EXTERN int asn1JsonEnc_IVI_RoadSignCodes (OSCTXT *pctxt, ASN1T_IVI_RoadSignCodes *pvalue);

EXTERN int asn1JsonDec_IVI_RoadSignCodes (OSCTXT *pctxt, ASN1T_IVI_RoadSignCodes *pvalue);

EXTERN int asn1PrtToStrm_IVI_RoadSignCodes (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_RoadSignCodes* pvalue);

EXTERN int asn1Init_IVI_RoadSignCodes (ASN1T_IVI_RoadSignCodes* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_RoadSignCodes (OSCTXT *pctxt, 
   ASN1T_IVI_RoadSignCodes* pvalue);

/**************************************************************/
/*                                                            */
/*  Text                                                      */
/*                                                            */
/**************************************************************/
/*
Text ::= SEQUENCE {
   layoutComponentId [0] INTEGER (1..4, ...) OPTIONAL,
   language [1] BIT STRING  (SIZE (10)),
   textContent [2] UTF8String
}
*/
struct EXTERN ASN1T_IVI_Text {
   struct {
      unsigned layoutComponentIdPresent : 1;
   } m;
   OSUINT32 layoutComponentId;
   ASN1TBitStr32 language;
   const OSUTF8CHAR* textContent;
   ASN1T_IVI_Text ();
} ;

EXTERN int asn1PE_IVI_Text (OSCTXT* pctxt, ASN1T_IVI_Text* pvalue);

EXTERN int asn1PD_IVI_Text (OSCTXT* pctxt, ASN1T_IVI_Text* pvalue);

EXTERN int XmlEnc_IVI_Text (OSCTXT* pctxt, ASN1T_IVI_Text* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_Text (OSCTXT* pctxt, ASN1T_IVI_Text* pvalue);

EXTERN int asn1JsonEnc_IVI_Text (OSCTXT *pctxt, ASN1T_IVI_Text *pvalue);

EXTERN int asn1JsonDec_IVI_Text (OSCTXT *pctxt, ASN1T_IVI_Text *pvalue);

EXTERN int asn1PrtToStrm_IVI_Text (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_Text* pvalue);

EXTERN ASN1T_IVI_Text* new_ASN1T_IVI_Text (ASN1CType& ccobj);

EXTERN int asn1Init_IVI_Text (ASN1T_IVI_Text* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_Text (OSCTXT *pctxt, ASN1T_IVI_Text* pvalue);

/**************************************************************/
/*                                                            */
/*  ConstraintTextLines1                                      */
/*                                                            */
/**************************************************************/
/*
ConstraintTextLines1 ::= SEQUENCE (SIZE (1..4, ...), ...) OF Text (WITH COMPONENTS { textContent SIZE (1..32), language , layoutComponentId })
*/
/* List of ASN1T_IVI_Text */
typedef ASN1TSeqOfList ASN1T_IVI_ConstraintTextLines1;

class EXTERN ASN1C_IVI_ConstraintTextLines1 :
public ASN1CSeqOfList
{
protected:
   ASN1T_IVI_ConstraintTextLines1& msgData;
public:
   /**
    * Control class: ASN1C_IVI_ConstraintTextLines1
    * Data class:    ASN1T_IVI_ConstraintTextLines1
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_IVI_ConstraintTextLines1 (ASN1T_IVI_ConstraintTextLines1& data);

   /**
    * Control class: ASN1C_IVI_ConstraintTextLines1<br/>
    * Data class: ASN1T_IVI_ConstraintTextLines1<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_IVI_ConstraintTextLines1 (OSRTMessageBufferIF& msgBuf
      , ASN1T_IVI_ConstraintTextLines1& data);

   /**
    * Control class: ASN1C_IVI_ConstraintTextLines1<br/>
    * Data class: ASN1T_IVI_ConstraintTextLines1<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_IVI_ConstraintTextLines1 (ASN1CType& ccobj
      , ASN1T_IVI_ConstraintTextLines1& data);

   virtual ~ASN1C_IVI_ConstraintTextLines1 () {}

   /**
    * Data class: ASN1T_IVI_Text<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_IVI_Text* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_IVI_Text.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_IVI_Text* NewElement ();

   /**
    * Data class: ASN1T_IVI_Text.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_IVI_Text* AppendNewElement ();

private:
   ASN1C_IVI_ConstraintTextLines1& operator= (const ASN1C_IVI_ConstraintTextLines1&) {return *this;}
} ;

EXTERN int asn1PE_IVI_ConstraintTextLines1 (OSCTXT* pctxt, ASN1T_IVI_ConstraintTextLines1* pvalue);

EXTERN int asn1PD_IVI_ConstraintTextLines1 (OSCTXT* pctxt, ASN1T_IVI_ConstraintTextLines1* pvalue);

EXTERN int XmlEnc_IVI_ConstraintTextLines1 (OSCTXT* pctxt, 
   ASN1T_IVI_ConstraintTextLines1* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_ConstraintTextLines1 (OSCTXT* pctxt, 
   ASN1T_IVI_ConstraintTextLines1* pvalue);

EXTERN int asn1JsonEnc_IVI_ConstraintTextLines1 (OSCTXT *pctxt, ASN1T_IVI_ConstraintTextLines1 *pvalue);

EXTERN int asn1JsonDec_IVI_ConstraintTextLines1 (OSCTXT *pctxt, ASN1T_IVI_ConstraintTextLines1 *pvalue);

EXTERN int asn1PrtToStrm_IVI_ConstraintTextLines1 (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_ConstraintTextLines1* pvalue);

EXTERN int asn1Init_IVI_ConstraintTextLines1 (ASN1T_IVI_ConstraintTextLines1* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_ConstraintTextLines1 (OSCTXT *pctxt, 
   ASN1T_IVI_ConstraintTextLines1* pvalue);

/**************************************************************/
/*                                                            */
/*  GicPart                                                   */
/*                                                            */
/**************************************************************/
/*
GicPart ::= SEQUENCE {
   detectionZoneIds [0] ZoneIds OPTIONAL,
   its-Rrid [1] EXPLICIT VarLengthNumber OPTIONAL,
   relevanceZoneIds [2] ZoneIds OPTIONAL,
   direction [3] Direction OPTIONAL,
   driverAwarenessZoneIds [4] ZoneIds OPTIONAL,
   minimumAwarenessTime [5] INTEGER (0..255) OPTIONAL,
   applicableLanes [6] LanePositions OPTIONAL,
   iviType [7] IviType,
   iviPurpose [8] IviPurpose OPTIONAL,
   laneStatus [9] LaneStatus OPTIONAL,
   vehicleCharacteristics [10] VehicleCharacteristicsList OPTIONAL,
   driverCharacteristics [11] DriverCharacteristics OPTIONAL,
   layoutId [12] INTEGER (1..4, ...) OPTIONAL,
   preStoredlayoutId [13] INTEGER (1..64, ...) OPTIONAL,
   roadSignCodes [14] RoadSignCodes,
   extraText [15] ConstraintTextLines1 OPTIONAL,
   ...
}
*/
struct EXTERN ASN1T_IVI_GicPart {
   struct {
      unsigned detectionZoneIdsPresent : 1;
      unsigned its_RridPresent : 1;
      unsigned relevanceZoneIdsPresent : 1;
      unsigned directionPresent : 1;
      unsigned driverAwarenessZoneIdsPresent : 1;
      unsigned minimumAwarenessTimePresent : 1;
      unsigned applicableLanesPresent : 1;
      unsigned iviPurposePresent : 1;
      unsigned laneStatusPresent : 1;
      unsigned vehicleCharacteristicsPresent : 1;
      unsigned driverCharacteristicsPresent : 1;
      unsigned layoutIdPresent : 1;
      unsigned preStoredlayoutIdPresent : 1;
      unsigned extraTextPresent : 1;
   } m;
   ASN1T_IVI_ZoneIds detectionZoneIds;
   ASN1T_VarLengthNumber its_Rrid;
   ASN1T_IVI_ZoneIds relevanceZoneIds;
   ASN1T_IVI_Direction direction;
   ASN1T_IVI_ZoneIds driverAwarenessZoneIds;
   OSUINT8 minimumAwarenessTime;
   ASN1T_IVI_LanePositions applicableLanes;
   ASN1T_IVI_IviType iviType;
   ASN1T_IVI_IviPurpose iviPurpose;
   ASN1T_IVI_LaneStatus laneStatus;
   ASN1T_IVI_VehicleCharacteristicsList vehicleCharacteristics;
   ASN1T_IVI_DriverCharacteristics driverCharacteristics;
   OSUINT32 layoutId;
   OSUINT32 preStoredlayoutId;
   ASN1T_IVI_RoadSignCodes roadSignCodes;
   ASN1T_IVI_ConstraintTextLines1 extraText;
   ASN1TSeqExt extElem1;
   ASN1T_IVI_GicPart ();
} ;

EXTERN int asn1PE_IVI_GicPart (OSCTXT* pctxt, ASN1T_IVI_GicPart* pvalue);

EXTERN int asn1PD_IVI_GicPart (OSCTXT* pctxt, ASN1T_IVI_GicPart* pvalue);

EXTERN int XmlEnc_IVI_GicPart (OSCTXT* pctxt, ASN1T_IVI_GicPart* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_GicPart (OSCTXT* pctxt, ASN1T_IVI_GicPart* pvalue);

EXTERN int asn1JsonEnc_IVI_GicPart (OSCTXT *pctxt, ASN1T_IVI_GicPart *pvalue);

EXTERN int asn1JsonDec_IVI_GicPart (OSCTXT *pctxt, ASN1T_IVI_GicPart *pvalue);

EXTERN int asn1PrtToStrm_IVI_GicPart (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_GicPart* pvalue);

EXTERN ASN1T_IVI_GicPart* new_ASN1T_IVI_GicPart (ASN1CType& ccobj);

EXTERN int asn1Init_IVI_GicPart (ASN1T_IVI_GicPart* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_GicPart (OSCTXT *pctxt, ASN1T_IVI_GicPart* pvalue);

/**************************************************************/
/*                                                            */
/*  GeneralIviContainer                                       */
/*                                                            */
/**************************************************************/
/*
GeneralIviContainer ::= SEQUENCE (SIZE (1..16, ...)) OF GicPart
*/
/* List of ASN1T_IVI_GicPart */
typedef ASN1TSeqOfList ASN1T_IVI_GeneralIviContainer;

class EXTERN ASN1C_IVI_GeneralIviContainer :
public ASN1CSeqOfList
{
protected:
   ASN1T_IVI_GeneralIviContainer& msgData;
public:
   /**
    * Control class: ASN1C_IVI_GeneralIviContainer
    * Data class:    ASN1T_IVI_GeneralIviContainer
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_IVI_GeneralIviContainer (ASN1T_IVI_GeneralIviContainer& data);

   /**
    * Control class: ASN1C_IVI_GeneralIviContainer<br/>
    * Data class: ASN1T_IVI_GeneralIviContainer<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_IVI_GeneralIviContainer (OSRTMessageBufferIF& msgBuf
      , ASN1T_IVI_GeneralIviContainer& data);

   /**
    * Control class: ASN1C_IVI_GeneralIviContainer<br/>
    * Data class: ASN1T_IVI_GeneralIviContainer<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_IVI_GeneralIviContainer (ASN1CType& ccobj
      , ASN1T_IVI_GeneralIviContainer& data);

   virtual ~ASN1C_IVI_GeneralIviContainer () {}

   /**
    * Data class: ASN1T_IVI_GicPart<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_IVI_GicPart* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_IVI_GicPart.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_IVI_GicPart* NewElement ();

   /**
    * Data class: ASN1T_IVI_GicPart.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_IVI_GicPart* AppendNewElement ();

private:
   ASN1C_IVI_GeneralIviContainer& operator= (const ASN1C_IVI_GeneralIviContainer&) {return *this;}
} ;

EXTERN int asn1PE_IVI_GeneralIviContainer (OSCTXT* pctxt, ASN1T_IVI_GeneralIviContainer* pvalue);

EXTERN int asn1PD_IVI_GeneralIviContainer (OSCTXT* pctxt, ASN1T_IVI_GeneralIviContainer* pvalue);

EXTERN int XmlEnc_IVI_GeneralIviContainer (OSCTXT* pctxt, 
   ASN1T_IVI_GeneralIviContainer* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_GeneralIviContainer (OSCTXT* pctxt, 
   ASN1T_IVI_GeneralIviContainer* pvalue);

EXTERN int asn1JsonEnc_IVI_GeneralIviContainer (OSCTXT *pctxt, ASN1T_IVI_GeneralIviContainer *pvalue);

EXTERN int asn1JsonDec_IVI_GeneralIviContainer (OSCTXT *pctxt, ASN1T_IVI_GeneralIviContainer *pvalue);

EXTERN int asn1PrtToStrm_IVI_GeneralIviContainer (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_GeneralIviContainer* pvalue);

EXTERN int asn1Init_IVI_GeneralIviContainer (ASN1T_IVI_GeneralIviContainer* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_GeneralIviContainer (OSCTXT *pctxt, 
   ASN1T_IVI_GeneralIviContainer* pvalue);

/**************************************************************/
/*                                                            */
/*  LaneType                                                  */
/*                                                            */
/**************************************************************/
/*
LaneType ::= INTEGER { traffic(0), through(1), reversible(2), acceleration(3), deceleration(4), leftHandTurning(5), rightHandTurning(6), dedicatedVehicle(7), bus(8), taxi(9), hov(10), hot(11), pedestrian(12), bikeLane(13), median(14), striping(15), trackedVehicle(16), parking(17), emergency(18), verge(19), minimumRiskManoeuvre(20) } (0..31)
*/
struct EXTERN IVI_LaneType {
   enum Root {
      traffic = 0,
      through = 1,
      reversible = 2,
      acceleration = 3,
      deceleration = 4,
      leftHandTurning = 5,
      rightHandTurning = 6,
      dedicatedVehicle = 7,
      bus = 8,
      taxi = 9,
      hov = 10,
      hot = 11,
      pedestrian = 12,
      bikeLane = 13,
      median = 14,
      striping = 15,
      trackedVehicle = 16,
      parking = 17,
      emergency = 18,
      verge = 19,
      minimumRiskManoeuvre = 20
   } ;
} ;

typedef OSUINT8 ASN1T_IVI_LaneType;

EXTERN int asn1PE_IVI_LaneType (OSCTXT* pctxt, ASN1T_IVI_LaneType value);

EXTERN int asn1PD_IVI_LaneType (OSCTXT* pctxt, ASN1T_IVI_LaneType* pvalue);

EXTERN int XmlEnc_IVI_LaneType (OSCTXT* pctxt, ASN1T_IVI_LaneType value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_LaneType (OSCTXT* pctxt, ASN1T_IVI_LaneType* pvalue);

EXTERN int asn1JsonEnc_IVI_LaneType (OSCTXT *pctxt, ASN1T_IVI_LaneType *pvalue);

EXTERN int asn1JsonDec_IVI_LaneType (OSCTXT *pctxt, ASN1T_IVI_LaneType *pvalue);

EXTERN int asn1PrtToStrm_IVI_LaneType (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_LaneType* pvalue);

EXTERN ASN1T_IVI_LaneType* new_ASN1T_IVI_LaneType (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  DefinitionAccuracy                                        */
/*                                                            */
/**************************************************************/
/*
DefinitionAccuracy ::= INTEGER { oneCm(0), twoCm(1), fiveCm(2), tenCm(3), twentyCm(4), fiftyCm(5), oneMeter(6), unavailable(7) } (0..7, ...)
*/
struct EXTERN IVI_DefinitionAccuracy {
   enum Root {
      oneCm = 0,
      twoCm = 1,
      fiveCm = 2,
      tenCm = 3,
      twentyCm = 4,
      fiftyCm = 5,
      oneMeter = 6,
      unavailable = 7
   } ;
} ;

typedef OSUINT32 ASN1T_IVI_DefinitionAccuracy;

EXTERN int asn1PE_IVI_DefinitionAccuracy (OSCTXT* pctxt, ASN1T_IVI_DefinitionAccuracy value);

EXTERN int asn1PD_IVI_DefinitionAccuracy (OSCTXT* pctxt, ASN1T_IVI_DefinitionAccuracy* pvalue);

EXTERN int XmlEnc_IVI_DefinitionAccuracy (OSCTXT* pctxt, 
   ASN1T_IVI_DefinitionAccuracy value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_DefinitionAccuracy (OSCTXT* pctxt, 
   ASN1T_IVI_DefinitionAccuracy* pvalue);

EXTERN int asn1JsonEnc_IVI_DefinitionAccuracy (OSCTXT *pctxt, ASN1T_IVI_DefinitionAccuracy *pvalue);

EXTERN int asn1JsonDec_IVI_DefinitionAccuracy (OSCTXT *pctxt, ASN1T_IVI_DefinitionAccuracy *pvalue);

EXTERN int asn1PrtToStrm_IVI_DefinitionAccuracy (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_DefinitionAccuracy* pvalue);

EXTERN ASN1T_IVI_DefinitionAccuracy* 
   new_ASN1T_IVI_DefinitionAccuracy (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  LaneMarkingStatus                                         */
/*                                                            */
/**************************************************************/
/*
LaneMarkingStatus ::= BOOLEAN
*/
typedef OSBOOL ASN1T_IVI_LaneMarkingStatus;

EXTERN int asn1PE_IVI_LaneMarkingStatus (OSCTXT* pctxt, ASN1T_IVI_LaneMarkingStatus value);

EXTERN int asn1PD_IVI_LaneMarkingStatus (OSCTXT* pctxt, ASN1T_IVI_LaneMarkingStatus* pvalue);

EXTERN int XmlEnc_IVI_LaneMarkingStatus (OSCTXT* pctxt, 
   ASN1T_IVI_LaneMarkingStatus value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_LaneMarkingStatus (OSCTXT* pctxt, 
   ASN1T_IVI_LaneMarkingStatus* pvalue);

EXTERN int asn1JsonEnc_IVI_LaneMarkingStatus (OSCTXT *pctxt, ASN1T_IVI_LaneMarkingStatus *pvalue);

EXTERN int asn1JsonDec_IVI_LaneMarkingStatus (OSCTXT *pctxt, ASN1T_IVI_LaneMarkingStatus *pvalue);

EXTERN int asn1PrtToStrm_IVI_LaneMarkingStatus (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_LaneMarkingStatus* pvalue);

EXTERN ASN1T_IVI_LaneMarkingStatus* 
   new_ASN1T_IVI_LaneMarkingStatus (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  MarkingColour                                             */
/*                                                            */
/**************************************************************/
/*
MarkingColour ::= INTEGER { white(0), yellow(1), orange(2), red(3), blue(4), unavailable(7) } (0..7, ...)
*/
struct EXTERN IVI_MarkingColour {
   enum Root {
      white = 0,
      yellow = 1,
      orange = 2,
      red = 3,
      blue = 4,
      unavailable = 7
   } ;
} ;

typedef OSUINT32 ASN1T_IVI_MarkingColour;

EXTERN int asn1PE_IVI_MarkingColour (OSCTXT* pctxt, ASN1T_IVI_MarkingColour value);

EXTERN int asn1PD_IVI_MarkingColour (OSCTXT* pctxt, ASN1T_IVI_MarkingColour* pvalue);

EXTERN int XmlEnc_IVI_MarkingColour (OSCTXT* pctxt, 
   ASN1T_IVI_MarkingColour value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_MarkingColour (OSCTXT* pctxt, 
   ASN1T_IVI_MarkingColour* pvalue);

EXTERN int asn1JsonEnc_IVI_MarkingColour (OSCTXT *pctxt, ASN1T_IVI_MarkingColour *pvalue);

EXTERN int asn1JsonDec_IVI_MarkingColour (OSCTXT *pctxt, ASN1T_IVI_MarkingColour *pvalue);

EXTERN int asn1PrtToStrm_IVI_MarkingColour (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_MarkingColour* pvalue);

EXTERN ASN1T_IVI_MarkingColour* new_ASN1T_IVI_MarkingColour (ASN1CType& ccobj)
   ;

/**************************************************************/
/*                                                            */
/*  LaneDelimitation                                          */
/*                                                            */
/**************************************************************/
/*
LaneDelimitation ::= INTEGER { noDelimitation(0), lowLaneSeparator(1), highLaneSeparator(2), wall(3), curb(4), unpaved(5), guardrail(6) } (0..7, ...)
*/
struct EXTERN IVI_LaneDelimitation {
   enum Root {
      noDelimitation = 0,
      lowLaneSeparator = 1,
      highLaneSeparator = 2,
      wall = 3,
      curb = 4,
      unpaved = 5,
      guardrail = 6
   } ;
} ;

typedef OSUINT32 ASN1T_IVI_LaneDelimitation;

EXTERN int asn1PE_IVI_LaneDelimitation (OSCTXT* pctxt, ASN1T_IVI_LaneDelimitation value);

EXTERN int asn1PD_IVI_LaneDelimitation (OSCTXT* pctxt, ASN1T_IVI_LaneDelimitation* pvalue);

EXTERN int XmlEnc_IVI_LaneDelimitation (OSCTXT* pctxt, 
   ASN1T_IVI_LaneDelimitation value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_LaneDelimitation (OSCTXT* pctxt, 
   ASN1T_IVI_LaneDelimitation* pvalue);

EXTERN int asn1JsonEnc_IVI_LaneDelimitation (OSCTXT *pctxt, ASN1T_IVI_LaneDelimitation *pvalue);

EXTERN int asn1JsonDec_IVI_LaneDelimitation (OSCTXT *pctxt, ASN1T_IVI_LaneDelimitation *pvalue);

EXTERN int asn1PrtToStrm_IVI_LaneDelimitation (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_LaneDelimitation* pvalue);

EXTERN ASN1T_IVI_LaneDelimitation* 
   new_ASN1T_IVI_LaneDelimitation (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  LaneCharacteristics                                       */
/*                                                            */
/**************************************************************/
/*
LaneCharacteristics ::= SEQUENCE {
   zoneDefinitionAccuracy [0] DefinitionAccuracy,
   existinglaneMarkingStatus [1] LaneMarkingStatus,
   newlaneMarkingColour [2] MarkingColour,
   laneDelimitationLeft [3] LaneDelimitation,
   laneDelimitationRight [4] LaneDelimitation,
   mergingWith [5] Zid
}
*/
struct EXTERN ASN1T_IVI_LaneCharacteristics {
   ASN1T_IVI_DefinitionAccuracy zoneDefinitionAccuracy;
   ASN1T_IVI_LaneMarkingStatus existinglaneMarkingStatus;
   ASN1T_IVI_MarkingColour newlaneMarkingColour;
   ASN1T_IVI_LaneDelimitation laneDelimitationLeft;
   ASN1T_IVI_LaneDelimitation laneDelimitationRight;
   ASN1T_IVI_Zid mergingWith;
} ;

EXTERN int asn1PE_IVI_LaneCharacteristics (OSCTXT* pctxt, ASN1T_IVI_LaneCharacteristics* pvalue);

EXTERN int asn1PD_IVI_LaneCharacteristics (OSCTXT* pctxt, ASN1T_IVI_LaneCharacteristics* pvalue);

EXTERN int XmlEnc_IVI_LaneCharacteristics (OSCTXT* pctxt, 
   ASN1T_IVI_LaneCharacteristics* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_LaneCharacteristics (OSCTXT* pctxt, 
   ASN1T_IVI_LaneCharacteristics* pvalue);

EXTERN int asn1JsonEnc_IVI_LaneCharacteristics (OSCTXT *pctxt, ASN1T_IVI_LaneCharacteristics *pvalue);

EXTERN int asn1JsonDec_IVI_LaneCharacteristics (OSCTXT *pctxt, ASN1T_IVI_LaneCharacteristics *pvalue);

EXTERN int asn1PrtToStrm_IVI_LaneCharacteristics (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_LaneCharacteristics* pvalue);

EXTERN ASN1T_IVI_LaneCharacteristics* 
   new_ASN1T_IVI_LaneCharacteristics (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  FrictionCoefficient                                       */
/*                                                            */
/**************************************************************/
/*
FrictionCoefficient ::= INTEGER (0..101)
*/
typedef OSUINT8 ASN1T_IVI_FrictionCoefficient;

EXTERN int asn1PE_IVI_FrictionCoefficient (OSCTXT* pctxt, ASN1T_IVI_FrictionCoefficient value);

EXTERN int asn1PD_IVI_FrictionCoefficient (OSCTXT* pctxt, ASN1T_IVI_FrictionCoefficient* pvalue);

EXTERN int XmlEnc_IVI_FrictionCoefficient (OSCTXT* pctxt, 
   ASN1T_IVI_FrictionCoefficient value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_FrictionCoefficient (OSCTXT* pctxt, 
   ASN1T_IVI_FrictionCoefficient* pvalue);

EXTERN int asn1JsonEnc_IVI_FrictionCoefficient (OSCTXT *pctxt, ASN1T_IVI_FrictionCoefficient *pvalue);

EXTERN int asn1JsonDec_IVI_FrictionCoefficient (OSCTXT *pctxt, ASN1T_IVI_FrictionCoefficient *pvalue);

EXTERN int asn1PrtToStrm_IVI_FrictionCoefficient (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_FrictionCoefficient* pvalue);

EXTERN ASN1T_IVI_FrictionCoefficient* 
   new_ASN1T_IVI_FrictionCoefficient (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  MaterialType                                              */
/*                                                            */
/**************************************************************/
/*
MaterialType ::= INTEGER { asphalt(0), concrete(1), cobblestone(2), gravel(3), unavailable(7) } (0..7, ...)
*/
struct EXTERN IVI_MaterialType {
   enum Root {
      asphalt = 0,
      concrete = 1,
      cobblestone = 2,
      gravel = 3,
      unavailable = 7
   } ;
} ;

typedef OSUINT32 ASN1T_IVI_MaterialType;

EXTERN int asn1PE_IVI_MaterialType (OSCTXT* pctxt, ASN1T_IVI_MaterialType value);

EXTERN int asn1PD_IVI_MaterialType (OSCTXT* pctxt, ASN1T_IVI_MaterialType* pvalue);

EXTERN int XmlEnc_IVI_MaterialType (OSCTXT* pctxt, 
   ASN1T_IVI_MaterialType value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_MaterialType (OSCTXT* pctxt, 
   ASN1T_IVI_MaterialType* pvalue);

EXTERN int asn1JsonEnc_IVI_MaterialType (OSCTXT *pctxt, ASN1T_IVI_MaterialType *pvalue);

EXTERN int asn1JsonDec_IVI_MaterialType (OSCTXT *pctxt, ASN1T_IVI_MaterialType *pvalue);

EXTERN int asn1PrtToStrm_IVI_MaterialType (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_MaterialType* pvalue);

EXTERN ASN1T_IVI_MaterialType* new_ASN1T_IVI_MaterialType (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  WearLevel                                                 */
/*                                                            */
/**************************************************************/
/*
WearLevel ::= INTEGER { new(0), good(1), bad(2), hasPotholes(3), unavailable(7) } (0..7, ...)
*/
struct EXTERN IVI_WearLevel {
   enum Root {
      new_ = 0,
      good = 1,
      bad = 2,
      hasPotholes = 3,
      unavailable = 7
   } ;
} ;

typedef OSUINT32 ASN1T_IVI_WearLevel;

EXTERN int asn1PE_IVI_WearLevel (OSCTXT* pctxt, ASN1T_IVI_WearLevel value);

EXTERN int asn1PD_IVI_WearLevel (OSCTXT* pctxt, ASN1T_IVI_WearLevel* pvalue);

EXTERN int XmlEnc_IVI_WearLevel (OSCTXT* pctxt, ASN1T_IVI_WearLevel value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_WearLevel (OSCTXT* pctxt, ASN1T_IVI_WearLevel* pvalue);

EXTERN int asn1JsonEnc_IVI_WearLevel (OSCTXT *pctxt, ASN1T_IVI_WearLevel *pvalue);

EXTERN int asn1JsonDec_IVI_WearLevel (OSCTXT *pctxt, ASN1T_IVI_WearLevel *pvalue);

EXTERN int asn1PrtToStrm_IVI_WearLevel (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_WearLevel* pvalue);

EXTERN ASN1T_IVI_WearLevel* new_ASN1T_IVI_WearLevel (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  BankingAngle                                              */
/*                                                            */
/**************************************************************/
/*
 Defition of IVI specific data elements 
BankingAngle ::= INTEGER (-20..21)
*/
typedef OSINT8 ASN1T_IVI_BankingAngle;

EXTERN int asn1PE_IVI_BankingAngle (OSCTXT* pctxt, ASN1T_IVI_BankingAngle value);

EXTERN int asn1PD_IVI_BankingAngle (OSCTXT* pctxt, ASN1T_IVI_BankingAngle* pvalue);

EXTERN int XmlEnc_IVI_BankingAngle (OSCTXT* pctxt, 
   ASN1T_IVI_BankingAngle value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_BankingAngle (OSCTXT* pctxt, 
   ASN1T_IVI_BankingAngle* pvalue);

EXTERN int asn1JsonEnc_IVI_BankingAngle (OSCTXT *pctxt, ASN1T_IVI_BankingAngle *pvalue);

EXTERN int asn1JsonDec_IVI_BankingAngle (OSCTXT *pctxt, ASN1T_IVI_BankingAngle *pvalue);

EXTERN int asn1PrtToStrm_IVI_BankingAngle (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_BankingAngle* pvalue);

EXTERN ASN1T_IVI_BankingAngle* new_ASN1T_IVI_BankingAngle (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  RoadSurfaceStaticCharacteristics                          */
/*                                                            */
/**************************************************************/
/*
RoadSurfaceStaticCharacteristics ::= SEQUENCE {
   frictionCoefficient [0] FrictionCoefficient,
   material [1] MaterialType,
   wear [2] WearLevel,
   avBankingAngle [3] BankingAngle
}
*/
struct EXTERN ASN1T_IVI_RoadSurfaceStaticCharacteristics {
   ASN1T_IVI_FrictionCoefficient frictionCoefficient;
   ASN1T_IVI_MaterialType material;
   ASN1T_IVI_WearLevel wear;
   ASN1T_IVI_BankingAngle avBankingAngle;
} ;

EXTERN int asn1PE_IVI_RoadSurfaceStaticCharacteristics (OSCTXT* pctxt, ASN1T_IVI_RoadSurfaceStaticCharacteristics* pvalue);

EXTERN int asn1PD_IVI_RoadSurfaceStaticCharacteristics (OSCTXT* pctxt, ASN1T_IVI_RoadSurfaceStaticCharacteristics* pvalue);

EXTERN int XmlEnc_IVI_RoadSurfaceStaticCharacteristics (OSCTXT* pctxt, 
   ASN1T_IVI_RoadSurfaceStaticCharacteristics* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_RoadSurfaceStaticCharacteristics (OSCTXT* pctxt, 
   ASN1T_IVI_RoadSurfaceStaticCharacteristics* pvalue);

EXTERN int asn1JsonEnc_IVI_RoadSurfaceStaticCharacteristics (OSCTXT *pctxt, ASN1T_IVI_RoadSurfaceStaticCharacteristics *pvalue);

EXTERN int asn1JsonDec_IVI_RoadSurfaceStaticCharacteristics (OSCTXT *pctxt, ASN1T_IVI_RoadSurfaceStaticCharacteristics *pvalue);

EXTERN int asn1PrtToStrm_IVI_RoadSurfaceStaticCharacteristics (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_RoadSurfaceStaticCharacteristics* pvalue);

EXTERN ASN1T_IVI_RoadSurfaceStaticCharacteristics* 
   new_ASN1T_IVI_RoadSurfaceStaticCharacteristics (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  Condition                                                 */
/*                                                            */
/**************************************************************/
/*
Condition ::= INTEGER { dry(0), moist(1), wet(2), standingWater(3), frost(4), ice(5), snow(6), slush(7), unvailable(8) } (0..15, ...)
*/
struct EXTERN IVI_Condition {
   enum Root {
      dry = 0,
      moist = 1,
      wet = 2,
      standingWater = 3,
      frost = 4,
      ice = 5,
      snow = 6,
      slush = 7,
      unvailable = 8
   } ;
} ;

typedef OSUINT32 ASN1T_IVI_Condition;

EXTERN int asn1PE_IVI_Condition (OSCTXT* pctxt, ASN1T_IVI_Condition value);

EXTERN int asn1PD_IVI_Condition (OSCTXT* pctxt, ASN1T_IVI_Condition* pvalue);

EXTERN int XmlEnc_IVI_Condition (OSCTXT* pctxt, ASN1T_IVI_Condition value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_Condition (OSCTXT* pctxt, ASN1T_IVI_Condition* pvalue);

EXTERN int asn1JsonEnc_IVI_Condition (OSCTXT *pctxt, ASN1T_IVI_Condition *pvalue);

EXTERN int asn1JsonDec_IVI_Condition (OSCTXT *pctxt, ASN1T_IVI_Condition *pvalue);

EXTERN int asn1PrtToStrm_IVI_Condition (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_Condition* pvalue);

EXTERN ASN1T_IVI_Condition* new_ASN1T_IVI_Condition (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  Temperature                                               */
/*                                                            */
/**************************************************************/
/*
Temperature ::= INTEGER (-100..151)
*/
typedef OSINT16 ASN1T_IVI_Temperature;

EXTERN int asn1PE_IVI_Temperature (OSCTXT* pctxt, ASN1T_IVI_Temperature value);

EXTERN int asn1PD_IVI_Temperature (OSCTXT* pctxt, ASN1T_IVI_Temperature* pvalue);

EXTERN int XmlEnc_IVI_Temperature (OSCTXT* pctxt, ASN1T_IVI_Temperature value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_Temperature (OSCTXT* pctxt, ASN1T_IVI_Temperature* pvalue
   );

EXTERN int asn1JsonEnc_IVI_Temperature (OSCTXT *pctxt, ASN1T_IVI_Temperature *pvalue);

EXTERN int asn1JsonDec_IVI_Temperature (OSCTXT *pctxt, ASN1T_IVI_Temperature *pvalue);

EXTERN int asn1PrtToStrm_IVI_Temperature (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_Temperature* pvalue);

EXTERN ASN1T_IVI_Temperature* new_ASN1T_IVI_Temperature (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  Depth                                                     */
/*                                                            */
/**************************************************************/
/*
Depth ::= INTEGER (0..255)
*/
typedef OSUINT8 ASN1T_IVI_Depth;

EXTERN int asn1PE_IVI_Depth (OSCTXT* pctxt, ASN1T_IVI_Depth value);

EXTERN int asn1PD_IVI_Depth (OSCTXT* pctxt, ASN1T_IVI_Depth* pvalue);

EXTERN int XmlEnc_IVI_Depth (OSCTXT* pctxt, ASN1T_IVI_Depth value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_Depth (OSCTXT* pctxt, ASN1T_IVI_Depth* pvalue);

EXTERN int asn1JsonEnc_IVI_Depth (OSCTXT *pctxt, ASN1T_IVI_Depth *pvalue);

EXTERN int asn1JsonDec_IVI_Depth (OSCTXT *pctxt, ASN1T_IVI_Depth *pvalue);

EXTERN int asn1PrtToStrm_IVI_Depth (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_Depth* pvalue);

EXTERN ASN1T_IVI_Depth* new_ASN1T_IVI_Depth (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  TreatmentType                                             */
/*                                                            */
/**************************************************************/
/*
TreatmentType ::= INTEGER { no(0), antiskid(1), anti-icing(2), de-icing(3), unavailable(7) } (0..7)
*/
struct EXTERN IVI_TreatmentType {
   enum Root {
      no = 0,
      antiskid = 1,
      anti_icing = 2,
      de_icing = 3,
      unavailable = 7
   } ;
} ;

typedef OSUINT8 ASN1T_IVI_TreatmentType;

EXTERN int asn1PE_IVI_TreatmentType (OSCTXT* pctxt, ASN1T_IVI_TreatmentType value);

EXTERN int asn1PD_IVI_TreatmentType (OSCTXT* pctxt, ASN1T_IVI_TreatmentType* pvalue);

EXTERN int XmlEnc_IVI_TreatmentType (OSCTXT* pctxt, 
   ASN1T_IVI_TreatmentType value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_TreatmentType (OSCTXT* pctxt, 
   ASN1T_IVI_TreatmentType* pvalue);

EXTERN int asn1JsonEnc_IVI_TreatmentType (OSCTXT *pctxt, ASN1T_IVI_TreatmentType *pvalue);

EXTERN int asn1JsonDec_IVI_TreatmentType (OSCTXT *pctxt, ASN1T_IVI_TreatmentType *pvalue);

EXTERN int asn1PrtToStrm_IVI_TreatmentType (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_TreatmentType* pvalue);

EXTERN ASN1T_IVI_TreatmentType* new_ASN1T_IVI_TreatmentType (ASN1CType& ccobj)
   ;

/**************************************************************/
/*                                                            */
/*  RoadSurfaceDynamicCharacteristics                         */
/*                                                            */
/**************************************************************/
/*
RoadSurfaceDynamicCharacteristics ::= SEQUENCE {
   condition [0] Condition,
   temperature [1] Temperature,
   iceOrWaterDepth [2] Depth,
   treatment [3] TreatmentType
}
*/
struct EXTERN ASN1T_IVI_RoadSurfaceDynamicCharacteristics {
   ASN1T_IVI_Condition condition;
   ASN1T_IVI_Temperature temperature;
   ASN1T_IVI_Depth iceOrWaterDepth;
   ASN1T_IVI_TreatmentType treatment;
} ;

EXTERN int asn1PE_IVI_RoadSurfaceDynamicCharacteristics (OSCTXT* pctxt, ASN1T_IVI_RoadSurfaceDynamicCharacteristics* pvalue);

EXTERN int asn1PD_IVI_RoadSurfaceDynamicCharacteristics (OSCTXT* pctxt, ASN1T_IVI_RoadSurfaceDynamicCharacteristics* pvalue);

EXTERN int XmlEnc_IVI_RoadSurfaceDynamicCharacteristics (OSCTXT* pctxt, 
   ASN1T_IVI_RoadSurfaceDynamicCharacteristics* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_RoadSurfaceDynamicCharacteristics (OSCTXT* pctxt, 
   ASN1T_IVI_RoadSurfaceDynamicCharacteristics* pvalue);

EXTERN int asn1JsonEnc_IVI_RoadSurfaceDynamicCharacteristics (OSCTXT *pctxt, ASN1T_IVI_RoadSurfaceDynamicCharacteristics *pvalue);

EXTERN int asn1JsonDec_IVI_RoadSurfaceDynamicCharacteristics (OSCTXT *pctxt, ASN1T_IVI_RoadSurfaceDynamicCharacteristics *pvalue);

EXTERN int asn1PrtToStrm_IVI_RoadSurfaceDynamicCharacteristics (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_RoadSurfaceDynamicCharacteristics* pvalue);

EXTERN ASN1T_IVI_RoadSurfaceDynamicCharacteristics* 
   new_ASN1T_IVI_RoadSurfaceDynamicCharacteristics (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  LaneInformation                                           */
/*                                                            */
/**************************************************************/
/*
LaneInformation ::= SEQUENCE {
   laneNumber [0] LanePosition,
   direction [1] Direction,
   validity [2] InternationalSign-applicablePeriod OPTIONAL,
   laneType [3] LaneType,
   laneTypeQualifier [4] CompleteVehicleCharacteristics OPTIONAL,
   laneStatus [5] LaneStatus,
   laneWidth [6] IviLaneWidth OPTIONAL,
   ...,
   [[
      detectionZoneIds [7] ZoneIds OPTIONAL,
      relevanceZoneIds [8] ZoneIds OPTIONAL,
      laneCharacteristics [9] LaneCharacteristics OPTIONAL,
      laneSurfaceStaticCharacteristics [10] RoadSurfaceStaticCharacteristics OPTIONAL,
      laneSurfaceDynamicCharacteristics [11] RoadSurfaceDynamicCharacteristics OPTIONAL
   ]]
}
*/
struct EXTERN ASN1T_IVI_LaneInformation {
   struct {
      unsigned validityPresent : 1;
      unsigned laneTypeQualifierPresent : 1;
      unsigned laneWidthPresent : 1;
      unsigned _v2ExtPresent : 1;
      unsigned detectionZoneIdsPresent : 1;
      unsigned relevanceZoneIdsPresent : 1;
      unsigned laneCharacteristicsPresent : 1;
      unsigned laneSurfaceStaticCharacteristicsPresent : 1;
      unsigned laneSurfaceDynamicCharacteristicsPresent : 1;
   } m;
   ASN1T_ITS_LanePosition laneNumber;
   ASN1T_IVI_Direction direction;
   ASN1T_InternationalSign_applicablePeriod validity;
   ASN1T_IVI_LaneType laneType;
   ASN1T_IVI_CompleteVehicleCharacteristics laneTypeQualifier;
   ASN1T_IVI_LaneStatus laneStatus;
   ASN1T_IVI_IviLaneWidth laneWidth;
   ASN1T_IVI_ZoneIds detectionZoneIds;
   ASN1T_IVI_ZoneIds relevanceZoneIds;
   ASN1T_IVI_LaneCharacteristics laneCharacteristics;
   ASN1T_IVI_RoadSurfaceStaticCharacteristics laneSurfaceStaticCharacteristics;
   ASN1T_IVI_RoadSurfaceDynamicCharacteristics laneSurfaceDynamicCharacteristics;
   ASN1TSeqExt extElem1;
   ASN1T_IVI_LaneInformation ();
} ;

EXTERN int asn1PE_IVI_LaneInformation (OSCTXT* pctxt, ASN1T_IVI_LaneInformation* pvalue);

EXTERN int asn1PD_IVI_LaneInformation (OSCTXT* pctxt, ASN1T_IVI_LaneInformation* pvalue);

EXTERN int XmlEnc_IVI_LaneInformation (OSCTXT* pctxt, 
   ASN1T_IVI_LaneInformation* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_LaneInformation (OSCTXT* pctxt, 
   ASN1T_IVI_LaneInformation* pvalue);

EXTERN int asn1JsonEnc_IVI_LaneInformation (OSCTXT *pctxt, ASN1T_IVI_LaneInformation *pvalue);

EXTERN int asn1JsonDec_IVI_LaneInformation (OSCTXT *pctxt, ASN1T_IVI_LaneInformation *pvalue);

EXTERN int asn1PrtToStrm_IVI_LaneInformation (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_LaneInformation* pvalue);

EXTERN ASN1T_IVI_LaneInformation* 
   new_ASN1T_IVI_LaneInformation (ASN1CType& ccobj);

EXTERN int asn1Init_IVI_LaneInformation (ASN1T_IVI_LaneInformation* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_LaneInformation (OSCTXT *pctxt, 
   ASN1T_IVI_LaneInformation* pvalue);

/**************************************************************/
/*                                                            */
/*  LaneConfiguration                                         */
/*                                                            */
/**************************************************************/
/*
LaneConfiguration ::= SEQUENCE (SIZE (1..16, ...)) OF LaneInformation
*/
/* List of ASN1T_IVI_LaneInformation */
typedef ASN1TSeqOfList ASN1T_IVI_LaneConfiguration;

class EXTERN ASN1C_IVI_LaneConfiguration :
public ASN1CSeqOfList
{
protected:
   ASN1T_IVI_LaneConfiguration& msgData;
public:
   /**
    * Control class: ASN1C_IVI_LaneConfiguration
    * Data class:    ASN1T_IVI_LaneConfiguration
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_IVI_LaneConfiguration (ASN1T_IVI_LaneConfiguration& data);

   /**
    * Control class: ASN1C_IVI_LaneConfiguration<br/>
    * Data class: ASN1T_IVI_LaneConfiguration<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_IVI_LaneConfiguration (OSRTMessageBufferIF& msgBuf
      , ASN1T_IVI_LaneConfiguration& data);

   /**
    * Control class: ASN1C_IVI_LaneConfiguration<br/>
    * Data class: ASN1T_IVI_LaneConfiguration<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_IVI_LaneConfiguration (ASN1CType& ccobj
      , ASN1T_IVI_LaneConfiguration& data);

   virtual ~ASN1C_IVI_LaneConfiguration () {}

   /**
    * Data class: ASN1T_IVI_LaneInformation<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_IVI_LaneInformation* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_IVI_LaneInformation.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_IVI_LaneInformation* NewElement ();

   /**
    * Data class: ASN1T_IVI_LaneInformation.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_IVI_LaneInformation* AppendNewElement ();

private:
   ASN1C_IVI_LaneConfiguration& operator= (const ASN1C_IVI_LaneConfiguration&) {return *this;}
} ;

EXTERN int asn1PE_IVI_LaneConfiguration (OSCTXT* pctxt, ASN1T_IVI_LaneConfiguration* pvalue);

EXTERN int asn1PD_IVI_LaneConfiguration (OSCTXT* pctxt, ASN1T_IVI_LaneConfiguration* pvalue);

EXTERN int XmlEnc_IVI_LaneConfiguration (OSCTXT* pctxt, 
   ASN1T_IVI_LaneConfiguration* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_LaneConfiguration (OSCTXT* pctxt, 
   ASN1T_IVI_LaneConfiguration* pvalue);

EXTERN int asn1JsonEnc_IVI_LaneConfiguration (OSCTXT *pctxt, ASN1T_IVI_LaneConfiguration *pvalue);

EXTERN int asn1JsonDec_IVI_LaneConfiguration (OSCTXT *pctxt, ASN1T_IVI_LaneConfiguration *pvalue);

EXTERN int asn1PrtToStrm_IVI_LaneConfiguration (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_LaneConfiguration* pvalue);

EXTERN int asn1Init_IVI_LaneConfiguration (ASN1T_IVI_LaneConfiguration* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_LaneConfiguration (OSCTXT *pctxt, 
   ASN1T_IVI_LaneConfiguration* pvalue);

/**************************************************************/
/*                                                            */
/*  RccPart                                                   */
/*                                                            */
/**************************************************************/
/*
RccPart ::= SEQUENCE {
   relevanceZoneIds [0] ZoneIds,
   roadType [1] RoadType,
   laneConfiguration [2] LaneConfiguration,
   ...
}
*/
struct EXTERN ASN1T_IVI_RccPart {
   ASN1T_IVI_ZoneIds relevanceZoneIds;
   ASN1T_ITS_RoadType roadType;
   ASN1T_IVI_LaneConfiguration laneConfiguration;
   ASN1TSeqExt extElem1;
   ASN1T_IVI_RccPart ();
} ;

EXTERN int asn1PE_IVI_RccPart (OSCTXT* pctxt, ASN1T_IVI_RccPart* pvalue);

EXTERN int asn1PD_IVI_RccPart (OSCTXT* pctxt, ASN1T_IVI_RccPart* pvalue);

EXTERN int XmlEnc_IVI_RccPart (OSCTXT* pctxt, ASN1T_IVI_RccPart* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_RccPart (OSCTXT* pctxt, ASN1T_IVI_RccPart* pvalue);

EXTERN int asn1JsonEnc_IVI_RccPart (OSCTXT *pctxt, ASN1T_IVI_RccPart *pvalue);

EXTERN int asn1JsonDec_IVI_RccPart (OSCTXT *pctxt, ASN1T_IVI_RccPart *pvalue);

EXTERN int asn1PrtToStrm_IVI_RccPart (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_RccPart* pvalue);

EXTERN ASN1T_IVI_RccPart* new_ASN1T_IVI_RccPart (ASN1CType& ccobj);

EXTERN int asn1Init_IVI_RccPart (ASN1T_IVI_RccPart* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_RccPart (OSCTXT *pctxt, ASN1T_IVI_RccPart* pvalue);

/**************************************************************/
/*                                                            */
/*  RoadConfigurationContainer                                */
/*                                                            */
/**************************************************************/
/*
RoadConfigurationContainer ::= SEQUENCE (SIZE (1..16, ...)) OF RccPart
*/
/* List of ASN1T_IVI_RccPart */
typedef ASN1TSeqOfList ASN1T_IVI_RoadConfigurationContainer;

class EXTERN ASN1C_IVI_RoadConfigurationContainer :
public ASN1CSeqOfList
{
protected:
   ASN1T_IVI_RoadConfigurationContainer& msgData;
public:
   /**
    * Control class: ASN1C_IVI_RoadConfigurationContainer
    * Data class:    ASN1T_IVI_RoadConfigurationContainer
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_IVI_RoadConfigurationContainer
       (ASN1T_IVI_RoadConfigurationContainer& data);

   /**
    * Control class: ASN1C_IVI_RoadConfigurationContainer<br/>
    * Data class: ASN1T_IVI_RoadConfigurationContainer<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_IVI_RoadConfigurationContainer (OSRTMessageBufferIF& msgBuf
      , ASN1T_IVI_RoadConfigurationContainer& data);

   /**
    * Control class: ASN1C_IVI_RoadConfigurationContainer<br/>
    * Data class: ASN1T_IVI_RoadConfigurationContainer<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_IVI_RoadConfigurationContainer (ASN1CType& ccobj
      , ASN1T_IVI_RoadConfigurationContainer& data);

   virtual ~ASN1C_IVI_RoadConfigurationContainer () {}

   /**
    * Data class: ASN1T_IVI_RccPart<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_IVI_RccPart* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_IVI_RccPart.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_IVI_RccPart* NewElement ();

   /**
    * Data class: ASN1T_IVI_RccPart.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_IVI_RccPart* AppendNewElement ();

private:
   ASN1C_IVI_RoadConfigurationContainer& operator= (const ASN1C_IVI_RoadConfigurationContainer&) {return *this;}
} ;

EXTERN int asn1PE_IVI_RoadConfigurationContainer (OSCTXT* pctxt, ASN1T_IVI_RoadConfigurationContainer* pvalue);

EXTERN int asn1PD_IVI_RoadConfigurationContainer (OSCTXT* pctxt, ASN1T_IVI_RoadConfigurationContainer* pvalue);

EXTERN int XmlEnc_IVI_RoadConfigurationContainer (OSCTXT* pctxt, 
   ASN1T_IVI_RoadConfigurationContainer* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_RoadConfigurationContainer (OSCTXT* pctxt, 
   ASN1T_IVI_RoadConfigurationContainer* pvalue);

EXTERN int asn1JsonEnc_IVI_RoadConfigurationContainer (OSCTXT *pctxt, ASN1T_IVI_RoadConfigurationContainer *pvalue);

EXTERN int asn1JsonDec_IVI_RoadConfigurationContainer (OSCTXT *pctxt, ASN1T_IVI_RoadConfigurationContainer *pvalue);

EXTERN int asn1PrtToStrm_IVI_RoadConfigurationContainer (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_RoadConfigurationContainer* pvalue);

EXTERN int asn1Init_IVI_RoadConfigurationContainer (
   ASN1T_IVI_RoadConfigurationContainer* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_RoadConfigurationContainer (OSCTXT *pctxt, 
   ASN1T_IVI_RoadConfigurationContainer* pvalue);

/**************************************************************/
/*                                                            */
/*  TextLines                                                 */
/*                                                            */
/**************************************************************/
/*
TextLines ::= SEQUENCE (SIZE (1..4, ...), ...) OF Text
*/
/* List of ASN1T_IVI_Text */
typedef ASN1TSeqOfList ASN1T_IVI_TextLines;

class EXTERN ASN1C_IVI_TextLines :
public ASN1CSeqOfList
{
protected:
   ASN1T_IVI_TextLines& msgData;
public:
   /**
    * Control class: ASN1C_IVI_TextLines
    * Data class:    ASN1T_IVI_TextLines
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_IVI_TextLines (ASN1T_IVI_TextLines& data);

   /**
    * Control class: ASN1C_IVI_TextLines<br/>
    * Data class: ASN1T_IVI_TextLines<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_IVI_TextLines (OSRTMessageBufferIF& msgBuf, ASN1T_IVI_TextLines& data);

   /**
    * Control class: ASN1C_IVI_TextLines<br/>
    * Data class: ASN1T_IVI_TextLines<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_IVI_TextLines (ASN1CType& ccobj, ASN1T_IVI_TextLines& data);

   virtual ~ASN1C_IVI_TextLines () {}

   /**
    * Data class: ASN1T_IVI_Text<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_IVI_Text* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_IVI_Text.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_IVI_Text* NewElement ();

   /**
    * Data class: ASN1T_IVI_Text.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_IVI_Text* AppendNewElement ();

private:
   ASN1C_IVI_TextLines& operator= (const ASN1C_IVI_TextLines&) {return *this;}
} ;

EXTERN int asn1PE_IVI_TextLines (OSCTXT* pctxt, ASN1T_IVI_TextLines* pvalue);

EXTERN int asn1PD_IVI_TextLines (OSCTXT* pctxt, ASN1T_IVI_TextLines* pvalue);

EXTERN int XmlEnc_IVI_TextLines (OSCTXT* pctxt, ASN1T_IVI_TextLines* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_TextLines (OSCTXT* pctxt, ASN1T_IVI_TextLines* pvalue);

EXTERN int asn1JsonEnc_IVI_TextLines (OSCTXT *pctxt, ASN1T_IVI_TextLines *pvalue);

EXTERN int asn1JsonDec_IVI_TextLines (OSCTXT *pctxt, ASN1T_IVI_TextLines *pvalue);

EXTERN int asn1PrtToStrm_IVI_TextLines (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_TextLines* pvalue);

EXTERN int asn1Init_IVI_TextLines (ASN1T_IVI_TextLines* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_TextLines (OSCTXT *pctxt, ASN1T_IVI_TextLines* pvalue);

/**************************************************************/
/*                                                            */
/*  TcPart                                                    */
/*                                                            */
/**************************************************************/
/*
TcPart ::= SEQUENCE {
   detectionZoneIds [0] ZoneIds OPTIONAL,
   relevanceZoneIds [1] ZoneIds,
   direction [2] Direction OPTIONAL,
   driverAwarenessZoneIds [3] ZoneIds OPTIONAL,
   minimumAwarenessTime [4] INTEGER (0..255) OPTIONAL,
   applicableLanes [5] LanePositions OPTIONAL,
   layoutId [6] INTEGER (1..4, ...) OPTIONAL,
   preStoredlayoutId [7] INTEGER (1..64, ...) OPTIONAL,
   text [8] TextLines OPTIONAL,
   data [9] OCTET STRING,
   ...,
   [[
      iviType [10] IviType,
      laneStatus [11] LaneStatus OPTIONAL,
      vehicleCharacteristics [12] VehicleCharacteristicsList OPTIONAL
   ]]
}
*/
struct EXTERN ASN1T_IVI_TcPart {
   struct {
      unsigned detectionZoneIdsPresent : 1;
      unsigned directionPresent : 1;
      unsigned driverAwarenessZoneIdsPresent : 1;
      unsigned minimumAwarenessTimePresent : 1;
      unsigned applicableLanesPresent : 1;
      unsigned layoutIdPresent : 1;
      unsigned preStoredlayoutIdPresent : 1;
      unsigned textPresent : 1;
      unsigned _v2ExtPresent : 1;
      unsigned laneStatusPresent : 1;
      unsigned vehicleCharacteristicsPresent : 1;
   } m;
   ASN1T_IVI_ZoneIds detectionZoneIds;
   ASN1T_IVI_ZoneIds relevanceZoneIds;
   ASN1T_IVI_Direction direction;
   ASN1T_IVI_ZoneIds driverAwarenessZoneIds;
   OSUINT8 minimumAwarenessTime;
   ASN1T_IVI_LanePositions applicableLanes;
   OSUINT32 layoutId;
   OSUINT32 preStoredlayoutId;
   ASN1T_IVI_TextLines text;
   ASN1TDynOctStr64 data;
   ASN1T_IVI_IviType iviType;
   ASN1T_IVI_LaneStatus laneStatus;
   ASN1T_IVI_VehicleCharacteristicsList vehicleCharacteristics;
   ASN1TSeqExt extElem1;
   ASN1T_IVI_TcPart ();
} ;

EXTERN int asn1PE_IVI_TcPart (OSCTXT* pctxt, ASN1T_IVI_TcPart* pvalue);

EXTERN int asn1PD_IVI_TcPart (OSCTXT* pctxt, ASN1T_IVI_TcPart* pvalue);

EXTERN int XmlEnc_IVI_TcPart (OSCTXT* pctxt, ASN1T_IVI_TcPart* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_TcPart (OSCTXT* pctxt, ASN1T_IVI_TcPart* pvalue);

EXTERN int asn1JsonEnc_IVI_TcPart (OSCTXT *pctxt, ASN1T_IVI_TcPart *pvalue);

EXTERN int asn1JsonDec_IVI_TcPart (OSCTXT *pctxt, ASN1T_IVI_TcPart *pvalue);

EXTERN int asn1PrtToStrm_IVI_TcPart (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_TcPart* pvalue);

EXTERN ASN1T_IVI_TcPart* new_ASN1T_IVI_TcPart (ASN1CType& ccobj);

EXTERN int asn1Init_IVI_TcPart (ASN1T_IVI_TcPart* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_TcPart (OSCTXT *pctxt, ASN1T_IVI_TcPart* pvalue);

/**************************************************************/
/*                                                            */
/*  TextContainer                                             */
/*                                                            */
/**************************************************************/
/*
TextContainer ::= SEQUENCE (SIZE (1..16, ...)) OF TcPart
*/
/* List of ASN1T_IVI_TcPart */
typedef ASN1TSeqOfList ASN1T_IVI_TextContainer;

class EXTERN ASN1C_IVI_TextContainer :
public ASN1CSeqOfList
{
protected:
   ASN1T_IVI_TextContainer& msgData;
public:
   /**
    * Control class: ASN1C_IVI_TextContainer
    * Data class:    ASN1T_IVI_TextContainer
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_IVI_TextContainer (ASN1T_IVI_TextContainer& data);

   /**
    * Control class: ASN1C_IVI_TextContainer<br/>
    * Data class: ASN1T_IVI_TextContainer<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_IVI_TextContainer (OSRTMessageBufferIF& msgBuf
      , ASN1T_IVI_TextContainer& data);

   /**
    * Control class: ASN1C_IVI_TextContainer<br/>
    * Data class: ASN1T_IVI_TextContainer<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_IVI_TextContainer (ASN1CType& ccobj, ASN1T_IVI_TextContainer& data);

   virtual ~ASN1C_IVI_TextContainer () {}

   /**
    * Data class: ASN1T_IVI_TcPart<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_IVI_TcPart* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_IVI_TcPart.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_IVI_TcPart* NewElement ();

   /**
    * Data class: ASN1T_IVI_TcPart.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_IVI_TcPart* AppendNewElement ();

private:
   ASN1C_IVI_TextContainer& operator= (const ASN1C_IVI_TextContainer&) {return *this;}
} ;

EXTERN int asn1PE_IVI_TextContainer (OSCTXT* pctxt, ASN1T_IVI_TextContainer* pvalue);

EXTERN int asn1PD_IVI_TextContainer (OSCTXT* pctxt, ASN1T_IVI_TextContainer* pvalue);

EXTERN int XmlEnc_IVI_TextContainer (OSCTXT* pctxt, 
   ASN1T_IVI_TextContainer* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_TextContainer (OSCTXT* pctxt, 
   ASN1T_IVI_TextContainer* pvalue);

EXTERN int asn1JsonEnc_IVI_TextContainer (OSCTXT *pctxt, ASN1T_IVI_TextContainer *pvalue);

EXTERN int asn1JsonDec_IVI_TextContainer (OSCTXT *pctxt, ASN1T_IVI_TextContainer *pvalue);

EXTERN int asn1PrtToStrm_IVI_TextContainer (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_TextContainer* pvalue);

EXTERN int asn1Init_IVI_TextContainer (ASN1T_IVI_TextContainer* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_TextContainer (OSCTXT *pctxt, 
   ASN1T_IVI_TextContainer* pvalue);

/**************************************************************/
/*                                                            */
/*  LayoutComponent_textScripting                             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'LayoutComponent'
*/
struct EXTERN IVI_LayoutComponent_textScripting {
   enum Root {
      horizontal = 0,
      vertical = 1
   } ;
} ;

typedef OSUINT8 ASN1T_IVI_LayoutComponent_textScripting;

EXTERN int asn1PE_IVI_LayoutComponent_textScripting (OSCTXT* pctxt, ASN1T_IVI_LayoutComponent_textScripting value);

EXTERN int asn1PD_IVI_LayoutComponent_textScripting (OSCTXT* pctxt, ASN1T_IVI_LayoutComponent_textScripting* pvalue);

EXTERN int XmlEnc_IVI_LayoutComponent_textScripting (OSCTXT* pctxt, 
   ASN1T_IVI_LayoutComponent_textScripting value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_LayoutComponent_textScripting (OSCTXT* pctxt, 
   ASN1T_IVI_LayoutComponent_textScripting* pvalue);

EXTERN int asn1JsonEnc_IVI_LayoutComponent_textScripting (OSCTXT *pctxt, ASN1T_IVI_LayoutComponent_textScripting *pvalue);

EXTERN int asn1JsonDec_IVI_LayoutComponent_textScripting (OSCTXT *pctxt, ASN1T_IVI_LayoutComponent_textScripting *pvalue);

EXTERN int asn1PrtToStrm_IVI_LayoutComponent_textScripting (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_LayoutComponent_textScripting* pvalue);

EXTERN ASN1T_IVI_LayoutComponent_textScripting* 
   new_ASN1T_IVI_LayoutComponent_textScripting (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  LayoutComponent                                           */
/*                                                            */
/**************************************************************/
/*
LayoutComponent ::= SEQUENCE {
   layoutComponentId [0] INTEGER (1..8, ...),
   height [1] INTEGER (10..73),
   width [2] INTEGER (10..265),
   x [3] INTEGER (10..265),
   y [4] INTEGER (10..73),
   textScripting [5] INTEGER { horizontal(0), vertical(1) } (0..1)
}
*/
struct EXTERN ASN1T_IVI_LayoutComponent {
   OSUINT32 layoutComponentId;
   OSUINT8 height;
   OSUINT16 width;
   OSUINT16 x;
   OSUINT8 y;
   ASN1T_IVI_LayoutComponent_textScripting textScripting;
} ;

EXTERN int asn1PE_IVI_LayoutComponent (OSCTXT* pctxt, ASN1T_IVI_LayoutComponent* pvalue);

EXTERN int asn1PD_IVI_LayoutComponent (OSCTXT* pctxt, ASN1T_IVI_LayoutComponent* pvalue);

EXTERN int XmlEnc_IVI_LayoutComponent (OSCTXT* pctxt, 
   ASN1T_IVI_LayoutComponent* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_LayoutComponent (OSCTXT* pctxt, 
   ASN1T_IVI_LayoutComponent* pvalue);

EXTERN int asn1JsonEnc_IVI_LayoutComponent (OSCTXT *pctxt, ASN1T_IVI_LayoutComponent *pvalue);

EXTERN int asn1JsonDec_IVI_LayoutComponent (OSCTXT *pctxt, ASN1T_IVI_LayoutComponent *pvalue);

EXTERN int asn1PrtToStrm_IVI_LayoutComponent (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_LayoutComponent* pvalue);

EXTERN ASN1T_IVI_LayoutComponent* 
   new_ASN1T_IVI_LayoutComponent (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  LayoutComponents                                          */
/*                                                            */
/**************************************************************/
/*
LayoutComponents ::= SEQUENCE (SIZE (1..4, ...)) OF LayoutComponent
*/
/* List of ASN1T_IVI_LayoutComponent */
typedef ASN1TSeqOfList ASN1T_IVI_LayoutComponents;

class EXTERN ASN1C_IVI_LayoutComponents :
public ASN1CSeqOfList
{
protected:
   ASN1T_IVI_LayoutComponents& msgData;
public:
   /**
    * Control class: ASN1C_IVI_LayoutComponents
    * Data class:    ASN1T_IVI_LayoutComponents
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_IVI_LayoutComponents (ASN1T_IVI_LayoutComponents& data);

   /**
    * Control class: ASN1C_IVI_LayoutComponents<br/>
    * Data class: ASN1T_IVI_LayoutComponents<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_IVI_LayoutComponents (OSRTMessageBufferIF& msgBuf
      , ASN1T_IVI_LayoutComponents& data);

   /**
    * Control class: ASN1C_IVI_LayoutComponents<br/>
    * Data class: ASN1T_IVI_LayoutComponents<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_IVI_LayoutComponents (ASN1CType& ccobj
      , ASN1T_IVI_LayoutComponents& data);

   virtual ~ASN1C_IVI_LayoutComponents () {}

   /**
    * Data class: ASN1T_IVI_LayoutComponent<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_IVI_LayoutComponent* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_IVI_LayoutComponent.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_IVI_LayoutComponent* NewElement ();

   /**
    * Data class: ASN1T_IVI_LayoutComponent.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_IVI_LayoutComponent* AppendNewElement ();

private:
   ASN1C_IVI_LayoutComponents& operator= (const ASN1C_IVI_LayoutComponents&) {return *this;}
} ;

EXTERN int asn1PE_IVI_LayoutComponents (OSCTXT* pctxt, ASN1T_IVI_LayoutComponents* pvalue);

EXTERN int asn1PD_IVI_LayoutComponents (OSCTXT* pctxt, ASN1T_IVI_LayoutComponents* pvalue);

EXTERN int XmlEnc_IVI_LayoutComponents (OSCTXT* pctxt, 
   ASN1T_IVI_LayoutComponents* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_LayoutComponents (OSCTXT* pctxt, 
   ASN1T_IVI_LayoutComponents* pvalue);

EXTERN int asn1JsonEnc_IVI_LayoutComponents (OSCTXT *pctxt, ASN1T_IVI_LayoutComponents *pvalue);

EXTERN int asn1JsonDec_IVI_LayoutComponents (OSCTXT *pctxt, ASN1T_IVI_LayoutComponents *pvalue);

EXTERN int asn1PrtToStrm_IVI_LayoutComponents (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_LayoutComponents* pvalue);

EXTERN int asn1Init_IVI_LayoutComponents (ASN1T_IVI_LayoutComponents* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_LayoutComponents (OSCTXT *pctxt, 
   ASN1T_IVI_LayoutComponents* pvalue);

/**************************************************************/
/*                                                            */
/*  LayoutContainer                                           */
/*                                                            */
/**************************************************************/
/*
LayoutContainer ::= SEQUENCE {
   layoutId [0] INTEGER (1..4, ...),
   height [1] INTEGER (10..73) OPTIONAL,
   width [2] INTEGER (10..265) OPTIONAL,
   layoutComponents [3] LayoutComponents,
   ...
}
*/
struct EXTERN ASN1T_IVI_LayoutContainer {
   struct {
      unsigned heightPresent : 1;
      unsigned widthPresent : 1;
   } m;
   OSUINT32 layoutId;
   OSUINT8 height;
   OSUINT16 width;
   ASN1T_IVI_LayoutComponents layoutComponents;
   ASN1TSeqExt extElem1;
   ASN1T_IVI_LayoutContainer ();
} ;

EXTERN int asn1PE_IVI_LayoutContainer (OSCTXT* pctxt, ASN1T_IVI_LayoutContainer* pvalue);

EXTERN int asn1PD_IVI_LayoutContainer (OSCTXT* pctxt, ASN1T_IVI_LayoutContainer* pvalue);

EXTERN int XmlEnc_IVI_LayoutContainer (OSCTXT* pctxt, 
   ASN1T_IVI_LayoutContainer* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_LayoutContainer (OSCTXT* pctxt, 
   ASN1T_IVI_LayoutContainer* pvalue);

EXTERN int asn1JsonEnc_IVI_LayoutContainer (OSCTXT *pctxt, ASN1T_IVI_LayoutContainer *pvalue);

EXTERN int asn1JsonDec_IVI_LayoutContainer (OSCTXT *pctxt, ASN1T_IVI_LayoutContainer *pvalue);

EXTERN int asn1PrtToStrm_IVI_LayoutContainer (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_LayoutContainer* pvalue);

EXTERN ASN1T_IVI_LayoutContainer* 
   new_ASN1T_IVI_LayoutContainer (ASN1CType& ccobj);

EXTERN int asn1Init_IVI_LayoutContainer (ASN1T_IVI_LayoutContainer* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_LayoutContainer (OSCTXT *pctxt, 
   ASN1T_IVI_LayoutContainer* pvalue);

/**************************************************************/
/*                                                            */
/*  PriorityLevel                                             */
/*                                                            */
/**************************************************************/
/*
PriorityLevel ::= INTEGER (0..2)
                                new DE in V2

*/
typedef OSUINT8 ASN1T_IVI_PriorityLevel;

EXTERN int asn1PE_IVI_PriorityLevel (OSCTXT* pctxt, ASN1T_IVI_PriorityLevel value);

EXTERN int asn1PD_IVI_PriorityLevel (OSCTXT* pctxt, ASN1T_IVI_PriorityLevel* pvalue);

EXTERN int XmlEnc_IVI_PriorityLevel (OSCTXT* pctxt, 
   ASN1T_IVI_PriorityLevel value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_PriorityLevel (OSCTXT* pctxt, 
   ASN1T_IVI_PriorityLevel* pvalue);

EXTERN int asn1JsonEnc_IVI_PriorityLevel (OSCTXT *pctxt, ASN1T_IVI_PriorityLevel *pvalue);

EXTERN int asn1JsonDec_IVI_PriorityLevel (OSCTXT *pctxt, ASN1T_IVI_PriorityLevel *pvalue);

EXTERN int asn1PrtToStrm_IVI_PriorityLevel (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_PriorityLevel* pvalue);

EXTERN ASN1T_IVI_PriorityLevel* new_ASN1T_IVI_PriorityLevel (ASN1CType& ccobj)
   ;

/**************************************************************/
/*                                                            */
/*  SaeAutomationLevel                                        */
/*                                                            */
/**************************************************************/
/*
SaeAutomationLevel ::= INTEGER (0..5)
                                      new DE in V2

*/
typedef OSUINT8 ASN1T_IVI_SaeAutomationLevel;

EXTERN int asn1PE_IVI_SaeAutomationLevel (OSCTXT* pctxt, ASN1T_IVI_SaeAutomationLevel value);

EXTERN int asn1PD_IVI_SaeAutomationLevel (OSCTXT* pctxt, ASN1T_IVI_SaeAutomationLevel* pvalue);

EXTERN int XmlEnc_IVI_SaeAutomationLevel (OSCTXT* pctxt, 
   ASN1T_IVI_SaeAutomationLevel value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_SaeAutomationLevel (OSCTXT* pctxt, 
   ASN1T_IVI_SaeAutomationLevel* pvalue);

EXTERN int asn1JsonEnc_IVI_SaeAutomationLevel (OSCTXT *pctxt, ASN1T_IVI_SaeAutomationLevel *pvalue);

EXTERN int asn1JsonDec_IVI_SaeAutomationLevel (OSCTXT *pctxt, ASN1T_IVI_SaeAutomationLevel *pvalue);

EXTERN int asn1PrtToStrm_IVI_SaeAutomationLevel (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_SaeAutomationLevel* pvalue);

EXTERN ASN1T_IVI_SaeAutomationLevel* 
   new_ASN1T_IVI_SaeAutomationLevel (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  SaeAutomationLevels                                       */
/*                                                            */
/**************************************************************/
/*
SaeAutomationLevels ::= SEQUENCE (SIZE (1..5)) OF SaeAutomationLevel
                                                                     new DF in V2

*/
typedef struct EXTERN ASN1T_IVI_SaeAutomationLevels {
   OSUINT8 n;
   ASN1T_IVI_SaeAutomationLevel elem[5];
   ASN1T_IVI_SaeAutomationLevels () : n(0) {}
} ASN1T_IVI_SaeAutomationLevels;

class EXTERN ASN1C_IVI_SaeAutomationLevels :
public ASN1CType
{
protected:
   ASN1T_IVI_SaeAutomationLevels& msgData;
public:
   /**
    * Control class: ASN1C_IVI_SaeAutomationLevels
    * Data class:    ASN1T_IVI_SaeAutomationLevels
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_IVI_SaeAutomationLevels (ASN1T_IVI_SaeAutomationLevels& data);

   /**
    * Control class: ASN1C_IVI_SaeAutomationLevels<br/>
    * Data class: ASN1T_IVI_SaeAutomationLevels<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_IVI_SaeAutomationLevels (OSRTMessageBufferIF& msgBuf
      , ASN1T_IVI_SaeAutomationLevels& data);

   /**
    * Control class: ASN1C_IVI_SaeAutomationLevels<br/>
    * Data class: ASN1T_IVI_SaeAutomationLevels<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_IVI_SaeAutomationLevels (ASN1CType& ccobj
      , ASN1T_IVI_SaeAutomationLevels& data);

   virtual ~ASN1C_IVI_SaeAutomationLevels () {}

private:
   ASN1C_IVI_SaeAutomationLevels& operator= (const ASN1C_IVI_SaeAutomationLevels&) {return *this;}
} ;

EXTERN int asn1PE_IVI_SaeAutomationLevels (OSCTXT* pctxt, ASN1T_IVI_SaeAutomationLevels* pvalue);

EXTERN int asn1PD_IVI_SaeAutomationLevels (OSCTXT* pctxt, ASN1T_IVI_SaeAutomationLevels* pvalue);

EXTERN int XmlEnc_IVI_SaeAutomationLevels (OSCTXT* pctxt, 
   ASN1T_IVI_SaeAutomationLevels* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_SaeAutomationLevels (OSCTXT* pctxt, 
   ASN1T_IVI_SaeAutomationLevels* pvalue);

EXTERN int asn1JsonEnc_IVI_SaeAutomationLevels (OSCTXT *pctxt, ASN1T_IVI_SaeAutomationLevels *pvalue);

EXTERN int asn1JsonDec_IVI_SaeAutomationLevels (OSCTXT *pctxt, ASN1T_IVI_SaeAutomationLevels *pvalue);

EXTERN int asn1PrtToStrm_IVI_SaeAutomationLevels (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_SaeAutomationLevels* pvalue);

EXTERN int asn1Init_IVI_SaeAutomationLevels (ASN1T_IVI_SaeAutomationLevels* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

/**************************************************************/
/*                                                            */
/*  GapBetweenVehicles                                        */
/*                                                            */
/**************************************************************/
/*
GapBetweenVehicles ::= INTEGER (0..255)
                                        new DE in V2

*/
typedef OSUINT8 ASN1T_IVI_GapBetweenVehicles;

EXTERN int asn1PE_IVI_GapBetweenVehicles (OSCTXT* pctxt, ASN1T_IVI_GapBetweenVehicles value);

EXTERN int asn1PD_IVI_GapBetweenVehicles (OSCTXT* pctxt, ASN1T_IVI_GapBetweenVehicles* pvalue);

EXTERN int XmlEnc_IVI_GapBetweenVehicles (OSCTXT* pctxt, 
   ASN1T_IVI_GapBetweenVehicles value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_GapBetweenVehicles (OSCTXT* pctxt, 
   ASN1T_IVI_GapBetweenVehicles* pvalue);

EXTERN int asn1JsonEnc_IVI_GapBetweenVehicles (OSCTXT *pctxt, ASN1T_IVI_GapBetweenVehicles *pvalue);

EXTERN int asn1JsonDec_IVI_GapBetweenVehicles (OSCTXT *pctxt, ASN1T_IVI_GapBetweenVehicles *pvalue);

EXTERN int asn1PrtToStrm_IVI_GapBetweenVehicles (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_GapBetweenVehicles* pvalue);

EXTERN ASN1T_IVI_GapBetweenVehicles* 
   new_ASN1T_IVI_GapBetweenVehicles (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  ConstraintTextLines2                                      */
/*                                                            */
/**************************************************************/
/*
ConstraintTextLines2 ::= SEQUENCE (SIZE (1..4, ...), ...) OF Text (WITH COMPONENTS {..., textContent SIZE (1..32)})
*/
/* List of ASN1T_IVI_Text */
typedef ASN1TSeqOfList ASN1T_IVI_ConstraintTextLines2;

class EXTERN ASN1C_IVI_ConstraintTextLines2 :
public ASN1CSeqOfList
{
protected:
   ASN1T_IVI_ConstraintTextLines2& msgData;
public:
   /**
    * Control class: ASN1C_IVI_ConstraintTextLines2
    * Data class:    ASN1T_IVI_ConstraintTextLines2
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_IVI_ConstraintTextLines2 (ASN1T_IVI_ConstraintTextLines2& data);

   /**
    * Control class: ASN1C_IVI_ConstraintTextLines2<br/>
    * Data class: ASN1T_IVI_ConstraintTextLines2<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_IVI_ConstraintTextLines2 (OSRTMessageBufferIF& msgBuf
      , ASN1T_IVI_ConstraintTextLines2& data);

   /**
    * Control class: ASN1C_IVI_ConstraintTextLines2<br/>
    * Data class: ASN1T_IVI_ConstraintTextLines2<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_IVI_ConstraintTextLines2 (ASN1CType& ccobj
      , ASN1T_IVI_ConstraintTextLines2& data);

   virtual ~ASN1C_IVI_ConstraintTextLines2 () {}

   /**
    * Data class: ASN1T_IVI_Text<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_IVI_Text* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_IVI_Text.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_IVI_Text* NewElement ();

   /**
    * Data class: ASN1T_IVI_Text.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_IVI_Text* AppendNewElement ();

private:
   ASN1C_IVI_ConstraintTextLines2& operator= (const ASN1C_IVI_ConstraintTextLines2&) {return *this;}
} ;

EXTERN int asn1PE_IVI_ConstraintTextLines2 (OSCTXT* pctxt, ASN1T_IVI_ConstraintTextLines2* pvalue);

EXTERN int asn1PD_IVI_ConstraintTextLines2 (OSCTXT* pctxt, ASN1T_IVI_ConstraintTextLines2* pvalue);

EXTERN int XmlEnc_IVI_ConstraintTextLines2 (OSCTXT* pctxt, 
   ASN1T_IVI_ConstraintTextLines2* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_ConstraintTextLines2 (OSCTXT* pctxt, 
   ASN1T_IVI_ConstraintTextLines2* pvalue);

EXTERN int asn1JsonEnc_IVI_ConstraintTextLines2 (OSCTXT *pctxt, ASN1T_IVI_ConstraintTextLines2 *pvalue);

EXTERN int asn1JsonDec_IVI_ConstraintTextLines2 (OSCTXT *pctxt, ASN1T_IVI_ConstraintTextLines2 *pvalue);

EXTERN int asn1PrtToStrm_IVI_ConstraintTextLines2 (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_ConstraintTextLines2* pvalue);

EXTERN int asn1Init_IVI_ConstraintTextLines2 (ASN1T_IVI_ConstraintTextLines2* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_ConstraintTextLines2 (OSCTXT *pctxt, 
   ASN1T_IVI_ConstraintTextLines2* pvalue);

/**************************************************************/
/*                                                            */
/*  AutomatedVehicleRule                                      */
/*                                                            */
/**************************************************************/
/*
AutomatedVehicleRule ::= SEQUENCE {
                                 -- new DF in V2
   priority [0] PriorityLevel,
   allowedSaeAutomationLevels [1] SaeAutomationLevels,
   minGapBetweenVehicles [2] GapBetweenVehicles OPTIONAL,
   recGapBetweenVehicles [3] GapBetweenVehicles OPTIONAL,
   automatedVehicleMaxSpeedLimit [4] SpeedValue OPTIONAL,
   automatedVehicleMinSpeedLimit [5] SpeedValue OPTIONAL,
   automatedVehicleSpeedRecommendation [6] SpeedValue OPTIONAL,
   roadSignCodes [7] RoadSignCodes OPTIONAL,
   extraText [8] ConstraintTextLines2 OPTIONAL,
   ...
}
*/
struct EXTERN ASN1T_IVI_AutomatedVehicleRule {
   struct {
      unsigned minGapBetweenVehiclesPresent : 1;
      unsigned recGapBetweenVehiclesPresent : 1;
      unsigned automatedVehicleMaxSpeedLimitPresent : 1;
      unsigned automatedVehicleMinSpeedLimitPresent : 1;
      unsigned automatedVehicleSpeedRecommendationPresent : 1;
      unsigned roadSignCodesPresent : 1;
      unsigned extraTextPresent : 1;
   } m;
   ASN1T_IVI_PriorityLevel priority;
   ASN1T_IVI_SaeAutomationLevels allowedSaeAutomationLevels;
   ASN1T_IVI_GapBetweenVehicles minGapBetweenVehicles;
   ASN1T_IVI_GapBetweenVehicles recGapBetweenVehicles;
   ASN1T_ITS_SpeedValue automatedVehicleMaxSpeedLimit;
   ASN1T_ITS_SpeedValue automatedVehicleMinSpeedLimit;
   ASN1T_ITS_SpeedValue automatedVehicleSpeedRecommendation;
   ASN1T_IVI_RoadSignCodes roadSignCodes;
   ASN1T_IVI_ConstraintTextLines2 extraText;
   ASN1TSeqExt extElem1;
   ASN1T_IVI_AutomatedVehicleRule ();
} ;

EXTERN int asn1PE_IVI_AutomatedVehicleRule (OSCTXT* pctxt, ASN1T_IVI_AutomatedVehicleRule* pvalue);

EXTERN int asn1PD_IVI_AutomatedVehicleRule (OSCTXT* pctxt, ASN1T_IVI_AutomatedVehicleRule* pvalue);

EXTERN int XmlEnc_IVI_AutomatedVehicleRule (OSCTXT* pctxt, 
   ASN1T_IVI_AutomatedVehicleRule* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_AutomatedVehicleRule (OSCTXT* pctxt, 
   ASN1T_IVI_AutomatedVehicleRule* pvalue);

EXTERN int asn1JsonEnc_IVI_AutomatedVehicleRule (OSCTXT *pctxt, ASN1T_IVI_AutomatedVehicleRule *pvalue);

EXTERN int asn1JsonDec_IVI_AutomatedVehicleRule (OSCTXT *pctxt, ASN1T_IVI_AutomatedVehicleRule *pvalue);

EXTERN int asn1PrtToStrm_IVI_AutomatedVehicleRule (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_AutomatedVehicleRule* pvalue);

EXTERN ASN1T_IVI_AutomatedVehicleRule* 
   new_ASN1T_IVI_AutomatedVehicleRule (ASN1CType& ccobj);

EXTERN int asn1Init_IVI_AutomatedVehicleRule (ASN1T_IVI_AutomatedVehicleRule* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_AutomatedVehicleRule (OSCTXT *pctxt, 
   ASN1T_IVI_AutomatedVehicleRule* pvalue);

/**************************************************************/
/*                                                            */
/*  AutomatedVehicleRules                                     */
/*                                                            */
/**************************************************************/
/*
AutomatedVehicleRules ::= SEQUENCE (SIZE (1..5)) OF AutomatedVehicleRule
                                                                          new DF in V2

*/
/* List of ASN1T_IVI_AutomatedVehicleRule */
typedef ASN1TSeqOfList ASN1T_IVI_AutomatedVehicleRules;

class EXTERN ASN1C_IVI_AutomatedVehicleRules :
public ASN1CSeqOfList
{
protected:
   ASN1T_IVI_AutomatedVehicleRules& msgData;
public:
   /**
    * Control class: ASN1C_IVI_AutomatedVehicleRules
    * Data class:    ASN1T_IVI_AutomatedVehicleRules
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_IVI_AutomatedVehicleRules (ASN1T_IVI_AutomatedVehicleRules& data);

   /**
    * Control class: ASN1C_IVI_AutomatedVehicleRules<br/>
    * Data class: ASN1T_IVI_AutomatedVehicleRules<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_IVI_AutomatedVehicleRules (OSRTMessageBufferIF& msgBuf
      , ASN1T_IVI_AutomatedVehicleRules& data);

   /**
    * Control class: ASN1C_IVI_AutomatedVehicleRules<br/>
    * Data class: ASN1T_IVI_AutomatedVehicleRules<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_IVI_AutomatedVehicleRules (ASN1CType& ccobj
      , ASN1T_IVI_AutomatedVehicleRules& data);

   virtual ~ASN1C_IVI_AutomatedVehicleRules () {}

   /**
    * Data class: ASN1T_IVI_AutomatedVehicleRule<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_IVI_AutomatedVehicleRule* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_IVI_AutomatedVehicleRule.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_IVI_AutomatedVehicleRule* NewElement ();

   /**
    * Data class: ASN1T_IVI_AutomatedVehicleRule.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_IVI_AutomatedVehicleRule* AppendNewElement ();

private:
   ASN1C_IVI_AutomatedVehicleRules& operator= (const ASN1C_IVI_AutomatedVehicleRules&) {return *this;}
} ;

EXTERN int asn1PE_IVI_AutomatedVehicleRules (OSCTXT* pctxt, ASN1T_IVI_AutomatedVehicleRules* pvalue);

EXTERN int asn1PD_IVI_AutomatedVehicleRules (OSCTXT* pctxt, ASN1T_IVI_AutomatedVehicleRules* pvalue);

EXTERN int XmlEnc_IVI_AutomatedVehicleRules (OSCTXT* pctxt, 
   ASN1T_IVI_AutomatedVehicleRules* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_AutomatedVehicleRules (OSCTXT* pctxt, 
   ASN1T_IVI_AutomatedVehicleRules* pvalue);

EXTERN int asn1JsonEnc_IVI_AutomatedVehicleRules (OSCTXT *pctxt, ASN1T_IVI_AutomatedVehicleRules *pvalue);

EXTERN int asn1JsonDec_IVI_AutomatedVehicleRules (OSCTXT *pctxt, ASN1T_IVI_AutomatedVehicleRules *pvalue);

EXTERN int asn1PrtToStrm_IVI_AutomatedVehicleRules (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_AutomatedVehicleRules* pvalue);

EXTERN int asn1Init_IVI_AutomatedVehicleRules (
   ASN1T_IVI_AutomatedVehicleRules* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_AutomatedVehicleRules (OSCTXT *pctxt, 
   ASN1T_IVI_AutomatedVehicleRules* pvalue);

/**************************************************************/
/*                                                            */
/*  MaxNoOfVehicles                                           */
/*                                                            */
/**************************************************************/
/*
MaxNoOfVehicles ::= INTEGER (2..64)
                                    new DE in V2

*/
typedef OSUINT8 ASN1T_IVI_MaxNoOfVehicles;

EXTERN int asn1PE_IVI_MaxNoOfVehicles (OSCTXT* pctxt, ASN1T_IVI_MaxNoOfVehicles value);

EXTERN int asn1PD_IVI_MaxNoOfVehicles (OSCTXT* pctxt, ASN1T_IVI_MaxNoOfVehicles* pvalue);

EXTERN int XmlEnc_IVI_MaxNoOfVehicles (OSCTXT* pctxt, 
   ASN1T_IVI_MaxNoOfVehicles value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_MaxNoOfVehicles (OSCTXT* pctxt, 
   ASN1T_IVI_MaxNoOfVehicles* pvalue);

EXTERN int asn1JsonEnc_IVI_MaxNoOfVehicles (OSCTXT *pctxt, ASN1T_IVI_MaxNoOfVehicles *pvalue);

EXTERN int asn1JsonDec_IVI_MaxNoOfVehicles (OSCTXT *pctxt, ASN1T_IVI_MaxNoOfVehicles *pvalue);

EXTERN int asn1PrtToStrm_IVI_MaxNoOfVehicles (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_MaxNoOfVehicles* pvalue);

EXTERN ASN1T_IVI_MaxNoOfVehicles* 
   new_ASN1T_IVI_MaxNoOfVehicles (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  MaxLenghtOfPlatoon                                        */
/*                                                            */
/**************************************************************/
/*
MaxLenghtOfPlatoon ::= INTEGER (1..64)
                                       new DE in V2

*/
typedef OSUINT8 ASN1T_IVI_MaxLenghtOfPlatoon;

EXTERN int asn1PE_IVI_MaxLenghtOfPlatoon (OSCTXT* pctxt, ASN1T_IVI_MaxLenghtOfPlatoon value);

EXTERN int asn1PD_IVI_MaxLenghtOfPlatoon (OSCTXT* pctxt, ASN1T_IVI_MaxLenghtOfPlatoon* pvalue);

EXTERN int XmlEnc_IVI_MaxLenghtOfPlatoon (OSCTXT* pctxt, 
   ASN1T_IVI_MaxLenghtOfPlatoon value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_MaxLenghtOfPlatoon (OSCTXT* pctxt, 
   ASN1T_IVI_MaxLenghtOfPlatoon* pvalue);

EXTERN int asn1JsonEnc_IVI_MaxLenghtOfPlatoon (OSCTXT *pctxt, ASN1T_IVI_MaxLenghtOfPlatoon *pvalue);

EXTERN int asn1JsonDec_IVI_MaxLenghtOfPlatoon (OSCTXT *pctxt, ASN1T_IVI_MaxLenghtOfPlatoon *pvalue);

EXTERN int asn1PrtToStrm_IVI_MaxLenghtOfPlatoon (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_MaxLenghtOfPlatoon* pvalue);

EXTERN ASN1T_IVI_MaxLenghtOfPlatoon* 
   new_ASN1T_IVI_MaxLenghtOfPlatoon (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  PlatooningRule                                            */
/*                                                            */
/**************************************************************/
/*
PlatooningRule ::= SEQUENCE {
                           -- new DF in V2
   priority [0] PriorityLevel,
   allowedSaeAutomationLevels [1] SaeAutomationLevels,
   maxNoOfVehicles [2] MaxNoOfVehicles OPTIONAL,
   maxLenghtOfPlatoon [3] MaxLenghtOfPlatoon OPTIONAL,
   minGapBetweenVehicles [4] GapBetweenVehicles OPTIONAL,
   platoonMaxSpeedLimit [5] SpeedValue OPTIONAL,
   platoonMinSpeedLimit [6] SpeedValue OPTIONAL,
   platoonSpeedRecommendation [7] SpeedValue OPTIONAL,
   roadSignCodes [8] RoadSignCodes OPTIONAL,
   extraText [9] ConstraintTextLines2 OPTIONAL,
   ...
}
*/
struct EXTERN ASN1T_IVI_PlatooningRule {
   struct {
      unsigned maxNoOfVehiclesPresent : 1;
      unsigned maxLenghtOfPlatoonPresent : 1;
      unsigned minGapBetweenVehiclesPresent : 1;
      unsigned platoonMaxSpeedLimitPresent : 1;
      unsigned platoonMinSpeedLimitPresent : 1;
      unsigned platoonSpeedRecommendationPresent : 1;
      unsigned roadSignCodesPresent : 1;
      unsigned extraTextPresent : 1;
   } m;
   ASN1T_IVI_PriorityLevel priority;
   ASN1T_IVI_SaeAutomationLevels allowedSaeAutomationLevels;
   ASN1T_IVI_MaxNoOfVehicles maxNoOfVehicles;
   ASN1T_IVI_MaxLenghtOfPlatoon maxLenghtOfPlatoon;
   ASN1T_IVI_GapBetweenVehicles minGapBetweenVehicles;
   ASN1T_ITS_SpeedValue platoonMaxSpeedLimit;
   ASN1T_ITS_SpeedValue platoonMinSpeedLimit;
   ASN1T_ITS_SpeedValue platoonSpeedRecommendation;
   ASN1T_IVI_RoadSignCodes roadSignCodes;
   ASN1T_IVI_ConstraintTextLines2 extraText;
   ASN1TSeqExt extElem1;
   ASN1T_IVI_PlatooningRule ();
} ;

EXTERN int asn1PE_IVI_PlatooningRule (OSCTXT* pctxt, ASN1T_IVI_PlatooningRule* pvalue);

EXTERN int asn1PD_IVI_PlatooningRule (OSCTXT* pctxt, ASN1T_IVI_PlatooningRule* pvalue);

EXTERN int XmlEnc_IVI_PlatooningRule (OSCTXT* pctxt, 
   ASN1T_IVI_PlatooningRule* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_PlatooningRule (OSCTXT* pctxt, 
   ASN1T_IVI_PlatooningRule* pvalue);

EXTERN int asn1JsonEnc_IVI_PlatooningRule (OSCTXT *pctxt, ASN1T_IVI_PlatooningRule *pvalue);

EXTERN int asn1JsonDec_IVI_PlatooningRule (OSCTXT *pctxt, ASN1T_IVI_PlatooningRule *pvalue);

EXTERN int asn1PrtToStrm_IVI_PlatooningRule (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_PlatooningRule* pvalue);

EXTERN ASN1T_IVI_PlatooningRule* 
   new_ASN1T_IVI_PlatooningRule (ASN1CType& ccobj);

EXTERN int asn1Init_IVI_PlatooningRule (ASN1T_IVI_PlatooningRule* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_PlatooningRule (OSCTXT *pctxt, 
   ASN1T_IVI_PlatooningRule* pvalue);

/**************************************************************/
/*                                                            */
/*  PlatooningRules                                           */
/*                                                            */
/**************************************************************/
/*
PlatooningRules ::= SEQUENCE (SIZE (1..5)) OF PlatooningRule
                                                             new DF in V2

*/
/* List of ASN1T_IVI_PlatooningRule */
typedef ASN1TSeqOfList ASN1T_IVI_PlatooningRules;

class EXTERN ASN1C_IVI_PlatooningRules :
public ASN1CSeqOfList
{
protected:
   ASN1T_IVI_PlatooningRules& msgData;
public:
   /**
    * Control class: ASN1C_IVI_PlatooningRules
    * Data class:    ASN1T_IVI_PlatooningRules
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_IVI_PlatooningRules (ASN1T_IVI_PlatooningRules& data);

   /**
    * Control class: ASN1C_IVI_PlatooningRules<br/>
    * Data class: ASN1T_IVI_PlatooningRules<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_IVI_PlatooningRules (OSRTMessageBufferIF& msgBuf
      , ASN1T_IVI_PlatooningRules& data);

   /**
    * Control class: ASN1C_IVI_PlatooningRules<br/>
    * Data class: ASN1T_IVI_PlatooningRules<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_IVI_PlatooningRules (ASN1CType& ccobj, ASN1T_IVI_PlatooningRules& data
      );

   virtual ~ASN1C_IVI_PlatooningRules () {}

   /**
    * Data class: ASN1T_IVI_PlatooningRule<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_IVI_PlatooningRule* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_IVI_PlatooningRule.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_IVI_PlatooningRule* NewElement ();

   /**
    * Data class: ASN1T_IVI_PlatooningRule.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_IVI_PlatooningRule* AppendNewElement ();

private:
   ASN1C_IVI_PlatooningRules& operator= (const ASN1C_IVI_PlatooningRules&) {return *this;}
} ;

EXTERN int asn1PE_IVI_PlatooningRules (OSCTXT* pctxt, ASN1T_IVI_PlatooningRules* pvalue);

EXTERN int asn1PD_IVI_PlatooningRules (OSCTXT* pctxt, ASN1T_IVI_PlatooningRules* pvalue);

EXTERN int XmlEnc_IVI_PlatooningRules (OSCTXT* pctxt, 
   ASN1T_IVI_PlatooningRules* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_PlatooningRules (OSCTXT* pctxt, 
   ASN1T_IVI_PlatooningRules* pvalue);

EXTERN int asn1JsonEnc_IVI_PlatooningRules (OSCTXT *pctxt, ASN1T_IVI_PlatooningRules *pvalue);

EXTERN int asn1JsonDec_IVI_PlatooningRules (OSCTXT *pctxt, ASN1T_IVI_PlatooningRules *pvalue);

EXTERN int asn1PrtToStrm_IVI_PlatooningRules (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_PlatooningRules* pvalue);

EXTERN int asn1Init_IVI_PlatooningRules (ASN1T_IVI_PlatooningRules* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_PlatooningRules (OSCTXT *pctxt, 
   ASN1T_IVI_PlatooningRules* pvalue);

/**************************************************************/
/*                                                            */
/*  AvcPart                                                   */
/*                                                            */
/**************************************************************/
/*
AvcPart ::= SEQUENCE {
                    -- new container part in V2
   detectionZoneIds [0] ZoneIds OPTIONAL,
   relevanceZoneIds [1] ZoneIds,
   direction [2] Direction OPTIONAL,
   applicableLanes [3] LanePositions OPTIONAL,
   vehicleCharacteristics [4] VehicleCharacteristicsList OPTIONAL,
   automatedVehicleRules [5] AutomatedVehicleRules OPTIONAL,
   platooningRules [6] PlatooningRules OPTIONAL,
   ...
}
*/
struct EXTERN ASN1T_IVI_AvcPart {
   struct {
      unsigned detectionZoneIdsPresent : 1;
      unsigned directionPresent : 1;
      unsigned applicableLanesPresent : 1;
      unsigned vehicleCharacteristicsPresent : 1;
      unsigned automatedVehicleRulesPresent : 1;
      unsigned platooningRulesPresent : 1;
   } m;
   ASN1T_IVI_ZoneIds detectionZoneIds;
   ASN1T_IVI_ZoneIds relevanceZoneIds;
   ASN1T_IVI_Direction direction;
   ASN1T_IVI_LanePositions applicableLanes;
   ASN1T_IVI_VehicleCharacteristicsList vehicleCharacteristics;
   ASN1T_IVI_AutomatedVehicleRules automatedVehicleRules;
   ASN1T_IVI_PlatooningRules platooningRules;
   ASN1TSeqExt extElem1;
   ASN1T_IVI_AvcPart ();
} ;

EXTERN int asn1PE_IVI_AvcPart (OSCTXT* pctxt, ASN1T_IVI_AvcPart* pvalue);

EXTERN int asn1PD_IVI_AvcPart (OSCTXT* pctxt, ASN1T_IVI_AvcPart* pvalue);

EXTERN int XmlEnc_IVI_AvcPart (OSCTXT* pctxt, ASN1T_IVI_AvcPart* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_AvcPart (OSCTXT* pctxt, ASN1T_IVI_AvcPart* pvalue);

EXTERN int asn1JsonEnc_IVI_AvcPart (OSCTXT *pctxt, ASN1T_IVI_AvcPart *pvalue);

EXTERN int asn1JsonDec_IVI_AvcPart (OSCTXT *pctxt, ASN1T_IVI_AvcPart *pvalue);

EXTERN int asn1PrtToStrm_IVI_AvcPart (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_AvcPart* pvalue);

EXTERN ASN1T_IVI_AvcPart* new_ASN1T_IVI_AvcPart (ASN1CType& ccobj);

EXTERN int asn1Init_IVI_AvcPart (ASN1T_IVI_AvcPart* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_AvcPart (OSCTXT *pctxt, ASN1T_IVI_AvcPart* pvalue);

/**************************************************************/
/*                                                            */
/*  AutomatedVehicleContainer                                 */
/*                                                            */
/**************************************************************/
/*
AutomatedVehicleContainer ::= SEQUENCE (SIZE (1..16, ...)) OF AvcPart
                                                                     new container in V2

*/
/* List of ASN1T_IVI_AvcPart */
typedef ASN1TSeqOfList ASN1T_IVI_AutomatedVehicleContainer;

class EXTERN ASN1C_IVI_AutomatedVehicleContainer :
public ASN1CSeqOfList
{
protected:
   ASN1T_IVI_AutomatedVehicleContainer& msgData;
public:
   /**
    * Control class: ASN1C_IVI_AutomatedVehicleContainer
    * Data class:    ASN1T_IVI_AutomatedVehicleContainer
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_IVI_AutomatedVehicleContainer
       (ASN1T_IVI_AutomatedVehicleContainer& data);

   /**
    * Control class: ASN1C_IVI_AutomatedVehicleContainer<br/>
    * Data class: ASN1T_IVI_AutomatedVehicleContainer<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_IVI_AutomatedVehicleContainer (OSRTMessageBufferIF& msgBuf
      , ASN1T_IVI_AutomatedVehicleContainer& data);

   /**
    * Control class: ASN1C_IVI_AutomatedVehicleContainer<br/>
    * Data class: ASN1T_IVI_AutomatedVehicleContainer<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_IVI_AutomatedVehicleContainer (ASN1CType& ccobj
      , ASN1T_IVI_AutomatedVehicleContainer& data);

   virtual ~ASN1C_IVI_AutomatedVehicleContainer () {}

   /**
    * Data class: ASN1T_IVI_AvcPart<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_IVI_AvcPart* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_IVI_AvcPart.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_IVI_AvcPart* NewElement ();

   /**
    * Data class: ASN1T_IVI_AvcPart.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_IVI_AvcPart* AppendNewElement ();

private:
   ASN1C_IVI_AutomatedVehicleContainer& operator= (const ASN1C_IVI_AutomatedVehicleContainer&) {return *this;}
} ;

EXTERN int asn1PE_IVI_AutomatedVehicleContainer (OSCTXT* pctxt, ASN1T_IVI_AutomatedVehicleContainer* pvalue);

EXTERN int asn1PD_IVI_AutomatedVehicleContainer (OSCTXT* pctxt, ASN1T_IVI_AutomatedVehicleContainer* pvalue);

EXTERN int XmlEnc_IVI_AutomatedVehicleContainer (OSCTXT* pctxt, 
   ASN1T_IVI_AutomatedVehicleContainer* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_AutomatedVehicleContainer (OSCTXT* pctxt, 
   ASN1T_IVI_AutomatedVehicleContainer* pvalue);

EXTERN int asn1JsonEnc_IVI_AutomatedVehicleContainer (OSCTXT *pctxt, ASN1T_IVI_AutomatedVehicleContainer *pvalue);

EXTERN int asn1JsonDec_IVI_AutomatedVehicleContainer (OSCTXT *pctxt, ASN1T_IVI_AutomatedVehicleContainer *pvalue);

EXTERN int asn1PrtToStrm_IVI_AutomatedVehicleContainer (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_AutomatedVehicleContainer* pvalue);

EXTERN int asn1Init_IVI_AutomatedVehicleContainer (
   ASN1T_IVI_AutomatedVehicleContainer* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_AutomatedVehicleContainer (OSCTXT *pctxt, 
   ASN1T_IVI_AutomatedVehicleContainer* pvalue);

/**************************************************************/
/*                                                            */
/*  MapReference                                              */
/*                                                            */
/**************************************************************/
/*
MapReference ::= CHOICE {
                       -- new DF in V2
   roadsegment [0] RoadSegmentReferenceID,
   intersection [1] IntersectionReferenceID
}
*/
/* Choice tag constants */

#define T_IVI_MapReference_roadsegment  1
#define T_IVI_MapReference_intersection 2

struct EXTERN ASN1T_IVI_MapReference {
   OSINT32 t;
   union {
      /* t = 1 */
      ASN1T_ETSI_DSRC_RoadSegmentReferenceID *roadsegment;
      /* t = 2 */
      ASN1T_ETSI_DSRC_IntersectionReferenceID *intersection;
   } u;
   ASN1T_IVI_MapReference () { t = 0; OSCRTLMEMSET (&u, 0, sizeof(u)); }
} ;

EXTERN int asn1PE_IVI_MapReference (OSCTXT* pctxt, ASN1T_IVI_MapReference* pvalue);

EXTERN int asn1PD_IVI_MapReference (OSCTXT* pctxt, ASN1T_IVI_MapReference* pvalue);

EXTERN int XmlEnc_IVI_MapReference (OSCTXT* pctxt, 
   ASN1T_IVI_MapReference* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_MapReference (OSCTXT* pctxt, 
   ASN1T_IVI_MapReference* pvalue);

EXTERN int asn1JsonEnc_IVI_MapReference (OSCTXT *pctxt, ASN1T_IVI_MapReference *pvalue);

EXTERN int asn1JsonDec_IVI_MapReference (OSCTXT *pctxt, ASN1T_IVI_MapReference *pvalue);

EXTERN int asn1PrtToStrm_IVI_MapReference (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_MapReference* pvalue);

EXTERN ASN1T_IVI_MapReference* new_ASN1T_IVI_MapReference (ASN1CType& ccobj);

EXTERN int asn1Init_IVI_MapReference (ASN1T_IVI_MapReference* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_MapReference (OSCTXT *pctxt, ASN1T_IVI_MapReference* pvalue);

/**************************************************************/
/*                                                            */
/*  LaneIds                                                   */
/*                                                            */
/**************************************************************/
/*
LaneIds ::= SEQUENCE (SIZE (1..16, ...)) OF LaneID
*/
typedef struct EXTERN ASN1T_IVI_LaneIds {
   OSSIZE n;
   ASN1T_ETSI_DSRC_LaneID *elem;
   ASN1T_IVI_LaneIds () : n(0), elem(0) {}
} ASN1T_IVI_LaneIds;

class EXTERN ASN1C_IVI_LaneIds :
public ASN1CType
{
protected:
   ASN1T_IVI_LaneIds& msgData;
public:
   /**
    * Control class: ASN1C_IVI_LaneIds
    * Data class:    ASN1T_IVI_LaneIds
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_IVI_LaneIds (ASN1T_IVI_LaneIds& data);

   /**
    * Control class: ASN1C_IVI_LaneIds<br/>
    * Data class: ASN1T_IVI_LaneIds<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_IVI_LaneIds (OSRTMessageBufferIF& msgBuf, ASN1T_IVI_LaneIds& data);

   /**
    * Control class: ASN1C_IVI_LaneIds<br/>
    * Data class: ASN1T_IVI_LaneIds<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_IVI_LaneIds (ASN1CType& ccobj, ASN1T_IVI_LaneIds& data);

   virtual ~ASN1C_IVI_LaneIds () {}

private:
   ASN1C_IVI_LaneIds& operator= (const ASN1C_IVI_LaneIds&) {return *this;}
} ;

EXTERN int asn1PE_IVI_LaneIds (OSCTXT* pctxt, ASN1T_IVI_LaneIds* pvalue);

EXTERN int asn1PD_IVI_LaneIds (OSCTXT* pctxt, ASN1T_IVI_LaneIds* pvalue);

EXTERN int XmlEnc_IVI_LaneIds (OSCTXT* pctxt, ASN1T_IVI_LaneIds* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_LaneIds (OSCTXT* pctxt, ASN1T_IVI_LaneIds* pvalue);

EXTERN int asn1JsonEnc_IVI_LaneIds (OSCTXT *pctxt, ASN1T_IVI_LaneIds *pvalue);

EXTERN int asn1JsonDec_IVI_LaneIds (OSCTXT *pctxt, ASN1T_IVI_LaneIds *pvalue);

EXTERN int asn1PrtToStrm_IVI_LaneIds (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_LaneIds* pvalue);

EXTERN int asn1Init_IVI_LaneIds (ASN1T_IVI_LaneIds* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_LaneIds (OSCTXT *pctxt, ASN1T_IVI_LaneIds* pvalue);

/**************************************************************/
/*                                                            */
/*  MlcPart                                                   */
/*                                                            */
/**************************************************************/
/*
MlcPart ::= SEQUENCE {
                   -- new container part in V2
   zoneId [0] Zid,
   laneIds [1] LaneIds OPTIONAL
}
*/
struct EXTERN ASN1T_IVI_MlcPart {
   struct {
      unsigned laneIdsPresent : 1;
   } m;
   ASN1T_IVI_Zid zoneId;
   ASN1T_IVI_LaneIds laneIds;
   ASN1T_IVI_MlcPart ();
} ;

EXTERN int asn1PE_IVI_MlcPart (OSCTXT* pctxt, ASN1T_IVI_MlcPart* pvalue);

EXTERN int asn1PD_IVI_MlcPart (OSCTXT* pctxt, ASN1T_IVI_MlcPart* pvalue);

EXTERN int XmlEnc_IVI_MlcPart (OSCTXT* pctxt, ASN1T_IVI_MlcPart* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_MlcPart (OSCTXT* pctxt, ASN1T_IVI_MlcPart* pvalue);

EXTERN int asn1JsonEnc_IVI_MlcPart (OSCTXT *pctxt, ASN1T_IVI_MlcPart *pvalue);

EXTERN int asn1JsonDec_IVI_MlcPart (OSCTXT *pctxt, ASN1T_IVI_MlcPart *pvalue);

EXTERN int asn1PrtToStrm_IVI_MlcPart (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_MlcPart* pvalue);

EXTERN ASN1T_IVI_MlcPart* new_ASN1T_IVI_MlcPart (ASN1CType& ccobj);

EXTERN int asn1Init_IVI_MlcPart (ASN1T_IVI_MlcPart* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_MlcPart (OSCTXT *pctxt, ASN1T_IVI_MlcPart* pvalue);

/**************************************************************/
/*                                                            */
/*  MlcParts                                                  */
/*                                                            */
/**************************************************************/
/*
MlcParts ::= SEQUENCE (SIZE (1..16, ...)) OF MlcPart
                                                    new container part in V2

*/
/* List of ASN1T_IVI_MlcPart */
typedef ASN1TSeqOfList ASN1T_IVI_MlcParts;

class EXTERN ASN1C_IVI_MlcParts :
public ASN1CSeqOfList
{
protected:
   ASN1T_IVI_MlcParts& msgData;
public:
   /**
    * Control class: ASN1C_IVI_MlcParts
    * Data class:    ASN1T_IVI_MlcParts
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_IVI_MlcParts (ASN1T_IVI_MlcParts& data);

   /**
    * Control class: ASN1C_IVI_MlcParts<br/>
    * Data class: ASN1T_IVI_MlcParts<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_IVI_MlcParts (OSRTMessageBufferIF& msgBuf, ASN1T_IVI_MlcParts& data);

   /**
    * Control class: ASN1C_IVI_MlcParts<br/>
    * Data class: ASN1T_IVI_MlcParts<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_IVI_MlcParts (ASN1CType& ccobj, ASN1T_IVI_MlcParts& data);

   virtual ~ASN1C_IVI_MlcParts () {}

   /**
    * Data class: ASN1T_IVI_MlcPart<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_IVI_MlcPart* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_IVI_MlcPart.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_IVI_MlcPart* NewElement ();

   /**
    * Data class: ASN1T_IVI_MlcPart.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_IVI_MlcPart* AppendNewElement ();

private:
   ASN1C_IVI_MlcParts& operator= (const ASN1C_IVI_MlcParts&) {return *this;}
} ;

EXTERN int asn1PE_IVI_MlcParts (OSCTXT* pctxt, ASN1T_IVI_MlcParts* pvalue);

EXTERN int asn1PD_IVI_MlcParts (OSCTXT* pctxt, ASN1T_IVI_MlcParts* pvalue);

EXTERN int XmlEnc_IVI_MlcParts (OSCTXT* pctxt, ASN1T_IVI_MlcParts* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_MlcParts (OSCTXT* pctxt, ASN1T_IVI_MlcParts* pvalue);

EXTERN int asn1JsonEnc_IVI_MlcParts (OSCTXT *pctxt, ASN1T_IVI_MlcParts *pvalue);

EXTERN int asn1JsonDec_IVI_MlcParts (OSCTXT *pctxt, ASN1T_IVI_MlcParts *pvalue);

EXTERN int asn1PrtToStrm_IVI_MlcParts (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_MlcParts* pvalue);

EXTERN int asn1Init_IVI_MlcParts (ASN1T_IVI_MlcParts* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_MlcParts (OSCTXT *pctxt, ASN1T_IVI_MlcParts* pvalue);

/**************************************************************/
/*                                                            */
/*  MapLocationContainer                                      */
/*                                                            */
/**************************************************************/
/*
MapLocationContainer ::= SEQUENCE {
                               -- new container in V2
   reference [0] EXPLICIT MapReference,
   parts [1] MlcParts
}
*/
struct EXTERN ASN1T_IVI_MapLocationContainer {
   ASN1T_IVI_MapReference reference;
   ASN1T_IVI_MlcParts parts;
} ;

EXTERN int asn1PE_IVI_MapLocationContainer (OSCTXT* pctxt, ASN1T_IVI_MapLocationContainer* pvalue);

EXTERN int asn1PD_IVI_MapLocationContainer (OSCTXT* pctxt, ASN1T_IVI_MapLocationContainer* pvalue);

EXTERN int XmlEnc_IVI_MapLocationContainer (OSCTXT* pctxt, 
   ASN1T_IVI_MapLocationContainer* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_MapLocationContainer (OSCTXT* pctxt, 
   ASN1T_IVI_MapLocationContainer* pvalue);

EXTERN int asn1JsonEnc_IVI_MapLocationContainer (OSCTXT *pctxt, ASN1T_IVI_MapLocationContainer *pvalue);

EXTERN int asn1JsonDec_IVI_MapLocationContainer (OSCTXT *pctxt, ASN1T_IVI_MapLocationContainer *pvalue);

EXTERN int asn1PrtToStrm_IVI_MapLocationContainer (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_MapLocationContainer* pvalue);

EXTERN ASN1T_IVI_MapLocationContainer* 
   new_ASN1T_IVI_MapLocationContainer (ASN1CType& ccobj);

EXTERN int asn1Init_IVI_MapLocationContainer (ASN1T_IVI_MapLocationContainer* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_MapLocationContainer (OSCTXT *pctxt, 
   ASN1T_IVI_MapLocationContainer* pvalue);

/**************************************************************/
/*                                                            */
/*  RscPart                                                   */
/*                                                            */
/**************************************************************/
/*
RscPart ::= SEQUENCE {
   detectionZoneIds [0] ZoneIds OPTIONAL,
   relevanceZoneIds [1] ZoneIds,
   direction [2] Direction OPTIONAL,
   roadSurfaceStaticCharacteristics [3] RoadSurfaceStaticCharacteristics OPTIONAL,
   roadSurfaceDynamicCharacteristics [4] RoadSurfaceDynamicCharacteristics OPTIONAL
}
*/
struct EXTERN ASN1T_IVI_RscPart {
   struct {
      unsigned detectionZoneIdsPresent : 1;
      unsigned directionPresent : 1;
      unsigned roadSurfaceStaticCharacteristicsPresent : 1;
      unsigned roadSurfaceDynamicCharacteristicsPresent : 1;
   } m;
   ASN1T_IVI_ZoneIds detectionZoneIds;
   ASN1T_IVI_ZoneIds relevanceZoneIds;
   ASN1T_IVI_Direction direction;
   ASN1T_IVI_RoadSurfaceStaticCharacteristics roadSurfaceStaticCharacteristics;
   ASN1T_IVI_RoadSurfaceDynamicCharacteristics roadSurfaceDynamicCharacteristics;
   ASN1T_IVI_RscPart ();
} ;

EXTERN int asn1PE_IVI_RscPart (OSCTXT* pctxt, ASN1T_IVI_RscPart* pvalue);

EXTERN int asn1PD_IVI_RscPart (OSCTXT* pctxt, ASN1T_IVI_RscPart* pvalue);

EXTERN int XmlEnc_IVI_RscPart (OSCTXT* pctxt, ASN1T_IVI_RscPart* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_RscPart (OSCTXT* pctxt, ASN1T_IVI_RscPart* pvalue);

EXTERN int asn1JsonEnc_IVI_RscPart (OSCTXT *pctxt, ASN1T_IVI_RscPart *pvalue);

EXTERN int asn1JsonDec_IVI_RscPart (OSCTXT *pctxt, ASN1T_IVI_RscPart *pvalue);

EXTERN int asn1PrtToStrm_IVI_RscPart (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_RscPart* pvalue);

EXTERN ASN1T_IVI_RscPart* new_ASN1T_IVI_RscPart (ASN1CType& ccobj);

EXTERN int asn1Init_IVI_RscPart (ASN1T_IVI_RscPart* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_RscPart (OSCTXT *pctxt, ASN1T_IVI_RscPart* pvalue);

/**************************************************************/
/*                                                            */
/*  RoadSurfaceContainer                                      */
/*                                                            */
/**************************************************************/
/*
RoadSurfaceContainer ::= SEQUENCE (SIZE (1..16, ...)) OF RscPart
*/
/* List of ASN1T_IVI_RscPart */
typedef ASN1TSeqOfList ASN1T_IVI_RoadSurfaceContainer;

class EXTERN ASN1C_IVI_RoadSurfaceContainer :
public ASN1CSeqOfList
{
protected:
   ASN1T_IVI_RoadSurfaceContainer& msgData;
public:
   /**
    * Control class: ASN1C_IVI_RoadSurfaceContainer
    * Data class:    ASN1T_IVI_RoadSurfaceContainer
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_IVI_RoadSurfaceContainer (ASN1T_IVI_RoadSurfaceContainer& data);

   /**
    * Control class: ASN1C_IVI_RoadSurfaceContainer<br/>
    * Data class: ASN1T_IVI_RoadSurfaceContainer<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_IVI_RoadSurfaceContainer (OSRTMessageBufferIF& msgBuf
      , ASN1T_IVI_RoadSurfaceContainer& data);

   /**
    * Control class: ASN1C_IVI_RoadSurfaceContainer<br/>
    * Data class: ASN1T_IVI_RoadSurfaceContainer<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_IVI_RoadSurfaceContainer (ASN1CType& ccobj
      , ASN1T_IVI_RoadSurfaceContainer& data);

   virtual ~ASN1C_IVI_RoadSurfaceContainer () {}

   /**
    * Data class: ASN1T_IVI_RscPart<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_IVI_RscPart* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_IVI_RscPart.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_IVI_RscPart* NewElement ();

   /**
    * Data class: ASN1T_IVI_RscPart.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_IVI_RscPart* AppendNewElement ();

private:
   ASN1C_IVI_RoadSurfaceContainer& operator= (const ASN1C_IVI_RoadSurfaceContainer&) {return *this;}
} ;

EXTERN int asn1PE_IVI_RoadSurfaceContainer (OSCTXT* pctxt, ASN1T_IVI_RoadSurfaceContainer* pvalue);

EXTERN int asn1PD_IVI_RoadSurfaceContainer (OSCTXT* pctxt, ASN1T_IVI_RoadSurfaceContainer* pvalue);

EXTERN int XmlEnc_IVI_RoadSurfaceContainer (OSCTXT* pctxt, 
   ASN1T_IVI_RoadSurfaceContainer* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_RoadSurfaceContainer (OSCTXT* pctxt, 
   ASN1T_IVI_RoadSurfaceContainer* pvalue);

EXTERN int asn1JsonEnc_IVI_RoadSurfaceContainer (OSCTXT *pctxt, ASN1T_IVI_RoadSurfaceContainer *pvalue);

EXTERN int asn1JsonDec_IVI_RoadSurfaceContainer (OSCTXT *pctxt, ASN1T_IVI_RoadSurfaceContainer *pvalue);

EXTERN int asn1PrtToStrm_IVI_RoadSurfaceContainer (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_RoadSurfaceContainer* pvalue);

EXTERN int asn1Init_IVI_RoadSurfaceContainer (ASN1T_IVI_RoadSurfaceContainer* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_RoadSurfaceContainer (OSCTXT *pctxt, 
   ASN1T_IVI_RoadSurfaceContainer* pvalue);

/**************************************************************/
/*                                                            */
/*  IviContainer                                              */
/*                                                            */
/**************************************************************/
/*
Definition of Containers
IviContainer ::= CHOICE {
   glc [0] GeographicLocationContainer,
   giv [1] GeneralIviContainer,
   rcc [2] RoadConfigurationContainer,
   tc [3] TextContainer,
   lac [4] LayoutContainer,
 -- Extension in V2
   ...,
   avc [5] AutomatedVehicleContainer,
   mlc [6] MapLocationContainer,
   rsc [7] RoadSurfaceContainer
}
*/
/* Choice tag constants */

#define T_IVI_IviContainer_glc          1
#define T_IVI_IviContainer_giv          2
#define T_IVI_IviContainer_rcc          3
#define T_IVI_IviContainer_tc           4
#define T_IVI_IviContainer_lac          5
#define T_IVI_IviContainer_avc          6
#define T_IVI_IviContainer_mlc          7
#define T_IVI_IviContainer_rsc          8
#define T_IVI_IviContainer_extElem1     9

struct EXTERN ASN1T_IVI_IviContainer {
   OSINT32 t;
   union {
      /* t = 1 */
      ASN1T_IVI_GeographicLocationContainer *glc;
      /* t = 2 */
      ASN1T_IVI_GeneralIviContainer *giv;
      /* t = 3 */
      ASN1T_IVI_RoadConfigurationContainer *rcc;
      /* t = 4 */
      ASN1T_IVI_TextContainer *tc;
      /* t = 5 */
      ASN1T_IVI_LayoutContainer *lac;
      /* t = 6 */
      ASN1T_IVI_AutomatedVehicleContainer *avc;
      /* t = 7 */
      ASN1T_IVI_MapLocationContainer *mlc;
      /* t = 8 */
      ASN1T_IVI_RoadSurfaceContainer *rsc;
      /* t = 9 */
      ASN1TOpenType *extElem1;
   } u;
   ASN1T_IVI_IviContainer () { t = 0; OSCRTLMEMSET (&u, 0, sizeof(u)); }
} ;

EXTERN int asn1PE_IVI_IviContainer (OSCTXT* pctxt, ASN1T_IVI_IviContainer* pvalue);

EXTERN int asn1PD_IVI_IviContainer (OSCTXT* pctxt, ASN1T_IVI_IviContainer* pvalue);

EXTERN int XmlEnc_IVI_IviContainer (OSCTXT* pctxt, 
   ASN1T_IVI_IviContainer* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_IviContainer (OSCTXT* pctxt, 
   ASN1T_IVI_IviContainer* pvalue);

EXTERN int asn1JsonEnc_IVI_IviContainer (OSCTXT *pctxt, ASN1T_IVI_IviContainer *pvalue);

EXTERN int asn1JsonDec_IVI_IviContainer (OSCTXT *pctxt, ASN1T_IVI_IviContainer *pvalue);

EXTERN int asn1PrtToStrm_IVI_IviContainer (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_IviContainer* pvalue);

EXTERN ASN1T_IVI_IviContainer* new_ASN1T_IVI_IviContainer (ASN1CType& ccobj);

EXTERN int asn1Init_IVI_IviContainer (ASN1T_IVI_IviContainer* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_IviContainer (OSCTXT *pctxt, ASN1T_IVI_IviContainer* pvalue);

/**************************************************************/
/*                                                            */
/*  IviContainers                                             */
/*                                                            */
/**************************************************************/
/*
IviContainers ::= SEQUENCE (SIZE (1..8, ...)) OF IviContainer
*/
/* List of ASN1T_IVI_IviContainer */
typedef ASN1TSeqOfList ASN1T_IVI_IviContainers;

class EXTERN ASN1C_IVI_IviContainers :
public ASN1CSeqOfList
{
protected:
   ASN1T_IVI_IviContainers& msgData;
public:
   /**
    * Control class: ASN1C_IVI_IviContainers
    * Data class:    ASN1T_IVI_IviContainers
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_IVI_IviContainers (ASN1T_IVI_IviContainers& data);

   /**
    * Control class: ASN1C_IVI_IviContainers<br/>
    * Data class: ASN1T_IVI_IviContainers<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_IVI_IviContainers (OSRTMessageBufferIF& msgBuf
      , ASN1T_IVI_IviContainers& data);

   /**
    * Control class: ASN1C_IVI_IviContainers<br/>
    * Data class: ASN1T_IVI_IviContainers<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_IVI_IviContainers (ASN1CType& ccobj, ASN1T_IVI_IviContainers& data);

   virtual ~ASN1C_IVI_IviContainers () {}

   /**
    * Data class: ASN1T_IVI_IviContainer<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_IVI_IviContainer* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_IVI_IviContainer.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_IVI_IviContainer* NewElement ();

   /**
    * Data class: ASN1T_IVI_IviContainer.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_IVI_IviContainer* AppendNewElement ();

private:
   ASN1C_IVI_IviContainers& operator= (const ASN1C_IVI_IviContainers&) {return *this;}
} ;

EXTERN int asn1PE_IVI_IviContainers (OSCTXT* pctxt, ASN1T_IVI_IviContainers* pvalue);

EXTERN int asn1PD_IVI_IviContainers (OSCTXT* pctxt, ASN1T_IVI_IviContainers* pvalue);

EXTERN int XmlEnc_IVI_IviContainers (OSCTXT* pctxt, 
   ASN1T_IVI_IviContainers* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_IviContainers (OSCTXT* pctxt, 
   ASN1T_IVI_IviContainers* pvalue);

EXTERN int asn1JsonEnc_IVI_IviContainers (OSCTXT *pctxt, ASN1T_IVI_IviContainers *pvalue);

EXTERN int asn1JsonDec_IVI_IviContainers (OSCTXT *pctxt, ASN1T_IVI_IviContainers *pvalue);

EXTERN int asn1PrtToStrm_IVI_IviContainers (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_IviContainers* pvalue);

EXTERN int asn1Init_IVI_IviContainers (ASN1T_IVI_IviContainers* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_IviContainers (OSCTXT *pctxt, 
   ASN1T_IVI_IviContainers* pvalue);

/**************************************************************/
/*                                                            */
/*  IviStructure                                              */
/*                                                            */
/**************************************************************/
/*
 Definition of IVI structure
IviStructure ::= SEQUENCE {
   mandatory [0] IviManagementContainer,
   optional [1] IviContainers OPTIONAL
}
*/
struct EXTERN ASN1T_IVI_IviStructure {
   struct {
      unsigned optionalPresent : 1;
   } m;
   ASN1T_IVI_IviManagementContainer mandatory;
   ASN1T_IVI_IviContainers optional;
   ASN1T_IVI_IviStructure ();
} ;

EXTERN int asn1PE_IVI_IviStructure (OSCTXT* pctxt, ASN1T_IVI_IviStructure* pvalue);

EXTERN int asn1PD_IVI_IviStructure (OSCTXT* pctxt, ASN1T_IVI_IviStructure* pvalue);

EXTERN int XmlEnc_IVI_IviStructure (OSCTXT* pctxt, 
   ASN1T_IVI_IviStructure* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IVI_IviStructure (OSCTXT* pctxt, 
   ASN1T_IVI_IviStructure* pvalue);

EXTERN int asn1JsonEnc_IVI_IviStructure (OSCTXT *pctxt, ASN1T_IVI_IviStructure *pvalue);

EXTERN int asn1JsonDec_IVI_IviStructure (OSCTXT *pctxt, ASN1T_IVI_IviStructure *pvalue);

EXTERN int asn1PrtToStrm_IVI_IviStructure (OSCTXT *pctxt, 
   const char* name, const ASN1T_IVI_IviStructure* pvalue);

EXTERN ASN1T_IVI_IviStructure* new_ASN1T_IVI_IviStructure (ASN1CType& ccobj);

EXTERN int asn1Init_IVI_IviStructure (ASN1T_IVI_IviStructure* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_IVI_IviStructure (OSCTXT *pctxt, ASN1T_IVI_IviStructure* pvalue);

#endif
