/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).
 */
#ifndef ETSI_DSRC_H
#define ETSI_DSRC_H

#include <stdio.h>
#include <stdlib.h>
#include "rtpersrc/asn1PerCppTypes.h"
#include "rtsrc/asn1CppTypes.h"
#include "rtsrc/rtPrintToStream.h"
#include "rtsrc/asn1type.h"
#include "rtxmlsrc/asn1xml.h"
#include "rtxmlsrc/rtXmlCppMsgBuf.h"
#include "rtsrc/asn1type.h"
#include "rtjsonsrc/asn1json.h"
#include "rtjsonsrc/rtJsonCppMsgBuf.h"

#include "rtsrc/ASN1CSeqOfList.h"
#include "rtsrc/ASN1CBitStr.h"
#include "ITS-Container.h"
#include "ElectronicRegistrationIdentificationVehicleDataModule.h"

/**
 * Header file for ASN.1 module DSRC
 */
/**************************************************************/
/*                                                            */
/*  RoadRegulatorID                                           */
/*                                                            */
/**************************************************************/
/*
RoadRegulatorID ::= INTEGER (0..65535)
*/
typedef OSUINT16 ASN1T_ETSI_DSRC_RoadRegulatorID;

EXTERN int asn1PE_ETSI_DSRC_RoadRegulatorID (OSCTXT* pctxt, ASN1T_ETSI_DSRC_RoadRegulatorID value);

EXTERN int asn1PD_ETSI_DSRC_RoadRegulatorID (OSCTXT* pctxt, ASN1T_ETSI_DSRC_RoadRegulatorID* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_RoadRegulatorID (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_RoadRegulatorID value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_RoadRegulatorID (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_RoadRegulatorID* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_RoadRegulatorID (OSCTXT *pctxt, ASN1T_ETSI_DSRC_RoadRegulatorID *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_RoadRegulatorID (OSCTXT *pctxt, ASN1T_ETSI_DSRC_RoadRegulatorID *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_RoadRegulatorID (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_RoadRegulatorID* pvalue);

EXTERN ASN1T_ETSI_DSRC_RoadRegulatorID* 
   new_ASN1T_ETSI_DSRC_RoadRegulatorID (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  RoadSegmentID                                             */
/*                                                            */
/**************************************************************/
/*
RoadSegmentID ::= INTEGER (0..65535)
*/
typedef OSUINT16 ASN1T_ETSI_DSRC_RoadSegmentID;

EXTERN int asn1PE_ETSI_DSRC_RoadSegmentID (OSCTXT* pctxt, ASN1T_ETSI_DSRC_RoadSegmentID value);

EXTERN int asn1PD_ETSI_DSRC_RoadSegmentID (OSCTXT* pctxt, ASN1T_ETSI_DSRC_RoadSegmentID* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_RoadSegmentID (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_RoadSegmentID value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_RoadSegmentID (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_RoadSegmentID* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_RoadSegmentID (OSCTXT *pctxt, ASN1T_ETSI_DSRC_RoadSegmentID *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_RoadSegmentID (OSCTXT *pctxt, ASN1T_ETSI_DSRC_RoadSegmentID *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_RoadSegmentID (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_RoadSegmentID* pvalue);

EXTERN ASN1T_ETSI_DSRC_RoadSegmentID* 
   new_ASN1T_ETSI_DSRC_RoadSegmentID (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  RoadSegmentReferenceID                                    */
/*                                                            */
/**************************************************************/
/*
RoadSegmentReferenceID ::= SEQUENCE {
   region [0] RoadRegulatorID OPTIONAL,
   id [1] RoadSegmentID
}
*/
struct EXTERN ASN1T_ETSI_DSRC_RoadSegmentReferenceID {
   struct {
      unsigned regionPresent : 1;
   } m;
   ASN1T_ETSI_DSRC_RoadRegulatorID region;
   ASN1T_ETSI_DSRC_RoadSegmentID id;
   ASN1T_ETSI_DSRC_RoadSegmentReferenceID ();
} ;

EXTERN int asn1PE_ETSI_DSRC_RoadSegmentReferenceID (OSCTXT* pctxt, ASN1T_ETSI_DSRC_RoadSegmentReferenceID* pvalue);

EXTERN int asn1PD_ETSI_DSRC_RoadSegmentReferenceID (OSCTXT* pctxt, ASN1T_ETSI_DSRC_RoadSegmentReferenceID* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_RoadSegmentReferenceID (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_RoadSegmentReferenceID* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_RoadSegmentReferenceID (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_RoadSegmentReferenceID* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_RoadSegmentReferenceID (OSCTXT *pctxt, ASN1T_ETSI_DSRC_RoadSegmentReferenceID *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_RoadSegmentReferenceID (OSCTXT *pctxt, ASN1T_ETSI_DSRC_RoadSegmentReferenceID *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_RoadSegmentReferenceID (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_RoadSegmentReferenceID* pvalue);

EXTERN ASN1T_ETSI_DSRC_RoadSegmentReferenceID* 
   new_ASN1T_ETSI_DSRC_RoadSegmentReferenceID (ASN1CType& ccobj);

EXTERN int asn1Init_ETSI_DSRC_RoadSegmentReferenceID (
   ASN1T_ETSI_DSRC_RoadSegmentReferenceID* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

/**************************************************************/
/*                                                            */
/*  IntersectionID                                            */
/*                                                            */
/**************************************************************/
/*
IntersectionID ::= INTEGER (0..65535)
*/
typedef OSUINT16 ASN1T_ETSI_DSRC_IntersectionID;

EXTERN int asn1PE_ETSI_DSRC_IntersectionID (OSCTXT* pctxt, ASN1T_ETSI_DSRC_IntersectionID value);

EXTERN int asn1PD_ETSI_DSRC_IntersectionID (OSCTXT* pctxt, ASN1T_ETSI_DSRC_IntersectionID* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_IntersectionID (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_IntersectionID value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_IntersectionID (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_IntersectionID* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_IntersectionID (OSCTXT *pctxt, ASN1T_ETSI_DSRC_IntersectionID *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_IntersectionID (OSCTXT *pctxt, ASN1T_ETSI_DSRC_IntersectionID *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_IntersectionID (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_IntersectionID* pvalue);

EXTERN ASN1T_ETSI_DSRC_IntersectionID* 
   new_ASN1T_ETSI_DSRC_IntersectionID (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  IntersectionReferenceID                                   */
/*                                                            */
/**************************************************************/
/*
IntersectionReferenceID ::= SEQUENCE {
   region [0] RoadRegulatorID OPTIONAL,
   id [1] IntersectionID
}
*/
struct EXTERN ASN1T_ETSI_DSRC_IntersectionReferenceID {
   struct {
      unsigned regionPresent : 1;
   } m;
   ASN1T_ETSI_DSRC_RoadRegulatorID region;
   ASN1T_ETSI_DSRC_IntersectionID id;
   ASN1T_ETSI_DSRC_IntersectionReferenceID ();
} ;

EXTERN int asn1PE_ETSI_DSRC_IntersectionReferenceID (OSCTXT* pctxt, ASN1T_ETSI_DSRC_IntersectionReferenceID* pvalue);

EXTERN int asn1PD_ETSI_DSRC_IntersectionReferenceID (OSCTXT* pctxt, ASN1T_ETSI_DSRC_IntersectionReferenceID* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_IntersectionReferenceID (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_IntersectionReferenceID* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_IntersectionReferenceID (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_IntersectionReferenceID* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_IntersectionReferenceID (OSCTXT *pctxt, ASN1T_ETSI_DSRC_IntersectionReferenceID *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_IntersectionReferenceID (OSCTXT *pctxt, ASN1T_ETSI_DSRC_IntersectionReferenceID *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_IntersectionReferenceID (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_IntersectionReferenceID* pvalue);

EXTERN ASN1T_ETSI_DSRC_IntersectionReferenceID* 
   new_ASN1T_ETSI_DSRC_IntersectionReferenceID (ASN1CType& ccobj);

EXTERN int asn1Init_ETSI_DSRC_IntersectionReferenceID (
   ASN1T_ETSI_DSRC_IntersectionReferenceID* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

/**************************************************************/
/*                                                            */
/*  LaneID                                                    */
/*                                                            */
/**************************************************************/
/*
LaneID ::= INTEGER (0..255)
*/
typedef OSUINT8 ASN1T_ETSI_DSRC_LaneID;

EXTERN int asn1PE_ETSI_DSRC_LaneID (OSCTXT* pctxt, ASN1T_ETSI_DSRC_LaneID value);

EXTERN int asn1PD_ETSI_DSRC_LaneID (OSCTXT* pctxt, ASN1T_ETSI_DSRC_LaneID* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_LaneID (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_LaneID value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_LaneID (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_LaneID* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_LaneID (OSCTXT *pctxt, ASN1T_ETSI_DSRC_LaneID *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_LaneID (OSCTXT *pctxt, ASN1T_ETSI_DSRC_LaneID *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_LaneID (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_LaneID* pvalue);

EXTERN ASN1T_ETSI_DSRC_LaneID* new_ASN1T_ETSI_DSRC_LaneID (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  MinuteOfTheYear                                           */
/*                                                            */
/**************************************************************/
/*
MinuteOfTheYear ::= INTEGER (0..527040)
*/
typedef OSUINT32 ASN1T_ETSI_DSRC_MinuteOfTheYear;

EXTERN int asn1PE_ETSI_DSRC_MinuteOfTheYear (OSCTXT* pctxt, ASN1T_ETSI_DSRC_MinuteOfTheYear value);

EXTERN int asn1PD_ETSI_DSRC_MinuteOfTheYear (OSCTXT* pctxt, ASN1T_ETSI_DSRC_MinuteOfTheYear* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_MinuteOfTheYear (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_MinuteOfTheYear value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_MinuteOfTheYear (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_MinuteOfTheYear* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_MinuteOfTheYear (OSCTXT *pctxt, ASN1T_ETSI_DSRC_MinuteOfTheYear *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_MinuteOfTheYear (OSCTXT *pctxt, ASN1T_ETSI_DSRC_MinuteOfTheYear *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_MinuteOfTheYear (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_MinuteOfTheYear* pvalue);

EXTERN ASN1T_ETSI_DSRC_MinuteOfTheYear* 
   new_ASN1T_ETSI_DSRC_MinuteOfTheYear (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  MsgCount                                                  */
/*                                                            */
/**************************************************************/
/*
MsgCount ::= INTEGER (0..127)
*/
typedef OSUINT8 ASN1T_ETSI_DSRC_MsgCount;

EXTERN int asn1PE_ETSI_DSRC_MsgCount (OSCTXT* pctxt, ASN1T_ETSI_DSRC_MsgCount value);

EXTERN int asn1PD_ETSI_DSRC_MsgCount (OSCTXT* pctxt, ASN1T_ETSI_DSRC_MsgCount* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_MsgCount (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_MsgCount value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_MsgCount (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_MsgCount* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_MsgCount (OSCTXT *pctxt, ASN1T_ETSI_DSRC_MsgCount *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_MsgCount (OSCTXT *pctxt, ASN1T_ETSI_DSRC_MsgCount *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_MsgCount (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_MsgCount* pvalue);

EXTERN ASN1T_ETSI_DSRC_MsgCount* 
   new_ASN1T_ETSI_DSRC_MsgCount (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  LayerType                                                 */
/*                                                            */
/**************************************************************/
/*
LayerType ::= ENUMERATED { none(0), mixedContent(1), generalMapData(2), intersectionData(3), curveData(4), roadwaySectionData(5), parkingAreaData(6), sharedLaneData(7), ... }
*/
struct EXTERN ETSI_DSRC_LayerType {
   enum Root {
      none = 0,
      mixedContent = 1,
      generalMapData = 2,
      intersectionData = 3,
      curveData = 4,
      roadwaySectionData = 5,
      parkingAreaData = 6,
      sharedLaneData = 7
   } ;
} ;

typedef OSUINT32 ASN1T_ETSI_DSRC_LayerType;

EXTERN int asn1PE_ETSI_DSRC_LayerType (OSCTXT* pctxt, ASN1T_ETSI_DSRC_LayerType value);

EXTERN int asn1PD_ETSI_DSRC_LayerType (OSCTXT* pctxt, ASN1T_ETSI_DSRC_LayerType* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_LayerType (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_LayerType value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_LayerType (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_LayerType* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_LayerType (OSCTXT *pctxt, ASN1T_ETSI_DSRC_LayerType *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_LayerType (OSCTXT *pctxt, ASN1T_ETSI_DSRC_LayerType *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_LayerType (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_LayerType* pvalue);

EXTERN ASN1T_ETSI_DSRC_LayerType* 
   new_ASN1T_ETSI_DSRC_LayerType (ASN1CType& ccobj);

EXTERN extern const OSEnumItem ASN1T_ETSI_DSRC_LayerType_ENUMTAB[];
#define ASN1T_ETSI_DSRC_LayerType_ENUMTABSIZE 8

EXTERN const OSUTF8CHAR* ASN1T_ETSI_DSRC_LayerType_ToString (OSINT32 value);

EXTERN int ASN1T_ETSI_DSRC_LayerType_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, ASN1T_ETSI_DSRC_LayerType* pvalue);

EXTERN int ASN1T_ETSI_DSRC_LayerType_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, ASN1T_ETSI_DSRC_LayerType* pvalue)
      ;

/**************************************************************/
/*                                                            */
/*  LayerID                                                   */
/*                                                            */
/**************************************************************/
/*
LayerID ::= INTEGER (0..100)
*/
typedef OSUINT8 ASN1T_ETSI_DSRC_LayerID;

EXTERN int asn1PE_ETSI_DSRC_LayerID (OSCTXT* pctxt, ASN1T_ETSI_DSRC_LayerID value);

EXTERN int asn1PD_ETSI_DSRC_LayerID (OSCTXT* pctxt, ASN1T_ETSI_DSRC_LayerID* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_LayerID (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_LayerID value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_LayerID (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_LayerID* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_LayerID (OSCTXT *pctxt, ASN1T_ETSI_DSRC_LayerID *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_LayerID (OSCTXT *pctxt, ASN1T_ETSI_DSRC_LayerID *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_LayerID (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_LayerID* pvalue);

EXTERN ASN1T_ETSI_DSRC_LayerID* new_ASN1T_ETSI_DSRC_LayerID (ASN1CType& ccobj)
   ;

/**************************************************************/
/*                                                            */
/*  DescriptiveName                                           */
/*                                                            */
/**************************************************************/
/*
DescriptiveName ::= IA5String (SIZE (1..63))
*/
typedef const char* ASN1T_ETSI_DSRC_DescriptiveName;

EXTERN int asn1PE_ETSI_DSRC_DescriptiveName (OSCTXT* pctxt, ASN1T_ETSI_DSRC_DescriptiveName value);

EXTERN int asn1PD_ETSI_DSRC_DescriptiveName (OSCTXT* pctxt, ASN1T_ETSI_DSRC_DescriptiveName* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_DescriptiveName (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_DescriptiveName value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_DescriptiveName (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_DescriptiveName* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_DescriptiveName (OSCTXT *pctxt, ASN1T_ETSI_DSRC_DescriptiveName value);

EXTERN int asn1JsonDec_ETSI_DSRC_DescriptiveName (OSCTXT *pctxt, ASN1T_ETSI_DSRC_DescriptiveName *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_DescriptiveName (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_DescriptiveName pvalue);

EXTERN void asn1Free_ETSI_DSRC_DescriptiveName (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_DescriptiveName pvalue);

/**************************************************************/
/*                                                            */
/*  Elevation                                                 */
/*                                                            */
/**************************************************************/
/*
Elevation ::= INTEGER (-4096..61439)
*/
typedef OSINT32 ASN1T_ETSI_DSRC_Elevation;

EXTERN int asn1PE_ETSI_DSRC_Elevation (OSCTXT* pctxt, ASN1T_ETSI_DSRC_Elevation value);

EXTERN int asn1PD_ETSI_DSRC_Elevation (OSCTXT* pctxt, ASN1T_ETSI_DSRC_Elevation* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_Elevation (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_Elevation value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_Elevation (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_Elevation* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_Elevation (OSCTXT *pctxt, ASN1T_ETSI_DSRC_Elevation *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_Elevation (OSCTXT *pctxt, ASN1T_ETSI_DSRC_Elevation *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_Elevation (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_Elevation* pvalue);

EXTERN ASN1T_ETSI_DSRC_Elevation* 
   new_ASN1T_ETSI_DSRC_Elevation (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  RegionId                                                  */
/*                                                            */
/**************************************************************/
/*
RegionId ::= INTEGER (0..255)
*/
typedef OSUINT8 ASN1T_ETSI_DSRC_RegionId;

EXTERN int asn1PE_ETSI_DSRC_RegionId (OSCTXT* pctxt, ASN1T_ETSI_DSRC_RegionId value);

EXTERN int asn1PD_ETSI_DSRC_RegionId (OSCTXT* pctxt, ASN1T_ETSI_DSRC_RegionId* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_RegionId (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_RegionId value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_RegionId (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_RegionId* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_RegionId (OSCTXT *pctxt, ASN1T_ETSI_DSRC_RegionId *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_RegionId (OSCTXT *pctxt, ASN1T_ETSI_DSRC_RegionId *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_RegionId (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_RegionId* pvalue);

EXTERN ASN1T_ETSI_DSRC_RegionId* 
   new_ASN1T_ETSI_DSRC_RegionId (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  Position3D_regional_element                               */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'Position3D'
*/
struct EXTERN ASN1T_ETSI_DSRC_Position3D_regional_element {
   ASN1T_ETSI_DSRC_RegionId regionId;
   struct  {
      /**
       * information object selector
       */
      OSUINT16 t;

      /**
       * Reg-Position3D information objects
       */
      union {
         /**
          * id: addGrpC
          */
         struct ASN1T_ETSI_GrpC_Position3D_addGrpC *_ETSI_REG_Reg_Position3D_addGrpC;

         ASN1TOpenType* extElem1;
      } u;
   } regExtValue;
   ASN1T_ETSI_DSRC_Position3D_regional_element ();
} ;

EXTERN int asn1PE_ETSI_DSRC_Position3D_regional_element (OSCTXT* pctxt, ASN1T_ETSI_DSRC_Position3D_regional_element* pvalue);

EXTERN int asn1PD_ETSI_DSRC_Position3D_regional_element (OSCTXT* pctxt, ASN1T_ETSI_DSRC_Position3D_regional_element* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_Position3D_regional_element (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_Position3D_regional_element* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_Position3D_regional_element (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_Position3D_regional_element* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_Position3D_regional_element (OSCTXT *pctxt, ASN1T_ETSI_DSRC_Position3D_regional_element *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_Position3D_regional_element (OSCTXT *pctxt, ASN1T_ETSI_DSRC_Position3D_regional_element *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_Position3D_regional_element (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_Position3D_regional_element* pvalue);

EXTERN ASN1T_ETSI_DSRC_Position3D_regional_element* 
   new_ASN1T_ETSI_DSRC_Position3D_regional_element (ASN1CType& ccobj);

EXTERN int asn1Init_ETSI_DSRC_Position3D_regional_element (
   ASN1T_ETSI_DSRC_Position3D_regional_element* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_Position3D_regional_element (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_Position3D_regional_element* pvalue);

/**************************************************************/
/*                                                            */
/*  Position3D_regional                                       */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'Position3D'
*/
/* List of ASN1T_ETSI_DSRC_Position3D_regional_element */
typedef ASN1TSeqOfList ASN1T_ETSI_DSRC_Position3D_regional;

class EXTERN ASN1C_ETSI_DSRC_Position3D_regional :
public ASN1CSeqOfList
{
protected:
   ASN1T_ETSI_DSRC_Position3D_regional& msgData;
public:
   /**
    * Control class: ASN1C_ETSI_DSRC_Position3D_regional
    * Data class:    ASN1T_ETSI_DSRC_Position3D_regional
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_Position3D_regional
       (ASN1T_ETSI_DSRC_Position3D_regional& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_Position3D_regional<br/>
    * Data class: ASN1T_ETSI_DSRC_Position3D_regional<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_Position3D_regional (OSRTMessageBufferIF& msgBuf
      , ASN1T_ETSI_DSRC_Position3D_regional& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_Position3D_regional<br/>
    * Data class: ASN1T_ETSI_DSRC_Position3D_regional<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_ETSI_DSRC_Position3D_regional (ASN1CType& ccobj
      , ASN1T_ETSI_DSRC_Position3D_regional& data);

   virtual ~ASN1C_ETSI_DSRC_Position3D_regional () {}

   /**
    * Data class: ASN1T_ETSI_DSRC_Position3D_regional_element<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_ETSI_DSRC_Position3D_regional_element* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_ETSI_DSRC_Position3D_regional_element.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_ETSI_DSRC_Position3D_regional_element* NewElement ();

   /**
    * Data class: ASN1T_ETSI_DSRC_Position3D_regional_element.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_ETSI_DSRC_Position3D_regional_element* AppendNewElement ();

   /* Get IE using regionId key value */
   ASN1T_ETSI_DSRC_Position3D_regional_element* 
      GetIE (ASN1T_ETSI_DSRC_RegionId regionId);

   /* Get all matching IEs using regionId key value */
   int GetAllIEs (ASN1T_ETSI_DSRC_RegionId regionId, 
      ASN1T_ETSI_DSRC_Position3D_regional* pmatches);

private:
   ASN1C_ETSI_DSRC_Position3D_regional& operator= (const ASN1C_ETSI_DSRC_Position3D_regional&) {return *this;}
} ;

EXTERN int asn1PE_ETSI_DSRC_Position3D_regional (OSCTXT* pctxt, ASN1T_ETSI_DSRC_Position3D_regional* pvalue);

EXTERN int asn1PD_ETSI_DSRC_Position3D_regional (OSCTXT* pctxt, ASN1T_ETSI_DSRC_Position3D_regional* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_Position3D_regional (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_Position3D_regional* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_Position3D_regional (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_Position3D_regional* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_Position3D_regional (OSCTXT *pctxt, ASN1T_ETSI_DSRC_Position3D_regional *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_Position3D_regional (OSCTXT *pctxt, ASN1T_ETSI_DSRC_Position3D_regional *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_Position3D_regional (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_Position3D_regional* pvalue);

EXTERN int asn1Init_ETSI_DSRC_Position3D_regional (
   ASN1T_ETSI_DSRC_Position3D_regional* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_Position3D_regional (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_Position3D_regional* pvalue);

/**************************************************************/
/*                                                            */
/*  Position3D                                                */
/*                                                            */
/**************************************************************/
/*
Position3D ::= SEQUENCE {
   lat [0] Latitude,
   long [1] Longitude,
   elevation [2] Elevation OPTIONAL,
   regional [3] SEQUENCE (SIZE (1..4)) OF SEQUENCE {
      regionId [0] REG-EXT-ID-AND-TYPE.&id ({Reg-Position3D}),
      regExtValue [1] EXPLICIT REG-EXT-ID-AND-TYPE.&Type ({Reg-Position3D}{@regionId})
   } OPTIONAL,
   ...
}
*/
struct EXTERN ASN1T_ETSI_DSRC_Position3D {
   struct {
      unsigned elevationPresent : 1;
      unsigned regionalPresent : 1;
   } m;
   ASN1T_ITS_Latitude lat;
   ASN1T_ITS_Longitude long_;
   ASN1T_ETSI_DSRC_Elevation elevation;
   ASN1T_ETSI_DSRC_Position3D_regional regional;
   ASN1TSeqExt extElem1;
   ASN1T_ETSI_DSRC_Position3D ();
} ;

EXTERN int asn1PE_ETSI_DSRC_Position3D (OSCTXT* pctxt, ASN1T_ETSI_DSRC_Position3D* pvalue);

EXTERN int asn1PD_ETSI_DSRC_Position3D (OSCTXT* pctxt, ASN1T_ETSI_DSRC_Position3D* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_Position3D (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_Position3D* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_Position3D (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_Position3D* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_Position3D (OSCTXT *pctxt, ASN1T_ETSI_DSRC_Position3D *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_Position3D (OSCTXT *pctxt, ASN1T_ETSI_DSRC_Position3D *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_Position3D (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_Position3D* pvalue);

EXTERN ASN1T_ETSI_DSRC_Position3D* 
   new_ASN1T_ETSI_DSRC_Position3D (ASN1CType& ccobj);

EXTERN int asn1Init_ETSI_DSRC_Position3D (ASN1T_ETSI_DSRC_Position3D* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_Position3D (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_Position3D* pvalue);

/**************************************************************/
/*                                                            */
/*  LaneWidth                                                 */
/*                                                            */
/**************************************************************/
/*
LaneWidth ::= INTEGER (0..32767)
*/
typedef OSUINT16 ASN1T_ETSI_DSRC_LaneWidth;

EXTERN int asn1PE_ETSI_DSRC_LaneWidth (OSCTXT* pctxt, ASN1T_ETSI_DSRC_LaneWidth value);

EXTERN int asn1PD_ETSI_DSRC_LaneWidth (OSCTXT* pctxt, ASN1T_ETSI_DSRC_LaneWidth* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_LaneWidth (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_LaneWidth value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_LaneWidth (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_LaneWidth* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_LaneWidth (OSCTXT *pctxt, ASN1T_ETSI_DSRC_LaneWidth *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_LaneWidth (OSCTXT *pctxt, ASN1T_ETSI_DSRC_LaneWidth *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_LaneWidth (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_LaneWidth* pvalue);

EXTERN ASN1T_ETSI_DSRC_LaneWidth* 
   new_ASN1T_ETSI_DSRC_LaneWidth (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  SpeedLimitType                                            */
/*                                                            */
/**************************************************************/
/*
SpeedLimitType ::= ENUMERATED { unknown(0), maxSpeedInSchoolZone(1), maxSpeedInSchoolZoneWhenChildrenArePresent(2), maxSpeedInConstructionZone(3), vehicleMinSpeed(4), vehicleMaxSpeed(5), vehicleNightMaxSpeed(6), truckMinSpeed(7), truckMaxSpeed(8), truckNightMaxSpeed(9), vehiclesWithTrailersMinSpeed(10), vehiclesWithTrailersMaxSpeed(11), vehiclesWithTrailersNightMaxSpeed(12), ... }
*/
struct EXTERN ETSI_DSRC_SpeedLimitType {
   enum Root {
      unknown = 0,
      maxSpeedInSchoolZone = 1,
      maxSpeedInSchoolZoneWhenChildrenArePresent = 2,
      maxSpeedInConstructionZone = 3,
      vehicleMinSpeed = 4,
      vehicleMaxSpeed = 5,
      vehicleNightMaxSpeed = 6,
      truckMinSpeed = 7,
      truckMaxSpeed = 8,
      truckNightMaxSpeed = 9,
      vehiclesWithTrailersMinSpeed = 10,
      vehiclesWithTrailersMaxSpeed = 11,
      vehiclesWithTrailersNightMaxSpeed = 12
   } ;
} ;

typedef OSUINT32 ASN1T_ETSI_DSRC_SpeedLimitType;

EXTERN int asn1PE_ETSI_DSRC_SpeedLimitType (OSCTXT* pctxt, ASN1T_ETSI_DSRC_SpeedLimitType value);

EXTERN int asn1PD_ETSI_DSRC_SpeedLimitType (OSCTXT* pctxt, ASN1T_ETSI_DSRC_SpeedLimitType* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_SpeedLimitType (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_SpeedLimitType value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_SpeedLimitType (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_SpeedLimitType* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_SpeedLimitType (OSCTXT *pctxt, ASN1T_ETSI_DSRC_SpeedLimitType *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_SpeedLimitType (OSCTXT *pctxt, ASN1T_ETSI_DSRC_SpeedLimitType *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_SpeedLimitType (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_SpeedLimitType* pvalue);

EXTERN ASN1T_ETSI_DSRC_SpeedLimitType* 
   new_ASN1T_ETSI_DSRC_SpeedLimitType (ASN1CType& ccobj);

EXTERN extern const OSEnumItem ASN1T_ETSI_DSRC_SpeedLimitType_ENUMTAB[];
#define ASN1T_ETSI_DSRC_SpeedLimitType_ENUMTABSIZE 13

EXTERN const OSUTF8CHAR* ASN1T_ETSI_DSRC_SpeedLimitType_ToString (OSINT32 value);

EXTERN int ASN1T_ETSI_DSRC_SpeedLimitType_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, ASN1T_ETSI_DSRC_SpeedLimitType* pvalue);

EXTERN int ASN1T_ETSI_DSRC_SpeedLimitType_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      ASN1T_ETSI_DSRC_SpeedLimitType* pvalue);

/**************************************************************/
/*                                                            */
/*  Velocity                                                  */
/*                                                            */
/**************************************************************/
/*
Velocity ::= INTEGER (0..8191)
*/
typedef OSUINT16 ASN1T_ETSI_DSRC_Velocity;

EXTERN int asn1PE_ETSI_DSRC_Velocity (OSCTXT* pctxt, ASN1T_ETSI_DSRC_Velocity value);

EXTERN int asn1PD_ETSI_DSRC_Velocity (OSCTXT* pctxt, ASN1T_ETSI_DSRC_Velocity* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_Velocity (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_Velocity value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_Velocity (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_Velocity* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_Velocity (OSCTXT *pctxt, ASN1T_ETSI_DSRC_Velocity *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_Velocity (OSCTXT *pctxt, ASN1T_ETSI_DSRC_Velocity *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_Velocity (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_Velocity* pvalue);

EXTERN ASN1T_ETSI_DSRC_Velocity* 
   new_ASN1T_ETSI_DSRC_Velocity (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  RegulatorySpeedLimit                                      */
/*                                                            */
/**************************************************************/
/*
RegulatorySpeedLimit ::= SEQUENCE {
   type [0] SpeedLimitType,
   speed [1] Velocity
}
*/
struct EXTERN ASN1T_ETSI_DSRC_RegulatorySpeedLimit {
   ASN1T_ETSI_DSRC_SpeedLimitType type;
   ASN1T_ETSI_DSRC_Velocity speed;
} ;

EXTERN int asn1PE_ETSI_DSRC_RegulatorySpeedLimit (OSCTXT* pctxt, ASN1T_ETSI_DSRC_RegulatorySpeedLimit* pvalue);

EXTERN int asn1PD_ETSI_DSRC_RegulatorySpeedLimit (OSCTXT* pctxt, ASN1T_ETSI_DSRC_RegulatorySpeedLimit* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_RegulatorySpeedLimit (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_RegulatorySpeedLimit* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_RegulatorySpeedLimit (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_RegulatorySpeedLimit* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_RegulatorySpeedLimit (OSCTXT *pctxt, ASN1T_ETSI_DSRC_RegulatorySpeedLimit *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_RegulatorySpeedLimit (OSCTXT *pctxt, ASN1T_ETSI_DSRC_RegulatorySpeedLimit *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_RegulatorySpeedLimit (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_RegulatorySpeedLimit* pvalue);

EXTERN ASN1T_ETSI_DSRC_RegulatorySpeedLimit* 
   new_ASN1T_ETSI_DSRC_RegulatorySpeedLimit (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  SpeedLimitList                                            */
/*                                                            */
/**************************************************************/
/*
SpeedLimitList ::= SEQUENCE (SIZE (1..9)) OF RegulatorySpeedLimit
*/
/* List of ASN1T_ETSI_DSRC_RegulatorySpeedLimit */
typedef ASN1TSeqOfList ASN1T_ETSI_DSRC_SpeedLimitList;

class EXTERN ASN1C_ETSI_DSRC_SpeedLimitList :
public ASN1CSeqOfList
{
protected:
   ASN1T_ETSI_DSRC_SpeedLimitList& msgData;
public:
   /**
    * Control class: ASN1C_ETSI_DSRC_SpeedLimitList
    * Data class:    ASN1T_ETSI_DSRC_SpeedLimitList
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_SpeedLimitList (ASN1T_ETSI_DSRC_SpeedLimitList& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_SpeedLimitList<br/>
    * Data class: ASN1T_ETSI_DSRC_SpeedLimitList<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_SpeedLimitList (OSRTMessageBufferIF& msgBuf
      , ASN1T_ETSI_DSRC_SpeedLimitList& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_SpeedLimitList<br/>
    * Data class: ASN1T_ETSI_DSRC_SpeedLimitList<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_ETSI_DSRC_SpeedLimitList (ASN1CType& ccobj
      , ASN1T_ETSI_DSRC_SpeedLimitList& data);

   virtual ~ASN1C_ETSI_DSRC_SpeedLimitList () {}

   /**
    * Data class: ASN1T_ETSI_DSRC_RegulatorySpeedLimit<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_ETSI_DSRC_RegulatorySpeedLimit* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_ETSI_DSRC_RegulatorySpeedLimit.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_ETSI_DSRC_RegulatorySpeedLimit* NewElement ();

   /**
    * Data class: ASN1T_ETSI_DSRC_RegulatorySpeedLimit.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_ETSI_DSRC_RegulatorySpeedLimit* AppendNewElement ();

private:
   ASN1C_ETSI_DSRC_SpeedLimitList& operator= (const ASN1C_ETSI_DSRC_SpeedLimitList&) {return *this;}
} ;

EXTERN int asn1PE_ETSI_DSRC_SpeedLimitList (OSCTXT* pctxt, ASN1T_ETSI_DSRC_SpeedLimitList* pvalue);

EXTERN int asn1PD_ETSI_DSRC_SpeedLimitList (OSCTXT* pctxt, ASN1T_ETSI_DSRC_SpeedLimitList* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_SpeedLimitList (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_SpeedLimitList* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_SpeedLimitList (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_SpeedLimitList* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_SpeedLimitList (OSCTXT *pctxt, ASN1T_ETSI_DSRC_SpeedLimitList *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_SpeedLimitList (OSCTXT *pctxt, ASN1T_ETSI_DSRC_SpeedLimitList *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_SpeedLimitList (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_SpeedLimitList* pvalue);

EXTERN int asn1Init_ETSI_DSRC_SpeedLimitList (ASN1T_ETSI_DSRC_SpeedLimitList* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_SpeedLimitList (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_SpeedLimitList* pvalue);

/**************************************************************/
/*                                                            */
/*  ApproachID                                                */
/*                                                            */
/**************************************************************/
/*
ApproachID ::= INTEGER (0..15)
*/
typedef OSUINT8 ASN1T_ETSI_DSRC_ApproachID;

EXTERN int asn1PE_ETSI_DSRC_ApproachID (OSCTXT* pctxt, ASN1T_ETSI_DSRC_ApproachID value);

EXTERN int asn1PD_ETSI_DSRC_ApproachID (OSCTXT* pctxt, ASN1T_ETSI_DSRC_ApproachID* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_ApproachID (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_ApproachID value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_ApproachID (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_ApproachID* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_ApproachID (OSCTXT *pctxt, ASN1T_ETSI_DSRC_ApproachID *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_ApproachID (OSCTXT *pctxt, ASN1T_ETSI_DSRC_ApproachID *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_ApproachID (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_ApproachID* pvalue);

EXTERN ASN1T_ETSI_DSRC_ApproachID* 
   new_ASN1T_ETSI_DSRC_ApproachID (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  LaneDirection                                             */
/*                                                            */
/**************************************************************/
/*
LaneDirection ::= BIT STRING  { ingressPath(0), egressPath(1) } (SIZE (2))
*/
struct EXTERN ASN1T_ETSI_DSRC_LaneDirection {
   OSOCTET data[1];
   // ctors
   ASN1T_ETSI_DSRC_LaneDirection ()  {}
   ASN1T_ETSI_DSRC_LaneDirection (const OSOCTET* _data) {
      OSCRTLSAFEMEMCPY (data, 1, _data, 1);
   }
} ;

class EXTERN ASN1C_ETSI_DSRC_LaneDirection :
public ASN1CBitStr
{
protected:
   ASN1T_ETSI_DSRC_LaneDirection& msgData;
public:
   // named bits
   enum { ingressPath = 0, egressPath = 1 };

   /**
    * Control class: ASN1C_ETSI_DSRC_LaneDirection
    * Data class:    ASN1T_ETSI_DSRC_LaneDirection
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_LaneDirection (ASN1T_ETSI_DSRC_LaneDirection& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_LaneDirection<br/>
    * Data class: ASN1T_ETSI_DSRC_LaneDirection<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_LaneDirection (OSRTMessageBufferIF& msgBuf
      , ASN1T_ETSI_DSRC_LaneDirection& data);

   virtual ~ASN1C_ETSI_DSRC_LaneDirection () {}

private:
   ASN1C_ETSI_DSRC_LaneDirection& operator= (const ASN1C_ETSI_DSRC_LaneDirection&) {return *this;}
} ;

EXTERN int asn1PE_ETSI_DSRC_LaneDirection (OSCTXT* pctxt, ASN1T_ETSI_DSRC_LaneDirection* pvalue);

EXTERN int asn1PD_ETSI_DSRC_LaneDirection (OSCTXT* pctxt, ASN1T_ETSI_DSRC_LaneDirection* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_LaneDirection (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_LaneDirection* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_LaneDirection (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_LaneDirection* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_LaneDirection (OSCTXT *pctxt, ASN1T_ETSI_DSRC_LaneDirection *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_LaneDirection (OSCTXT *pctxt, ASN1T_ETSI_DSRC_LaneDirection *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_LaneDirection (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_LaneDirection* pvalue);

extern EXTERN struct OSBitMapItem g_ASN1T_ETSI_DSRC_LaneDirection_NAMEDBITTAB[3];

EXTERN ASN1T_ETSI_DSRC_LaneDirection* 
   new_ASN1T_ETSI_DSRC_LaneDirection (ASN1CType& ccobj);

EXTERN int asn1Init_ETSI_DSRC_LaneDirection (ASN1T_ETSI_DSRC_LaneDirection* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

/**************************************************************/
/*                                                            */
/*  LaneSharing                                               */
/*                                                            */
/**************************************************************/
/*
LaneSharing ::= BIT STRING  { overlappingLaneDescriptionProvided(0), multipleLanesTreatedAsOneLane(1), otherNonMotorizedTrafficTypes(2), individualMotorizedVehicleTraffic(3), busVehicleTraffic(4), taxiVehicleTraffic(5), pedestriansTraffic(6), cyclistVehicleTraffic(7), trackedVehicleTraffic(8), pedestrianTraffic(9) } (SIZE (10))
*/
struct EXTERN ASN1T_ETSI_DSRC_LaneSharing {
   OSOCTET data[2];
   // ctors
   ASN1T_ETSI_DSRC_LaneSharing ()  {}
   ASN1T_ETSI_DSRC_LaneSharing (const OSOCTET* _data) {
      OSCRTLSAFEMEMCPY (data, 2, _data, 2);
   }
} ;

class EXTERN ASN1C_ETSI_DSRC_LaneSharing :
public ASN1CBitStr
{
protected:
   ASN1T_ETSI_DSRC_LaneSharing& msgData;
public:
   // named bits
   enum { overlappingLaneDescriptionProvided = 0, multipleLanesTreatedAsOneLane = 1, otherNonMotorizedTrafficTypes = 2, individualMotorizedVehicleTraffic = 3, busVehicleTraffic = 4, taxiVehicleTraffic = 5, pedestriansTraffic = 6, cyclistVehicleTraffic = 7, trackedVehicleTraffic = 8, pedestrianTraffic = 9 };

   /**
    * Control class: ASN1C_ETSI_DSRC_LaneSharing
    * Data class:    ASN1T_ETSI_DSRC_LaneSharing
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_LaneSharing (ASN1T_ETSI_DSRC_LaneSharing& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_LaneSharing<br/>
    * Data class: ASN1T_ETSI_DSRC_LaneSharing<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_LaneSharing (OSRTMessageBufferIF& msgBuf
      , ASN1T_ETSI_DSRC_LaneSharing& data);

   virtual ~ASN1C_ETSI_DSRC_LaneSharing () {}

private:
   ASN1C_ETSI_DSRC_LaneSharing& operator= (const ASN1C_ETSI_DSRC_LaneSharing&) {return *this;}
} ;

EXTERN int asn1PE_ETSI_DSRC_LaneSharing (OSCTXT* pctxt, ASN1T_ETSI_DSRC_LaneSharing* pvalue);

EXTERN int asn1PD_ETSI_DSRC_LaneSharing (OSCTXT* pctxt, ASN1T_ETSI_DSRC_LaneSharing* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_LaneSharing (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_LaneSharing* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_LaneSharing (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_LaneSharing* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_LaneSharing (OSCTXT *pctxt, ASN1T_ETSI_DSRC_LaneSharing *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_LaneSharing (OSCTXT *pctxt, ASN1T_ETSI_DSRC_LaneSharing *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_LaneSharing (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_LaneSharing* pvalue);

extern EXTERN struct OSBitMapItem g_ASN1T_ETSI_DSRC_LaneSharing_NAMEDBITTAB[11];

EXTERN ASN1T_ETSI_DSRC_LaneSharing* 
   new_ASN1T_ETSI_DSRC_LaneSharing (ASN1CType& ccobj);

EXTERN int asn1Init_ETSI_DSRC_LaneSharing (ASN1T_ETSI_DSRC_LaneSharing* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

/**************************************************************/
/*                                                            */
/*  LaneAttributes_Vehicle                                    */
/*                                                            */
/**************************************************************/
/*
LaneAttributes-Vehicle ::= BIT STRING  { isVehicleRevocableLane(0), isVehicleFlyOverLane(1), hovLaneUseOnly(2), restrictedToBusUse(3), restrictedToTaxiUse(4), restrictedFromPublicUse(5), hasIRbeaconCoverage(6), permissionOnRequest(7) } (SIZE (8, ...))
*/
struct EXTERN ASN1T_ETSI_DSRC_LaneAttributes_Vehicle {
   OSUINT8 numbits;
   OSOCTET data[1];
   OSOCTET* extdata;
   // ctors
   ASN1T_ETSI_DSRC_LaneAttributes_Vehicle () : numbits(0), extdata(0) {}
} ;

class EXTERN ASN1C_ETSI_DSRC_LaneAttributes_Vehicle :
public ASN1CBitStr
{
protected:
   ASN1T_ETSI_DSRC_LaneAttributes_Vehicle& msgData;
public:
   // named bits
   enum { isVehicleRevocableLane = 0, isVehicleFlyOverLane = 1, hovLaneUseOnly = 2, restrictedToBusUse = 3, restrictedToTaxiUse = 4, restrictedFromPublicUse = 5, hasIRbeaconCoverage = 6, permissionOnRequest = 7 };

   /**
    * Control class: ASN1C_ETSI_DSRC_LaneAttributes_Vehicle
    * Data class:    ASN1T_ETSI_DSRC_LaneAttributes_Vehicle
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_LaneAttributes_Vehicle
       (ASN1T_ETSI_DSRC_LaneAttributes_Vehicle& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_LaneAttributes_Vehicle<br/>
    * Data class: ASN1T_ETSI_DSRC_LaneAttributes_Vehicle<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_LaneAttributes_Vehicle (OSRTMessageBufferIF& msgBuf
      , ASN1T_ETSI_DSRC_LaneAttributes_Vehicle& data);

   virtual ~ASN1C_ETSI_DSRC_LaneAttributes_Vehicle () {}

private:
   ASN1C_ETSI_DSRC_LaneAttributes_Vehicle& operator= (const ASN1C_ETSI_DSRC_LaneAttributes_Vehicle&) {return *this;}
} ;

EXTERN int asn1PE_ETSI_DSRC_LaneAttributes_Vehicle (OSCTXT* pctxt, ASN1T_ETSI_DSRC_LaneAttributes_Vehicle* pvalue);

EXTERN int asn1PD_ETSI_DSRC_LaneAttributes_Vehicle (OSCTXT* pctxt, ASN1T_ETSI_DSRC_LaneAttributes_Vehicle* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_LaneAttributes_Vehicle (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_LaneAttributes_Vehicle* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_LaneAttributes_Vehicle (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_LaneAttributes_Vehicle* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_LaneAttributes_Vehicle (OSCTXT *pctxt, ASN1T_ETSI_DSRC_LaneAttributes_Vehicle *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_LaneAttributes_Vehicle (OSCTXT *pctxt, ASN1T_ETSI_DSRC_LaneAttributes_Vehicle *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_LaneAttributes_Vehicle (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_LaneAttributes_Vehicle* pvalue);

extern EXTERN struct OSBitMapItem g_ASN1T_ETSI_DSRC_LaneAttributes_Vehicle_NAMEDBITTAB[9];

EXTERN ASN1T_ETSI_DSRC_LaneAttributes_Vehicle* 
   new_ASN1T_ETSI_DSRC_LaneAttributes_Vehicle (ASN1CType& ccobj);

EXTERN int asn1Init_ETSI_DSRC_LaneAttributes_Vehicle (
   ASN1T_ETSI_DSRC_LaneAttributes_Vehicle* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

/**************************************************************/
/*                                                            */
/*  LaneAttributes_Crosswalk                                  */
/*                                                            */
/**************************************************************/
/*
LaneAttributes-Crosswalk ::= BIT STRING  { crosswalkRevocableLane(0), bicyleUseAllowed(1), isXwalkFlyOverLane(2), fixedCycleTime(3), biDirectionalCycleTimes(4), hasPushToWalkButton(5), audioSupport(6), rfSignalRequestPresent(7), unsignalizedSegmentsPresent(8) } (SIZE (16))
*/
struct EXTERN ASN1T_ETSI_DSRC_LaneAttributes_Crosswalk {
   OSOCTET data[2];
   // ctors
   ASN1T_ETSI_DSRC_LaneAttributes_Crosswalk ()  {}
   ASN1T_ETSI_DSRC_LaneAttributes_Crosswalk (const OSOCTET* _data) {
      OSCRTLSAFEMEMCPY (data, 2, _data, 2);
   }
} ;

class EXTERN ASN1C_ETSI_DSRC_LaneAttributes_Crosswalk :
public ASN1CBitStr
{
protected:
   ASN1T_ETSI_DSRC_LaneAttributes_Crosswalk& msgData;
public:
   // named bits
   enum { crosswalkRevocableLane = 0, bicyleUseAllowed = 1, isXwalkFlyOverLane = 2, fixedCycleTime = 3, biDirectionalCycleTimes = 4, hasPushToWalkButton = 5, audioSupport = 6, rfSignalRequestPresent = 7, unsignalizedSegmentsPresent = 8 };

   /**
    * Control class: ASN1C_ETSI_DSRC_LaneAttributes_Crosswalk
    * Data class:    ASN1T_ETSI_DSRC_LaneAttributes_Crosswalk
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_LaneAttributes_Crosswalk
       (ASN1T_ETSI_DSRC_LaneAttributes_Crosswalk& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_LaneAttributes_Crosswalk<br/>
    * Data class: ASN1T_ETSI_DSRC_LaneAttributes_Crosswalk<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_LaneAttributes_Crosswalk (OSRTMessageBufferIF& msgBuf
      , ASN1T_ETSI_DSRC_LaneAttributes_Crosswalk& data);

   virtual ~ASN1C_ETSI_DSRC_LaneAttributes_Crosswalk () {}

private:
   ASN1C_ETSI_DSRC_LaneAttributes_Crosswalk& operator= (const ASN1C_ETSI_DSRC_LaneAttributes_Crosswalk&) {return *this;}
} ;

EXTERN int asn1PE_ETSI_DSRC_LaneAttributes_Crosswalk (OSCTXT* pctxt, ASN1T_ETSI_DSRC_LaneAttributes_Crosswalk* pvalue);

EXTERN int asn1PD_ETSI_DSRC_LaneAttributes_Crosswalk (OSCTXT* pctxt, ASN1T_ETSI_DSRC_LaneAttributes_Crosswalk* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_LaneAttributes_Crosswalk (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_LaneAttributes_Crosswalk* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_LaneAttributes_Crosswalk (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_LaneAttributes_Crosswalk* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_LaneAttributes_Crosswalk (OSCTXT *pctxt, ASN1T_ETSI_DSRC_LaneAttributes_Crosswalk *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_LaneAttributes_Crosswalk (OSCTXT *pctxt, ASN1T_ETSI_DSRC_LaneAttributes_Crosswalk *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_LaneAttributes_Crosswalk (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_LaneAttributes_Crosswalk* pvalue);

extern EXTERN struct OSBitMapItem g_ASN1T_ETSI_DSRC_LaneAttributes_Crosswalk_NAMEDBITTAB[10];

EXTERN ASN1T_ETSI_DSRC_LaneAttributes_Crosswalk* 
   new_ASN1T_ETSI_DSRC_LaneAttributes_Crosswalk (ASN1CType& ccobj);

EXTERN int asn1Init_ETSI_DSRC_LaneAttributes_Crosswalk (
   ASN1T_ETSI_DSRC_LaneAttributes_Crosswalk* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

/**************************************************************/
/*                                                            */
/*  LaneAttributes_Bike                                       */
/*                                                            */
/**************************************************************/
/*
LaneAttributes-Bike ::= BIT STRING  { bikeRevocableLane(0), pedestrianUseAllowed(1), isBikeFlyOverLane(2), fixedCycleTime(3), biDirectionalCycleTimes(4), isolatedByBarrier(5), unsignalizedSegmentsPresent(6) } (SIZE (16))
*/
struct EXTERN ASN1T_ETSI_DSRC_LaneAttributes_Bike {
   OSOCTET data[2];
   // ctors
   ASN1T_ETSI_DSRC_LaneAttributes_Bike ()  {}
   ASN1T_ETSI_DSRC_LaneAttributes_Bike (const OSOCTET* _data) {
      OSCRTLSAFEMEMCPY (data, 2, _data, 2);
   }
} ;

class EXTERN ASN1C_ETSI_DSRC_LaneAttributes_Bike :
public ASN1CBitStr
{
protected:
   ASN1T_ETSI_DSRC_LaneAttributes_Bike& msgData;
public:
   // named bits
   enum { bikeRevocableLane = 0, pedestrianUseAllowed = 1, isBikeFlyOverLane = 2, fixedCycleTime = 3, biDirectionalCycleTimes = 4, isolatedByBarrier = 5, unsignalizedSegmentsPresent = 6 };

   /**
    * Control class: ASN1C_ETSI_DSRC_LaneAttributes_Bike
    * Data class:    ASN1T_ETSI_DSRC_LaneAttributes_Bike
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_LaneAttributes_Bike
       (ASN1T_ETSI_DSRC_LaneAttributes_Bike& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_LaneAttributes_Bike<br/>
    * Data class: ASN1T_ETSI_DSRC_LaneAttributes_Bike<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_LaneAttributes_Bike (OSRTMessageBufferIF& msgBuf
      , ASN1T_ETSI_DSRC_LaneAttributes_Bike& data);

   virtual ~ASN1C_ETSI_DSRC_LaneAttributes_Bike () {}

private:
   ASN1C_ETSI_DSRC_LaneAttributes_Bike& operator= (const ASN1C_ETSI_DSRC_LaneAttributes_Bike&) {return *this;}
} ;

EXTERN int asn1PE_ETSI_DSRC_LaneAttributes_Bike (OSCTXT* pctxt, ASN1T_ETSI_DSRC_LaneAttributes_Bike* pvalue);

EXTERN int asn1PD_ETSI_DSRC_LaneAttributes_Bike (OSCTXT* pctxt, ASN1T_ETSI_DSRC_LaneAttributes_Bike* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_LaneAttributes_Bike (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_LaneAttributes_Bike* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_LaneAttributes_Bike (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_LaneAttributes_Bike* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_LaneAttributes_Bike (OSCTXT *pctxt, ASN1T_ETSI_DSRC_LaneAttributes_Bike *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_LaneAttributes_Bike (OSCTXT *pctxt, ASN1T_ETSI_DSRC_LaneAttributes_Bike *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_LaneAttributes_Bike (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_LaneAttributes_Bike* pvalue);

extern EXTERN struct OSBitMapItem g_ASN1T_ETSI_DSRC_LaneAttributes_Bike_NAMEDBITTAB[8];

EXTERN ASN1T_ETSI_DSRC_LaneAttributes_Bike* 
   new_ASN1T_ETSI_DSRC_LaneAttributes_Bike (ASN1CType& ccobj);

EXTERN int asn1Init_ETSI_DSRC_LaneAttributes_Bike (
   ASN1T_ETSI_DSRC_LaneAttributes_Bike* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

/**************************************************************/
/*                                                            */
/*  LaneAttributes_Sidewalk                                   */
/*                                                            */
/**************************************************************/
/*
LaneAttributes-Sidewalk ::= BIT STRING  { sidewalk-RevocableLane(0), bicyleUseAllowed(1), isSidewalkFlyOverLane(2), walkBikes(3) } (SIZE (16))
*/
struct EXTERN ASN1T_ETSI_DSRC_LaneAttributes_Sidewalk {
   OSOCTET data[2];
   // ctors
   ASN1T_ETSI_DSRC_LaneAttributes_Sidewalk ()  {}
   ASN1T_ETSI_DSRC_LaneAttributes_Sidewalk (const OSOCTET* _data) {
      OSCRTLSAFEMEMCPY (data, 2, _data, 2);
   }
} ;

class EXTERN ASN1C_ETSI_DSRC_LaneAttributes_Sidewalk :
public ASN1CBitStr
{
protected:
   ASN1T_ETSI_DSRC_LaneAttributes_Sidewalk& msgData;
public:
   // named bits
   enum { sidewalk_RevocableLane = 0, bicyleUseAllowed = 1, isSidewalkFlyOverLane = 2, walkBikes = 3 };

   /**
    * Control class: ASN1C_ETSI_DSRC_LaneAttributes_Sidewalk
    * Data class:    ASN1T_ETSI_DSRC_LaneAttributes_Sidewalk
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_LaneAttributes_Sidewalk
       (ASN1T_ETSI_DSRC_LaneAttributes_Sidewalk& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_LaneAttributes_Sidewalk<br/>
    * Data class: ASN1T_ETSI_DSRC_LaneAttributes_Sidewalk<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_LaneAttributes_Sidewalk (OSRTMessageBufferIF& msgBuf
      , ASN1T_ETSI_DSRC_LaneAttributes_Sidewalk& data);

   virtual ~ASN1C_ETSI_DSRC_LaneAttributes_Sidewalk () {}

private:
   ASN1C_ETSI_DSRC_LaneAttributes_Sidewalk& operator= (const ASN1C_ETSI_DSRC_LaneAttributes_Sidewalk&) {return *this;}
} ;

EXTERN int asn1PE_ETSI_DSRC_LaneAttributes_Sidewalk (OSCTXT* pctxt, ASN1T_ETSI_DSRC_LaneAttributes_Sidewalk* pvalue);

EXTERN int asn1PD_ETSI_DSRC_LaneAttributes_Sidewalk (OSCTXT* pctxt, ASN1T_ETSI_DSRC_LaneAttributes_Sidewalk* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_LaneAttributes_Sidewalk (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_LaneAttributes_Sidewalk* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_LaneAttributes_Sidewalk (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_LaneAttributes_Sidewalk* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_LaneAttributes_Sidewalk (OSCTXT *pctxt, ASN1T_ETSI_DSRC_LaneAttributes_Sidewalk *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_LaneAttributes_Sidewalk (OSCTXT *pctxt, ASN1T_ETSI_DSRC_LaneAttributes_Sidewalk *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_LaneAttributes_Sidewalk (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_LaneAttributes_Sidewalk* pvalue);

extern EXTERN struct OSBitMapItem g_ASN1T_ETSI_DSRC_LaneAttributes_Sidewalk_NAMEDBITTAB[5];

EXTERN ASN1T_ETSI_DSRC_LaneAttributes_Sidewalk* 
   new_ASN1T_ETSI_DSRC_LaneAttributes_Sidewalk (ASN1CType& ccobj);

EXTERN int asn1Init_ETSI_DSRC_LaneAttributes_Sidewalk (
   ASN1T_ETSI_DSRC_LaneAttributes_Sidewalk* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

/**************************************************************/
/*                                                            */
/*  LaneAttributes_Barrier                                    */
/*                                                            */
/**************************************************************/
/*
LaneAttributes-Barrier ::= BIT STRING  { median-RevocableLane(0), median(1), whiteLineHashing(2), stripedLines(3), doubleStripedLines(4), trafficCones(5), constructionBarrier(6), trafficChannels(7), lowCurbs(8), highCurbs(9) } (SIZE (16))
*/
struct EXTERN ASN1T_ETSI_DSRC_LaneAttributes_Barrier {
   OSOCTET data[2];
   // ctors
   ASN1T_ETSI_DSRC_LaneAttributes_Barrier ()  {}
   ASN1T_ETSI_DSRC_LaneAttributes_Barrier (const OSOCTET* _data) {
      OSCRTLSAFEMEMCPY (data, 2, _data, 2);
   }
} ;

class EXTERN ASN1C_ETSI_DSRC_LaneAttributes_Barrier :
public ASN1CBitStr
{
protected:
   ASN1T_ETSI_DSRC_LaneAttributes_Barrier& msgData;
public:
   // named bits
   enum { median_RevocableLane = 0, median = 1, whiteLineHashing = 2, stripedLines = 3, doubleStripedLines = 4, trafficCones = 5, constructionBarrier = 6, trafficChannels = 7, lowCurbs = 8, highCurbs = 9 };

   /**
    * Control class: ASN1C_ETSI_DSRC_LaneAttributes_Barrier
    * Data class:    ASN1T_ETSI_DSRC_LaneAttributes_Barrier
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_LaneAttributes_Barrier
       (ASN1T_ETSI_DSRC_LaneAttributes_Barrier& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_LaneAttributes_Barrier<br/>
    * Data class: ASN1T_ETSI_DSRC_LaneAttributes_Barrier<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_LaneAttributes_Barrier (OSRTMessageBufferIF& msgBuf
      , ASN1T_ETSI_DSRC_LaneAttributes_Barrier& data);

   virtual ~ASN1C_ETSI_DSRC_LaneAttributes_Barrier () {}

private:
   ASN1C_ETSI_DSRC_LaneAttributes_Barrier& operator= (const ASN1C_ETSI_DSRC_LaneAttributes_Barrier&) {return *this;}
} ;

EXTERN int asn1PE_ETSI_DSRC_LaneAttributes_Barrier (OSCTXT* pctxt, ASN1T_ETSI_DSRC_LaneAttributes_Barrier* pvalue);

EXTERN int asn1PD_ETSI_DSRC_LaneAttributes_Barrier (OSCTXT* pctxt, ASN1T_ETSI_DSRC_LaneAttributes_Barrier* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_LaneAttributes_Barrier (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_LaneAttributes_Barrier* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_LaneAttributes_Barrier (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_LaneAttributes_Barrier* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_LaneAttributes_Barrier (OSCTXT *pctxt, ASN1T_ETSI_DSRC_LaneAttributes_Barrier *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_LaneAttributes_Barrier (OSCTXT *pctxt, ASN1T_ETSI_DSRC_LaneAttributes_Barrier *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_LaneAttributes_Barrier (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_LaneAttributes_Barrier* pvalue);

extern EXTERN struct OSBitMapItem g_ASN1T_ETSI_DSRC_LaneAttributes_Barrier_NAMEDBITTAB[11];

EXTERN ASN1T_ETSI_DSRC_LaneAttributes_Barrier* 
   new_ASN1T_ETSI_DSRC_LaneAttributes_Barrier (ASN1CType& ccobj);

EXTERN int asn1Init_ETSI_DSRC_LaneAttributes_Barrier (
   ASN1T_ETSI_DSRC_LaneAttributes_Barrier* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

/**************************************************************/
/*                                                            */
/*  LaneAttributes_Striping                                   */
/*                                                            */
/**************************************************************/
/*
LaneAttributes-Striping ::= BIT STRING  { stripeToConnectingLanesRevocableLane(0), stripeDrawOnLeft(1), stripeDrawOnRight(2), stripeToConnectingLanesLeft(3), stripeToConnectingLanesRight(4), stripeToConnectingLanesAhead(5) } (SIZE (16))
*/
struct EXTERN ASN1T_ETSI_DSRC_LaneAttributes_Striping {
   OSOCTET data[2];
   // ctors
   ASN1T_ETSI_DSRC_LaneAttributes_Striping ()  {}
   ASN1T_ETSI_DSRC_LaneAttributes_Striping (const OSOCTET* _data) {
      OSCRTLSAFEMEMCPY (data, 2, _data, 2);
   }
} ;

class EXTERN ASN1C_ETSI_DSRC_LaneAttributes_Striping :
public ASN1CBitStr
{
protected:
   ASN1T_ETSI_DSRC_LaneAttributes_Striping& msgData;
public:
   // named bits
   enum { stripeToConnectingLanesRevocableLane = 0, stripeDrawOnLeft = 1, stripeDrawOnRight = 2, stripeToConnectingLanesLeft = 3, stripeToConnectingLanesRight = 4, stripeToConnectingLanesAhead = 5 };

   /**
    * Control class: ASN1C_ETSI_DSRC_LaneAttributes_Striping
    * Data class:    ASN1T_ETSI_DSRC_LaneAttributes_Striping
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_LaneAttributes_Striping
       (ASN1T_ETSI_DSRC_LaneAttributes_Striping& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_LaneAttributes_Striping<br/>
    * Data class: ASN1T_ETSI_DSRC_LaneAttributes_Striping<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_LaneAttributes_Striping (OSRTMessageBufferIF& msgBuf
      , ASN1T_ETSI_DSRC_LaneAttributes_Striping& data);

   virtual ~ASN1C_ETSI_DSRC_LaneAttributes_Striping () {}

private:
   ASN1C_ETSI_DSRC_LaneAttributes_Striping& operator= (const ASN1C_ETSI_DSRC_LaneAttributes_Striping&) {return *this;}
} ;

EXTERN int asn1PE_ETSI_DSRC_LaneAttributes_Striping (OSCTXT* pctxt, ASN1T_ETSI_DSRC_LaneAttributes_Striping* pvalue);

EXTERN int asn1PD_ETSI_DSRC_LaneAttributes_Striping (OSCTXT* pctxt, ASN1T_ETSI_DSRC_LaneAttributes_Striping* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_LaneAttributes_Striping (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_LaneAttributes_Striping* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_LaneAttributes_Striping (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_LaneAttributes_Striping* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_LaneAttributes_Striping (OSCTXT *pctxt, ASN1T_ETSI_DSRC_LaneAttributes_Striping *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_LaneAttributes_Striping (OSCTXT *pctxt, ASN1T_ETSI_DSRC_LaneAttributes_Striping *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_LaneAttributes_Striping (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_LaneAttributes_Striping* pvalue);

extern EXTERN struct OSBitMapItem g_ASN1T_ETSI_DSRC_LaneAttributes_Striping_NAMEDBITTAB[7];

EXTERN ASN1T_ETSI_DSRC_LaneAttributes_Striping* 
   new_ASN1T_ETSI_DSRC_LaneAttributes_Striping (ASN1CType& ccobj);

EXTERN int asn1Init_ETSI_DSRC_LaneAttributes_Striping (
   ASN1T_ETSI_DSRC_LaneAttributes_Striping* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

/**************************************************************/
/*                                                            */
/*  LaneAttributes_TrackedVehicle                             */
/*                                                            */
/**************************************************************/
/*
LaneAttributes-TrackedVehicle ::= BIT STRING  { spec-RevocableLane(0), spec-commuterRailRoadTrack(1), spec-lightRailRoadTrack(2), spec-heavyRailRoadTrack(3), spec-otherRailType(4) } (SIZE (16))
*/
struct EXTERN ASN1T_ETSI_DSRC_LaneAttributes_TrackedVehicle {
   OSOCTET data[2];
   // ctors
   ASN1T_ETSI_DSRC_LaneAttributes_TrackedVehicle ()  {}
   ASN1T_ETSI_DSRC_LaneAttributes_TrackedVehicle (const OSOCTET* _data) {
      OSCRTLSAFEMEMCPY (data, 2, _data, 2);
   }
} ;

class EXTERN ASN1C_ETSI_DSRC_LaneAttributes_TrackedVehicle :
public ASN1CBitStr
{
protected:
   ASN1T_ETSI_DSRC_LaneAttributes_TrackedVehicle& msgData;
public:
   // named bits
   enum { spec_RevocableLane = 0, spec_commuterRailRoadTrack = 1, spec_lightRailRoadTrack = 2, spec_heavyRailRoadTrack = 3, spec_otherRailType = 4 };

   /**
    * Control class: ASN1C_ETSI_DSRC_LaneAttributes_TrackedVehicle
    * Data class:    ASN1T_ETSI_DSRC_LaneAttributes_TrackedVehicle
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_LaneAttributes_TrackedVehicle
       (ASN1T_ETSI_DSRC_LaneAttributes_TrackedVehicle& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_LaneAttributes_TrackedVehicle<br/>
    * Data class: ASN1T_ETSI_DSRC_LaneAttributes_TrackedVehicle<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_LaneAttributes_TrackedVehicle (OSRTMessageBufferIF& msgBuf
      , ASN1T_ETSI_DSRC_LaneAttributes_TrackedVehicle& data);

   virtual ~ASN1C_ETSI_DSRC_LaneAttributes_TrackedVehicle () {}

private:
   ASN1C_ETSI_DSRC_LaneAttributes_TrackedVehicle& operator= (const ASN1C_ETSI_DSRC_LaneAttributes_TrackedVehicle&) {return *this;}
} ;

EXTERN int asn1PE_ETSI_DSRC_LaneAttributes_TrackedVehicle (OSCTXT* pctxt, ASN1T_ETSI_DSRC_LaneAttributes_TrackedVehicle* pvalue);

EXTERN int asn1PD_ETSI_DSRC_LaneAttributes_TrackedVehicle (OSCTXT* pctxt, ASN1T_ETSI_DSRC_LaneAttributes_TrackedVehicle* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_LaneAttributes_TrackedVehicle (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_LaneAttributes_TrackedVehicle* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_LaneAttributes_TrackedVehicle (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_LaneAttributes_TrackedVehicle* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_LaneAttributes_TrackedVehicle (OSCTXT *pctxt, ASN1T_ETSI_DSRC_LaneAttributes_TrackedVehicle *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_LaneAttributes_TrackedVehicle (OSCTXT *pctxt, ASN1T_ETSI_DSRC_LaneAttributes_TrackedVehicle *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_LaneAttributes_TrackedVehicle (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_LaneAttributes_TrackedVehicle* pvalue);

extern EXTERN struct OSBitMapItem g_ASN1T_ETSI_DSRC_LaneAttributes_TrackedVehicle_NAMEDBITTAB[6];

EXTERN ASN1T_ETSI_DSRC_LaneAttributes_TrackedVehicle* 
   new_ASN1T_ETSI_DSRC_LaneAttributes_TrackedVehicle (ASN1CType& ccobj);

EXTERN int asn1Init_ETSI_DSRC_LaneAttributes_TrackedVehicle (
   ASN1T_ETSI_DSRC_LaneAttributes_TrackedVehicle* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

/**************************************************************/
/*                                                            */
/*  LaneAttributes_Parking                                    */
/*                                                            */
/**************************************************************/
/*
LaneAttributes-Parking ::= BIT STRING  { parkingRevocableLane(0), parallelParkingInUse(1), headInParkingInUse(2), doNotParkZone(3), parkingForBusUse(4), parkingForTaxiUse(5), noPublicParkingUse(6) } (SIZE (16))
*/
struct EXTERN ASN1T_ETSI_DSRC_LaneAttributes_Parking {
   OSOCTET data[2];
   // ctors
   ASN1T_ETSI_DSRC_LaneAttributes_Parking ()  {}
   ASN1T_ETSI_DSRC_LaneAttributes_Parking (const OSOCTET* _data) {
      OSCRTLSAFEMEMCPY (data, 2, _data, 2);
   }
} ;

class EXTERN ASN1C_ETSI_DSRC_LaneAttributes_Parking :
public ASN1CBitStr
{
protected:
   ASN1T_ETSI_DSRC_LaneAttributes_Parking& msgData;
public:
   // named bits
   enum { parkingRevocableLane = 0, parallelParkingInUse = 1, headInParkingInUse = 2, doNotParkZone = 3, parkingForBusUse = 4, parkingForTaxiUse = 5, noPublicParkingUse = 6 };

   /**
    * Control class: ASN1C_ETSI_DSRC_LaneAttributes_Parking
    * Data class:    ASN1T_ETSI_DSRC_LaneAttributes_Parking
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_LaneAttributes_Parking
       (ASN1T_ETSI_DSRC_LaneAttributes_Parking& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_LaneAttributes_Parking<br/>
    * Data class: ASN1T_ETSI_DSRC_LaneAttributes_Parking<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_LaneAttributes_Parking (OSRTMessageBufferIF& msgBuf
      , ASN1T_ETSI_DSRC_LaneAttributes_Parking& data);

   virtual ~ASN1C_ETSI_DSRC_LaneAttributes_Parking () {}

private:
   ASN1C_ETSI_DSRC_LaneAttributes_Parking& operator= (const ASN1C_ETSI_DSRC_LaneAttributes_Parking&) {return *this;}
} ;

EXTERN int asn1PE_ETSI_DSRC_LaneAttributes_Parking (OSCTXT* pctxt, ASN1T_ETSI_DSRC_LaneAttributes_Parking* pvalue);

EXTERN int asn1PD_ETSI_DSRC_LaneAttributes_Parking (OSCTXT* pctxt, ASN1T_ETSI_DSRC_LaneAttributes_Parking* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_LaneAttributes_Parking (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_LaneAttributes_Parking* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_LaneAttributes_Parking (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_LaneAttributes_Parking* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_LaneAttributes_Parking (OSCTXT *pctxt, ASN1T_ETSI_DSRC_LaneAttributes_Parking *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_LaneAttributes_Parking (OSCTXT *pctxt, ASN1T_ETSI_DSRC_LaneAttributes_Parking *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_LaneAttributes_Parking (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_LaneAttributes_Parking* pvalue);

extern EXTERN struct OSBitMapItem g_ASN1T_ETSI_DSRC_LaneAttributes_Parking_NAMEDBITTAB[8];

EXTERN ASN1T_ETSI_DSRC_LaneAttributes_Parking* 
   new_ASN1T_ETSI_DSRC_LaneAttributes_Parking (ASN1CType& ccobj);

EXTERN int asn1Init_ETSI_DSRC_LaneAttributes_Parking (
   ASN1T_ETSI_DSRC_LaneAttributes_Parking* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

/**************************************************************/
/*                                                            */
/*  LaneTypeAttributes                                        */
/*                                                            */
/**************************************************************/
/*
LaneTypeAttributes ::= CHOICE {
   vehicle [0] LaneAttributes-Vehicle,
   crosswalk [1] LaneAttributes-Crosswalk,
   bikeLane [2] LaneAttributes-Bike,
   sidewalk [3] LaneAttributes-Sidewalk,
   median [4] LaneAttributes-Barrier,
   striping [5] LaneAttributes-Striping,
   trackedVehicle [6] LaneAttributes-TrackedVehicle,
   parking [7] LaneAttributes-Parking,
   ...
}
*/
/* Choice tag constants */

#define T_ETSI_DSRC_LaneTypeAttributes_vehicle 1
#define T_ETSI_DSRC_LaneTypeAttributes_crosswalk 2
#define T_ETSI_DSRC_LaneTypeAttributes_bikeLane 3
#define T_ETSI_DSRC_LaneTypeAttributes_sidewalk 4
#define T_ETSI_DSRC_LaneTypeAttributes_median 5
#define T_ETSI_DSRC_LaneTypeAttributes_striping 6
#define T_ETSI_DSRC_LaneTypeAttributes_trackedVehicle 7
#define T_ETSI_DSRC_LaneTypeAttributes_parking 8
#define T_ETSI_DSRC_LaneTypeAttributes_extElem1 9

struct EXTERN ASN1T_ETSI_DSRC_LaneTypeAttributes {
   OSINT32 t;
   union {
      /* t = 1 */
      ASN1T_ETSI_DSRC_LaneAttributes_Vehicle *vehicle;
      /* t = 2 */
      ASN1T_ETSI_DSRC_LaneAttributes_Crosswalk *crosswalk;
      /* t = 3 */
      ASN1T_ETSI_DSRC_LaneAttributes_Bike *bikeLane;
      /* t = 4 */
      ASN1T_ETSI_DSRC_LaneAttributes_Sidewalk *sidewalk;
      /* t = 5 */
      ASN1T_ETSI_DSRC_LaneAttributes_Barrier *median;
      /* t = 6 */
      ASN1T_ETSI_DSRC_LaneAttributes_Striping *striping;
      /* t = 7 */
      ASN1T_ETSI_DSRC_LaneAttributes_TrackedVehicle *trackedVehicle;
      /* t = 8 */
      ASN1T_ETSI_DSRC_LaneAttributes_Parking *parking;
      /* t = 9 */
      ASN1TOpenType *extElem1;
   } u;
   ASN1T_ETSI_DSRC_LaneTypeAttributes () { t = 0; OSCRTLMEMSET (&u, 0, sizeof(u)); }
} ;

EXTERN int asn1PE_ETSI_DSRC_LaneTypeAttributes (OSCTXT* pctxt, ASN1T_ETSI_DSRC_LaneTypeAttributes* pvalue);

EXTERN int asn1PD_ETSI_DSRC_LaneTypeAttributes (OSCTXT* pctxt, ASN1T_ETSI_DSRC_LaneTypeAttributes* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_LaneTypeAttributes (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_LaneTypeAttributes* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_LaneTypeAttributes (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_LaneTypeAttributes* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_LaneTypeAttributes (OSCTXT *pctxt, ASN1T_ETSI_DSRC_LaneTypeAttributes *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_LaneTypeAttributes (OSCTXT *pctxt, ASN1T_ETSI_DSRC_LaneTypeAttributes *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_LaneTypeAttributes (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_LaneTypeAttributes* pvalue);

EXTERN ASN1T_ETSI_DSRC_LaneTypeAttributes* 
   new_ASN1T_ETSI_DSRC_LaneTypeAttributes (ASN1CType& ccobj);

EXTERN int asn1Init_ETSI_DSRC_LaneTypeAttributes (
   ASN1T_ETSI_DSRC_LaneTypeAttributes* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_LaneTypeAttributes (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_LaneTypeAttributes* pvalue);

/**************************************************************/
/*                                                            */
/*  VehicleHeight                                             */
/*                                                            */
/**************************************************************/
/*
VehicleHeight ::= INTEGER (0..127)
*/
typedef OSUINT8 ASN1T_ETSI_DSRC_VehicleHeight;

EXTERN int asn1PE_ETSI_DSRC_VehicleHeight (OSCTXT* pctxt, ASN1T_ETSI_DSRC_VehicleHeight value);

EXTERN int asn1PD_ETSI_DSRC_VehicleHeight (OSCTXT* pctxt, ASN1T_ETSI_DSRC_VehicleHeight* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_VehicleHeight (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_VehicleHeight value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_VehicleHeight (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_VehicleHeight* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_VehicleHeight (OSCTXT *pctxt, ASN1T_ETSI_DSRC_VehicleHeight *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_VehicleHeight (OSCTXT *pctxt, ASN1T_ETSI_DSRC_VehicleHeight *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_VehicleHeight (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_VehicleHeight* pvalue);

EXTERN ASN1T_ETSI_DSRC_VehicleHeight* 
   new_ASN1T_ETSI_DSRC_VehicleHeight (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  LaneAttributes_regional                                   */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'LaneAttributes'
*/
struct EXTERN ASN1T_ETSI_DSRC_LaneAttributes_regional {
   ASN1T_ETSI_DSRC_RegionId regionId;
   struct  {
      /**
       * information object selector
       */
      OSUINT16 t;

      /**
       * Reg-LaneAttributes information objects
       */
      union {
         /**
          * id: addGrpC
          */
         struct ASN1T_ETSI_GrpC_LaneAttributes_addGrpC *_ETSI_REG_Reg_LaneAttributes_addGrpC;

         ASN1TOpenType* extElem1;
      } u;
   } regExtValue;
   ASN1T_ETSI_DSRC_LaneAttributes_regional ();
} ;

EXTERN int asn1PE_ETSI_DSRC_LaneAttributes_regional (OSCTXT* pctxt, ASN1T_ETSI_DSRC_LaneAttributes_regional* pvalue);

EXTERN int asn1PD_ETSI_DSRC_LaneAttributes_regional (OSCTXT* pctxt, ASN1T_ETSI_DSRC_LaneAttributes_regional* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_LaneAttributes_regional (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_LaneAttributes_regional* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_LaneAttributes_regional (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_LaneAttributes_regional* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_LaneAttributes_regional (OSCTXT *pctxt, ASN1T_ETSI_DSRC_LaneAttributes_regional *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_LaneAttributes_regional (OSCTXT *pctxt, ASN1T_ETSI_DSRC_LaneAttributes_regional *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_LaneAttributes_regional (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_LaneAttributes_regional* pvalue);

EXTERN ASN1T_ETSI_DSRC_LaneAttributes_regional* 
   new_ASN1T_ETSI_DSRC_LaneAttributes_regional (ASN1CType& ccobj);

EXTERN int asn1Init_ETSI_DSRC_LaneAttributes_regional (
   ASN1T_ETSI_DSRC_LaneAttributes_regional* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_LaneAttributes_regional (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_LaneAttributes_regional* pvalue);

/**************************************************************/
/*                                                            */
/*  LaneAttributes                                            */
/*                                                            */
/**************************************************************/
/*
LaneAttributes ::= SEQUENCE {
   directionalUse [0] LaneDirection,
   sharedWith [1] LaneSharing,
   laneType [2] EXPLICIT LaneTypeAttributes,
   regional [3] SEQUENCE {
      regionId [0] REG-EXT-ID-AND-TYPE.&id ({Reg-LaneAttributes}),
      regExtValue [1] EXPLICIT REG-EXT-ID-AND-TYPE.&Type ({Reg-LaneAttributes}{@regionId})
   } OPTIONAL
}
*/
struct EXTERN ASN1T_ETSI_DSRC_LaneAttributes {
   struct {
      unsigned regionalPresent : 1;
   } m;
   ASN1T_ETSI_DSRC_LaneDirection directionalUse;
   ASN1T_ETSI_DSRC_LaneSharing sharedWith;
   ASN1T_ETSI_DSRC_LaneTypeAttributes laneType;
   ASN1T_ETSI_DSRC_LaneAttributes_regional regional;
   ASN1T_ETSI_DSRC_LaneAttributes ();
} ;

EXTERN int asn1PE_ETSI_DSRC_LaneAttributes (OSCTXT* pctxt, ASN1T_ETSI_DSRC_LaneAttributes* pvalue);

EXTERN int asn1PD_ETSI_DSRC_LaneAttributes (OSCTXT* pctxt, ASN1T_ETSI_DSRC_LaneAttributes* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_LaneAttributes (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_LaneAttributes* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_LaneAttributes (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_LaneAttributes* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_LaneAttributes (OSCTXT *pctxt, ASN1T_ETSI_DSRC_LaneAttributes *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_LaneAttributes (OSCTXT *pctxt, ASN1T_ETSI_DSRC_LaneAttributes *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_LaneAttributes (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_LaneAttributes* pvalue);

EXTERN ASN1T_ETSI_DSRC_LaneAttributes* 
   new_ASN1T_ETSI_DSRC_LaneAttributes (ASN1CType& ccobj);

EXTERN int asn1Init_ETSI_DSRC_LaneAttributes (ASN1T_ETSI_DSRC_LaneAttributes* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_LaneAttributes (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_LaneAttributes* pvalue);

/**************************************************************/
/*                                                            */
/*  AllowedManeuvers                                          */
/*                                                            */
/**************************************************************/
/*
AllowedManeuvers ::= BIT STRING  { maneuverStraightAllowed(0), maneuverLeftAllowed(1), maneuverRightAllowed(2), maneuverUTurnAllowed(3), maneuverLeftTurnOnRedAllowed(4), maneuverRightTurnOnRedAllowed(5), maneuverLaneChangeAllowed(6), maneuverNoStoppingAllowed(7), yieldAllwaysRequired(8), goWithHalt(9), caution(10), reserved1(11) } (SIZE (12))
*/
struct EXTERN ASN1T_ETSI_DSRC_AllowedManeuvers {
   OSOCTET data[2];
   // ctors
   ASN1T_ETSI_DSRC_AllowedManeuvers ()  {}
   ASN1T_ETSI_DSRC_AllowedManeuvers (const OSOCTET* _data) {
      OSCRTLSAFEMEMCPY (data, 2, _data, 2);
   }
} ;

class EXTERN ASN1C_ETSI_DSRC_AllowedManeuvers :
public ASN1CBitStr
{
protected:
   ASN1T_ETSI_DSRC_AllowedManeuvers& msgData;
public:
   // named bits
   enum { maneuverStraightAllowed = 0, maneuverLeftAllowed = 1, maneuverRightAllowed = 2, maneuverUTurnAllowed = 3, maneuverLeftTurnOnRedAllowed = 4, maneuverRightTurnOnRedAllowed = 5, maneuverLaneChangeAllowed = 6, maneuverNoStoppingAllowed = 7, yieldAllwaysRequired = 8, goWithHalt = 9, caution = 10, reserved1 = 11 };

   /**
    * Control class: ASN1C_ETSI_DSRC_AllowedManeuvers
    * Data class:    ASN1T_ETSI_DSRC_AllowedManeuvers
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_AllowedManeuvers (ASN1T_ETSI_DSRC_AllowedManeuvers& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_AllowedManeuvers<br/>
    * Data class: ASN1T_ETSI_DSRC_AllowedManeuvers<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_AllowedManeuvers (OSRTMessageBufferIF& msgBuf
      , ASN1T_ETSI_DSRC_AllowedManeuvers& data);

   virtual ~ASN1C_ETSI_DSRC_AllowedManeuvers () {}

private:
   ASN1C_ETSI_DSRC_AllowedManeuvers& operator= (const ASN1C_ETSI_DSRC_AllowedManeuvers&) {return *this;}
} ;

EXTERN int asn1PE_ETSI_DSRC_AllowedManeuvers (OSCTXT* pctxt, ASN1T_ETSI_DSRC_AllowedManeuvers* pvalue);

EXTERN int asn1PD_ETSI_DSRC_AllowedManeuvers (OSCTXT* pctxt, ASN1T_ETSI_DSRC_AllowedManeuvers* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_AllowedManeuvers (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_AllowedManeuvers* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_AllowedManeuvers (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_AllowedManeuvers* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_AllowedManeuvers (OSCTXT *pctxt, ASN1T_ETSI_DSRC_AllowedManeuvers *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_AllowedManeuvers (OSCTXT *pctxt, ASN1T_ETSI_DSRC_AllowedManeuvers *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_AllowedManeuvers (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_AllowedManeuvers* pvalue);

extern EXTERN struct OSBitMapItem g_ASN1T_ETSI_DSRC_AllowedManeuvers_NAMEDBITTAB[13];

EXTERN ASN1T_ETSI_DSRC_AllowedManeuvers* 
   new_ASN1T_ETSI_DSRC_AllowedManeuvers (ASN1CType& ccobj);

EXTERN int asn1Init_ETSI_DSRC_AllowedManeuvers (
   ASN1T_ETSI_DSRC_AllowedManeuvers* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

/**************************************************************/
/*                                                            */
/*  Offset_B10                                                */
/*                                                            */
/**************************************************************/
/*
Offset-B10 ::= INTEGER (-512..511)
*/
typedef OSINT16 ASN1T_ETSI_DSRC_Offset_B10;

EXTERN int asn1PE_ETSI_DSRC_Offset_B10 (OSCTXT* pctxt, ASN1T_ETSI_DSRC_Offset_B10 value);

EXTERN int asn1PD_ETSI_DSRC_Offset_B10 (OSCTXT* pctxt, ASN1T_ETSI_DSRC_Offset_B10* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_Offset_B10 (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_Offset_B10 value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_Offset_B10 (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_Offset_B10* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_Offset_B10 (OSCTXT *pctxt, ASN1T_ETSI_DSRC_Offset_B10 *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_Offset_B10 (OSCTXT *pctxt, ASN1T_ETSI_DSRC_Offset_B10 *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_Offset_B10 (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_Offset_B10* pvalue);

EXTERN ASN1T_ETSI_DSRC_Offset_B10* 
   new_ASN1T_ETSI_DSRC_Offset_B10 (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  Node_XY_20b                                               */
/*                                                            */
/**************************************************************/
/*
Node-XY-20b ::= SEQUENCE {
   x [0] Offset-B10,
   y [1] Offset-B10
}
*/
struct EXTERN ASN1T_ETSI_DSRC_Node_XY_20b {
   ASN1T_ETSI_DSRC_Offset_B10 x;
   ASN1T_ETSI_DSRC_Offset_B10 y;
} ;

EXTERN int asn1PE_ETSI_DSRC_Node_XY_20b (OSCTXT* pctxt, ASN1T_ETSI_DSRC_Node_XY_20b* pvalue);

EXTERN int asn1PD_ETSI_DSRC_Node_XY_20b (OSCTXT* pctxt, ASN1T_ETSI_DSRC_Node_XY_20b* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_Node_XY_20b (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_Node_XY_20b* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_Node_XY_20b (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_Node_XY_20b* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_Node_XY_20b (OSCTXT *pctxt, ASN1T_ETSI_DSRC_Node_XY_20b *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_Node_XY_20b (OSCTXT *pctxt, ASN1T_ETSI_DSRC_Node_XY_20b *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_Node_XY_20b (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_Node_XY_20b* pvalue);

EXTERN ASN1T_ETSI_DSRC_Node_XY_20b* 
   new_ASN1T_ETSI_DSRC_Node_XY_20b (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  Offset_B11                                                */
/*                                                            */
/**************************************************************/
/*
Offset-B11 ::= INTEGER (-1024..1023)
*/
typedef OSINT16 ASN1T_ETSI_DSRC_Offset_B11;

EXTERN int asn1PE_ETSI_DSRC_Offset_B11 (OSCTXT* pctxt, ASN1T_ETSI_DSRC_Offset_B11 value);

EXTERN int asn1PD_ETSI_DSRC_Offset_B11 (OSCTXT* pctxt, ASN1T_ETSI_DSRC_Offset_B11* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_Offset_B11 (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_Offset_B11 value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_Offset_B11 (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_Offset_B11* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_Offset_B11 (OSCTXT *pctxt, ASN1T_ETSI_DSRC_Offset_B11 *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_Offset_B11 (OSCTXT *pctxt, ASN1T_ETSI_DSRC_Offset_B11 *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_Offset_B11 (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_Offset_B11* pvalue);

EXTERN ASN1T_ETSI_DSRC_Offset_B11* 
   new_ASN1T_ETSI_DSRC_Offset_B11 (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  Node_XY_22b                                               */
/*                                                            */
/**************************************************************/
/*
Node-XY-22b ::= SEQUENCE {
   x [0] Offset-B11,
   y [1] Offset-B11
}
*/
struct EXTERN ASN1T_ETSI_DSRC_Node_XY_22b {
   ASN1T_ETSI_DSRC_Offset_B11 x;
   ASN1T_ETSI_DSRC_Offset_B11 y;
} ;

EXTERN int asn1PE_ETSI_DSRC_Node_XY_22b (OSCTXT* pctxt, ASN1T_ETSI_DSRC_Node_XY_22b* pvalue);

EXTERN int asn1PD_ETSI_DSRC_Node_XY_22b (OSCTXT* pctxt, ASN1T_ETSI_DSRC_Node_XY_22b* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_Node_XY_22b (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_Node_XY_22b* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_Node_XY_22b (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_Node_XY_22b* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_Node_XY_22b (OSCTXT *pctxt, ASN1T_ETSI_DSRC_Node_XY_22b *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_Node_XY_22b (OSCTXT *pctxt, ASN1T_ETSI_DSRC_Node_XY_22b *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_Node_XY_22b (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_Node_XY_22b* pvalue);

EXTERN ASN1T_ETSI_DSRC_Node_XY_22b* 
   new_ASN1T_ETSI_DSRC_Node_XY_22b (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  Offset_B12                                                */
/*                                                            */
/**************************************************************/
/*
Offset-B12 ::= INTEGER (-2048..2047)
*/
typedef OSINT16 ASN1T_ETSI_DSRC_Offset_B12;

EXTERN int asn1PE_ETSI_DSRC_Offset_B12 (OSCTXT* pctxt, ASN1T_ETSI_DSRC_Offset_B12 value);

EXTERN int asn1PD_ETSI_DSRC_Offset_B12 (OSCTXT* pctxt, ASN1T_ETSI_DSRC_Offset_B12* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_Offset_B12 (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_Offset_B12 value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_Offset_B12 (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_Offset_B12* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_Offset_B12 (OSCTXT *pctxt, ASN1T_ETSI_DSRC_Offset_B12 *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_Offset_B12 (OSCTXT *pctxt, ASN1T_ETSI_DSRC_Offset_B12 *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_Offset_B12 (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_Offset_B12* pvalue);

EXTERN ASN1T_ETSI_DSRC_Offset_B12* 
   new_ASN1T_ETSI_DSRC_Offset_B12 (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  Node_XY_24b                                               */
/*                                                            */
/**************************************************************/
/*
Node-XY-24b ::= SEQUENCE {
   x [0] Offset-B12,
   y [1] Offset-B12
}
*/
struct EXTERN ASN1T_ETSI_DSRC_Node_XY_24b {
   ASN1T_ETSI_DSRC_Offset_B12 x;
   ASN1T_ETSI_DSRC_Offset_B12 y;
} ;

EXTERN int asn1PE_ETSI_DSRC_Node_XY_24b (OSCTXT* pctxt, ASN1T_ETSI_DSRC_Node_XY_24b* pvalue);

EXTERN int asn1PD_ETSI_DSRC_Node_XY_24b (OSCTXT* pctxt, ASN1T_ETSI_DSRC_Node_XY_24b* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_Node_XY_24b (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_Node_XY_24b* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_Node_XY_24b (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_Node_XY_24b* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_Node_XY_24b (OSCTXT *pctxt, ASN1T_ETSI_DSRC_Node_XY_24b *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_Node_XY_24b (OSCTXT *pctxt, ASN1T_ETSI_DSRC_Node_XY_24b *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_Node_XY_24b (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_Node_XY_24b* pvalue);

EXTERN ASN1T_ETSI_DSRC_Node_XY_24b* 
   new_ASN1T_ETSI_DSRC_Node_XY_24b (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  Offset_B13                                                */
/*                                                            */
/**************************************************************/
/*
Offset-B13 ::= INTEGER (-4096..4095)
*/
typedef OSINT16 ASN1T_ETSI_DSRC_Offset_B13;

EXTERN int asn1PE_ETSI_DSRC_Offset_B13 (OSCTXT* pctxt, ASN1T_ETSI_DSRC_Offset_B13 value);

EXTERN int asn1PD_ETSI_DSRC_Offset_B13 (OSCTXT* pctxt, ASN1T_ETSI_DSRC_Offset_B13* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_Offset_B13 (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_Offset_B13 value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_Offset_B13 (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_Offset_B13* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_Offset_B13 (OSCTXT *pctxt, ASN1T_ETSI_DSRC_Offset_B13 *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_Offset_B13 (OSCTXT *pctxt, ASN1T_ETSI_DSRC_Offset_B13 *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_Offset_B13 (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_Offset_B13* pvalue);

EXTERN ASN1T_ETSI_DSRC_Offset_B13* 
   new_ASN1T_ETSI_DSRC_Offset_B13 (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  Node_XY_26b                                               */
/*                                                            */
/**************************************************************/
/*
Node-XY-26b ::= SEQUENCE {
   x [0] Offset-B13,
   y [1] Offset-B13
}
*/
struct EXTERN ASN1T_ETSI_DSRC_Node_XY_26b {
   ASN1T_ETSI_DSRC_Offset_B13 x;
   ASN1T_ETSI_DSRC_Offset_B13 y;
} ;

EXTERN int asn1PE_ETSI_DSRC_Node_XY_26b (OSCTXT* pctxt, ASN1T_ETSI_DSRC_Node_XY_26b* pvalue);

EXTERN int asn1PD_ETSI_DSRC_Node_XY_26b (OSCTXT* pctxt, ASN1T_ETSI_DSRC_Node_XY_26b* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_Node_XY_26b (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_Node_XY_26b* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_Node_XY_26b (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_Node_XY_26b* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_Node_XY_26b (OSCTXT *pctxt, ASN1T_ETSI_DSRC_Node_XY_26b *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_Node_XY_26b (OSCTXT *pctxt, ASN1T_ETSI_DSRC_Node_XY_26b *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_Node_XY_26b (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_Node_XY_26b* pvalue);

EXTERN ASN1T_ETSI_DSRC_Node_XY_26b* 
   new_ASN1T_ETSI_DSRC_Node_XY_26b (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  Offset_B14                                                */
/*                                                            */
/**************************************************************/
/*
Offset-B14 ::= INTEGER (-8192..8191)
*/
typedef OSINT16 ASN1T_ETSI_DSRC_Offset_B14;

EXTERN int asn1PE_ETSI_DSRC_Offset_B14 (OSCTXT* pctxt, ASN1T_ETSI_DSRC_Offset_B14 value);

EXTERN int asn1PD_ETSI_DSRC_Offset_B14 (OSCTXT* pctxt, ASN1T_ETSI_DSRC_Offset_B14* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_Offset_B14 (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_Offset_B14 value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_Offset_B14 (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_Offset_B14* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_Offset_B14 (OSCTXT *pctxt, ASN1T_ETSI_DSRC_Offset_B14 *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_Offset_B14 (OSCTXT *pctxt, ASN1T_ETSI_DSRC_Offset_B14 *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_Offset_B14 (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_Offset_B14* pvalue);

EXTERN ASN1T_ETSI_DSRC_Offset_B14* 
   new_ASN1T_ETSI_DSRC_Offset_B14 (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  Node_XY_28b                                               */
/*                                                            */
/**************************************************************/
/*
Node-XY-28b ::= SEQUENCE {
   x [0] Offset-B14,
   y [1] Offset-B14
}
*/
struct EXTERN ASN1T_ETSI_DSRC_Node_XY_28b {
   ASN1T_ETSI_DSRC_Offset_B14 x;
   ASN1T_ETSI_DSRC_Offset_B14 y;
} ;

EXTERN int asn1PE_ETSI_DSRC_Node_XY_28b (OSCTXT* pctxt, ASN1T_ETSI_DSRC_Node_XY_28b* pvalue);

EXTERN int asn1PD_ETSI_DSRC_Node_XY_28b (OSCTXT* pctxt, ASN1T_ETSI_DSRC_Node_XY_28b* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_Node_XY_28b (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_Node_XY_28b* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_Node_XY_28b (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_Node_XY_28b* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_Node_XY_28b (OSCTXT *pctxt, ASN1T_ETSI_DSRC_Node_XY_28b *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_Node_XY_28b (OSCTXT *pctxt, ASN1T_ETSI_DSRC_Node_XY_28b *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_Node_XY_28b (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_Node_XY_28b* pvalue);

EXTERN ASN1T_ETSI_DSRC_Node_XY_28b* 
   new_ASN1T_ETSI_DSRC_Node_XY_28b (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  Offset_B16                                                */
/*                                                            */
/**************************************************************/
/*
Offset-B16 ::= INTEGER (-32768..32767)
*/
typedef OSINT16 ASN1T_ETSI_DSRC_Offset_B16;

EXTERN int asn1PE_ETSI_DSRC_Offset_B16 (OSCTXT* pctxt, ASN1T_ETSI_DSRC_Offset_B16 value);

EXTERN int asn1PD_ETSI_DSRC_Offset_B16 (OSCTXT* pctxt, ASN1T_ETSI_DSRC_Offset_B16* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_Offset_B16 (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_Offset_B16 value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_Offset_B16 (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_Offset_B16* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_Offset_B16 (OSCTXT *pctxt, ASN1T_ETSI_DSRC_Offset_B16 *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_Offset_B16 (OSCTXT *pctxt, ASN1T_ETSI_DSRC_Offset_B16 *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_Offset_B16 (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_Offset_B16* pvalue);

EXTERN ASN1T_ETSI_DSRC_Offset_B16* 
   new_ASN1T_ETSI_DSRC_Offset_B16 (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  Node_XY_32b                                               */
/*                                                            */
/**************************************************************/
/*
Node-XY-32b ::= SEQUENCE {
   x [0] Offset-B16,
   y [1] Offset-B16
}
*/
struct EXTERN ASN1T_ETSI_DSRC_Node_XY_32b {
   ASN1T_ETSI_DSRC_Offset_B16 x;
   ASN1T_ETSI_DSRC_Offset_B16 y;
} ;

EXTERN int asn1PE_ETSI_DSRC_Node_XY_32b (OSCTXT* pctxt, ASN1T_ETSI_DSRC_Node_XY_32b* pvalue);

EXTERN int asn1PD_ETSI_DSRC_Node_XY_32b (OSCTXT* pctxt, ASN1T_ETSI_DSRC_Node_XY_32b* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_Node_XY_32b (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_Node_XY_32b* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_Node_XY_32b (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_Node_XY_32b* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_Node_XY_32b (OSCTXT *pctxt, ASN1T_ETSI_DSRC_Node_XY_32b *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_Node_XY_32b (OSCTXT *pctxt, ASN1T_ETSI_DSRC_Node_XY_32b *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_Node_XY_32b (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_Node_XY_32b* pvalue);

EXTERN ASN1T_ETSI_DSRC_Node_XY_32b* 
   new_ASN1T_ETSI_DSRC_Node_XY_32b (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  Node_LLmD_64b                                             */
/*                                                            */
/**************************************************************/
/*
Node-LLmD-64b ::= SEQUENCE {
   lon [0] Longitude,
   lat [1] Latitude
}
*/
struct EXTERN ASN1T_ETSI_DSRC_Node_LLmD_64b {
   ASN1T_ITS_Longitude lon;
   ASN1T_ITS_Latitude lat;
} ;

EXTERN int asn1PE_ETSI_DSRC_Node_LLmD_64b (OSCTXT* pctxt, ASN1T_ETSI_DSRC_Node_LLmD_64b* pvalue);

EXTERN int asn1PD_ETSI_DSRC_Node_LLmD_64b (OSCTXT* pctxt, ASN1T_ETSI_DSRC_Node_LLmD_64b* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_Node_LLmD_64b (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_Node_LLmD_64b* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_Node_LLmD_64b (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_Node_LLmD_64b* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_Node_LLmD_64b (OSCTXT *pctxt, ASN1T_ETSI_DSRC_Node_LLmD_64b *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_Node_LLmD_64b (OSCTXT *pctxt, ASN1T_ETSI_DSRC_Node_LLmD_64b *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_Node_LLmD_64b (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_Node_LLmD_64b* pvalue);

EXTERN ASN1T_ETSI_DSRC_Node_LLmD_64b* 
   new_ASN1T_ETSI_DSRC_Node_LLmD_64b (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  NodeOffsetPointXY_regional                                */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'NodeOffsetPointXY'
*/
struct EXTERN ASN1T_ETSI_DSRC_NodeOffsetPointXY_regional {
   ASN1T_ETSI_DSRC_RegionId regionId;
   ASN1TOpenType regExtValue;
} ;

EXTERN int asn1PE_ETSI_DSRC_NodeOffsetPointXY_regional (OSCTXT* pctxt, ASN1T_ETSI_DSRC_NodeOffsetPointXY_regional* pvalue);

EXTERN int asn1PD_ETSI_DSRC_NodeOffsetPointXY_regional (OSCTXT* pctxt, ASN1T_ETSI_DSRC_NodeOffsetPointXY_regional* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_NodeOffsetPointXY_regional (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_NodeOffsetPointXY_regional* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_NodeOffsetPointXY_regional (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_NodeOffsetPointXY_regional* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_NodeOffsetPointXY_regional (OSCTXT *pctxt, ASN1T_ETSI_DSRC_NodeOffsetPointXY_regional *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_NodeOffsetPointXY_regional (OSCTXT *pctxt, ASN1T_ETSI_DSRC_NodeOffsetPointXY_regional *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_NodeOffsetPointXY_regional (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_NodeOffsetPointXY_regional* pvalue);

EXTERN ASN1T_ETSI_DSRC_NodeOffsetPointXY_regional* 
   new_ASN1T_ETSI_DSRC_NodeOffsetPointXY_regional (ASN1CType& ccobj);

EXTERN int asn1Init_ETSI_DSRC_NodeOffsetPointXY_regional (
   ASN1T_ETSI_DSRC_NodeOffsetPointXY_regional* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_NodeOffsetPointXY_regional (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_NodeOffsetPointXY_regional* pvalue);

/**************************************************************/
/*                                                            */
/*  NodeOffsetPointXY                                         */
/*                                                            */
/**************************************************************/
/*
NodeOffsetPointXY ::= CHOICE {
   node-XY1 [0] Node-XY-20b,
   node-XY2 [1] Node-XY-22b,
   node-XY3 [2] Node-XY-24b,
   node-XY4 [3] Node-XY-26b,
   node-XY5 [4] Node-XY-28b,
   node-XY6 [5] Node-XY-32b,
   node-LatLon [6] Node-LLmD-64b,
   regional [7] SEQUENCE {
      regionId [0] REG-EXT-ID-AND-TYPE.&id ({Reg-NodeOffsetPointXY}),
      regExtValue [1] EXPLICIT REG-EXT-ID-AND-TYPE.&Type ({Reg-NodeOffsetPointXY}{@regionId})
   }
}
*/
/* Choice tag constants */

#define T_ETSI_DSRC_NodeOffsetPointXY_node_XY1 1
#define T_ETSI_DSRC_NodeOffsetPointXY_node_XY2 2
#define T_ETSI_DSRC_NodeOffsetPointXY_node_XY3 3
#define T_ETSI_DSRC_NodeOffsetPointXY_node_XY4 4
#define T_ETSI_DSRC_NodeOffsetPointXY_node_XY5 5
#define T_ETSI_DSRC_NodeOffsetPointXY_node_XY6 6
#define T_ETSI_DSRC_NodeOffsetPointXY_node_LatLon 7
#define T_ETSI_DSRC_NodeOffsetPointXY_regional 8

struct EXTERN ASN1T_ETSI_DSRC_NodeOffsetPointXY {
   OSINT32 t;
   union {
      /* t = 1 */
      ASN1T_ETSI_DSRC_Node_XY_20b *node_XY1;
      /* t = 2 */
      ASN1T_ETSI_DSRC_Node_XY_22b *node_XY2;
      /* t = 3 */
      ASN1T_ETSI_DSRC_Node_XY_24b *node_XY3;
      /* t = 4 */
      ASN1T_ETSI_DSRC_Node_XY_26b *node_XY4;
      /* t = 5 */
      ASN1T_ETSI_DSRC_Node_XY_28b *node_XY5;
      /* t = 6 */
      ASN1T_ETSI_DSRC_Node_XY_32b *node_XY6;
      /* t = 7 */
      ASN1T_ETSI_DSRC_Node_LLmD_64b *node_LatLon;
      /* t = 8 */
      ASN1T_ETSI_DSRC_NodeOffsetPointXY_regional *regional;
   } u;
   ASN1T_ETSI_DSRC_NodeOffsetPointXY () { t = 0; OSCRTLMEMSET (&u, 0, sizeof(u)); }
} ;

EXTERN int asn1PE_ETSI_DSRC_NodeOffsetPointXY (OSCTXT* pctxt, ASN1T_ETSI_DSRC_NodeOffsetPointXY* pvalue);

EXTERN int asn1PD_ETSI_DSRC_NodeOffsetPointXY (OSCTXT* pctxt, ASN1T_ETSI_DSRC_NodeOffsetPointXY* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_NodeOffsetPointXY (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_NodeOffsetPointXY* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_NodeOffsetPointXY (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_NodeOffsetPointXY* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_NodeOffsetPointXY (OSCTXT *pctxt, ASN1T_ETSI_DSRC_NodeOffsetPointXY *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_NodeOffsetPointXY (OSCTXT *pctxt, ASN1T_ETSI_DSRC_NodeOffsetPointXY *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_NodeOffsetPointXY (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_NodeOffsetPointXY* pvalue);

EXTERN ASN1T_ETSI_DSRC_NodeOffsetPointXY* 
   new_ASN1T_ETSI_DSRC_NodeOffsetPointXY (ASN1CType& ccobj);

EXTERN int asn1Init_ETSI_DSRC_NodeOffsetPointXY (
   ASN1T_ETSI_DSRC_NodeOffsetPointXY* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_NodeOffsetPointXY (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_NodeOffsetPointXY* pvalue);

/**************************************************************/
/*                                                            */
/*  NodeAttributeXY                                           */
/*                                                            */
/**************************************************************/
/*
NodeAttributeXY ::= ENUMERATED { reserved(0), stopLine(1), roundedCapStyleA(2), roundedCapStyleB(3), mergePoint(4), divergePoint(5), downstreamStopLine(6), downstreamStartNode(7), closedToTraffic(8), safeIsland(9), curbPresentAtStepOff(10), hydrantPresent(11), ... }
*/
struct EXTERN ETSI_DSRC_NodeAttributeXY {
   enum Root {
      reserved = 0,
      stopLine = 1,
      roundedCapStyleA = 2,
      roundedCapStyleB = 3,
      mergePoint = 4,
      divergePoint = 5,
      downstreamStopLine = 6,
      downstreamStartNode = 7,
      closedToTraffic = 8,
      safeIsland = 9,
      curbPresentAtStepOff = 10,
      hydrantPresent = 11
   } ;
} ;

typedef OSUINT32 ASN1T_ETSI_DSRC_NodeAttributeXY;

EXTERN int asn1PE_ETSI_DSRC_NodeAttributeXY (OSCTXT* pctxt, ASN1T_ETSI_DSRC_NodeAttributeXY value);

EXTERN int asn1PD_ETSI_DSRC_NodeAttributeXY (OSCTXT* pctxt, ASN1T_ETSI_DSRC_NodeAttributeXY* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_NodeAttributeXY (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_NodeAttributeXY value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_NodeAttributeXY (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_NodeAttributeXY* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_NodeAttributeXY (OSCTXT *pctxt, ASN1T_ETSI_DSRC_NodeAttributeXY *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_NodeAttributeXY (OSCTXT *pctxt, ASN1T_ETSI_DSRC_NodeAttributeXY *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_NodeAttributeXY (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_NodeAttributeXY* pvalue);

EXTERN ASN1T_ETSI_DSRC_NodeAttributeXY* 
   new_ASN1T_ETSI_DSRC_NodeAttributeXY (ASN1CType& ccobj);

EXTERN extern const OSEnumItem ASN1T_ETSI_DSRC_NodeAttributeXY_ENUMTAB[];
#define ASN1T_ETSI_DSRC_NodeAttributeXY_ENUMTABSIZE 12

EXTERN const OSUTF8CHAR* ASN1T_ETSI_DSRC_NodeAttributeXY_ToString (OSINT32 value);

EXTERN int ASN1T_ETSI_DSRC_NodeAttributeXY_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, ASN1T_ETSI_DSRC_NodeAttributeXY* pvalue);

EXTERN int ASN1T_ETSI_DSRC_NodeAttributeXY_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      ASN1T_ETSI_DSRC_NodeAttributeXY* pvalue);

/**************************************************************/
/*                                                            */
/*  NodeAttributeXYList                                       */
/*                                                            */
/**************************************************************/
/*
NodeAttributeXYList ::= SEQUENCE (SIZE (1..8)) OF NodeAttributeXY
*/
typedef struct EXTERN ASN1T_ETSI_DSRC_NodeAttributeXYList {
   OSUINT8 n;
   ASN1T_ETSI_DSRC_NodeAttributeXY elem[8];
   ASN1T_ETSI_DSRC_NodeAttributeXYList () : n(0) {}
} ASN1T_ETSI_DSRC_NodeAttributeXYList;

class EXTERN ASN1C_ETSI_DSRC_NodeAttributeXYList :
public ASN1CType
{
protected:
   ASN1T_ETSI_DSRC_NodeAttributeXYList& msgData;
public:
   /**
    * Control class: ASN1C_ETSI_DSRC_NodeAttributeXYList
    * Data class:    ASN1T_ETSI_DSRC_NodeAttributeXYList
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_NodeAttributeXYList
       (ASN1T_ETSI_DSRC_NodeAttributeXYList& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_NodeAttributeXYList<br/>
    * Data class: ASN1T_ETSI_DSRC_NodeAttributeXYList<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_NodeAttributeXYList (OSRTMessageBufferIF& msgBuf
      , ASN1T_ETSI_DSRC_NodeAttributeXYList& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_NodeAttributeXYList<br/>
    * Data class: ASN1T_ETSI_DSRC_NodeAttributeXYList<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_ETSI_DSRC_NodeAttributeXYList (ASN1CType& ccobj
      , ASN1T_ETSI_DSRC_NodeAttributeXYList& data);

   virtual ~ASN1C_ETSI_DSRC_NodeAttributeXYList () {}

private:
   ASN1C_ETSI_DSRC_NodeAttributeXYList& operator= (const ASN1C_ETSI_DSRC_NodeAttributeXYList&) {return *this;}
} ;

EXTERN int asn1PE_ETSI_DSRC_NodeAttributeXYList (OSCTXT* pctxt, ASN1T_ETSI_DSRC_NodeAttributeXYList* pvalue);

EXTERN int asn1PD_ETSI_DSRC_NodeAttributeXYList (OSCTXT* pctxt, ASN1T_ETSI_DSRC_NodeAttributeXYList* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_NodeAttributeXYList (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_NodeAttributeXYList* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_NodeAttributeXYList (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_NodeAttributeXYList* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_NodeAttributeXYList (OSCTXT *pctxt, ASN1T_ETSI_DSRC_NodeAttributeXYList *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_NodeAttributeXYList (OSCTXT *pctxt, ASN1T_ETSI_DSRC_NodeAttributeXYList *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_NodeAttributeXYList (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_NodeAttributeXYList* pvalue);

EXTERN int asn1Init_ETSI_DSRC_NodeAttributeXYList (
   ASN1T_ETSI_DSRC_NodeAttributeXYList* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

/**************************************************************/
/*                                                            */
/*  SegmentAttributeXY                                        */
/*                                                            */
/**************************************************************/
/*
SegmentAttributeXY ::= ENUMERATED { reserved(0), doNotBlock(1), whiteLine(2), mergingLaneLeft(3), mergingLaneRight(4), curbOnLeft(5), curbOnRight(6), loadingzoneOnLeft(7), loadingzoneOnRight(8), turnOutPointOnLeft(9), turnOutPointOnRight(10), adjacentParkingOnLeft(11), adjacentParkingOnRight(12), adjacentBikeLaneOnLeft(13), adjacentBikeLaneOnRight(14), sharedBikeLane(15), bikeBoxInFront(16), transitStopOnLeft(17), transitStopOnRight(18), transitStopInLane(19), sharedWithTrackedVehicle(20), safeIsland(21), lowCurbsPresent(22), rumbleStripPresent(23), audibleSignalingPresent(24), adaptiveTimingPresent(25), rfSignalRequestPresent(26), partialCurbIntrusion(27), taperToLeft(28), taperToRight(29), taperToCenterLine(30), parallelParking(31), headInParking(32), freeParking(33), timeRestrictionsOnParking(34), costToPark(35), midBlockCurbPresent(36), unEvenPavementPresent(37), ... }
*/
struct EXTERN ETSI_DSRC_SegmentAttributeXY {
   enum Root {
      reserved = 0,
      doNotBlock = 1,
      whiteLine = 2,
      mergingLaneLeft = 3,
      mergingLaneRight = 4,
      curbOnLeft = 5,
      curbOnRight = 6,
      loadingzoneOnLeft = 7,
      loadingzoneOnRight = 8,
      turnOutPointOnLeft = 9,
      turnOutPointOnRight = 10,
      adjacentParkingOnLeft = 11,
      adjacentParkingOnRight = 12,
      adjacentBikeLaneOnLeft = 13,
      adjacentBikeLaneOnRight = 14,
      sharedBikeLane = 15,
      bikeBoxInFront = 16,
      transitStopOnLeft = 17,
      transitStopOnRight = 18,
      transitStopInLane = 19,
      sharedWithTrackedVehicle = 20,
      safeIsland = 21,
      lowCurbsPresent = 22,
      rumbleStripPresent = 23,
      audibleSignalingPresent = 24,
      adaptiveTimingPresent = 25,
      rfSignalRequestPresent = 26,
      partialCurbIntrusion = 27,
      taperToLeft = 28,
      taperToRight = 29,
      taperToCenterLine = 30,
      parallelParking = 31,
      headInParking = 32,
      freeParking = 33,
      timeRestrictionsOnParking = 34,
      costToPark = 35,
      midBlockCurbPresent = 36,
      unEvenPavementPresent = 37
   } ;
} ;

typedef OSUINT32 ASN1T_ETSI_DSRC_SegmentAttributeXY;

EXTERN int asn1PE_ETSI_DSRC_SegmentAttributeXY (OSCTXT* pctxt, ASN1T_ETSI_DSRC_SegmentAttributeXY value);

EXTERN int asn1PD_ETSI_DSRC_SegmentAttributeXY (OSCTXT* pctxt, ASN1T_ETSI_DSRC_SegmentAttributeXY* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_SegmentAttributeXY (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_SegmentAttributeXY value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_SegmentAttributeXY (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_SegmentAttributeXY* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_SegmentAttributeXY (OSCTXT *pctxt, ASN1T_ETSI_DSRC_SegmentAttributeXY *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_SegmentAttributeXY (OSCTXT *pctxt, ASN1T_ETSI_DSRC_SegmentAttributeXY *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_SegmentAttributeXY (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_SegmentAttributeXY* pvalue);

EXTERN ASN1T_ETSI_DSRC_SegmentAttributeXY* 
   new_ASN1T_ETSI_DSRC_SegmentAttributeXY (ASN1CType& ccobj);

EXTERN extern const OSEnumItem ASN1T_ETSI_DSRC_SegmentAttributeXY_ENUMTAB[];
#define ASN1T_ETSI_DSRC_SegmentAttributeXY_ENUMTABSIZE 38

EXTERN const OSUTF8CHAR* ASN1T_ETSI_DSRC_SegmentAttributeXY_ToString (OSINT32 value);

EXTERN int ASN1T_ETSI_DSRC_SegmentAttributeXY_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, ASN1T_ETSI_DSRC_SegmentAttributeXY* pvalue);

EXTERN int ASN1T_ETSI_DSRC_SegmentAttributeXY_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      ASN1T_ETSI_DSRC_SegmentAttributeXY* pvalue);

/**************************************************************/
/*                                                            */
/*  SegmentAttributeXYList                                    */
/*                                                            */
/**************************************************************/
/*
SegmentAttributeXYList ::= SEQUENCE (SIZE (1..8)) OF SegmentAttributeXY
*/
typedef struct EXTERN ASN1T_ETSI_DSRC_SegmentAttributeXYList {
   OSUINT8 n;
   ASN1T_ETSI_DSRC_SegmentAttributeXY elem[8];
   ASN1T_ETSI_DSRC_SegmentAttributeXYList () : n(0) {}
} ASN1T_ETSI_DSRC_SegmentAttributeXYList;

class EXTERN ASN1C_ETSI_DSRC_SegmentAttributeXYList :
public ASN1CType
{
protected:
   ASN1T_ETSI_DSRC_SegmentAttributeXYList& msgData;
public:
   /**
    * Control class: ASN1C_ETSI_DSRC_SegmentAttributeXYList
    * Data class:    ASN1T_ETSI_DSRC_SegmentAttributeXYList
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_SegmentAttributeXYList
       (ASN1T_ETSI_DSRC_SegmentAttributeXYList& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_SegmentAttributeXYList<br/>
    * Data class: ASN1T_ETSI_DSRC_SegmentAttributeXYList<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_SegmentAttributeXYList (OSRTMessageBufferIF& msgBuf
      , ASN1T_ETSI_DSRC_SegmentAttributeXYList& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_SegmentAttributeXYList<br/>
    * Data class: ASN1T_ETSI_DSRC_SegmentAttributeXYList<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_ETSI_DSRC_SegmentAttributeXYList (ASN1CType& ccobj
      , ASN1T_ETSI_DSRC_SegmentAttributeXYList& data);

   virtual ~ASN1C_ETSI_DSRC_SegmentAttributeXYList () {}

private:
   ASN1C_ETSI_DSRC_SegmentAttributeXYList& operator= (const ASN1C_ETSI_DSRC_SegmentAttributeXYList&) {return *this;}
} ;

EXTERN int asn1PE_ETSI_DSRC_SegmentAttributeXYList (OSCTXT* pctxt, ASN1T_ETSI_DSRC_SegmentAttributeXYList* pvalue);

EXTERN int asn1PD_ETSI_DSRC_SegmentAttributeXYList (OSCTXT* pctxt, ASN1T_ETSI_DSRC_SegmentAttributeXYList* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_SegmentAttributeXYList (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_SegmentAttributeXYList* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_SegmentAttributeXYList (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_SegmentAttributeXYList* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_SegmentAttributeXYList (OSCTXT *pctxt, ASN1T_ETSI_DSRC_SegmentAttributeXYList *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_SegmentAttributeXYList (OSCTXT *pctxt, ASN1T_ETSI_DSRC_SegmentAttributeXYList *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_SegmentAttributeXYList (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_SegmentAttributeXYList* pvalue);

EXTERN int asn1Init_ETSI_DSRC_SegmentAttributeXYList (
   ASN1T_ETSI_DSRC_SegmentAttributeXYList* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

/**************************************************************/
/*                                                            */
/*  DeltaAngle                                                */
/*                                                            */
/**************************************************************/
/*
DeltaAngle ::= INTEGER (-150..150)
*/
typedef OSINT16 ASN1T_ETSI_DSRC_DeltaAngle;

EXTERN int asn1PE_ETSI_DSRC_DeltaAngle (OSCTXT* pctxt, ASN1T_ETSI_DSRC_DeltaAngle value);

EXTERN int asn1PD_ETSI_DSRC_DeltaAngle (OSCTXT* pctxt, ASN1T_ETSI_DSRC_DeltaAngle* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_DeltaAngle (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_DeltaAngle value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_DeltaAngle (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_DeltaAngle* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_DeltaAngle (OSCTXT *pctxt, ASN1T_ETSI_DSRC_DeltaAngle *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_DeltaAngle (OSCTXT *pctxt, ASN1T_ETSI_DSRC_DeltaAngle *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_DeltaAngle (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_DeltaAngle* pvalue);

EXTERN ASN1T_ETSI_DSRC_DeltaAngle* 
   new_ASN1T_ETSI_DSRC_DeltaAngle (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  RoadwayCrownAngle                                         */
/*                                                            */
/**************************************************************/
/*
RoadwayCrownAngle ::= INTEGER (-128..127)
*/
typedef OSINT8 ASN1T_ETSI_DSRC_RoadwayCrownAngle;

EXTERN int asn1PE_ETSI_DSRC_RoadwayCrownAngle (OSCTXT* pctxt, ASN1T_ETSI_DSRC_RoadwayCrownAngle value);

EXTERN int asn1PD_ETSI_DSRC_RoadwayCrownAngle (OSCTXT* pctxt, ASN1T_ETSI_DSRC_RoadwayCrownAngle* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_RoadwayCrownAngle (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_RoadwayCrownAngle value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_RoadwayCrownAngle (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_RoadwayCrownAngle* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_RoadwayCrownAngle (OSCTXT *pctxt, ASN1T_ETSI_DSRC_RoadwayCrownAngle *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_RoadwayCrownAngle (OSCTXT *pctxt, ASN1T_ETSI_DSRC_RoadwayCrownAngle *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_RoadwayCrownAngle (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_RoadwayCrownAngle* pvalue);

EXTERN ASN1T_ETSI_DSRC_RoadwayCrownAngle* 
   new_ASN1T_ETSI_DSRC_RoadwayCrownAngle (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  MergeDivergeNodeAngle                                     */
/*                                                            */
/**************************************************************/
/*
MergeDivergeNodeAngle ::= INTEGER (-180..180)
*/
typedef OSINT16 ASN1T_ETSI_DSRC_MergeDivergeNodeAngle;

EXTERN int asn1PE_ETSI_DSRC_MergeDivergeNodeAngle (OSCTXT* pctxt, ASN1T_ETSI_DSRC_MergeDivergeNodeAngle value);

EXTERN int asn1PD_ETSI_DSRC_MergeDivergeNodeAngle (OSCTXT* pctxt, ASN1T_ETSI_DSRC_MergeDivergeNodeAngle* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_MergeDivergeNodeAngle (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_MergeDivergeNodeAngle value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_MergeDivergeNodeAngle (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_MergeDivergeNodeAngle* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_MergeDivergeNodeAngle (OSCTXT *pctxt, ASN1T_ETSI_DSRC_MergeDivergeNodeAngle *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_MergeDivergeNodeAngle (OSCTXT *pctxt, ASN1T_ETSI_DSRC_MergeDivergeNodeAngle *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_MergeDivergeNodeAngle (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_MergeDivergeNodeAngle* pvalue);

EXTERN ASN1T_ETSI_DSRC_MergeDivergeNodeAngle* 
   new_ASN1T_ETSI_DSRC_MergeDivergeNodeAngle (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  LaneDataAttribute_regional_element                        */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'LaneDataAttribute'
*/
struct EXTERN ASN1T_ETSI_DSRC_LaneDataAttribute_regional_element {
   ASN1T_ETSI_DSRC_RegionId regionId;
   ASN1TOpenType regExtValue;
} ;

EXTERN int asn1PE_ETSI_DSRC_LaneDataAttribute_regional_element (OSCTXT* pctxt, ASN1T_ETSI_DSRC_LaneDataAttribute_regional_element* pvalue);

EXTERN int asn1PD_ETSI_DSRC_LaneDataAttribute_regional_element (OSCTXT* pctxt, ASN1T_ETSI_DSRC_LaneDataAttribute_regional_element* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_LaneDataAttribute_regional_element (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_LaneDataAttribute_regional_element* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_LaneDataAttribute_regional_element (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_LaneDataAttribute_regional_element* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_LaneDataAttribute_regional_element (OSCTXT *pctxt, ASN1T_ETSI_DSRC_LaneDataAttribute_regional_element *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_LaneDataAttribute_regional_element (OSCTXT *pctxt, ASN1T_ETSI_DSRC_LaneDataAttribute_regional_element *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_LaneDataAttribute_regional_element (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_LaneDataAttribute_regional_element* pvalue);

EXTERN ASN1T_ETSI_DSRC_LaneDataAttribute_regional_element* 
   new_ASN1T_ETSI_DSRC_LaneDataAttribute_regional_element (ASN1CType& ccobj);

EXTERN int asn1Init_ETSI_DSRC_LaneDataAttribute_regional_element (
   ASN1T_ETSI_DSRC_LaneDataAttribute_regional_element* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_LaneDataAttribute_regional_element (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_LaneDataAttribute_regional_element* pvalue);

/**************************************************************/
/*                                                            */
/*  LaneDataAttribute_regional                                */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'LaneDataAttribute'
*/
/* List of ASN1T_ETSI_DSRC_LaneDataAttribute_regional_element */
typedef ASN1TSeqOfList ASN1T_ETSI_DSRC_LaneDataAttribute_regional;

class EXTERN ASN1C_ETSI_DSRC_LaneDataAttribute_regional :
public ASN1CSeqOfList
{
protected:
   ASN1T_ETSI_DSRC_LaneDataAttribute_regional& msgData;
public:
   /**
    * Control class: ASN1C_ETSI_DSRC_LaneDataAttribute_regional
    * Data class:    ASN1T_ETSI_DSRC_LaneDataAttribute_regional
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_LaneDataAttribute_regional
       (ASN1T_ETSI_DSRC_LaneDataAttribute_regional& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_LaneDataAttribute_regional<br/>
    * Data class: ASN1T_ETSI_DSRC_LaneDataAttribute_regional<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_LaneDataAttribute_regional (OSRTMessageBufferIF& msgBuf
      , ASN1T_ETSI_DSRC_LaneDataAttribute_regional& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_LaneDataAttribute_regional<br/>
    * Data class: ASN1T_ETSI_DSRC_LaneDataAttribute_regional<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_ETSI_DSRC_LaneDataAttribute_regional (ASN1CType& ccobj
      , ASN1T_ETSI_DSRC_LaneDataAttribute_regional& data);

   virtual ~ASN1C_ETSI_DSRC_LaneDataAttribute_regional () {}

   /**
    * Data class: ASN1T_ETSI_DSRC_LaneDataAttribute_regional_element<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_ETSI_DSRC_LaneDataAttribute_regional_element* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_ETSI_DSRC_LaneDataAttribute_regional_element.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_ETSI_DSRC_LaneDataAttribute_regional_element* NewElement ();

   /**
    * Data class: ASN1T_ETSI_DSRC_LaneDataAttribute_regional_element.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_ETSI_DSRC_LaneDataAttribute_regional_element* AppendNewElement ();

   /* Get IE using regionId key value */
   ASN1T_ETSI_DSRC_LaneDataAttribute_regional_element* 
      GetIE (ASN1T_ETSI_DSRC_RegionId regionId);

   /* Get all matching IEs using regionId key value */
   int GetAllIEs (ASN1T_ETSI_DSRC_RegionId regionId, 
      ASN1T_ETSI_DSRC_LaneDataAttribute_regional* pmatches);

private:
   ASN1C_ETSI_DSRC_LaneDataAttribute_regional& operator= (const ASN1C_ETSI_DSRC_LaneDataAttribute_regional&) {return *this;}
} ;

EXTERN int asn1PE_ETSI_DSRC_LaneDataAttribute_regional (OSCTXT* pctxt, ASN1T_ETSI_DSRC_LaneDataAttribute_regional* pvalue);

EXTERN int asn1PD_ETSI_DSRC_LaneDataAttribute_regional (OSCTXT* pctxt, ASN1T_ETSI_DSRC_LaneDataAttribute_regional* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_LaneDataAttribute_regional (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_LaneDataAttribute_regional* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_LaneDataAttribute_regional (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_LaneDataAttribute_regional* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_LaneDataAttribute_regional (OSCTXT *pctxt, ASN1T_ETSI_DSRC_LaneDataAttribute_regional *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_LaneDataAttribute_regional (OSCTXT *pctxt, ASN1T_ETSI_DSRC_LaneDataAttribute_regional *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_LaneDataAttribute_regional (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_LaneDataAttribute_regional* pvalue);

EXTERN int asn1Init_ETSI_DSRC_LaneDataAttribute_regional (
   ASN1T_ETSI_DSRC_LaneDataAttribute_regional* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_LaneDataAttribute_regional (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_LaneDataAttribute_regional* pvalue);

/**************************************************************/
/*                                                            */
/*  LaneDataAttribute                                         */
/*                                                            */
/**************************************************************/
/*
LaneDataAttribute ::= CHOICE {
   pathEndPointAngle [0] DeltaAngle,
   laneCrownPointCenter [1] RoadwayCrownAngle,
   laneCrownPointLeft [2] RoadwayCrownAngle,
   laneCrownPointRight [3] RoadwayCrownAngle,
   laneAngle [4] MergeDivergeNodeAngle,
   speedLimits [5] SpeedLimitList,
   regional [6] SEQUENCE (SIZE (1..4)) OF SEQUENCE {
      regionId [0] REG-EXT-ID-AND-TYPE.&id ({Reg-LaneDataAttribute}),
      regExtValue [1] EXPLICIT REG-EXT-ID-AND-TYPE.&Type ({Reg-LaneDataAttribute}{@regionId})
   },
   ...
}
*/
/* Choice tag constants */

#define T_ETSI_DSRC_LaneDataAttribute_pathEndPointAngle 1
#define T_ETSI_DSRC_LaneDataAttribute_laneCrownPointCenter 2
#define T_ETSI_DSRC_LaneDataAttribute_laneCrownPointLeft 3
#define T_ETSI_DSRC_LaneDataAttribute_laneCrownPointRight 4
#define T_ETSI_DSRC_LaneDataAttribute_laneAngle 5
#define T_ETSI_DSRC_LaneDataAttribute_speedLimits 6
#define T_ETSI_DSRC_LaneDataAttribute_regional 7
#define T_ETSI_DSRC_LaneDataAttribute_extElem1 8

struct EXTERN ASN1T_ETSI_DSRC_LaneDataAttribute {
   OSINT32 t;
   union {
      /* t = 1 */
      ASN1T_ETSI_DSRC_DeltaAngle pathEndPointAngle;
      /* t = 2 */
      ASN1T_ETSI_DSRC_RoadwayCrownAngle laneCrownPointCenter;
      /* t = 3 */
      ASN1T_ETSI_DSRC_RoadwayCrownAngle laneCrownPointLeft;
      /* t = 4 */
      ASN1T_ETSI_DSRC_RoadwayCrownAngle laneCrownPointRight;
      /* t = 5 */
      ASN1T_ETSI_DSRC_MergeDivergeNodeAngle laneAngle;
      /* t = 6 */
      ASN1T_ETSI_DSRC_SpeedLimitList *speedLimits;
      /* t = 7 */
      ASN1T_ETSI_DSRC_LaneDataAttribute_regional *regional;
      /* t = 8 */
      ASN1TOpenType *extElem1;
   } u;
   ASN1T_ETSI_DSRC_LaneDataAttribute () { t = 0; OSCRTLMEMSET (&u, 0, sizeof(u)); }
} ;

EXTERN int asn1PE_ETSI_DSRC_LaneDataAttribute (OSCTXT* pctxt, ASN1T_ETSI_DSRC_LaneDataAttribute* pvalue);

EXTERN int asn1PD_ETSI_DSRC_LaneDataAttribute (OSCTXT* pctxt, ASN1T_ETSI_DSRC_LaneDataAttribute* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_LaneDataAttribute (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_LaneDataAttribute* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_LaneDataAttribute (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_LaneDataAttribute* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_LaneDataAttribute (OSCTXT *pctxt, ASN1T_ETSI_DSRC_LaneDataAttribute *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_LaneDataAttribute (OSCTXT *pctxt, ASN1T_ETSI_DSRC_LaneDataAttribute *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_LaneDataAttribute (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_LaneDataAttribute* pvalue);

EXTERN ASN1T_ETSI_DSRC_LaneDataAttribute* 
   new_ASN1T_ETSI_DSRC_LaneDataAttribute (ASN1CType& ccobj);

EXTERN int asn1Init_ETSI_DSRC_LaneDataAttribute (
   ASN1T_ETSI_DSRC_LaneDataAttribute* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_LaneDataAttribute (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_LaneDataAttribute* pvalue);

/**************************************************************/
/*                                                            */
/*  LaneDataAttributeList                                     */
/*                                                            */
/**************************************************************/
/*
LaneDataAttributeList ::= SEQUENCE (SIZE (1..8)) OF LaneDataAttribute
*/
/* List of ASN1T_ETSI_DSRC_LaneDataAttribute */
typedef ASN1TSeqOfList ASN1T_ETSI_DSRC_LaneDataAttributeList;

class EXTERN ASN1C_ETSI_DSRC_LaneDataAttributeList :
public ASN1CSeqOfList
{
protected:
   ASN1T_ETSI_DSRC_LaneDataAttributeList& msgData;
public:
   /**
    * Control class: ASN1C_ETSI_DSRC_LaneDataAttributeList
    * Data class:    ASN1T_ETSI_DSRC_LaneDataAttributeList
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_LaneDataAttributeList
       (ASN1T_ETSI_DSRC_LaneDataAttributeList& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_LaneDataAttributeList<br/>
    * Data class: ASN1T_ETSI_DSRC_LaneDataAttributeList<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_LaneDataAttributeList (OSRTMessageBufferIF& msgBuf
      , ASN1T_ETSI_DSRC_LaneDataAttributeList& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_LaneDataAttributeList<br/>
    * Data class: ASN1T_ETSI_DSRC_LaneDataAttributeList<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_ETSI_DSRC_LaneDataAttributeList (ASN1CType& ccobj
      , ASN1T_ETSI_DSRC_LaneDataAttributeList& data);

   virtual ~ASN1C_ETSI_DSRC_LaneDataAttributeList () {}

   /**
    * Data class: ASN1T_ETSI_DSRC_LaneDataAttribute<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_ETSI_DSRC_LaneDataAttribute* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_ETSI_DSRC_LaneDataAttribute.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_ETSI_DSRC_LaneDataAttribute* NewElement ();

   /**
    * Data class: ASN1T_ETSI_DSRC_LaneDataAttribute.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_ETSI_DSRC_LaneDataAttribute* AppendNewElement ();

private:
   ASN1C_ETSI_DSRC_LaneDataAttributeList& operator= (const ASN1C_ETSI_DSRC_LaneDataAttributeList&) {return *this;}
} ;

EXTERN int asn1PE_ETSI_DSRC_LaneDataAttributeList (OSCTXT* pctxt, ASN1T_ETSI_DSRC_LaneDataAttributeList* pvalue);

EXTERN int asn1PD_ETSI_DSRC_LaneDataAttributeList (OSCTXT* pctxt, ASN1T_ETSI_DSRC_LaneDataAttributeList* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_LaneDataAttributeList (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_LaneDataAttributeList* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_LaneDataAttributeList (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_LaneDataAttributeList* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_LaneDataAttributeList (OSCTXT *pctxt, ASN1T_ETSI_DSRC_LaneDataAttributeList *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_LaneDataAttributeList (OSCTXT *pctxt, ASN1T_ETSI_DSRC_LaneDataAttributeList *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_LaneDataAttributeList (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_LaneDataAttributeList* pvalue);

EXTERN int asn1Init_ETSI_DSRC_LaneDataAttributeList (
   ASN1T_ETSI_DSRC_LaneDataAttributeList* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_LaneDataAttributeList (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_LaneDataAttributeList* pvalue);

/**************************************************************/
/*                                                            */
/*  LaneConnectionID                                          */
/*                                                            */
/**************************************************************/
/*
LaneConnectionID ::= INTEGER (0..255)
*/
typedef OSUINT8 ASN1T_ETSI_DSRC_LaneConnectionID;

EXTERN int asn1PE_ETSI_DSRC_LaneConnectionID (OSCTXT* pctxt, ASN1T_ETSI_DSRC_LaneConnectionID value);

EXTERN int asn1PD_ETSI_DSRC_LaneConnectionID (OSCTXT* pctxt, ASN1T_ETSI_DSRC_LaneConnectionID* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_LaneConnectionID (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_LaneConnectionID value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_LaneConnectionID (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_LaneConnectionID* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_LaneConnectionID (OSCTXT *pctxt, ASN1T_ETSI_DSRC_LaneConnectionID *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_LaneConnectionID (OSCTXT *pctxt, ASN1T_ETSI_DSRC_LaneConnectionID *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_LaneConnectionID (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_LaneConnectionID* pvalue);

EXTERN ASN1T_ETSI_DSRC_LaneConnectionID* 
   new_ASN1T_ETSI_DSRC_LaneConnectionID (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  NodeAttributeSetXY_regional_element                       */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'NodeAttributeSetXY'
*/
struct EXTERN ASN1T_ETSI_DSRC_NodeAttributeSetXY_regional_element {
   ASN1T_ETSI_DSRC_RegionId regionId;
   struct  {
      /**
       * information object selector
       */
      OSUINT16 t;

      /**
       * Reg-NodeAttributeSetXY information objects
       */
      union {
         /**
          * id: addGrpC
          */
         struct ASN1T_ETSI_GrpC_NodeAttributeSet_addGrpC *_ETSI_REG_Reg_NodeAttributeSetXY_addGrpC;

         ASN1TOpenType* extElem1;
      } u;
   } regExtValue;
   ASN1T_ETSI_DSRC_NodeAttributeSetXY_regional_element ();
} ;

EXTERN int asn1PE_ETSI_DSRC_NodeAttributeSetXY_regional_element (OSCTXT* pctxt, ASN1T_ETSI_DSRC_NodeAttributeSetXY_regional_element* pvalue);

EXTERN int asn1PD_ETSI_DSRC_NodeAttributeSetXY_regional_element (OSCTXT* pctxt, ASN1T_ETSI_DSRC_NodeAttributeSetXY_regional_element* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_NodeAttributeSetXY_regional_element 
   (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_NodeAttributeSetXY_regional_element* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_NodeAttributeSetXY_regional_element 
   (OSCTXT* pctxt, ASN1T_ETSI_DSRC_NodeAttributeSetXY_regional_element* pvalue)
   ;

EXTERN int asn1JsonEnc_ETSI_DSRC_NodeAttributeSetXY_regional_element (OSCTXT *pctxt, ASN1T_ETSI_DSRC_NodeAttributeSetXY_regional_element *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_NodeAttributeSetXY_regional_element (OSCTXT *pctxt, ASN1T_ETSI_DSRC_NodeAttributeSetXY_regional_element *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_NodeAttributeSetXY_regional_element (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_NodeAttributeSetXY_regional_element* pvalue);

EXTERN ASN1T_ETSI_DSRC_NodeAttributeSetXY_regional_element* 
   new_ASN1T_ETSI_DSRC_NodeAttributeSetXY_regional_element (ASN1CType& ccobj);

EXTERN int asn1Init_ETSI_DSRC_NodeAttributeSetXY_regional_element (
   ASN1T_ETSI_DSRC_NodeAttributeSetXY_regional_element* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_NodeAttributeSetXY_regional_element (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_NodeAttributeSetXY_regional_element* pvalue);

/**************************************************************/
/*                                                            */
/*  NodeAttributeSetXY_regional                               */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'NodeAttributeSetXY'
*/
/* List of ASN1T_ETSI_DSRC_NodeAttributeSetXY_regional_element */
typedef ASN1TSeqOfList ASN1T_ETSI_DSRC_NodeAttributeSetXY_regional;

class EXTERN ASN1C_ETSI_DSRC_NodeAttributeSetXY_regional :
public ASN1CSeqOfList
{
protected:
   ASN1T_ETSI_DSRC_NodeAttributeSetXY_regional& msgData;
public:
   /**
    * Control class: ASN1C_ETSI_DSRC_NodeAttributeSetXY_regional
    * Data class:    ASN1T_ETSI_DSRC_NodeAttributeSetXY_regional
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_NodeAttributeSetXY_regional
       (ASN1T_ETSI_DSRC_NodeAttributeSetXY_regional& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_NodeAttributeSetXY_regional<br/>
    * Data class: ASN1T_ETSI_DSRC_NodeAttributeSetXY_regional<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_NodeAttributeSetXY_regional (OSRTMessageBufferIF& msgBuf
      , ASN1T_ETSI_DSRC_NodeAttributeSetXY_regional& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_NodeAttributeSetXY_regional<br/>
    * Data class: ASN1T_ETSI_DSRC_NodeAttributeSetXY_regional<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_ETSI_DSRC_NodeAttributeSetXY_regional (ASN1CType& ccobj
      , ASN1T_ETSI_DSRC_NodeAttributeSetXY_regional& data);

   virtual ~ASN1C_ETSI_DSRC_NodeAttributeSetXY_regional () {}

   /**
    * Data class: ASN1T_ETSI_DSRC_NodeAttributeSetXY_regional_element<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_ETSI_DSRC_NodeAttributeSetXY_regional_element* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_ETSI_DSRC_NodeAttributeSetXY_regional_element.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_ETSI_DSRC_NodeAttributeSetXY_regional_element* NewElement ();

   /**
    * Data class: ASN1T_ETSI_DSRC_NodeAttributeSetXY_regional_element.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_ETSI_DSRC_NodeAttributeSetXY_regional_element* AppendNewElement ();

   /* Get IE using regionId key value */
   ASN1T_ETSI_DSRC_NodeAttributeSetXY_regional_element* 
      GetIE (ASN1T_ETSI_DSRC_RegionId regionId);

   /* Get all matching IEs using regionId key value */
   int GetAllIEs (ASN1T_ETSI_DSRC_RegionId regionId, 
      ASN1T_ETSI_DSRC_NodeAttributeSetXY_regional* pmatches);

private:
   ASN1C_ETSI_DSRC_NodeAttributeSetXY_regional& operator= (const ASN1C_ETSI_DSRC_NodeAttributeSetXY_regional&) {return *this;}
} ;

EXTERN int asn1PE_ETSI_DSRC_NodeAttributeSetXY_regional (OSCTXT* pctxt, ASN1T_ETSI_DSRC_NodeAttributeSetXY_regional* pvalue);

EXTERN int asn1PD_ETSI_DSRC_NodeAttributeSetXY_regional (OSCTXT* pctxt, ASN1T_ETSI_DSRC_NodeAttributeSetXY_regional* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_NodeAttributeSetXY_regional (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_NodeAttributeSetXY_regional* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_NodeAttributeSetXY_regional (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_NodeAttributeSetXY_regional* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_NodeAttributeSetXY_regional (OSCTXT *pctxt, ASN1T_ETSI_DSRC_NodeAttributeSetXY_regional *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_NodeAttributeSetXY_regional (OSCTXT *pctxt, ASN1T_ETSI_DSRC_NodeAttributeSetXY_regional *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_NodeAttributeSetXY_regional (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_NodeAttributeSetXY_regional* pvalue);

EXTERN int asn1Init_ETSI_DSRC_NodeAttributeSetXY_regional (
   ASN1T_ETSI_DSRC_NodeAttributeSetXY_regional* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_NodeAttributeSetXY_regional (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_NodeAttributeSetXY_regional* pvalue);

/**************************************************************/
/*                                                            */
/*  NodeAttributeSetXY                                        */
/*                                                            */
/**************************************************************/
/*
NodeAttributeSetXY ::= SEQUENCE {
   localNode [0] NodeAttributeXYList OPTIONAL,
   disabled [1] SegmentAttributeXYList OPTIONAL,
   enabled [2] SegmentAttributeXYList OPTIONAL,
   data [3] LaneDataAttributeList OPTIONAL,
   dWidth [4] Offset-B10 OPTIONAL,
   dElevation [5] Offset-B10 OPTIONAL,
   regional [6] SEQUENCE (SIZE (1..4)) OF SEQUENCE {
      regionId [0] REG-EXT-ID-AND-TYPE.&id ({Reg-NodeAttributeSetXY}),
      regExtValue [1] EXPLICIT REG-EXT-ID-AND-TYPE.&Type ({Reg-NodeAttributeSetXY}{@regionId})
   } OPTIONAL,
   ...
}
*/
struct EXTERN ASN1T_ETSI_DSRC_NodeAttributeSetXY {
   struct {
      unsigned localNodePresent : 1;
      unsigned disabledPresent : 1;
      unsigned enabledPresent : 1;
      unsigned dataPresent : 1;
      unsigned dWidthPresent : 1;
      unsigned dElevationPresent : 1;
      unsigned regionalPresent : 1;
   } m;
   ASN1T_ETSI_DSRC_NodeAttributeXYList localNode;
   ASN1T_ETSI_DSRC_SegmentAttributeXYList disabled;
   ASN1T_ETSI_DSRC_SegmentAttributeXYList enabled;
   ASN1T_ETSI_DSRC_LaneDataAttributeList data;
   ASN1T_ETSI_DSRC_Offset_B10 dWidth;
   ASN1T_ETSI_DSRC_Offset_B10 dElevation;
   ASN1T_ETSI_DSRC_NodeAttributeSetXY_regional regional;
   ASN1TSeqExt extElem1;
   ASN1T_ETSI_DSRC_NodeAttributeSetXY ();
} ;

EXTERN int asn1PE_ETSI_DSRC_NodeAttributeSetXY (OSCTXT* pctxt, ASN1T_ETSI_DSRC_NodeAttributeSetXY* pvalue);

EXTERN int asn1PD_ETSI_DSRC_NodeAttributeSetXY (OSCTXT* pctxt, ASN1T_ETSI_DSRC_NodeAttributeSetXY* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_NodeAttributeSetXY (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_NodeAttributeSetXY* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_NodeAttributeSetXY (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_NodeAttributeSetXY* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_NodeAttributeSetXY (OSCTXT *pctxt, ASN1T_ETSI_DSRC_NodeAttributeSetXY *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_NodeAttributeSetXY (OSCTXT *pctxt, ASN1T_ETSI_DSRC_NodeAttributeSetXY *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_NodeAttributeSetXY (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_NodeAttributeSetXY* pvalue);

EXTERN ASN1T_ETSI_DSRC_NodeAttributeSetXY* 
   new_ASN1T_ETSI_DSRC_NodeAttributeSetXY (ASN1CType& ccobj);

EXTERN int asn1Init_ETSI_DSRC_NodeAttributeSetXY (
   ASN1T_ETSI_DSRC_NodeAttributeSetXY* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_NodeAttributeSetXY (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_NodeAttributeSetXY* pvalue);

/**************************************************************/
/*                                                            */
/*  NodeXY                                                    */
/*                                                            */
/**************************************************************/
/*
NodeXY ::= SEQUENCE {
   delta [0] EXPLICIT NodeOffsetPointXY,
   attributes [1] NodeAttributeSetXY OPTIONAL,
   ...
}
*/
struct EXTERN ASN1T_ETSI_DSRC_NodeXY {
   struct {
      unsigned attributesPresent : 1;
   } m;
   ASN1T_ETSI_DSRC_NodeOffsetPointXY delta;
   ASN1T_ETSI_DSRC_NodeAttributeSetXY attributes;
   ASN1TSeqExt extElem1;
   ASN1T_ETSI_DSRC_NodeXY ();
} ;

EXTERN int asn1PE_ETSI_DSRC_NodeXY (OSCTXT* pctxt, ASN1T_ETSI_DSRC_NodeXY* pvalue);

EXTERN int asn1PD_ETSI_DSRC_NodeXY (OSCTXT* pctxt, ASN1T_ETSI_DSRC_NodeXY* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_NodeXY (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_NodeXY* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_NodeXY (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_NodeXY* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_NodeXY (OSCTXT *pctxt, ASN1T_ETSI_DSRC_NodeXY *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_NodeXY (OSCTXT *pctxt, ASN1T_ETSI_DSRC_NodeXY *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_NodeXY (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_NodeXY* pvalue);

EXTERN ASN1T_ETSI_DSRC_NodeXY* new_ASN1T_ETSI_DSRC_NodeXY (ASN1CType& ccobj);

EXTERN int asn1Init_ETSI_DSRC_NodeXY (ASN1T_ETSI_DSRC_NodeXY* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_NodeXY (OSCTXT *pctxt, ASN1T_ETSI_DSRC_NodeXY* pvalue);

/**************************************************************/
/*                                                            */
/*  NodeSetXY                                                 */
/*                                                            */
/**************************************************************/
/*
NodeSetXY ::= SEQUENCE (SIZE (2..63)) OF NodeXY
*/
/* List of ASN1T_ETSI_DSRC_NodeXY */
typedef ASN1TSeqOfList ASN1T_ETSI_DSRC_NodeSetXY;

class EXTERN ASN1C_ETSI_DSRC_NodeSetXY :
public ASN1CSeqOfList
{
protected:
   ASN1T_ETSI_DSRC_NodeSetXY& msgData;
public:
   /**
    * Control class: ASN1C_ETSI_DSRC_NodeSetXY
    * Data class:    ASN1T_ETSI_DSRC_NodeSetXY
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_NodeSetXY (ASN1T_ETSI_DSRC_NodeSetXY& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_NodeSetXY<br/>
    * Data class: ASN1T_ETSI_DSRC_NodeSetXY<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_NodeSetXY (OSRTMessageBufferIF& msgBuf
      , ASN1T_ETSI_DSRC_NodeSetXY& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_NodeSetXY<br/>
    * Data class: ASN1T_ETSI_DSRC_NodeSetXY<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_ETSI_DSRC_NodeSetXY (ASN1CType& ccobj, ASN1T_ETSI_DSRC_NodeSetXY& data
      );

   virtual ~ASN1C_ETSI_DSRC_NodeSetXY () {}

   /**
    * Data class: ASN1T_ETSI_DSRC_NodeXY<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_ETSI_DSRC_NodeXY* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_ETSI_DSRC_NodeXY.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_ETSI_DSRC_NodeXY* NewElement ();

   /**
    * Data class: ASN1T_ETSI_DSRC_NodeXY.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_ETSI_DSRC_NodeXY* AppendNewElement ();

private:
   ASN1C_ETSI_DSRC_NodeSetXY& operator= (const ASN1C_ETSI_DSRC_NodeSetXY&) {return *this;}
} ;

EXTERN int asn1PE_ETSI_DSRC_NodeSetXY (OSCTXT* pctxt, ASN1T_ETSI_DSRC_NodeSetXY* pvalue);

EXTERN int asn1PD_ETSI_DSRC_NodeSetXY (OSCTXT* pctxt, ASN1T_ETSI_DSRC_NodeSetXY* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_NodeSetXY (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_NodeSetXY* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_NodeSetXY (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_NodeSetXY* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_NodeSetXY (OSCTXT *pctxt, ASN1T_ETSI_DSRC_NodeSetXY *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_NodeSetXY (OSCTXT *pctxt, ASN1T_ETSI_DSRC_NodeSetXY *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_NodeSetXY (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_NodeSetXY* pvalue);

EXTERN int asn1Init_ETSI_DSRC_NodeSetXY (ASN1T_ETSI_DSRC_NodeSetXY* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_NodeSetXY (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_NodeSetXY* pvalue);

/**************************************************************/
/*                                                            */
/*  DrivenLineOffsetSm                                        */
/*                                                            */
/**************************************************************/
/*
DrivenLineOffsetSm ::= INTEGER (-2047..2047)
*/
typedef OSINT16 ASN1T_ETSI_DSRC_DrivenLineOffsetSm;

EXTERN int asn1PE_ETSI_DSRC_DrivenLineOffsetSm (OSCTXT* pctxt, ASN1T_ETSI_DSRC_DrivenLineOffsetSm value);

EXTERN int asn1PD_ETSI_DSRC_DrivenLineOffsetSm (OSCTXT* pctxt, ASN1T_ETSI_DSRC_DrivenLineOffsetSm* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_DrivenLineOffsetSm (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_DrivenLineOffsetSm value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_DrivenLineOffsetSm (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_DrivenLineOffsetSm* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_DrivenLineOffsetSm (OSCTXT *pctxt, ASN1T_ETSI_DSRC_DrivenLineOffsetSm *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_DrivenLineOffsetSm (OSCTXT *pctxt, ASN1T_ETSI_DSRC_DrivenLineOffsetSm *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_DrivenLineOffsetSm (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_DrivenLineOffsetSm* pvalue);

EXTERN ASN1T_ETSI_DSRC_DrivenLineOffsetSm* 
   new_ASN1T_ETSI_DSRC_DrivenLineOffsetSm (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  DrivenLineOffsetLg                                        */
/*                                                            */
/**************************************************************/
/*
DrivenLineOffsetLg ::= INTEGER (-32767..32767)
*/
typedef OSINT16 ASN1T_ETSI_DSRC_DrivenLineOffsetLg;

EXTERN int asn1PE_ETSI_DSRC_DrivenLineOffsetLg (OSCTXT* pctxt, ASN1T_ETSI_DSRC_DrivenLineOffsetLg value);

EXTERN int asn1PD_ETSI_DSRC_DrivenLineOffsetLg (OSCTXT* pctxt, ASN1T_ETSI_DSRC_DrivenLineOffsetLg* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_DrivenLineOffsetLg (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_DrivenLineOffsetLg value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_DrivenLineOffsetLg (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_DrivenLineOffsetLg* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_DrivenLineOffsetLg (OSCTXT *pctxt, ASN1T_ETSI_DSRC_DrivenLineOffsetLg *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_DrivenLineOffsetLg (OSCTXT *pctxt, ASN1T_ETSI_DSRC_DrivenLineOffsetLg *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_DrivenLineOffsetLg (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_DrivenLineOffsetLg* pvalue);

EXTERN ASN1T_ETSI_DSRC_DrivenLineOffsetLg* 
   new_ASN1T_ETSI_DSRC_DrivenLineOffsetLg (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  ComputedLane_offsetXaxis                                  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ComputedLane'
*/
/* Choice tag constants */

#define T_ETSI_DSRC_ComputedLane_offsetXaxis_small_ 1
#define T_ETSI_DSRC_ComputedLane_offsetXaxis_large_ 2

struct EXTERN ASN1T_ETSI_DSRC_ComputedLane_offsetXaxis {
   OSINT32 t;
   union {
      /* t = 1 */
      ASN1T_ETSI_DSRC_DrivenLineOffsetSm small_;
      /* t = 2 */
      ASN1T_ETSI_DSRC_DrivenLineOffsetLg large_;
   } u;
   ASN1T_ETSI_DSRC_ComputedLane_offsetXaxis () { t = 0; OSCRTLMEMSET (&u, 0, sizeof(u)); }
} ;

EXTERN int asn1PE_ETSI_DSRC_ComputedLane_offsetXaxis (OSCTXT* pctxt, ASN1T_ETSI_DSRC_ComputedLane_offsetXaxis* pvalue);

EXTERN int asn1PD_ETSI_DSRC_ComputedLane_offsetXaxis (OSCTXT* pctxt, ASN1T_ETSI_DSRC_ComputedLane_offsetXaxis* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_ComputedLane_offsetXaxis (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_ComputedLane_offsetXaxis* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_ComputedLane_offsetXaxis (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_ComputedLane_offsetXaxis* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_ComputedLane_offsetXaxis (OSCTXT *pctxt, ASN1T_ETSI_DSRC_ComputedLane_offsetXaxis *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_ComputedLane_offsetXaxis (OSCTXT *pctxt, ASN1T_ETSI_DSRC_ComputedLane_offsetXaxis *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_ComputedLane_offsetXaxis (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_ComputedLane_offsetXaxis* pvalue);

EXTERN ASN1T_ETSI_DSRC_ComputedLane_offsetXaxis* 
   new_ASN1T_ETSI_DSRC_ComputedLane_offsetXaxis (ASN1CType& ccobj);

EXTERN int asn1Init_ETSI_DSRC_ComputedLane_offsetXaxis (
   ASN1T_ETSI_DSRC_ComputedLane_offsetXaxis* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

/**************************************************************/
/*                                                            */
/*  ComputedLane_offsetYaxis                                  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ComputedLane'
*/
/* Choice tag constants */

#define T_ETSI_DSRC_ComputedLane_offsetYaxis_small_ 1
#define T_ETSI_DSRC_ComputedLane_offsetYaxis_large_ 2

struct EXTERN ASN1T_ETSI_DSRC_ComputedLane_offsetYaxis {
   OSINT32 t;
   union {
      /* t = 1 */
      ASN1T_ETSI_DSRC_DrivenLineOffsetSm small_;
      /* t = 2 */
      ASN1T_ETSI_DSRC_DrivenLineOffsetLg large_;
   } u;
   ASN1T_ETSI_DSRC_ComputedLane_offsetYaxis () { t = 0; OSCRTLMEMSET (&u, 0, sizeof(u)); }
} ;

EXTERN int asn1PE_ETSI_DSRC_ComputedLane_offsetYaxis (OSCTXT* pctxt, ASN1T_ETSI_DSRC_ComputedLane_offsetYaxis* pvalue);

EXTERN int asn1PD_ETSI_DSRC_ComputedLane_offsetYaxis (OSCTXT* pctxt, ASN1T_ETSI_DSRC_ComputedLane_offsetYaxis* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_ComputedLane_offsetYaxis (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_ComputedLane_offsetYaxis* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_ComputedLane_offsetYaxis (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_ComputedLane_offsetYaxis* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_ComputedLane_offsetYaxis (OSCTXT *pctxt, ASN1T_ETSI_DSRC_ComputedLane_offsetYaxis *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_ComputedLane_offsetYaxis (OSCTXT *pctxt, ASN1T_ETSI_DSRC_ComputedLane_offsetYaxis *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_ComputedLane_offsetYaxis (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_ComputedLane_offsetYaxis* pvalue);

EXTERN ASN1T_ETSI_DSRC_ComputedLane_offsetYaxis* 
   new_ASN1T_ETSI_DSRC_ComputedLane_offsetYaxis (ASN1CType& ccobj);

EXTERN int asn1Init_ETSI_DSRC_ComputedLane_offsetYaxis (
   ASN1T_ETSI_DSRC_ComputedLane_offsetYaxis* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

/**************************************************************/
/*                                                            */
/*  Angle                                                     */
/*                                                            */
/**************************************************************/
/*
Angle ::= INTEGER (0..28800)
*/
typedef OSUINT16 ASN1T_ETSI_DSRC_Angle;

EXTERN int asn1PE_ETSI_DSRC_Angle (OSCTXT* pctxt, ASN1T_ETSI_DSRC_Angle value);

EXTERN int asn1PD_ETSI_DSRC_Angle (OSCTXT* pctxt, ASN1T_ETSI_DSRC_Angle* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_Angle (OSCTXT* pctxt, ASN1T_ETSI_DSRC_Angle value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_Angle (OSCTXT* pctxt, ASN1T_ETSI_DSRC_Angle* pvalue
   );

EXTERN int asn1JsonEnc_ETSI_DSRC_Angle (OSCTXT *pctxt, ASN1T_ETSI_DSRC_Angle *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_Angle (OSCTXT *pctxt, ASN1T_ETSI_DSRC_Angle *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_Angle (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_Angle* pvalue);

EXTERN ASN1T_ETSI_DSRC_Angle* new_ASN1T_ETSI_DSRC_Angle (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  Scale_B12                                                 */
/*                                                            */
/**************************************************************/
/*
Scale-B12 ::= INTEGER (-2048..2047)
*/
typedef OSINT16 ASN1T_ETSI_DSRC_Scale_B12;

EXTERN int asn1PE_ETSI_DSRC_Scale_B12 (OSCTXT* pctxt, ASN1T_ETSI_DSRC_Scale_B12 value);

EXTERN int asn1PD_ETSI_DSRC_Scale_B12 (OSCTXT* pctxt, ASN1T_ETSI_DSRC_Scale_B12* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_Scale_B12 (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_Scale_B12 value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_Scale_B12 (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_Scale_B12* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_Scale_B12 (OSCTXT *pctxt, ASN1T_ETSI_DSRC_Scale_B12 *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_Scale_B12 (OSCTXT *pctxt, ASN1T_ETSI_DSRC_Scale_B12 *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_Scale_B12 (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_Scale_B12* pvalue);

EXTERN ASN1T_ETSI_DSRC_Scale_B12* 
   new_ASN1T_ETSI_DSRC_Scale_B12 (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  ComputedLane_regional_element                             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ComputedLane'
*/
struct EXTERN ASN1T_ETSI_DSRC_ComputedLane_regional_element {
   ASN1T_ETSI_DSRC_RegionId regionId;
   ASN1TOpenType regExtValue;
} ;

EXTERN int asn1PE_ETSI_DSRC_ComputedLane_regional_element (OSCTXT* pctxt, ASN1T_ETSI_DSRC_ComputedLane_regional_element* pvalue);

EXTERN int asn1PD_ETSI_DSRC_ComputedLane_regional_element (OSCTXT* pctxt, ASN1T_ETSI_DSRC_ComputedLane_regional_element* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_ComputedLane_regional_element (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_ComputedLane_regional_element* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_ComputedLane_regional_element (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_ComputedLane_regional_element* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_ComputedLane_regional_element (OSCTXT *pctxt, ASN1T_ETSI_DSRC_ComputedLane_regional_element *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_ComputedLane_regional_element (OSCTXT *pctxt, ASN1T_ETSI_DSRC_ComputedLane_regional_element *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_ComputedLane_regional_element (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_ComputedLane_regional_element* pvalue);

EXTERN ASN1T_ETSI_DSRC_ComputedLane_regional_element* 
   new_ASN1T_ETSI_DSRC_ComputedLane_regional_element (ASN1CType& ccobj);

EXTERN int asn1Init_ETSI_DSRC_ComputedLane_regional_element (
   ASN1T_ETSI_DSRC_ComputedLane_regional_element* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_ComputedLane_regional_element (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_ComputedLane_regional_element* pvalue);

/**************************************************************/
/*                                                            */
/*  ComputedLane_regional                                     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ComputedLane'
*/
/* List of ASN1T_ETSI_DSRC_ComputedLane_regional_element */
typedef ASN1TSeqOfList ASN1T_ETSI_DSRC_ComputedLane_regional;

class EXTERN ASN1C_ETSI_DSRC_ComputedLane_regional :
public ASN1CSeqOfList
{
protected:
   ASN1T_ETSI_DSRC_ComputedLane_regional& msgData;
public:
   /**
    * Control class: ASN1C_ETSI_DSRC_ComputedLane_regional
    * Data class:    ASN1T_ETSI_DSRC_ComputedLane_regional
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_ComputedLane_regional
       (ASN1T_ETSI_DSRC_ComputedLane_regional& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_ComputedLane_regional<br/>
    * Data class: ASN1T_ETSI_DSRC_ComputedLane_regional<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_ComputedLane_regional (OSRTMessageBufferIF& msgBuf
      , ASN1T_ETSI_DSRC_ComputedLane_regional& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_ComputedLane_regional<br/>
    * Data class: ASN1T_ETSI_DSRC_ComputedLane_regional<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_ETSI_DSRC_ComputedLane_regional (ASN1CType& ccobj
      , ASN1T_ETSI_DSRC_ComputedLane_regional& data);

   virtual ~ASN1C_ETSI_DSRC_ComputedLane_regional () {}

   /**
    * Data class: ASN1T_ETSI_DSRC_ComputedLane_regional_element<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_ETSI_DSRC_ComputedLane_regional_element* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_ETSI_DSRC_ComputedLane_regional_element.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_ETSI_DSRC_ComputedLane_regional_element* NewElement ();

   /**
    * Data class: ASN1T_ETSI_DSRC_ComputedLane_regional_element.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_ETSI_DSRC_ComputedLane_regional_element* AppendNewElement ();

   /* Get IE using regionId key value */
   ASN1T_ETSI_DSRC_ComputedLane_regional_element* 
      GetIE (ASN1T_ETSI_DSRC_RegionId regionId);

   /* Get all matching IEs using regionId key value */
   int GetAllIEs (ASN1T_ETSI_DSRC_RegionId regionId, 
      ASN1T_ETSI_DSRC_ComputedLane_regional* pmatches);

private:
   ASN1C_ETSI_DSRC_ComputedLane_regional& operator= (const ASN1C_ETSI_DSRC_ComputedLane_regional&) {return *this;}
} ;

EXTERN int asn1PE_ETSI_DSRC_ComputedLane_regional (OSCTXT* pctxt, ASN1T_ETSI_DSRC_ComputedLane_regional* pvalue);

EXTERN int asn1PD_ETSI_DSRC_ComputedLane_regional (OSCTXT* pctxt, ASN1T_ETSI_DSRC_ComputedLane_regional* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_ComputedLane_regional (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_ComputedLane_regional* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_ComputedLane_regional (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_ComputedLane_regional* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_ComputedLane_regional (OSCTXT *pctxt, ASN1T_ETSI_DSRC_ComputedLane_regional *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_ComputedLane_regional (OSCTXT *pctxt, ASN1T_ETSI_DSRC_ComputedLane_regional *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_ComputedLane_regional (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_ComputedLane_regional* pvalue);

EXTERN int asn1Init_ETSI_DSRC_ComputedLane_regional (
   ASN1T_ETSI_DSRC_ComputedLane_regional* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_ComputedLane_regional (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_ComputedLane_regional* pvalue);

/**************************************************************/
/*                                                            */
/*  ComputedLane                                              */
/*                                                            */
/**************************************************************/
/*
ComputedLane ::= SEQUENCE {
   referenceLaneId [0] LaneID,
   offsetXaxis [1] EXPLICIT CHOICE {
      small [0] DrivenLineOffsetSm,
      large [1] DrivenLineOffsetLg
   },
   offsetYaxis [2] EXPLICIT CHOICE {
      small [0] DrivenLineOffsetSm,
      large [1] DrivenLineOffsetLg
   },
   rotateXY [3] Angle OPTIONAL,
   scaleXaxis [4] Scale-B12 OPTIONAL,
   scaleYaxis [5] Scale-B12 OPTIONAL,
   regional [6] SEQUENCE (SIZE (1..4)) OF SEQUENCE {
      regionId [0] REG-EXT-ID-AND-TYPE.&id ({Reg-ComputedLane}),
      regExtValue [1] EXPLICIT REG-EXT-ID-AND-TYPE.&Type ({Reg-ComputedLane}{@regionId})
   } OPTIONAL,
   ...
}
*/
struct EXTERN ASN1T_ETSI_DSRC_ComputedLane {
   struct {
      unsigned rotateXYPresent : 1;
      unsigned scaleXaxisPresent : 1;
      unsigned scaleYaxisPresent : 1;
      unsigned regionalPresent : 1;
   } m;
   ASN1T_ETSI_DSRC_LaneID referenceLaneId;
   ASN1T_ETSI_DSRC_ComputedLane_offsetXaxis offsetXaxis;
   ASN1T_ETSI_DSRC_ComputedLane_offsetYaxis offsetYaxis;
   ASN1T_ETSI_DSRC_Angle rotateXY;
   ASN1T_ETSI_DSRC_Scale_B12 scaleXaxis;
   ASN1T_ETSI_DSRC_Scale_B12 scaleYaxis;
   ASN1T_ETSI_DSRC_ComputedLane_regional regional;
   ASN1TSeqExt extElem1;
   ASN1T_ETSI_DSRC_ComputedLane ();
} ;

EXTERN int asn1PE_ETSI_DSRC_ComputedLane (OSCTXT* pctxt, ASN1T_ETSI_DSRC_ComputedLane* pvalue);

EXTERN int asn1PD_ETSI_DSRC_ComputedLane (OSCTXT* pctxt, ASN1T_ETSI_DSRC_ComputedLane* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_ComputedLane (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_ComputedLane* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_ComputedLane (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_ComputedLane* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_ComputedLane (OSCTXT *pctxt, ASN1T_ETSI_DSRC_ComputedLane *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_ComputedLane (OSCTXT *pctxt, ASN1T_ETSI_DSRC_ComputedLane *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_ComputedLane (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_ComputedLane* pvalue);

EXTERN ASN1T_ETSI_DSRC_ComputedLane* 
   new_ASN1T_ETSI_DSRC_ComputedLane (ASN1CType& ccobj);

EXTERN int asn1Init_ETSI_DSRC_ComputedLane (ASN1T_ETSI_DSRC_ComputedLane* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_ComputedLane (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_ComputedLane* pvalue);

/**************************************************************/
/*                                                            */
/*  NodeListXY                                                */
/*                                                            */
/**************************************************************/
/*
NodeListXY ::= CHOICE {
   nodes [0] NodeSetXY,
   computed [1] ComputedLane,
   ...
}
*/
/* Choice tag constants */

#define T_ETSI_DSRC_NodeListXY_nodes    1
#define T_ETSI_DSRC_NodeListXY_computed 2
#define T_ETSI_DSRC_NodeListXY_extElem1 3

struct EXTERN ASN1T_ETSI_DSRC_NodeListXY {
   OSINT32 t;
   union {
      /* t = 1 */
      ASN1T_ETSI_DSRC_NodeSetXY *nodes;
      /* t = 2 */
      ASN1T_ETSI_DSRC_ComputedLane *computed;
      /* t = 3 */
      ASN1TOpenType *extElem1;
   } u;
   ASN1T_ETSI_DSRC_NodeListXY () { t = 0; OSCRTLMEMSET (&u, 0, sizeof(u)); }
} ;

EXTERN int asn1PE_ETSI_DSRC_NodeListXY (OSCTXT* pctxt, ASN1T_ETSI_DSRC_NodeListXY* pvalue);

EXTERN int asn1PD_ETSI_DSRC_NodeListXY (OSCTXT* pctxt, ASN1T_ETSI_DSRC_NodeListXY* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_NodeListXY (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_NodeListXY* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_NodeListXY (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_NodeListXY* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_NodeListXY (OSCTXT *pctxt, ASN1T_ETSI_DSRC_NodeListXY *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_NodeListXY (OSCTXT *pctxt, ASN1T_ETSI_DSRC_NodeListXY *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_NodeListXY (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_NodeListXY* pvalue);

EXTERN ASN1T_ETSI_DSRC_NodeListXY* 
   new_ASN1T_ETSI_DSRC_NodeListXY (ASN1CType& ccobj);

EXTERN int asn1Init_ETSI_DSRC_NodeListXY (ASN1T_ETSI_DSRC_NodeListXY* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_NodeListXY (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_NodeListXY* pvalue);

/**************************************************************/
/*                                                            */
/*  ConnectingLane                                            */
/*                                                            */
/**************************************************************/
/*
ConnectingLane ::= SEQUENCE {
   lane [0] LaneID,
   maneuver [1] AllowedManeuvers OPTIONAL
}
*/
struct EXTERN ASN1T_ETSI_DSRC_ConnectingLane {
   struct {
      unsigned maneuverPresent : 1;
   } m;
   ASN1T_ETSI_DSRC_LaneID lane;
   ASN1T_ETSI_DSRC_AllowedManeuvers maneuver;
   ASN1T_ETSI_DSRC_ConnectingLane ();
} ;

EXTERN int asn1PE_ETSI_DSRC_ConnectingLane (OSCTXT* pctxt, ASN1T_ETSI_DSRC_ConnectingLane* pvalue);

EXTERN int asn1PD_ETSI_DSRC_ConnectingLane (OSCTXT* pctxt, ASN1T_ETSI_DSRC_ConnectingLane* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_ConnectingLane (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_ConnectingLane* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_ConnectingLane (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_ConnectingLane* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_ConnectingLane (OSCTXT *pctxt, ASN1T_ETSI_DSRC_ConnectingLane *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_ConnectingLane (OSCTXT *pctxt, ASN1T_ETSI_DSRC_ConnectingLane *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_ConnectingLane (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_ConnectingLane* pvalue);

EXTERN ASN1T_ETSI_DSRC_ConnectingLane* 
   new_ASN1T_ETSI_DSRC_ConnectingLane (ASN1CType& ccobj);

EXTERN int asn1Init_ETSI_DSRC_ConnectingLane (ASN1T_ETSI_DSRC_ConnectingLane* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

/**************************************************************/
/*                                                            */
/*  SignalGroupID                                             */
/*                                                            */
/**************************************************************/
/*
SignalGroupID ::= INTEGER (0..255)
*/
typedef OSUINT8 ASN1T_ETSI_DSRC_SignalGroupID;

EXTERN int asn1PE_ETSI_DSRC_SignalGroupID (OSCTXT* pctxt, ASN1T_ETSI_DSRC_SignalGroupID value);

EXTERN int asn1PD_ETSI_DSRC_SignalGroupID (OSCTXT* pctxt, ASN1T_ETSI_DSRC_SignalGroupID* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_SignalGroupID (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_SignalGroupID value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_SignalGroupID (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_SignalGroupID* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_SignalGroupID (OSCTXT *pctxt, ASN1T_ETSI_DSRC_SignalGroupID *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_SignalGroupID (OSCTXT *pctxt, ASN1T_ETSI_DSRC_SignalGroupID *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_SignalGroupID (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_SignalGroupID* pvalue);

EXTERN ASN1T_ETSI_DSRC_SignalGroupID* 
   new_ASN1T_ETSI_DSRC_SignalGroupID (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  RestrictionClassID                                        */
/*                                                            */
/**************************************************************/
/*
RestrictionClassID ::= INTEGER (0..255)
*/
typedef OSUINT8 ASN1T_ETSI_DSRC_RestrictionClassID;

EXTERN int asn1PE_ETSI_DSRC_RestrictionClassID (OSCTXT* pctxt, ASN1T_ETSI_DSRC_RestrictionClassID value);

EXTERN int asn1PD_ETSI_DSRC_RestrictionClassID (OSCTXT* pctxt, ASN1T_ETSI_DSRC_RestrictionClassID* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_RestrictionClassID (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_RestrictionClassID value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_RestrictionClassID (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_RestrictionClassID* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_RestrictionClassID (OSCTXT *pctxt, ASN1T_ETSI_DSRC_RestrictionClassID *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_RestrictionClassID (OSCTXT *pctxt, ASN1T_ETSI_DSRC_RestrictionClassID *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_RestrictionClassID (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_RestrictionClassID* pvalue);

EXTERN ASN1T_ETSI_DSRC_RestrictionClassID* 
   new_ASN1T_ETSI_DSRC_RestrictionClassID (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  Connection                                                */
/*                                                            */
/**************************************************************/
/*
Connection ::= SEQUENCE {
   connectingLane [0] ConnectingLane,
   remoteIntersection [1] IntersectionReferenceID OPTIONAL,
   signalGroup [2] SignalGroupID OPTIONAL,
   userClass [3] RestrictionClassID OPTIONAL,
   connectionID [4] LaneConnectionID OPTIONAL
}
*/
struct EXTERN ASN1T_ETSI_DSRC_Connection {
   struct {
      unsigned remoteIntersectionPresent : 1;
      unsigned signalGroupPresent : 1;
      unsigned userClassPresent : 1;
      unsigned connectionIDPresent : 1;
   } m;
   ASN1T_ETSI_DSRC_ConnectingLane connectingLane;
   ASN1T_ETSI_DSRC_IntersectionReferenceID remoteIntersection;
   ASN1T_ETSI_DSRC_SignalGroupID signalGroup;
   ASN1T_ETSI_DSRC_RestrictionClassID userClass;
   ASN1T_ETSI_DSRC_LaneConnectionID connectionID;
   ASN1T_ETSI_DSRC_Connection ();
} ;

EXTERN int asn1PE_ETSI_DSRC_Connection (OSCTXT* pctxt, ASN1T_ETSI_DSRC_Connection* pvalue);

EXTERN int asn1PD_ETSI_DSRC_Connection (OSCTXT* pctxt, ASN1T_ETSI_DSRC_Connection* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_Connection (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_Connection* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_Connection (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_Connection* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_Connection (OSCTXT *pctxt, ASN1T_ETSI_DSRC_Connection *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_Connection (OSCTXT *pctxt, ASN1T_ETSI_DSRC_Connection *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_Connection (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_Connection* pvalue);

EXTERN ASN1T_ETSI_DSRC_Connection* 
   new_ASN1T_ETSI_DSRC_Connection (ASN1CType& ccobj);

EXTERN int asn1Init_ETSI_DSRC_Connection (ASN1T_ETSI_DSRC_Connection* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

/**************************************************************/
/*                                                            */
/*  ConnectsToList                                            */
/*                                                            */
/**************************************************************/
/*
ConnectsToList ::= SEQUENCE (SIZE (1..16)) OF Connection
*/
/* List of ASN1T_ETSI_DSRC_Connection */
typedef ASN1TSeqOfList ASN1T_ETSI_DSRC_ConnectsToList;

class EXTERN ASN1C_ETSI_DSRC_ConnectsToList :
public ASN1CSeqOfList
{
protected:
   ASN1T_ETSI_DSRC_ConnectsToList& msgData;
public:
   /**
    * Control class: ASN1C_ETSI_DSRC_ConnectsToList
    * Data class:    ASN1T_ETSI_DSRC_ConnectsToList
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_ConnectsToList (ASN1T_ETSI_DSRC_ConnectsToList& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_ConnectsToList<br/>
    * Data class: ASN1T_ETSI_DSRC_ConnectsToList<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_ConnectsToList (OSRTMessageBufferIF& msgBuf
      , ASN1T_ETSI_DSRC_ConnectsToList& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_ConnectsToList<br/>
    * Data class: ASN1T_ETSI_DSRC_ConnectsToList<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_ETSI_DSRC_ConnectsToList (ASN1CType& ccobj
      , ASN1T_ETSI_DSRC_ConnectsToList& data);

   virtual ~ASN1C_ETSI_DSRC_ConnectsToList () {}

   /**
    * Data class: ASN1T_ETSI_DSRC_Connection<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_ETSI_DSRC_Connection* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_ETSI_DSRC_Connection.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_ETSI_DSRC_Connection* NewElement ();

   /**
    * Data class: ASN1T_ETSI_DSRC_Connection.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_ETSI_DSRC_Connection* AppendNewElement ();

private:
   ASN1C_ETSI_DSRC_ConnectsToList& operator= (const ASN1C_ETSI_DSRC_ConnectsToList&) {return *this;}
} ;

EXTERN int asn1PE_ETSI_DSRC_ConnectsToList (OSCTXT* pctxt, ASN1T_ETSI_DSRC_ConnectsToList* pvalue);

EXTERN int asn1PD_ETSI_DSRC_ConnectsToList (OSCTXT* pctxt, ASN1T_ETSI_DSRC_ConnectsToList* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_ConnectsToList (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_ConnectsToList* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_ConnectsToList (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_ConnectsToList* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_ConnectsToList (OSCTXT *pctxt, ASN1T_ETSI_DSRC_ConnectsToList *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_ConnectsToList (OSCTXT *pctxt, ASN1T_ETSI_DSRC_ConnectsToList *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_ConnectsToList (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_ConnectsToList* pvalue);

EXTERN int asn1Init_ETSI_DSRC_ConnectsToList (ASN1T_ETSI_DSRC_ConnectsToList* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_ConnectsToList (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_ConnectsToList* pvalue);

/**************************************************************/
/*                                                            */
/*  OverlayLaneList                                           */
/*                                                            */
/**************************************************************/
/*
OverlayLaneList ::= SEQUENCE (SIZE (1..5)) OF LaneID
*/
typedef struct EXTERN ASN1T_ETSI_DSRC_OverlayLaneList {
   OSUINT8 n;
   ASN1T_ETSI_DSRC_LaneID elem[5];
   ASN1T_ETSI_DSRC_OverlayLaneList () : n(0) {}
} ASN1T_ETSI_DSRC_OverlayLaneList;

class EXTERN ASN1C_ETSI_DSRC_OverlayLaneList :
public ASN1CType
{
protected:
   ASN1T_ETSI_DSRC_OverlayLaneList& msgData;
public:
   /**
    * Control class: ASN1C_ETSI_DSRC_OverlayLaneList
    * Data class:    ASN1T_ETSI_DSRC_OverlayLaneList
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_OverlayLaneList (ASN1T_ETSI_DSRC_OverlayLaneList& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_OverlayLaneList<br/>
    * Data class: ASN1T_ETSI_DSRC_OverlayLaneList<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_OverlayLaneList (OSRTMessageBufferIF& msgBuf
      , ASN1T_ETSI_DSRC_OverlayLaneList& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_OverlayLaneList<br/>
    * Data class: ASN1T_ETSI_DSRC_OverlayLaneList<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_ETSI_DSRC_OverlayLaneList (ASN1CType& ccobj
      , ASN1T_ETSI_DSRC_OverlayLaneList& data);

   virtual ~ASN1C_ETSI_DSRC_OverlayLaneList () {}

private:
   ASN1C_ETSI_DSRC_OverlayLaneList& operator= (const ASN1C_ETSI_DSRC_OverlayLaneList&) {return *this;}
} ;

EXTERN int asn1PE_ETSI_DSRC_OverlayLaneList (OSCTXT* pctxt, ASN1T_ETSI_DSRC_OverlayLaneList* pvalue);

EXTERN int asn1PD_ETSI_DSRC_OverlayLaneList (OSCTXT* pctxt, ASN1T_ETSI_DSRC_OverlayLaneList* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_OverlayLaneList (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_OverlayLaneList* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_OverlayLaneList (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_OverlayLaneList* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_OverlayLaneList (OSCTXT *pctxt, ASN1T_ETSI_DSRC_OverlayLaneList *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_OverlayLaneList (OSCTXT *pctxt, ASN1T_ETSI_DSRC_OverlayLaneList *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_OverlayLaneList (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_OverlayLaneList* pvalue);

EXTERN int asn1Init_ETSI_DSRC_OverlayLaneList (
   ASN1T_ETSI_DSRC_OverlayLaneList* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

/**************************************************************/
/*                                                            */
/*  GenericLane_regional_element                              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'GenericLane'
*/
struct EXTERN ASN1T_ETSI_DSRC_GenericLane_regional_element {
   ASN1T_ETSI_DSRC_RegionId regionId;
   struct  {
      /**
       * information object selector
       */
      OSUINT16 t;

      /**
       * Reg-GenericLane information objects
       */
      union {
         /**
          * id: addGrpC
          */
         struct ASN1T_ETSI_GrpC_ConnectionTrajectory_addGrpC *_ETSI_REG_Reg_GenericLane_addGrpC;

         ASN1TOpenType* extElem1;
      } u;
   } regExtValue;
   ASN1T_ETSI_DSRC_GenericLane_regional_element ();
} ;

EXTERN int asn1PE_ETSI_DSRC_GenericLane_regional_element (OSCTXT* pctxt, ASN1T_ETSI_DSRC_GenericLane_regional_element* pvalue);

EXTERN int asn1PD_ETSI_DSRC_GenericLane_regional_element (OSCTXT* pctxt, ASN1T_ETSI_DSRC_GenericLane_regional_element* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_GenericLane_regional_element (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_GenericLane_regional_element* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_GenericLane_regional_element (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_GenericLane_regional_element* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_GenericLane_regional_element (OSCTXT *pctxt, ASN1T_ETSI_DSRC_GenericLane_regional_element *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_GenericLane_regional_element (OSCTXT *pctxt, ASN1T_ETSI_DSRC_GenericLane_regional_element *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_GenericLane_regional_element (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_GenericLane_regional_element* pvalue);

EXTERN ASN1T_ETSI_DSRC_GenericLane_regional_element* 
   new_ASN1T_ETSI_DSRC_GenericLane_regional_element (ASN1CType& ccobj);

EXTERN int asn1Init_ETSI_DSRC_GenericLane_regional_element (
   ASN1T_ETSI_DSRC_GenericLane_regional_element* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_GenericLane_regional_element (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_GenericLane_regional_element* pvalue);

/**************************************************************/
/*                                                            */
/*  GenericLane_regional                                      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'GenericLane'
*/
/* List of ASN1T_ETSI_DSRC_GenericLane_regional_element */
typedef ASN1TSeqOfList ASN1T_ETSI_DSRC_GenericLane_regional;

class EXTERN ASN1C_ETSI_DSRC_GenericLane_regional :
public ASN1CSeqOfList
{
protected:
   ASN1T_ETSI_DSRC_GenericLane_regional& msgData;
public:
   /**
    * Control class: ASN1C_ETSI_DSRC_GenericLane_regional
    * Data class:    ASN1T_ETSI_DSRC_GenericLane_regional
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_GenericLane_regional
       (ASN1T_ETSI_DSRC_GenericLane_regional& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_GenericLane_regional<br/>
    * Data class: ASN1T_ETSI_DSRC_GenericLane_regional<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_GenericLane_regional (OSRTMessageBufferIF& msgBuf
      , ASN1T_ETSI_DSRC_GenericLane_regional& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_GenericLane_regional<br/>
    * Data class: ASN1T_ETSI_DSRC_GenericLane_regional<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_ETSI_DSRC_GenericLane_regional (ASN1CType& ccobj
      , ASN1T_ETSI_DSRC_GenericLane_regional& data);

   virtual ~ASN1C_ETSI_DSRC_GenericLane_regional () {}

   /**
    * Data class: ASN1T_ETSI_DSRC_GenericLane_regional_element<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_ETSI_DSRC_GenericLane_regional_element* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_ETSI_DSRC_GenericLane_regional_element.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_ETSI_DSRC_GenericLane_regional_element* NewElement ();

   /**
    * Data class: ASN1T_ETSI_DSRC_GenericLane_regional_element.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_ETSI_DSRC_GenericLane_regional_element* AppendNewElement ();

   /* Get IE using regionId key value */
   ASN1T_ETSI_DSRC_GenericLane_regional_element* 
      GetIE (ASN1T_ETSI_DSRC_RegionId regionId);

   /* Get all matching IEs using regionId key value */
   int GetAllIEs (ASN1T_ETSI_DSRC_RegionId regionId, 
      ASN1T_ETSI_DSRC_GenericLane_regional* pmatches);

private:
   ASN1C_ETSI_DSRC_GenericLane_regional& operator= (const ASN1C_ETSI_DSRC_GenericLane_regional&) {return *this;}
} ;

EXTERN int asn1PE_ETSI_DSRC_GenericLane_regional (OSCTXT* pctxt, ASN1T_ETSI_DSRC_GenericLane_regional* pvalue);

EXTERN int asn1PD_ETSI_DSRC_GenericLane_regional (OSCTXT* pctxt, ASN1T_ETSI_DSRC_GenericLane_regional* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_GenericLane_regional (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_GenericLane_regional* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_GenericLane_regional (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_GenericLane_regional* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_GenericLane_regional (OSCTXT *pctxt, ASN1T_ETSI_DSRC_GenericLane_regional *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_GenericLane_regional (OSCTXT *pctxt, ASN1T_ETSI_DSRC_GenericLane_regional *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_GenericLane_regional (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_GenericLane_regional* pvalue);

EXTERN int asn1Init_ETSI_DSRC_GenericLane_regional (
   ASN1T_ETSI_DSRC_GenericLane_regional* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_GenericLane_regional (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_GenericLane_regional* pvalue);

/**************************************************************/
/*                                                            */
/*  GenericLane                                               */
/*                                                            */
/**************************************************************/
/*
GenericLane ::= SEQUENCE {
   laneID [0] LaneID,
   name [1] DescriptiveName OPTIONAL,
   ingressApproach [2] ApproachID OPTIONAL,
   egressApproach [3] ApproachID OPTIONAL,
   laneAttributes [4] LaneAttributes,
   maneuvers [5] AllowedManeuvers OPTIONAL,
   nodeList [6] EXPLICIT NodeListXY,
   connectsTo [7] ConnectsToList OPTIONAL,
   overlays [8] OverlayLaneList OPTIONAL,
   regional [9] SEQUENCE (SIZE (1..4)) OF SEQUENCE {
      regionId [0] REG-EXT-ID-AND-TYPE.&id ({Reg-GenericLane}),
      regExtValue [1] EXPLICIT REG-EXT-ID-AND-TYPE.&Type ({Reg-GenericLane}{@regionId})
   } OPTIONAL,
   ...
}
*/
struct EXTERN ASN1T_ETSI_DSRC_GenericLane {
   struct {
      unsigned namePresent : 1;
      unsigned ingressApproachPresent : 1;
      unsigned egressApproachPresent : 1;
      unsigned maneuversPresent : 1;
      unsigned connectsToPresent : 1;
      unsigned overlaysPresent : 1;
      unsigned regionalPresent : 1;
   } m;
   ASN1T_ETSI_DSRC_LaneID laneID;
   ASN1T_ETSI_DSRC_DescriptiveName name;
   ASN1T_ETSI_DSRC_ApproachID ingressApproach;
   ASN1T_ETSI_DSRC_ApproachID egressApproach;
   ASN1T_ETSI_DSRC_LaneAttributes laneAttributes;
   ASN1T_ETSI_DSRC_AllowedManeuvers maneuvers;
   ASN1T_ETSI_DSRC_NodeListXY nodeList;
   ASN1T_ETSI_DSRC_ConnectsToList connectsTo;
   ASN1T_ETSI_DSRC_OverlayLaneList overlays;
   ASN1T_ETSI_DSRC_GenericLane_regional regional;
   ASN1TSeqExt extElem1;
   ASN1T_ETSI_DSRC_GenericLane ();
} ;

EXTERN int asn1PE_ETSI_DSRC_GenericLane (OSCTXT* pctxt, ASN1T_ETSI_DSRC_GenericLane* pvalue);

EXTERN int asn1PD_ETSI_DSRC_GenericLane (OSCTXT* pctxt, ASN1T_ETSI_DSRC_GenericLane* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_GenericLane (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_GenericLane* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_GenericLane (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_GenericLane* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_GenericLane (OSCTXT *pctxt, ASN1T_ETSI_DSRC_GenericLane *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_GenericLane (OSCTXT *pctxt, ASN1T_ETSI_DSRC_GenericLane *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_GenericLane (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_GenericLane* pvalue);

EXTERN ASN1T_ETSI_DSRC_GenericLane* 
   new_ASN1T_ETSI_DSRC_GenericLane (ASN1CType& ccobj);

EXTERN int asn1Init_ETSI_DSRC_GenericLane (ASN1T_ETSI_DSRC_GenericLane* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_GenericLane (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_GenericLane* pvalue);

/**************************************************************/
/*                                                            */
/*  LaneList                                                  */
/*                                                            */
/**************************************************************/
/*
LaneList ::= SEQUENCE (SIZE (1..255)) OF GenericLane
*/
/* List of ASN1T_ETSI_DSRC_GenericLane */
typedef ASN1TSeqOfList ASN1T_ETSI_DSRC_LaneList;

class EXTERN ASN1C_ETSI_DSRC_LaneList :
public ASN1CSeqOfList
{
protected:
   ASN1T_ETSI_DSRC_LaneList& msgData;
public:
   /**
    * Control class: ASN1C_ETSI_DSRC_LaneList
    * Data class:    ASN1T_ETSI_DSRC_LaneList
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_LaneList (ASN1T_ETSI_DSRC_LaneList& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_LaneList<br/>
    * Data class: ASN1T_ETSI_DSRC_LaneList<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_LaneList (OSRTMessageBufferIF& msgBuf
      , ASN1T_ETSI_DSRC_LaneList& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_LaneList<br/>
    * Data class: ASN1T_ETSI_DSRC_LaneList<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_ETSI_DSRC_LaneList (ASN1CType& ccobj, ASN1T_ETSI_DSRC_LaneList& data);

   virtual ~ASN1C_ETSI_DSRC_LaneList () {}

   /**
    * Data class: ASN1T_ETSI_DSRC_GenericLane<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_ETSI_DSRC_GenericLane* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_ETSI_DSRC_GenericLane.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_ETSI_DSRC_GenericLane* NewElement ();

   /**
    * Data class: ASN1T_ETSI_DSRC_GenericLane.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_ETSI_DSRC_GenericLane* AppendNewElement ();

private:
   ASN1C_ETSI_DSRC_LaneList& operator= (const ASN1C_ETSI_DSRC_LaneList&) {return *this;}
} ;

EXTERN int asn1PE_ETSI_DSRC_LaneList (OSCTXT* pctxt, ASN1T_ETSI_DSRC_LaneList* pvalue);

EXTERN int asn1PD_ETSI_DSRC_LaneList (OSCTXT* pctxt, ASN1T_ETSI_DSRC_LaneList* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_LaneList (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_LaneList* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_LaneList (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_LaneList* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_LaneList (OSCTXT *pctxt, ASN1T_ETSI_DSRC_LaneList *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_LaneList (OSCTXT *pctxt, ASN1T_ETSI_DSRC_LaneList *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_LaneList (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_LaneList* pvalue);

EXTERN int asn1Init_ETSI_DSRC_LaneList (ASN1T_ETSI_DSRC_LaneList* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_LaneList (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_LaneList* pvalue);

/**************************************************************/
/*                                                            */
/*  SignalControlZone_zone                                    */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'SignalControlZone'
*/
struct EXTERN ASN1T_ETSI_DSRC_SignalControlZone_zone {
   ASN1T_ETSI_DSRC_RegionId regionId;
   ASN1TOpenType regExtValue;
} ;

EXTERN int asn1PE_ETSI_DSRC_SignalControlZone_zone (OSCTXT* pctxt, ASN1T_ETSI_DSRC_SignalControlZone_zone* pvalue);

EXTERN int asn1PD_ETSI_DSRC_SignalControlZone_zone (OSCTXT* pctxt, ASN1T_ETSI_DSRC_SignalControlZone_zone* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_SignalControlZone_zone (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_SignalControlZone_zone* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_SignalControlZone_zone (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_SignalControlZone_zone* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_SignalControlZone_zone (OSCTXT *pctxt, ASN1T_ETSI_DSRC_SignalControlZone_zone *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_SignalControlZone_zone (OSCTXT *pctxt, ASN1T_ETSI_DSRC_SignalControlZone_zone *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_SignalControlZone_zone (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_SignalControlZone_zone* pvalue);

EXTERN ASN1T_ETSI_DSRC_SignalControlZone_zone* 
   new_ASN1T_ETSI_DSRC_SignalControlZone_zone (ASN1CType& ccobj);

EXTERN int asn1Init_ETSI_DSRC_SignalControlZone_zone (
   ASN1T_ETSI_DSRC_SignalControlZone_zone* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_SignalControlZone_zone (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_SignalControlZone_zone* pvalue);

/**************************************************************/
/*                                                            */
/*  SignalControlZone                                         */
/*                                                            */
/**************************************************************/
/*
SignalControlZone ::= SEQUENCE {
   zone [0] SEQUENCE {
      regionId [0] REG-EXT-ID-AND-TYPE.&id ({Reg-SignalControlZone}),
      regExtValue [1] EXPLICIT REG-EXT-ID-AND-TYPE.&Type ({Reg-SignalControlZone}{@regionId})
   },
   ...
}
*/
struct EXTERN ASN1T_ETSI_DSRC_SignalControlZone {
   ASN1T_ETSI_DSRC_SignalControlZone_zone zone;
   ASN1TSeqExt extElem1;
} ;

EXTERN int asn1PE_ETSI_DSRC_SignalControlZone (OSCTXT* pctxt, ASN1T_ETSI_DSRC_SignalControlZone* pvalue);

EXTERN int asn1PD_ETSI_DSRC_SignalControlZone (OSCTXT* pctxt, ASN1T_ETSI_DSRC_SignalControlZone* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_SignalControlZone (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_SignalControlZone* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_SignalControlZone (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_SignalControlZone* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_SignalControlZone (OSCTXT *pctxt, ASN1T_ETSI_DSRC_SignalControlZone *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_SignalControlZone (OSCTXT *pctxt, ASN1T_ETSI_DSRC_SignalControlZone *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_SignalControlZone (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_SignalControlZone* pvalue);

EXTERN ASN1T_ETSI_DSRC_SignalControlZone* 
   new_ASN1T_ETSI_DSRC_SignalControlZone (ASN1CType& ccobj);

EXTERN int asn1Init_ETSI_DSRC_SignalControlZone (
   ASN1T_ETSI_DSRC_SignalControlZone* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_SignalControlZone (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_SignalControlZone* pvalue);

/**************************************************************/
/*                                                            */
/*  PreemptPriorityList                                       */
/*                                                            */
/**************************************************************/
/*
PreemptPriorityList ::= SEQUENCE (SIZE (1..32)) OF SignalControlZone
*/
/* List of ASN1T_ETSI_DSRC_SignalControlZone */
typedef ASN1TSeqOfList ASN1T_ETSI_DSRC_PreemptPriorityList;

class EXTERN ASN1C_ETSI_DSRC_PreemptPriorityList :
public ASN1CSeqOfList
{
protected:
   ASN1T_ETSI_DSRC_PreemptPriorityList& msgData;
public:
   /**
    * Control class: ASN1C_ETSI_DSRC_PreemptPriorityList
    * Data class:    ASN1T_ETSI_DSRC_PreemptPriorityList
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_PreemptPriorityList
       (ASN1T_ETSI_DSRC_PreemptPriorityList& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_PreemptPriorityList<br/>
    * Data class: ASN1T_ETSI_DSRC_PreemptPriorityList<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_PreemptPriorityList (OSRTMessageBufferIF& msgBuf
      , ASN1T_ETSI_DSRC_PreemptPriorityList& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_PreemptPriorityList<br/>
    * Data class: ASN1T_ETSI_DSRC_PreemptPriorityList<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_ETSI_DSRC_PreemptPriorityList (ASN1CType& ccobj
      , ASN1T_ETSI_DSRC_PreemptPriorityList& data);

   virtual ~ASN1C_ETSI_DSRC_PreemptPriorityList () {}

   /**
    * Data class: ASN1T_ETSI_DSRC_SignalControlZone<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_ETSI_DSRC_SignalControlZone* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_ETSI_DSRC_SignalControlZone.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_ETSI_DSRC_SignalControlZone* NewElement ();

   /**
    * Data class: ASN1T_ETSI_DSRC_SignalControlZone.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_ETSI_DSRC_SignalControlZone* AppendNewElement ();

private:
   ASN1C_ETSI_DSRC_PreemptPriorityList& operator= (const ASN1C_ETSI_DSRC_PreemptPriorityList&) {return *this;}
} ;

EXTERN int asn1PE_ETSI_DSRC_PreemptPriorityList (OSCTXT* pctxt, ASN1T_ETSI_DSRC_PreemptPriorityList* pvalue);

EXTERN int asn1PD_ETSI_DSRC_PreemptPriorityList (OSCTXT* pctxt, ASN1T_ETSI_DSRC_PreemptPriorityList* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_PreemptPriorityList (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_PreemptPriorityList* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_PreemptPriorityList (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_PreemptPriorityList* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_PreemptPriorityList (OSCTXT *pctxt, ASN1T_ETSI_DSRC_PreemptPriorityList *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_PreemptPriorityList (OSCTXT *pctxt, ASN1T_ETSI_DSRC_PreemptPriorityList *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_PreemptPriorityList (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_PreemptPriorityList* pvalue);

EXTERN int asn1Init_ETSI_DSRC_PreemptPriorityList (
   ASN1T_ETSI_DSRC_PreemptPriorityList* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_PreemptPriorityList (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_PreemptPriorityList* pvalue);

/**************************************************************/
/*                                                            */
/*  IntersectionGeometry_regional_element                     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'IntersectionGeometry'
*/
struct EXTERN ASN1T_ETSI_DSRC_IntersectionGeometry_regional_element {
   ASN1T_ETSI_DSRC_RegionId regionId;
   ASN1TOpenType regExtValue;
} ;

EXTERN int asn1PE_ETSI_DSRC_IntersectionGeometry_regional_element (OSCTXT* pctxt, ASN1T_ETSI_DSRC_IntersectionGeometry_regional_element* pvalue);

EXTERN int asn1PD_ETSI_DSRC_IntersectionGeometry_regional_element (OSCTXT* pctxt, ASN1T_ETSI_DSRC_IntersectionGeometry_regional_element* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_IntersectionGeometry_regional_element 
   (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_IntersectionGeometry_regional_element* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_IntersectionGeometry_regional_element 
   (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_IntersectionGeometry_regional_element* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_IntersectionGeometry_regional_element (OSCTXT *pctxt, ASN1T_ETSI_DSRC_IntersectionGeometry_regional_element *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_IntersectionGeometry_regional_element (OSCTXT *pctxt, ASN1T_ETSI_DSRC_IntersectionGeometry_regional_element *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_IntersectionGeometry_regional_element (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_IntersectionGeometry_regional_element* pvalue);

EXTERN ASN1T_ETSI_DSRC_IntersectionGeometry_regional_element* 
   new_ASN1T_ETSI_DSRC_IntersectionGeometry_regional_element (ASN1CType& ccobj)
   ;

EXTERN int asn1Init_ETSI_DSRC_IntersectionGeometry_regional_element (
   ASN1T_ETSI_DSRC_IntersectionGeometry_regional_element* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_IntersectionGeometry_regional_element (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_IntersectionGeometry_regional_element* pvalue);

/**************************************************************/
/*                                                            */
/*  IntersectionGeometry_regional                             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'IntersectionGeometry'
*/
/* List of ASN1T_ETSI_DSRC_IntersectionGeometry_regional_element */
typedef ASN1TSeqOfList ASN1T_ETSI_DSRC_IntersectionGeometry_regional;

class EXTERN ASN1C_ETSI_DSRC_IntersectionGeometry_regional :
public ASN1CSeqOfList
{
protected:
   ASN1T_ETSI_DSRC_IntersectionGeometry_regional& msgData;
public:
   /**
    * Control class: ASN1C_ETSI_DSRC_IntersectionGeometry_regional
    * Data class:    ASN1T_ETSI_DSRC_IntersectionGeometry_regional
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_IntersectionGeometry_regional
       (ASN1T_ETSI_DSRC_IntersectionGeometry_regional& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_IntersectionGeometry_regional<br/>
    * Data class: ASN1T_ETSI_DSRC_IntersectionGeometry_regional<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_IntersectionGeometry_regional (OSRTMessageBufferIF& msgBuf
      , ASN1T_ETSI_DSRC_IntersectionGeometry_regional& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_IntersectionGeometry_regional<br/>
    * Data class: ASN1T_ETSI_DSRC_IntersectionGeometry_regional<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_ETSI_DSRC_IntersectionGeometry_regional (ASN1CType& ccobj
      , ASN1T_ETSI_DSRC_IntersectionGeometry_regional& data);

   virtual ~ASN1C_ETSI_DSRC_IntersectionGeometry_regional () {}

   /**
    * Data class: ASN1T_ETSI_DSRC_IntersectionGeometry_regional_element<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_ETSI_DSRC_IntersectionGeometry_regional_element* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_ETSI_DSRC_IntersectionGeometry_regional_element.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_ETSI_DSRC_IntersectionGeometry_regional_element* NewElement ();

   /**
    * Data class: ASN1T_ETSI_DSRC_IntersectionGeometry_regional_element.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_ETSI_DSRC_IntersectionGeometry_regional_element* AppendNewElement ();

   /* Get IE using regionId key value */
   ASN1T_ETSI_DSRC_IntersectionGeometry_regional_element* 
      GetIE (ASN1T_ETSI_DSRC_RegionId regionId);

   /* Get all matching IEs using regionId key value */
   int GetAllIEs (ASN1T_ETSI_DSRC_RegionId regionId, 
      ASN1T_ETSI_DSRC_IntersectionGeometry_regional* pmatches);

private:
   ASN1C_ETSI_DSRC_IntersectionGeometry_regional& operator= (const ASN1C_ETSI_DSRC_IntersectionGeometry_regional&) {return *this;}
} ;

EXTERN int asn1PE_ETSI_DSRC_IntersectionGeometry_regional (OSCTXT* pctxt, ASN1T_ETSI_DSRC_IntersectionGeometry_regional* pvalue);

EXTERN int asn1PD_ETSI_DSRC_IntersectionGeometry_regional (OSCTXT* pctxt, ASN1T_ETSI_DSRC_IntersectionGeometry_regional* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_IntersectionGeometry_regional (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_IntersectionGeometry_regional* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_IntersectionGeometry_regional (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_IntersectionGeometry_regional* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_IntersectionGeometry_regional (OSCTXT *pctxt, ASN1T_ETSI_DSRC_IntersectionGeometry_regional *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_IntersectionGeometry_regional (OSCTXT *pctxt, ASN1T_ETSI_DSRC_IntersectionGeometry_regional *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_IntersectionGeometry_regional (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_IntersectionGeometry_regional* pvalue);

EXTERN int asn1Init_ETSI_DSRC_IntersectionGeometry_regional (
   ASN1T_ETSI_DSRC_IntersectionGeometry_regional* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_IntersectionGeometry_regional (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_IntersectionGeometry_regional* pvalue);

/**************************************************************/
/*                                                            */
/*  IntersectionGeometry                                      */
/*                                                            */
/**************************************************************/
/*
IntersectionGeometry ::= SEQUENCE {
   name [0] DescriptiveName OPTIONAL,
   id [1] IntersectionReferenceID,
   revision [2] MsgCount,
   refPoint [3] Position3D,
   laneWidth [4] LaneWidth OPTIONAL,
   speedLimits [5] SpeedLimitList OPTIONAL,
   laneSet [6] LaneList,
   preemptPriorityData [7] PreemptPriorityList OPTIONAL,
   regional [8] SEQUENCE (SIZE (1..4)) OF SEQUENCE {
      regionId [0] REG-EXT-ID-AND-TYPE.&id ({Reg-IntersectionGeometry}),
      regExtValue [1] EXPLICIT REG-EXT-ID-AND-TYPE.&Type ({Reg-IntersectionGeometry}{@regionId})
   } OPTIONAL,
   ...
}
*/
struct EXTERN ASN1T_ETSI_DSRC_IntersectionGeometry {
   struct {
      unsigned namePresent : 1;
      unsigned laneWidthPresent : 1;
      unsigned speedLimitsPresent : 1;
      unsigned preemptPriorityDataPresent : 1;
      unsigned regionalPresent : 1;
   } m;
   ASN1T_ETSI_DSRC_DescriptiveName name;
   ASN1T_ETSI_DSRC_IntersectionReferenceID id;
   ASN1T_ETSI_DSRC_MsgCount revision;
   ASN1T_ETSI_DSRC_Position3D refPoint;
   ASN1T_ETSI_DSRC_LaneWidth laneWidth;
   ASN1T_ETSI_DSRC_SpeedLimitList speedLimits;
   ASN1T_ETSI_DSRC_LaneList laneSet;
   ASN1T_ETSI_DSRC_PreemptPriorityList preemptPriorityData;
   ASN1T_ETSI_DSRC_IntersectionGeometry_regional regional;
   ASN1TSeqExt extElem1;
   ASN1T_ETSI_DSRC_IntersectionGeometry ();
} ;

EXTERN int asn1PE_ETSI_DSRC_IntersectionGeometry (OSCTXT* pctxt, ASN1T_ETSI_DSRC_IntersectionGeometry* pvalue);

EXTERN int asn1PD_ETSI_DSRC_IntersectionGeometry (OSCTXT* pctxt, ASN1T_ETSI_DSRC_IntersectionGeometry* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_IntersectionGeometry (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_IntersectionGeometry* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_IntersectionGeometry (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_IntersectionGeometry* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_IntersectionGeometry (OSCTXT *pctxt, ASN1T_ETSI_DSRC_IntersectionGeometry *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_IntersectionGeometry (OSCTXT *pctxt, ASN1T_ETSI_DSRC_IntersectionGeometry *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_IntersectionGeometry (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_IntersectionGeometry* pvalue);

EXTERN ASN1T_ETSI_DSRC_IntersectionGeometry* 
   new_ASN1T_ETSI_DSRC_IntersectionGeometry (ASN1CType& ccobj);

EXTERN int asn1Init_ETSI_DSRC_IntersectionGeometry (
   ASN1T_ETSI_DSRC_IntersectionGeometry* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_IntersectionGeometry (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_IntersectionGeometry* pvalue);

/**************************************************************/
/*                                                            */
/*  IntersectionGeometryList                                  */
/*                                                            */
/**************************************************************/
/*
IntersectionGeometryList ::= SEQUENCE (SIZE (1..32)) OF IntersectionGeometry
*/
/* List of ASN1T_ETSI_DSRC_IntersectionGeometry */
typedef ASN1TSeqOfList ASN1T_ETSI_DSRC_IntersectionGeometryList;

class EXTERN ASN1C_ETSI_DSRC_IntersectionGeometryList :
public ASN1CSeqOfList
{
protected:
   ASN1T_ETSI_DSRC_IntersectionGeometryList& msgData;
public:
   /**
    * Control class: ASN1C_ETSI_DSRC_IntersectionGeometryList
    * Data class:    ASN1T_ETSI_DSRC_IntersectionGeometryList
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_IntersectionGeometryList
       (ASN1T_ETSI_DSRC_IntersectionGeometryList& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_IntersectionGeometryList<br/>
    * Data class: ASN1T_ETSI_DSRC_IntersectionGeometryList<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_IntersectionGeometryList (OSRTMessageBufferIF& msgBuf
      , ASN1T_ETSI_DSRC_IntersectionGeometryList& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_IntersectionGeometryList<br/>
    * Data class: ASN1T_ETSI_DSRC_IntersectionGeometryList<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_ETSI_DSRC_IntersectionGeometryList (ASN1CType& ccobj
      , ASN1T_ETSI_DSRC_IntersectionGeometryList& data);

   virtual ~ASN1C_ETSI_DSRC_IntersectionGeometryList () {}

   /**
    * Data class: ASN1T_ETSI_DSRC_IntersectionGeometry<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_ETSI_DSRC_IntersectionGeometry* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_ETSI_DSRC_IntersectionGeometry.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_ETSI_DSRC_IntersectionGeometry* NewElement ();

   /**
    * Data class: ASN1T_ETSI_DSRC_IntersectionGeometry.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_ETSI_DSRC_IntersectionGeometry* AppendNewElement ();

private:
   ASN1C_ETSI_DSRC_IntersectionGeometryList& operator= (const ASN1C_ETSI_DSRC_IntersectionGeometryList&) {return *this;}
} ;

EXTERN int asn1PE_ETSI_DSRC_IntersectionGeometryList (OSCTXT* pctxt, ASN1T_ETSI_DSRC_IntersectionGeometryList* pvalue);

EXTERN int asn1PD_ETSI_DSRC_IntersectionGeometryList (OSCTXT* pctxt, ASN1T_ETSI_DSRC_IntersectionGeometryList* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_IntersectionGeometryList (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_IntersectionGeometryList* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_IntersectionGeometryList (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_IntersectionGeometryList* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_IntersectionGeometryList (OSCTXT *pctxt, ASN1T_ETSI_DSRC_IntersectionGeometryList *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_IntersectionGeometryList (OSCTXT *pctxt, ASN1T_ETSI_DSRC_IntersectionGeometryList *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_IntersectionGeometryList (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_IntersectionGeometryList* pvalue);

EXTERN int asn1Init_ETSI_DSRC_IntersectionGeometryList (
   ASN1T_ETSI_DSRC_IntersectionGeometryList* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_IntersectionGeometryList (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_IntersectionGeometryList* pvalue);

/**************************************************************/
/*                                                            */
/*  RoadLaneSetList                                           */
/*                                                            */
/**************************************************************/
/*
RoadLaneSetList ::= SEQUENCE (SIZE (1..255)) OF GenericLane
*/
/* List of ASN1T_ETSI_DSRC_GenericLane */
typedef ASN1TSeqOfList ASN1T_ETSI_DSRC_RoadLaneSetList;

class EXTERN ASN1C_ETSI_DSRC_RoadLaneSetList :
public ASN1CSeqOfList
{
protected:
   ASN1T_ETSI_DSRC_RoadLaneSetList& msgData;
public:
   /**
    * Control class: ASN1C_ETSI_DSRC_RoadLaneSetList
    * Data class:    ASN1T_ETSI_DSRC_RoadLaneSetList
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_RoadLaneSetList (ASN1T_ETSI_DSRC_RoadLaneSetList& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_RoadLaneSetList<br/>
    * Data class: ASN1T_ETSI_DSRC_RoadLaneSetList<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_RoadLaneSetList (OSRTMessageBufferIF& msgBuf
      , ASN1T_ETSI_DSRC_RoadLaneSetList& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_RoadLaneSetList<br/>
    * Data class: ASN1T_ETSI_DSRC_RoadLaneSetList<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_ETSI_DSRC_RoadLaneSetList (ASN1CType& ccobj
      , ASN1T_ETSI_DSRC_RoadLaneSetList& data);

   virtual ~ASN1C_ETSI_DSRC_RoadLaneSetList () {}

   /**
    * Data class: ASN1T_ETSI_DSRC_GenericLane<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_ETSI_DSRC_GenericLane* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_ETSI_DSRC_GenericLane.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_ETSI_DSRC_GenericLane* NewElement ();

   /**
    * Data class: ASN1T_ETSI_DSRC_GenericLane.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_ETSI_DSRC_GenericLane* AppendNewElement ();

private:
   ASN1C_ETSI_DSRC_RoadLaneSetList& operator= (const ASN1C_ETSI_DSRC_RoadLaneSetList&) {return *this;}
} ;

EXTERN int asn1PE_ETSI_DSRC_RoadLaneSetList (OSCTXT* pctxt, ASN1T_ETSI_DSRC_RoadLaneSetList* pvalue);

EXTERN int asn1PD_ETSI_DSRC_RoadLaneSetList (OSCTXT* pctxt, ASN1T_ETSI_DSRC_RoadLaneSetList* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_RoadLaneSetList (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_RoadLaneSetList* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_RoadLaneSetList (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_RoadLaneSetList* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_RoadLaneSetList (OSCTXT *pctxt, ASN1T_ETSI_DSRC_RoadLaneSetList *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_RoadLaneSetList (OSCTXT *pctxt, ASN1T_ETSI_DSRC_RoadLaneSetList *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_RoadLaneSetList (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_RoadLaneSetList* pvalue);

EXTERN int asn1Init_ETSI_DSRC_RoadLaneSetList (
   ASN1T_ETSI_DSRC_RoadLaneSetList* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_RoadLaneSetList (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_RoadLaneSetList* pvalue);

/**************************************************************/
/*                                                            */
/*  RoadSegment_regional_element                              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'RoadSegment'
*/
struct EXTERN ASN1T_ETSI_DSRC_RoadSegment_regional_element {
   ASN1T_ETSI_DSRC_RegionId regionId;
   ASN1TOpenType regExtValue;
} ;

EXTERN int asn1PE_ETSI_DSRC_RoadSegment_regional_element (OSCTXT* pctxt, ASN1T_ETSI_DSRC_RoadSegment_regional_element* pvalue);

EXTERN int asn1PD_ETSI_DSRC_RoadSegment_regional_element (OSCTXT* pctxt, ASN1T_ETSI_DSRC_RoadSegment_regional_element* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_RoadSegment_regional_element (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_RoadSegment_regional_element* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_RoadSegment_regional_element (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_RoadSegment_regional_element* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_RoadSegment_regional_element (OSCTXT *pctxt, ASN1T_ETSI_DSRC_RoadSegment_regional_element *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_RoadSegment_regional_element (OSCTXT *pctxt, ASN1T_ETSI_DSRC_RoadSegment_regional_element *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_RoadSegment_regional_element (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_RoadSegment_regional_element* pvalue);

EXTERN ASN1T_ETSI_DSRC_RoadSegment_regional_element* 
   new_ASN1T_ETSI_DSRC_RoadSegment_regional_element (ASN1CType& ccobj);

EXTERN int asn1Init_ETSI_DSRC_RoadSegment_regional_element (
   ASN1T_ETSI_DSRC_RoadSegment_regional_element* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_RoadSegment_regional_element (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_RoadSegment_regional_element* pvalue);

/**************************************************************/
/*                                                            */
/*  RoadSegment_regional                                      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'RoadSegment'
*/
/* List of ASN1T_ETSI_DSRC_RoadSegment_regional_element */
typedef ASN1TSeqOfList ASN1T_ETSI_DSRC_RoadSegment_regional;

class EXTERN ASN1C_ETSI_DSRC_RoadSegment_regional :
public ASN1CSeqOfList
{
protected:
   ASN1T_ETSI_DSRC_RoadSegment_regional& msgData;
public:
   /**
    * Control class: ASN1C_ETSI_DSRC_RoadSegment_regional
    * Data class:    ASN1T_ETSI_DSRC_RoadSegment_regional
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_RoadSegment_regional
       (ASN1T_ETSI_DSRC_RoadSegment_regional& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_RoadSegment_regional<br/>
    * Data class: ASN1T_ETSI_DSRC_RoadSegment_regional<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_RoadSegment_regional (OSRTMessageBufferIF& msgBuf
      , ASN1T_ETSI_DSRC_RoadSegment_regional& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_RoadSegment_regional<br/>
    * Data class: ASN1T_ETSI_DSRC_RoadSegment_regional<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_ETSI_DSRC_RoadSegment_regional (ASN1CType& ccobj
      , ASN1T_ETSI_DSRC_RoadSegment_regional& data);

   virtual ~ASN1C_ETSI_DSRC_RoadSegment_regional () {}

   /**
    * Data class: ASN1T_ETSI_DSRC_RoadSegment_regional_element<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_ETSI_DSRC_RoadSegment_regional_element* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_ETSI_DSRC_RoadSegment_regional_element.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_ETSI_DSRC_RoadSegment_regional_element* NewElement ();

   /**
    * Data class: ASN1T_ETSI_DSRC_RoadSegment_regional_element.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_ETSI_DSRC_RoadSegment_regional_element* AppendNewElement ();

   /* Get IE using regionId key value */
   ASN1T_ETSI_DSRC_RoadSegment_regional_element* 
      GetIE (ASN1T_ETSI_DSRC_RegionId regionId);

   /* Get all matching IEs using regionId key value */
   int GetAllIEs (ASN1T_ETSI_DSRC_RegionId regionId, 
      ASN1T_ETSI_DSRC_RoadSegment_regional* pmatches);

private:
   ASN1C_ETSI_DSRC_RoadSegment_regional& operator= (const ASN1C_ETSI_DSRC_RoadSegment_regional&) {return *this;}
} ;

EXTERN int asn1PE_ETSI_DSRC_RoadSegment_regional (OSCTXT* pctxt, ASN1T_ETSI_DSRC_RoadSegment_regional* pvalue);

EXTERN int asn1PD_ETSI_DSRC_RoadSegment_regional (OSCTXT* pctxt, ASN1T_ETSI_DSRC_RoadSegment_regional* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_RoadSegment_regional (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_RoadSegment_regional* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_RoadSegment_regional (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_RoadSegment_regional* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_RoadSegment_regional (OSCTXT *pctxt, ASN1T_ETSI_DSRC_RoadSegment_regional *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_RoadSegment_regional (OSCTXT *pctxt, ASN1T_ETSI_DSRC_RoadSegment_regional *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_RoadSegment_regional (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_RoadSegment_regional* pvalue);

EXTERN int asn1Init_ETSI_DSRC_RoadSegment_regional (
   ASN1T_ETSI_DSRC_RoadSegment_regional* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_RoadSegment_regional (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_RoadSegment_regional* pvalue);

/**************************************************************/
/*                                                            */
/*  RoadSegment                                               */
/*                                                            */
/**************************************************************/
/*
RoadSegment ::= SEQUENCE {
   name [0] DescriptiveName OPTIONAL,
   id [1] RoadSegmentReferenceID,
   revision [2] MsgCount,
   refPoint [3] Position3D,
   laneWidth [4] LaneWidth OPTIONAL,
   speedLimits [5] SpeedLimitList OPTIONAL,
   roadLaneSet [6] RoadLaneSetList,
   regional [7] SEQUENCE (SIZE (1..4)) OF SEQUENCE {
      regionId [0] REG-EXT-ID-AND-TYPE.&id ({Reg-RoadSegment}),
      regExtValue [1] EXPLICIT REG-EXT-ID-AND-TYPE.&Type ({Reg-RoadSegment}{@regionId})
   } OPTIONAL,
   ...
}
*/
struct EXTERN ASN1T_ETSI_DSRC_RoadSegment {
   struct {
      unsigned namePresent : 1;
      unsigned laneWidthPresent : 1;
      unsigned speedLimitsPresent : 1;
      unsigned regionalPresent : 1;
   } m;
   ASN1T_ETSI_DSRC_DescriptiveName name;
   ASN1T_ETSI_DSRC_RoadSegmentReferenceID id;
   ASN1T_ETSI_DSRC_MsgCount revision;
   ASN1T_ETSI_DSRC_Position3D refPoint;
   ASN1T_ETSI_DSRC_LaneWidth laneWidth;
   ASN1T_ETSI_DSRC_SpeedLimitList speedLimits;
   ASN1T_ETSI_DSRC_RoadLaneSetList roadLaneSet;
   ASN1T_ETSI_DSRC_RoadSegment_regional regional;
   ASN1TSeqExt extElem1;
   ASN1T_ETSI_DSRC_RoadSegment ();
} ;

EXTERN int asn1PE_ETSI_DSRC_RoadSegment (OSCTXT* pctxt, ASN1T_ETSI_DSRC_RoadSegment* pvalue);

EXTERN int asn1PD_ETSI_DSRC_RoadSegment (OSCTXT* pctxt, ASN1T_ETSI_DSRC_RoadSegment* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_RoadSegment (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_RoadSegment* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_RoadSegment (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_RoadSegment* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_RoadSegment (OSCTXT *pctxt, ASN1T_ETSI_DSRC_RoadSegment *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_RoadSegment (OSCTXT *pctxt, ASN1T_ETSI_DSRC_RoadSegment *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_RoadSegment (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_RoadSegment* pvalue);

EXTERN ASN1T_ETSI_DSRC_RoadSegment* 
   new_ASN1T_ETSI_DSRC_RoadSegment (ASN1CType& ccobj);

EXTERN int asn1Init_ETSI_DSRC_RoadSegment (ASN1T_ETSI_DSRC_RoadSegment* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_RoadSegment (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_RoadSegment* pvalue);

/**************************************************************/
/*                                                            */
/*  RoadSegmentList                                           */
/*                                                            */
/**************************************************************/
/*
RoadSegmentList ::= SEQUENCE (SIZE (1..32)) OF RoadSegment
*/
/* List of ASN1T_ETSI_DSRC_RoadSegment */
typedef ASN1TSeqOfList ASN1T_ETSI_DSRC_RoadSegmentList;

class EXTERN ASN1C_ETSI_DSRC_RoadSegmentList :
public ASN1CSeqOfList
{
protected:
   ASN1T_ETSI_DSRC_RoadSegmentList& msgData;
public:
   /**
    * Control class: ASN1C_ETSI_DSRC_RoadSegmentList
    * Data class:    ASN1T_ETSI_DSRC_RoadSegmentList
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_RoadSegmentList (ASN1T_ETSI_DSRC_RoadSegmentList& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_RoadSegmentList<br/>
    * Data class: ASN1T_ETSI_DSRC_RoadSegmentList<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_RoadSegmentList (OSRTMessageBufferIF& msgBuf
      , ASN1T_ETSI_DSRC_RoadSegmentList& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_RoadSegmentList<br/>
    * Data class: ASN1T_ETSI_DSRC_RoadSegmentList<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_ETSI_DSRC_RoadSegmentList (ASN1CType& ccobj
      , ASN1T_ETSI_DSRC_RoadSegmentList& data);

   virtual ~ASN1C_ETSI_DSRC_RoadSegmentList () {}

   /**
    * Data class: ASN1T_ETSI_DSRC_RoadSegment<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_ETSI_DSRC_RoadSegment* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_ETSI_DSRC_RoadSegment.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_ETSI_DSRC_RoadSegment* NewElement ();

   /**
    * Data class: ASN1T_ETSI_DSRC_RoadSegment.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_ETSI_DSRC_RoadSegment* AppendNewElement ();

private:
   ASN1C_ETSI_DSRC_RoadSegmentList& operator= (const ASN1C_ETSI_DSRC_RoadSegmentList&) {return *this;}
} ;

EXTERN int asn1PE_ETSI_DSRC_RoadSegmentList (OSCTXT* pctxt, ASN1T_ETSI_DSRC_RoadSegmentList* pvalue);

EXTERN int asn1PD_ETSI_DSRC_RoadSegmentList (OSCTXT* pctxt, ASN1T_ETSI_DSRC_RoadSegmentList* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_RoadSegmentList (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_RoadSegmentList* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_RoadSegmentList (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_RoadSegmentList* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_RoadSegmentList (OSCTXT *pctxt, ASN1T_ETSI_DSRC_RoadSegmentList *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_RoadSegmentList (OSCTXT *pctxt, ASN1T_ETSI_DSRC_RoadSegmentList *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_RoadSegmentList (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_RoadSegmentList* pvalue);

EXTERN int asn1Init_ETSI_DSRC_RoadSegmentList (
   ASN1T_ETSI_DSRC_RoadSegmentList* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_RoadSegmentList (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_RoadSegmentList* pvalue);

/**************************************************************/
/*                                                            */
/*  DataParameters                                            */
/*                                                            */
/**************************************************************/
/*
DataParameters ::= SEQUENCE {
   processMethod [0] IA5String (SIZE (1..255)) OPTIONAL,
   processAgency [1] IA5String (SIZE (1..255)) OPTIONAL,
   lastCheckedDate [2] IA5String (SIZE (1..255)) OPTIONAL,
   geoidUsed [3] IA5String (SIZE (1..255)) OPTIONAL,
   ...
}
*/
struct EXTERN ASN1T_ETSI_DSRC_DataParameters {
   struct {
      unsigned processMethodPresent : 1;
      unsigned processAgencyPresent : 1;
      unsigned lastCheckedDatePresent : 1;
      unsigned geoidUsedPresent : 1;
   } m;
   const char* processMethod;
   const char* processAgency;
   const char* lastCheckedDate;
   const char* geoidUsed;
   ASN1TSeqExt extElem1;
   ASN1T_ETSI_DSRC_DataParameters ();
} ;

EXTERN int asn1PE_ETSI_DSRC_DataParameters (OSCTXT* pctxt, ASN1T_ETSI_DSRC_DataParameters* pvalue);

EXTERN int asn1PD_ETSI_DSRC_DataParameters (OSCTXT* pctxt, ASN1T_ETSI_DSRC_DataParameters* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_DataParameters (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_DataParameters* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_DataParameters (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_DataParameters* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_DataParameters (OSCTXT *pctxt, ASN1T_ETSI_DSRC_DataParameters *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_DataParameters (OSCTXT *pctxt, ASN1T_ETSI_DSRC_DataParameters *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_DataParameters (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_DataParameters* pvalue);

EXTERN ASN1T_ETSI_DSRC_DataParameters* 
   new_ASN1T_ETSI_DSRC_DataParameters (ASN1CType& ccobj);

EXTERN int asn1Init_ETSI_DSRC_DataParameters (ASN1T_ETSI_DSRC_DataParameters* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_DataParameters (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_DataParameters* pvalue);

/**************************************************************/
/*                                                            */
/*  RestrictionAppliesTo                                      */
/*                                                            */
/**************************************************************/
/*
RestrictionAppliesTo ::= ENUMERATED { none(0), equippedTransit(1), equippedTaxis(2), equippedOther(3), emissionCompliant(4), equippedBicycle(5), weightCompliant(6), heightCompliant(7), pedestrians(8), slowMovingPersons(9), wheelchairUsers(10), visualDisabilities(11), audioDisabilities(12), otherUnknownDisabilities(13), ... }
*/
struct EXTERN ETSI_DSRC_RestrictionAppliesTo {
   enum Root {
      none = 0,
      equippedTransit = 1,
      equippedTaxis = 2,
      equippedOther = 3,
      emissionCompliant = 4,
      equippedBicycle = 5,
      weightCompliant = 6,
      heightCompliant = 7,
      pedestrians = 8,
      slowMovingPersons = 9,
      wheelchairUsers = 10,
      visualDisabilities = 11,
      audioDisabilities = 12,
      otherUnknownDisabilities = 13
   } ;
} ;

typedef OSUINT32 ASN1T_ETSI_DSRC_RestrictionAppliesTo;

EXTERN int asn1PE_ETSI_DSRC_RestrictionAppliesTo (OSCTXT* pctxt, ASN1T_ETSI_DSRC_RestrictionAppliesTo value);

EXTERN int asn1PD_ETSI_DSRC_RestrictionAppliesTo (OSCTXT* pctxt, ASN1T_ETSI_DSRC_RestrictionAppliesTo* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_RestrictionAppliesTo (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_RestrictionAppliesTo value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_RestrictionAppliesTo (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_RestrictionAppliesTo* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_RestrictionAppliesTo (OSCTXT *pctxt, ASN1T_ETSI_DSRC_RestrictionAppliesTo *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_RestrictionAppliesTo (OSCTXT *pctxt, ASN1T_ETSI_DSRC_RestrictionAppliesTo *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_RestrictionAppliesTo (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_RestrictionAppliesTo* pvalue);

EXTERN ASN1T_ETSI_DSRC_RestrictionAppliesTo* 
   new_ASN1T_ETSI_DSRC_RestrictionAppliesTo (ASN1CType& ccobj);

EXTERN extern const OSEnumItem ASN1T_ETSI_DSRC_RestrictionAppliesTo_ENUMTAB[];
#define ASN1T_ETSI_DSRC_RestrictionAppliesTo_ENUMTABSIZE 14

EXTERN const OSUTF8CHAR* ASN1T_ETSI_DSRC_RestrictionAppliesTo_ToString (OSINT32 value);

EXTERN int ASN1T_ETSI_DSRC_RestrictionAppliesTo_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, ASN1T_ETSI_DSRC_RestrictionAppliesTo* pvalue);

EXTERN int ASN1T_ETSI_DSRC_RestrictionAppliesTo_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      ASN1T_ETSI_DSRC_RestrictionAppliesTo* pvalue);

/**************************************************************/
/*                                                            */
/*  FuelType                                                  */
/*                                                            */
/**************************************************************/
/*
FuelType ::= INTEGER (0..15)
*/
typedef OSUINT8 ASN1T_ETSI_DSRC_FuelType;

EXTERN int asn1PE_ETSI_DSRC_FuelType (OSCTXT* pctxt, ASN1T_ETSI_DSRC_FuelType value);

EXTERN int asn1PD_ETSI_DSRC_FuelType (OSCTXT* pctxt, ASN1T_ETSI_DSRC_FuelType* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_FuelType (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_FuelType value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_FuelType (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_FuelType* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_FuelType (OSCTXT *pctxt, ASN1T_ETSI_DSRC_FuelType *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_FuelType (OSCTXT *pctxt, ASN1T_ETSI_DSRC_FuelType *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_FuelType (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_FuelType* pvalue);

EXTERN ASN1T_ETSI_DSRC_FuelType* 
   new_ASN1T_ETSI_DSRC_FuelType (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  RestrictionUserType_regional_element                      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'RestrictionUserType'
*/
struct EXTERN ASN1T_ETSI_DSRC_RestrictionUserType_regional_element {
   ASN1T_ETSI_DSRC_RegionId regionId;
   struct  {
      /**
       * information object selector
       */
      OSUINT16 t;

      /**
       * Reg-RestrictionUserType information objects
       */
      union {
         /**
          * id: addGrpC
          */
         struct ASN1T_ETSI_GrpC_RestrictionUserType_addGrpC *_ETSI_REG_Reg_RestrictionUserType_addGrpC;

         ASN1TOpenType* extElem1;
      } u;
   } regExtValue;
   ASN1T_ETSI_DSRC_RestrictionUserType_regional_element ();
} ;

EXTERN int asn1PE_ETSI_DSRC_RestrictionUserType_regional_element (OSCTXT* pctxt, ASN1T_ETSI_DSRC_RestrictionUserType_regional_element* pvalue);

EXTERN int asn1PD_ETSI_DSRC_RestrictionUserType_regional_element (OSCTXT* pctxt, ASN1T_ETSI_DSRC_RestrictionUserType_regional_element* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_RestrictionUserType_regional_element 
   (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_RestrictionUserType_regional_element* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_RestrictionUserType_regional_element 
   (OSCTXT* pctxt, ASN1T_ETSI_DSRC_RestrictionUserType_regional_element* pvalue
   );

EXTERN int asn1JsonEnc_ETSI_DSRC_RestrictionUserType_regional_element (OSCTXT *pctxt, ASN1T_ETSI_DSRC_RestrictionUserType_regional_element *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_RestrictionUserType_regional_element (OSCTXT *pctxt, ASN1T_ETSI_DSRC_RestrictionUserType_regional_element *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_RestrictionUserType_regional_element (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_RestrictionUserType_regional_element* pvalue);

EXTERN ASN1T_ETSI_DSRC_RestrictionUserType_regional_element* 
   new_ASN1T_ETSI_DSRC_RestrictionUserType_regional_element (ASN1CType& ccobj)
   ;

EXTERN int asn1Init_ETSI_DSRC_RestrictionUserType_regional_element (
   ASN1T_ETSI_DSRC_RestrictionUserType_regional_element* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_RestrictionUserType_regional_element (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_RestrictionUserType_regional_element* pvalue);

/**************************************************************/
/*                                                            */
/*  RestrictionUserType_regional                              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'RestrictionUserType'
*/
/* List of ASN1T_ETSI_DSRC_RestrictionUserType_regional_element */
typedef ASN1TSeqOfList ASN1T_ETSI_DSRC_RestrictionUserType_regional;

class EXTERN ASN1C_ETSI_DSRC_RestrictionUserType_regional :
public ASN1CSeqOfList
{
protected:
   ASN1T_ETSI_DSRC_RestrictionUserType_regional& msgData;
public:
   /**
    * Control class: ASN1C_ETSI_DSRC_RestrictionUserType_regional
    * Data class:    ASN1T_ETSI_DSRC_RestrictionUserType_regional
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_RestrictionUserType_regional
       (ASN1T_ETSI_DSRC_RestrictionUserType_regional& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_RestrictionUserType_regional<br/>
    * Data class: ASN1T_ETSI_DSRC_RestrictionUserType_regional<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_RestrictionUserType_regional (OSRTMessageBufferIF& msgBuf
      , ASN1T_ETSI_DSRC_RestrictionUserType_regional& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_RestrictionUserType_regional<br/>
    * Data class: ASN1T_ETSI_DSRC_RestrictionUserType_regional<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_ETSI_DSRC_RestrictionUserType_regional (ASN1CType& ccobj
      , ASN1T_ETSI_DSRC_RestrictionUserType_regional& data);

   virtual ~ASN1C_ETSI_DSRC_RestrictionUserType_regional () {}

   /**
    * Data class: ASN1T_ETSI_DSRC_RestrictionUserType_regional_element<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_ETSI_DSRC_RestrictionUserType_regional_element* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_ETSI_DSRC_RestrictionUserType_regional_element.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_ETSI_DSRC_RestrictionUserType_regional_element* NewElement ();

   /**
    * Data class: ASN1T_ETSI_DSRC_RestrictionUserType_regional_element.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_ETSI_DSRC_RestrictionUserType_regional_element* AppendNewElement ();

   /* Get IE using regionId key value */
   ASN1T_ETSI_DSRC_RestrictionUserType_regional_element* 
      GetIE (ASN1T_ETSI_DSRC_RegionId regionId);

   /* Get all matching IEs using regionId key value */
   int GetAllIEs (ASN1T_ETSI_DSRC_RegionId regionId, 
      ASN1T_ETSI_DSRC_RestrictionUserType_regional* pmatches);

private:
   ASN1C_ETSI_DSRC_RestrictionUserType_regional& operator= (const ASN1C_ETSI_DSRC_RestrictionUserType_regional&) {return *this;}
} ;

EXTERN int asn1PE_ETSI_DSRC_RestrictionUserType_regional (OSCTXT* pctxt, ASN1T_ETSI_DSRC_RestrictionUserType_regional* pvalue);

EXTERN int asn1PD_ETSI_DSRC_RestrictionUserType_regional (OSCTXT* pctxt, ASN1T_ETSI_DSRC_RestrictionUserType_regional* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_RestrictionUserType_regional (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_RestrictionUserType_regional* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_RestrictionUserType_regional (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_RestrictionUserType_regional* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_RestrictionUserType_regional (OSCTXT *pctxt, ASN1T_ETSI_DSRC_RestrictionUserType_regional *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_RestrictionUserType_regional (OSCTXT *pctxt, ASN1T_ETSI_DSRC_RestrictionUserType_regional *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_RestrictionUserType_regional (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_RestrictionUserType_regional* pvalue);

EXTERN int asn1Init_ETSI_DSRC_RestrictionUserType_regional (
   ASN1T_ETSI_DSRC_RestrictionUserType_regional* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_RestrictionUserType_regional (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_RestrictionUserType_regional* pvalue);

/**************************************************************/
/*                                                            */
/*  RestrictionUserType                                       */
/*                                                            */
/**************************************************************/
/*
RestrictionUserType ::= CHOICE {
   basicType [0] RestrictionAppliesTo,
   regional [1] SEQUENCE (SIZE (1..4)) OF SEQUENCE {
      regionId [0] REG-EXT-ID-AND-TYPE.&id ({Reg-RestrictionUserType}),
      regExtValue [1] EXPLICIT REG-EXT-ID-AND-TYPE.&Type ({Reg-RestrictionUserType}{@regionId})
   },
   ...
}
*/
/* Choice tag constants */

#define T_ETSI_DSRC_RestrictionUserType_basicType 1
#define T_ETSI_DSRC_RestrictionUserType_regional 2
#define T_ETSI_DSRC_RestrictionUserType_extElem1 3

struct EXTERN ASN1T_ETSI_DSRC_RestrictionUserType {
   OSINT32 t;
   union {
      /* t = 1 */
      ASN1T_ETSI_DSRC_RestrictionAppliesTo basicType;
      /* t = 2 */
      ASN1T_ETSI_DSRC_RestrictionUserType_regional *regional;
      /* t = 3 */
      ASN1TOpenType *extElem1;
   } u;
   ASN1T_ETSI_DSRC_RestrictionUserType () { t = 0; OSCRTLMEMSET (&u, 0, sizeof(u)); }
} ;

EXTERN int asn1PE_ETSI_DSRC_RestrictionUserType (OSCTXT* pctxt, ASN1T_ETSI_DSRC_RestrictionUserType* pvalue);

EXTERN int asn1PD_ETSI_DSRC_RestrictionUserType (OSCTXT* pctxt, ASN1T_ETSI_DSRC_RestrictionUserType* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_RestrictionUserType (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_RestrictionUserType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_RestrictionUserType (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_RestrictionUserType* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_RestrictionUserType (OSCTXT *pctxt, ASN1T_ETSI_DSRC_RestrictionUserType *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_RestrictionUserType (OSCTXT *pctxt, ASN1T_ETSI_DSRC_RestrictionUserType *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_RestrictionUserType (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_RestrictionUserType* pvalue);

EXTERN ASN1T_ETSI_DSRC_RestrictionUserType* 
   new_ASN1T_ETSI_DSRC_RestrictionUserType (ASN1CType& ccobj);

EXTERN int asn1Init_ETSI_DSRC_RestrictionUserType (
   ASN1T_ETSI_DSRC_RestrictionUserType* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_RestrictionUserType (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_RestrictionUserType* pvalue);

/**************************************************************/
/*                                                            */
/*  RestrictionUserTypeList                                   */
/*                                                            */
/**************************************************************/
/*
RestrictionUserTypeList ::= SEQUENCE (SIZE (1..16)) OF RestrictionUserType
*/
/* List of ASN1T_ETSI_DSRC_RestrictionUserType */
typedef ASN1TSeqOfList ASN1T_ETSI_DSRC_RestrictionUserTypeList;

class EXTERN ASN1C_ETSI_DSRC_RestrictionUserTypeList :
public ASN1CSeqOfList
{
protected:
   ASN1T_ETSI_DSRC_RestrictionUserTypeList& msgData;
public:
   /**
    * Control class: ASN1C_ETSI_DSRC_RestrictionUserTypeList
    * Data class:    ASN1T_ETSI_DSRC_RestrictionUserTypeList
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_RestrictionUserTypeList
       (ASN1T_ETSI_DSRC_RestrictionUserTypeList& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_RestrictionUserTypeList<br/>
    * Data class: ASN1T_ETSI_DSRC_RestrictionUserTypeList<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_RestrictionUserTypeList (OSRTMessageBufferIF& msgBuf
      , ASN1T_ETSI_DSRC_RestrictionUserTypeList& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_RestrictionUserTypeList<br/>
    * Data class: ASN1T_ETSI_DSRC_RestrictionUserTypeList<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_ETSI_DSRC_RestrictionUserTypeList (ASN1CType& ccobj
      , ASN1T_ETSI_DSRC_RestrictionUserTypeList& data);

   virtual ~ASN1C_ETSI_DSRC_RestrictionUserTypeList () {}

   /**
    * Data class: ASN1T_ETSI_DSRC_RestrictionUserType<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_ETSI_DSRC_RestrictionUserType* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_ETSI_DSRC_RestrictionUserType.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_ETSI_DSRC_RestrictionUserType* NewElement ();

   /**
    * Data class: ASN1T_ETSI_DSRC_RestrictionUserType.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_ETSI_DSRC_RestrictionUserType* AppendNewElement ();

private:
   ASN1C_ETSI_DSRC_RestrictionUserTypeList& operator= (const ASN1C_ETSI_DSRC_RestrictionUserTypeList&) {return *this;}
} ;

EXTERN int asn1PE_ETSI_DSRC_RestrictionUserTypeList (OSCTXT* pctxt, ASN1T_ETSI_DSRC_RestrictionUserTypeList* pvalue);

EXTERN int asn1PD_ETSI_DSRC_RestrictionUserTypeList (OSCTXT* pctxt, ASN1T_ETSI_DSRC_RestrictionUserTypeList* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_RestrictionUserTypeList (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_RestrictionUserTypeList* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_RestrictionUserTypeList (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_RestrictionUserTypeList* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_RestrictionUserTypeList (OSCTXT *pctxt, ASN1T_ETSI_DSRC_RestrictionUserTypeList *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_RestrictionUserTypeList (OSCTXT *pctxt, ASN1T_ETSI_DSRC_RestrictionUserTypeList *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_RestrictionUserTypeList (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_RestrictionUserTypeList* pvalue);

EXTERN int asn1Init_ETSI_DSRC_RestrictionUserTypeList (
   ASN1T_ETSI_DSRC_RestrictionUserTypeList* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_RestrictionUserTypeList (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_RestrictionUserTypeList* pvalue);

/**************************************************************/
/*                                                            */
/*  RestrictionClassAssignment                                */
/*                                                            */
/**************************************************************/
/*
RestrictionClassAssignment ::= SEQUENCE {
   id [0] RestrictionClassID,
   users [1] RestrictionUserTypeList
}
*/
struct EXTERN ASN1T_ETSI_DSRC_RestrictionClassAssignment {
   ASN1T_ETSI_DSRC_RestrictionClassID id;
   ASN1T_ETSI_DSRC_RestrictionUserTypeList users;
} ;

EXTERN int asn1PE_ETSI_DSRC_RestrictionClassAssignment (OSCTXT* pctxt, ASN1T_ETSI_DSRC_RestrictionClassAssignment* pvalue);

EXTERN int asn1PD_ETSI_DSRC_RestrictionClassAssignment (OSCTXT* pctxt, ASN1T_ETSI_DSRC_RestrictionClassAssignment* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_RestrictionClassAssignment (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_RestrictionClassAssignment* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_RestrictionClassAssignment (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_RestrictionClassAssignment* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_RestrictionClassAssignment (OSCTXT *pctxt, ASN1T_ETSI_DSRC_RestrictionClassAssignment *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_RestrictionClassAssignment (OSCTXT *pctxt, ASN1T_ETSI_DSRC_RestrictionClassAssignment *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_RestrictionClassAssignment (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_RestrictionClassAssignment* pvalue);

EXTERN ASN1T_ETSI_DSRC_RestrictionClassAssignment* 
   new_ASN1T_ETSI_DSRC_RestrictionClassAssignment (ASN1CType& ccobj);

EXTERN int asn1Init_ETSI_DSRC_RestrictionClassAssignment (
   ASN1T_ETSI_DSRC_RestrictionClassAssignment* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_RestrictionClassAssignment (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_RestrictionClassAssignment* pvalue);

/**************************************************************/
/*                                                            */
/*  RestrictionClassList                                      */
/*                                                            */
/**************************************************************/
/*
RestrictionClassList ::= SEQUENCE (SIZE (1..254)) OF RestrictionClassAssignment
*/
/* List of ASN1T_ETSI_DSRC_RestrictionClassAssignment */
typedef ASN1TSeqOfList ASN1T_ETSI_DSRC_RestrictionClassList;

class EXTERN ASN1C_ETSI_DSRC_RestrictionClassList :
public ASN1CSeqOfList
{
protected:
   ASN1T_ETSI_DSRC_RestrictionClassList& msgData;
public:
   /**
    * Control class: ASN1C_ETSI_DSRC_RestrictionClassList
    * Data class:    ASN1T_ETSI_DSRC_RestrictionClassList
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_RestrictionClassList
       (ASN1T_ETSI_DSRC_RestrictionClassList& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_RestrictionClassList<br/>
    * Data class: ASN1T_ETSI_DSRC_RestrictionClassList<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_RestrictionClassList (OSRTMessageBufferIF& msgBuf
      , ASN1T_ETSI_DSRC_RestrictionClassList& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_RestrictionClassList<br/>
    * Data class: ASN1T_ETSI_DSRC_RestrictionClassList<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_ETSI_DSRC_RestrictionClassList (ASN1CType& ccobj
      , ASN1T_ETSI_DSRC_RestrictionClassList& data);

   virtual ~ASN1C_ETSI_DSRC_RestrictionClassList () {}

   /**
    * Data class: ASN1T_ETSI_DSRC_RestrictionClassAssignment<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_ETSI_DSRC_RestrictionClassAssignment* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_ETSI_DSRC_RestrictionClassAssignment.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_ETSI_DSRC_RestrictionClassAssignment* NewElement ();

   /**
    * Data class: ASN1T_ETSI_DSRC_RestrictionClassAssignment.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_ETSI_DSRC_RestrictionClassAssignment* AppendNewElement ();

private:
   ASN1C_ETSI_DSRC_RestrictionClassList& operator= (const ASN1C_ETSI_DSRC_RestrictionClassList&) {return *this;}
} ;

EXTERN int asn1PE_ETSI_DSRC_RestrictionClassList (OSCTXT* pctxt, ASN1T_ETSI_DSRC_RestrictionClassList* pvalue);

EXTERN int asn1PD_ETSI_DSRC_RestrictionClassList (OSCTXT* pctxt, ASN1T_ETSI_DSRC_RestrictionClassList* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_RestrictionClassList (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_RestrictionClassList* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_RestrictionClassList (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_RestrictionClassList* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_RestrictionClassList (OSCTXT *pctxt, ASN1T_ETSI_DSRC_RestrictionClassList *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_RestrictionClassList (OSCTXT *pctxt, ASN1T_ETSI_DSRC_RestrictionClassList *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_RestrictionClassList (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_RestrictionClassList* pvalue);

EXTERN int asn1Init_ETSI_DSRC_RestrictionClassList (
   ASN1T_ETSI_DSRC_RestrictionClassList* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_RestrictionClassList (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_RestrictionClassList* pvalue);

/**************************************************************/
/*                                                            */
/*  MapData_regional_element                                  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'MapData'
*/
struct EXTERN ASN1T_ETSI_DSRC_MapData_regional_element {
   ASN1T_ETSI_DSRC_RegionId regionId;
   struct  {
      /**
       * information object selector
       */
      OSUINT16 t;

      /**
       * Reg-MapData information objects
       */
      union {
         /**
          * id: addGrpC
          */
         struct ASN1T_ETSI_GrpC_MapData_addGrpC *_ETSI_REG_Reg_MapData_addGrpC;

         ASN1TOpenType* extElem1;
      } u;
   } regExtValue;
   ASN1T_ETSI_DSRC_MapData_regional_element ();
} ;

EXTERN int asn1PE_ETSI_DSRC_MapData_regional_element (OSCTXT* pctxt, ASN1T_ETSI_DSRC_MapData_regional_element* pvalue);

EXTERN int asn1PD_ETSI_DSRC_MapData_regional_element (OSCTXT* pctxt, ASN1T_ETSI_DSRC_MapData_regional_element* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_MapData_regional_element (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_MapData_regional_element* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_MapData_regional_element (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_MapData_regional_element* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_MapData_regional_element (OSCTXT *pctxt, ASN1T_ETSI_DSRC_MapData_regional_element *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_MapData_regional_element (OSCTXT *pctxt, ASN1T_ETSI_DSRC_MapData_regional_element *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_MapData_regional_element (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_MapData_regional_element* pvalue);

EXTERN ASN1T_ETSI_DSRC_MapData_regional_element* 
   new_ASN1T_ETSI_DSRC_MapData_regional_element (ASN1CType& ccobj);

EXTERN int asn1Init_ETSI_DSRC_MapData_regional_element (
   ASN1T_ETSI_DSRC_MapData_regional_element* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_MapData_regional_element (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_MapData_regional_element* pvalue);

/**************************************************************/
/*                                                            */
/*  MapData_regional                                          */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'MapData'
*/
/* List of ASN1T_ETSI_DSRC_MapData_regional_element */
typedef ASN1TSeqOfList ASN1T_ETSI_DSRC_MapData_regional;

class EXTERN ASN1C_ETSI_DSRC_MapData_regional :
public ASN1CSeqOfList
{
protected:
   ASN1T_ETSI_DSRC_MapData_regional& msgData;
public:
   /**
    * Control class: ASN1C_ETSI_DSRC_MapData_regional
    * Data class:    ASN1T_ETSI_DSRC_MapData_regional
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_MapData_regional (ASN1T_ETSI_DSRC_MapData_regional& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_MapData_regional<br/>
    * Data class: ASN1T_ETSI_DSRC_MapData_regional<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_MapData_regional (OSRTMessageBufferIF& msgBuf
      , ASN1T_ETSI_DSRC_MapData_regional& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_MapData_regional<br/>
    * Data class: ASN1T_ETSI_DSRC_MapData_regional<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_ETSI_DSRC_MapData_regional (ASN1CType& ccobj
      , ASN1T_ETSI_DSRC_MapData_regional& data);

   virtual ~ASN1C_ETSI_DSRC_MapData_regional () {}

   /**
    * Data class: ASN1T_ETSI_DSRC_MapData_regional_element<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_ETSI_DSRC_MapData_regional_element* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_ETSI_DSRC_MapData_regional_element.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_ETSI_DSRC_MapData_regional_element* NewElement ();

   /**
    * Data class: ASN1T_ETSI_DSRC_MapData_regional_element.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_ETSI_DSRC_MapData_regional_element* AppendNewElement ();

   /* Get IE using regionId key value */
   ASN1T_ETSI_DSRC_MapData_regional_element* 
      GetIE (ASN1T_ETSI_DSRC_RegionId regionId);

   /* Get all matching IEs using regionId key value */
   int GetAllIEs (ASN1T_ETSI_DSRC_RegionId regionId, 
      ASN1T_ETSI_DSRC_MapData_regional* pmatches);

private:
   ASN1C_ETSI_DSRC_MapData_regional& operator= (const ASN1C_ETSI_DSRC_MapData_regional&) {return *this;}
} ;

EXTERN int asn1PE_ETSI_DSRC_MapData_regional (OSCTXT* pctxt, ASN1T_ETSI_DSRC_MapData_regional* pvalue);

EXTERN int asn1PD_ETSI_DSRC_MapData_regional (OSCTXT* pctxt, ASN1T_ETSI_DSRC_MapData_regional* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_MapData_regional (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_MapData_regional* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_MapData_regional (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_MapData_regional* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_MapData_regional (OSCTXT *pctxt, ASN1T_ETSI_DSRC_MapData_regional *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_MapData_regional (OSCTXT *pctxt, ASN1T_ETSI_DSRC_MapData_regional *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_MapData_regional (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_MapData_regional* pvalue);

EXTERN int asn1Init_ETSI_DSRC_MapData_regional (
   ASN1T_ETSI_DSRC_MapData_regional* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_MapData_regional (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_MapData_regional* pvalue);

/**************************************************************/
/*                                                            */
/*  MapData                                                   */
/*                                                            */
/**************************************************************/
/*
MapData ::= SEQUENCE {
   timeStamp [0] MinuteOfTheYear OPTIONAL,
   msgIssueRevision [1] MsgCount,
   layerType [2] LayerType OPTIONAL,
   layerID [3] LayerID OPTIONAL,
   intersections [4] IntersectionGeometryList OPTIONAL,
   roadSegments [5] RoadSegmentList OPTIONAL,
   dataParameters [6] DataParameters OPTIONAL,
   restrictionList [7] RestrictionClassList OPTIONAL,
   regional [8] SEQUENCE (SIZE (1..4)) OF SEQUENCE {
      regionId [0] REG-EXT-ID-AND-TYPE.&id ({Reg-MapData}),
      regExtValue [1] EXPLICIT REG-EXT-ID-AND-TYPE.&Type ({Reg-MapData}{@regionId})
   } OPTIONAL,
   ...
}
*/
struct EXTERN ASN1T_ETSI_DSRC_MapData {
   struct {
      unsigned timeStampPresent : 1;
      unsigned layerTypePresent : 1;
      unsigned layerIDPresent : 1;
      unsigned intersectionsPresent : 1;
      unsigned roadSegmentsPresent : 1;
      unsigned dataParametersPresent : 1;
      unsigned restrictionListPresent : 1;
      unsigned regionalPresent : 1;
   } m;
   ASN1T_ETSI_DSRC_MinuteOfTheYear timeStamp;
   ASN1T_ETSI_DSRC_MsgCount msgIssueRevision;
   ASN1T_ETSI_DSRC_LayerType layerType;
   ASN1T_ETSI_DSRC_LayerID layerID;
   ASN1T_ETSI_DSRC_IntersectionGeometryList intersections;
   ASN1T_ETSI_DSRC_RoadSegmentList roadSegments;
   ASN1T_ETSI_DSRC_DataParameters dataParameters;
   ASN1T_ETSI_DSRC_RestrictionClassList restrictionList;
   ASN1T_ETSI_DSRC_MapData_regional regional;
   ASN1TSeqExt extElem1;
   ASN1T_ETSI_DSRC_MapData ();
} ;

EXTERN int asn1PE_ETSI_DSRC_MapData (OSCTXT* pctxt, ASN1T_ETSI_DSRC_MapData* pvalue);

EXTERN int asn1PD_ETSI_DSRC_MapData (OSCTXT* pctxt, ASN1T_ETSI_DSRC_MapData* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_MapData (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_MapData* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_MapData (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_MapData* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_MapData (OSCTXT *pctxt, ASN1T_ETSI_DSRC_MapData *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_MapData (OSCTXT *pctxt, ASN1T_ETSI_DSRC_MapData *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_MapData (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_MapData* pvalue);

EXTERN ASN1T_ETSI_DSRC_MapData* new_ASN1T_ETSI_DSRC_MapData (ASN1CType& ccobj)
   ;

EXTERN int asn1Init_ETSI_DSRC_MapData (ASN1T_ETSI_DSRC_MapData* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_MapData (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_MapData* pvalue);

/**************************************************************/
/*                                                            */
/*  RTCM_Revision                                             */
/*                                                            */
/**************************************************************/
/*
RTCM-Revision ::= ENUMERATED { unknown(0), rtcmRev2(1), rtcmRev3(2), reserved(3), ... }
*/
struct EXTERN ETSI_DSRC_RTCM_Revision {
   enum Root {
      unknown = 0,
      rtcmRev2 = 1,
      rtcmRev3 = 2,
      reserved = 3
   } ;
} ;

typedef OSUINT32 ASN1T_ETSI_DSRC_RTCM_Revision;

EXTERN int asn1PE_ETSI_DSRC_RTCM_Revision (OSCTXT* pctxt, ASN1T_ETSI_DSRC_RTCM_Revision value);

EXTERN int asn1PD_ETSI_DSRC_RTCM_Revision (OSCTXT* pctxt, ASN1T_ETSI_DSRC_RTCM_Revision* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_RTCM_Revision (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_RTCM_Revision value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_RTCM_Revision (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_RTCM_Revision* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_RTCM_Revision (OSCTXT *pctxt, ASN1T_ETSI_DSRC_RTCM_Revision *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_RTCM_Revision (OSCTXT *pctxt, ASN1T_ETSI_DSRC_RTCM_Revision *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_RTCM_Revision (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_RTCM_Revision* pvalue);

EXTERN ASN1T_ETSI_DSRC_RTCM_Revision* 
   new_ASN1T_ETSI_DSRC_RTCM_Revision (ASN1CType& ccobj);

EXTERN extern const OSEnumItem ASN1T_ETSI_DSRC_RTCM_Revision_ENUMTAB[];
#define ASN1T_ETSI_DSRC_RTCM_Revision_ENUMTABSIZE 4

EXTERN const OSUTF8CHAR* ASN1T_ETSI_DSRC_RTCM_Revision_ToString (OSINT32 value);

EXTERN int ASN1T_ETSI_DSRC_RTCM_Revision_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, ASN1T_ETSI_DSRC_RTCM_Revision* pvalue);

EXTERN int ASN1T_ETSI_DSRC_RTCM_Revision_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      ASN1T_ETSI_DSRC_RTCM_Revision* pvalue);

/**************************************************************/
/*                                                            */
/*  DYear                                                     */
/*                                                            */
/**************************************************************/
/*
DYear ::= INTEGER (0..4095)
*/
typedef OSUINT16 ASN1T_ETSI_DSRC_DYear;

EXTERN int asn1PE_ETSI_DSRC_DYear (OSCTXT* pctxt, ASN1T_ETSI_DSRC_DYear value);

EXTERN int asn1PD_ETSI_DSRC_DYear (OSCTXT* pctxt, ASN1T_ETSI_DSRC_DYear* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_DYear (OSCTXT* pctxt, ASN1T_ETSI_DSRC_DYear value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_DYear (OSCTXT* pctxt, ASN1T_ETSI_DSRC_DYear* pvalue
   );

EXTERN int asn1JsonEnc_ETSI_DSRC_DYear (OSCTXT *pctxt, ASN1T_ETSI_DSRC_DYear *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_DYear (OSCTXT *pctxt, ASN1T_ETSI_DSRC_DYear *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_DYear (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_DYear* pvalue);

EXTERN ASN1T_ETSI_DSRC_DYear* new_ASN1T_ETSI_DSRC_DYear (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  DMonth                                                    */
/*                                                            */
/**************************************************************/
/*
DMonth ::= INTEGER (0..12)
*/
typedef OSUINT8 ASN1T_ETSI_DSRC_DMonth;

EXTERN int asn1PE_ETSI_DSRC_DMonth (OSCTXT* pctxt, ASN1T_ETSI_DSRC_DMonth value);

EXTERN int asn1PD_ETSI_DSRC_DMonth (OSCTXT* pctxt, ASN1T_ETSI_DSRC_DMonth* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_DMonth (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_DMonth value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_DMonth (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_DMonth* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_DMonth (OSCTXT *pctxt, ASN1T_ETSI_DSRC_DMonth *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_DMonth (OSCTXT *pctxt, ASN1T_ETSI_DSRC_DMonth *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_DMonth (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_DMonth* pvalue);

EXTERN ASN1T_ETSI_DSRC_DMonth* new_ASN1T_ETSI_DSRC_DMonth (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  DDay                                                      */
/*                                                            */
/**************************************************************/
/*
DDay ::= INTEGER (0..31)
*/
typedef OSUINT8 ASN1T_ETSI_DSRC_DDay;

EXTERN int asn1PE_ETSI_DSRC_DDay (OSCTXT* pctxt, ASN1T_ETSI_DSRC_DDay value);

EXTERN int asn1PD_ETSI_DSRC_DDay (OSCTXT* pctxt, ASN1T_ETSI_DSRC_DDay* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_DDay (OSCTXT* pctxt, ASN1T_ETSI_DSRC_DDay value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_DDay (OSCTXT* pctxt, ASN1T_ETSI_DSRC_DDay* pvalue)
   ;

EXTERN int asn1JsonEnc_ETSI_DSRC_DDay (OSCTXT *pctxt, ASN1T_ETSI_DSRC_DDay *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_DDay (OSCTXT *pctxt, ASN1T_ETSI_DSRC_DDay *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_DDay (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_DDay* pvalue);

EXTERN ASN1T_ETSI_DSRC_DDay* new_ASN1T_ETSI_DSRC_DDay (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  DHour                                                     */
/*                                                            */
/**************************************************************/
/*
DHour ::= INTEGER (0..31)
*/
typedef OSUINT8 ASN1T_ETSI_DSRC_DHour;

EXTERN int asn1PE_ETSI_DSRC_DHour (OSCTXT* pctxt, ASN1T_ETSI_DSRC_DHour value);

EXTERN int asn1PD_ETSI_DSRC_DHour (OSCTXT* pctxt, ASN1T_ETSI_DSRC_DHour* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_DHour (OSCTXT* pctxt, ASN1T_ETSI_DSRC_DHour value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_DHour (OSCTXT* pctxt, ASN1T_ETSI_DSRC_DHour* pvalue
   );

EXTERN int asn1JsonEnc_ETSI_DSRC_DHour (OSCTXT *pctxt, ASN1T_ETSI_DSRC_DHour *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_DHour (OSCTXT *pctxt, ASN1T_ETSI_DSRC_DHour *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_DHour (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_DHour* pvalue);

EXTERN ASN1T_ETSI_DSRC_DHour* new_ASN1T_ETSI_DSRC_DHour (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  DMinute                                                   */
/*                                                            */
/**************************************************************/
/*
DMinute ::= INTEGER (0..60)
*/
typedef OSUINT8 ASN1T_ETSI_DSRC_DMinute;

EXTERN int asn1PE_ETSI_DSRC_DMinute (OSCTXT* pctxt, ASN1T_ETSI_DSRC_DMinute value);

EXTERN int asn1PD_ETSI_DSRC_DMinute (OSCTXT* pctxt, ASN1T_ETSI_DSRC_DMinute* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_DMinute (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_DMinute value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_DMinute (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_DMinute* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_DMinute (OSCTXT *pctxt, ASN1T_ETSI_DSRC_DMinute *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_DMinute (OSCTXT *pctxt, ASN1T_ETSI_DSRC_DMinute *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_DMinute (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_DMinute* pvalue);

EXTERN ASN1T_ETSI_DSRC_DMinute* new_ASN1T_ETSI_DSRC_DMinute (ASN1CType& ccobj)
   ;

/**************************************************************/
/*                                                            */
/*  DSecond                                                   */
/*                                                            */
/**************************************************************/
/*
DSecond ::= INTEGER (0..65535)
*/
typedef OSUINT16 ASN1T_ETSI_DSRC_DSecond;

EXTERN int asn1PE_ETSI_DSRC_DSecond (OSCTXT* pctxt, ASN1T_ETSI_DSRC_DSecond value);

EXTERN int asn1PD_ETSI_DSRC_DSecond (OSCTXT* pctxt, ASN1T_ETSI_DSRC_DSecond* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_DSecond (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_DSecond value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_DSecond (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_DSecond* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_DSecond (OSCTXT *pctxt, ASN1T_ETSI_DSRC_DSecond *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_DSecond (OSCTXT *pctxt, ASN1T_ETSI_DSRC_DSecond *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_DSecond (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_DSecond* pvalue);

EXTERN ASN1T_ETSI_DSRC_DSecond* new_ASN1T_ETSI_DSRC_DSecond (ASN1CType& ccobj)
   ;

/**************************************************************/
/*                                                            */
/*  DOffset                                                   */
/*                                                            */
/**************************************************************/
/*
DOffset ::= INTEGER (-840..840)
*/
typedef OSINT16 ASN1T_ETSI_DSRC_DOffset;

EXTERN int asn1PE_ETSI_DSRC_DOffset (OSCTXT* pctxt, ASN1T_ETSI_DSRC_DOffset value);

EXTERN int asn1PD_ETSI_DSRC_DOffset (OSCTXT* pctxt, ASN1T_ETSI_DSRC_DOffset* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_DOffset (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_DOffset value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_DOffset (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_DOffset* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_DOffset (OSCTXT *pctxt, ASN1T_ETSI_DSRC_DOffset *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_DOffset (OSCTXT *pctxt, ASN1T_ETSI_DSRC_DOffset *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_DOffset (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_DOffset* pvalue);

EXTERN ASN1T_ETSI_DSRC_DOffset* new_ASN1T_ETSI_DSRC_DOffset (ASN1CType& ccobj)
   ;

/**************************************************************/
/*                                                            */
/*  DDateTime                                                 */
/*                                                            */
/**************************************************************/
/*
DDateTime ::= SEQUENCE {
   year [0] DYear OPTIONAL,
   month [1] DMonth OPTIONAL,
   day [2] DDay OPTIONAL,
   hour [3] DHour OPTIONAL,
   minute [4] DMinute OPTIONAL,
   second [5] DSecond OPTIONAL,
   offset [6] DOffset OPTIONAL
}
*/
struct EXTERN ASN1T_ETSI_DSRC_DDateTime {
   struct {
      unsigned yearPresent : 1;
      unsigned monthPresent : 1;
      unsigned dayPresent : 1;
      unsigned hourPresent : 1;
      unsigned minutePresent : 1;
      unsigned secondPresent : 1;
      unsigned offsetPresent : 1;
   } m;
   ASN1T_ETSI_DSRC_DYear year;
   ASN1T_ETSI_DSRC_DMonth month;
   ASN1T_ETSI_DSRC_DDay day;
   ASN1T_ETSI_DSRC_DHour hour;
   ASN1T_ETSI_DSRC_DMinute minute;
   ASN1T_ETSI_DSRC_DSecond second;
   ASN1T_ETSI_DSRC_DOffset offset;
   ASN1T_ETSI_DSRC_DDateTime ();
} ;

EXTERN int asn1PE_ETSI_DSRC_DDateTime (OSCTXT* pctxt, ASN1T_ETSI_DSRC_DDateTime* pvalue);

EXTERN int asn1PD_ETSI_DSRC_DDateTime (OSCTXT* pctxt, ASN1T_ETSI_DSRC_DDateTime* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_DDateTime (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_DDateTime* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_DDateTime (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_DDateTime* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_DDateTime (OSCTXT *pctxt, ASN1T_ETSI_DSRC_DDateTime *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_DDateTime (OSCTXT *pctxt, ASN1T_ETSI_DSRC_DDateTime *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_DDateTime (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_DDateTime* pvalue);

EXTERN ASN1T_ETSI_DSRC_DDateTime* 
   new_ASN1T_ETSI_DSRC_DDateTime (ASN1CType& ccobj);

EXTERN int asn1Init_ETSI_DSRC_DDateTime (ASN1T_ETSI_DSRC_DDateTime* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

/**************************************************************/
/*                                                            */
/*  Heading                                                   */
/*                                                            */
/**************************************************************/
/*
Heading ::= INTEGER (0..28800)
*/
typedef OSUINT16 ASN1T_ETSI_DSRC_Heading;

EXTERN int asn1PE_ETSI_DSRC_Heading (OSCTXT* pctxt, ASN1T_ETSI_DSRC_Heading value);

EXTERN int asn1PD_ETSI_DSRC_Heading (OSCTXT* pctxt, ASN1T_ETSI_DSRC_Heading* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_Heading (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_Heading value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_Heading (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_Heading* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_Heading (OSCTXT *pctxt, ASN1T_ETSI_DSRC_Heading *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_Heading (OSCTXT *pctxt, ASN1T_ETSI_DSRC_Heading *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_Heading (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_Heading* pvalue);

EXTERN ASN1T_ETSI_DSRC_Heading* new_ASN1T_ETSI_DSRC_Heading (ASN1CType& ccobj)
   ;

/**************************************************************/
/*                                                            */
/*  TransmissionState                                         */
/*                                                            */
/**************************************************************/
/*
TransmissionState ::= ENUMERATED { neutral(0), park(1), forwardGears(2), reverseGears(3), reserved1(4), reserved2(5), reserved3(6), unavailable(7) }
*/
struct EXTERN ETSI_DSRC_TransmissionState {
   enum Root {
      neutral = 0,
      park = 1,
      forwardGears = 2,
      reverseGears = 3,
      reserved1 = 4,
      reserved2 = 5,
      reserved3 = 6,
      unavailable = 7
   } ;
} ;

typedef OSUINT32 ASN1T_ETSI_DSRC_TransmissionState;

EXTERN int asn1PE_ETSI_DSRC_TransmissionState (OSCTXT* pctxt, ASN1T_ETSI_DSRC_TransmissionState value);

EXTERN int asn1PD_ETSI_DSRC_TransmissionState (OSCTXT* pctxt, ASN1T_ETSI_DSRC_TransmissionState* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_TransmissionState (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_TransmissionState value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_TransmissionState (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_TransmissionState* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_TransmissionState (OSCTXT *pctxt, ASN1T_ETSI_DSRC_TransmissionState *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_TransmissionState (OSCTXT *pctxt, ASN1T_ETSI_DSRC_TransmissionState *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_TransmissionState (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_TransmissionState* pvalue);

EXTERN ASN1T_ETSI_DSRC_TransmissionState* 
   new_ASN1T_ETSI_DSRC_TransmissionState (ASN1CType& ccobj);

EXTERN extern const OSEnumItem ASN1T_ETSI_DSRC_TransmissionState_ENUMTAB[];
#define ASN1T_ETSI_DSRC_TransmissionState_ENUMTABSIZE 8

EXTERN const OSUTF8CHAR* ASN1T_ETSI_DSRC_TransmissionState_ToString (OSINT32 value);

EXTERN int ASN1T_ETSI_DSRC_TransmissionState_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, ASN1T_ETSI_DSRC_TransmissionState* pvalue);

EXTERN int ASN1T_ETSI_DSRC_TransmissionState_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      ASN1T_ETSI_DSRC_TransmissionState* pvalue);

/**************************************************************/
/*                                                            */
/*  TransmissionAndSpeed                                      */
/*                                                            */
/**************************************************************/
/*
TransmissionAndSpeed ::= SEQUENCE {
   transmisson [0] TransmissionState,
   speed [1] Velocity
}
*/
struct EXTERN ASN1T_ETSI_DSRC_TransmissionAndSpeed {
   ASN1T_ETSI_DSRC_TransmissionState transmisson;
   ASN1T_ETSI_DSRC_Velocity speed;
} ;

EXTERN int asn1PE_ETSI_DSRC_TransmissionAndSpeed (OSCTXT* pctxt, ASN1T_ETSI_DSRC_TransmissionAndSpeed* pvalue);

EXTERN int asn1PD_ETSI_DSRC_TransmissionAndSpeed (OSCTXT* pctxt, ASN1T_ETSI_DSRC_TransmissionAndSpeed* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_TransmissionAndSpeed (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_TransmissionAndSpeed* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_TransmissionAndSpeed (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_TransmissionAndSpeed* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_TransmissionAndSpeed (OSCTXT *pctxt, ASN1T_ETSI_DSRC_TransmissionAndSpeed *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_TransmissionAndSpeed (OSCTXT *pctxt, ASN1T_ETSI_DSRC_TransmissionAndSpeed *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_TransmissionAndSpeed (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_TransmissionAndSpeed* pvalue);

EXTERN ASN1T_ETSI_DSRC_TransmissionAndSpeed* 
   new_ASN1T_ETSI_DSRC_TransmissionAndSpeed (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  SemiMajorAxisAccuracy                                     */
/*                                                            */
/**************************************************************/
/*
SemiMajorAxisAccuracy ::= INTEGER (0..255)
*/
typedef OSUINT8 ASN1T_ETSI_DSRC_SemiMajorAxisAccuracy;

EXTERN int asn1PE_ETSI_DSRC_SemiMajorAxisAccuracy (OSCTXT* pctxt, ASN1T_ETSI_DSRC_SemiMajorAxisAccuracy value);

EXTERN int asn1PD_ETSI_DSRC_SemiMajorAxisAccuracy (OSCTXT* pctxt, ASN1T_ETSI_DSRC_SemiMajorAxisAccuracy* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_SemiMajorAxisAccuracy (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_SemiMajorAxisAccuracy value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_SemiMajorAxisAccuracy (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_SemiMajorAxisAccuracy* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_SemiMajorAxisAccuracy (OSCTXT *pctxt, ASN1T_ETSI_DSRC_SemiMajorAxisAccuracy *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_SemiMajorAxisAccuracy (OSCTXT *pctxt, ASN1T_ETSI_DSRC_SemiMajorAxisAccuracy *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_SemiMajorAxisAccuracy (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_SemiMajorAxisAccuracy* pvalue);

EXTERN ASN1T_ETSI_DSRC_SemiMajorAxisAccuracy* 
   new_ASN1T_ETSI_DSRC_SemiMajorAxisAccuracy (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  SemiMinorAxisAccuracy                                     */
/*                                                            */
/**************************************************************/
/*
SemiMinorAxisAccuracy ::= INTEGER (0..255)
*/
typedef OSUINT8 ASN1T_ETSI_DSRC_SemiMinorAxisAccuracy;

EXTERN int asn1PE_ETSI_DSRC_SemiMinorAxisAccuracy (OSCTXT* pctxt, ASN1T_ETSI_DSRC_SemiMinorAxisAccuracy value);

EXTERN int asn1PD_ETSI_DSRC_SemiMinorAxisAccuracy (OSCTXT* pctxt, ASN1T_ETSI_DSRC_SemiMinorAxisAccuracy* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_SemiMinorAxisAccuracy (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_SemiMinorAxisAccuracy value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_SemiMinorAxisAccuracy (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_SemiMinorAxisAccuracy* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_SemiMinorAxisAccuracy (OSCTXT *pctxt, ASN1T_ETSI_DSRC_SemiMinorAxisAccuracy *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_SemiMinorAxisAccuracy (OSCTXT *pctxt, ASN1T_ETSI_DSRC_SemiMinorAxisAccuracy *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_SemiMinorAxisAccuracy (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_SemiMinorAxisAccuracy* pvalue);

EXTERN ASN1T_ETSI_DSRC_SemiMinorAxisAccuracy* 
   new_ASN1T_ETSI_DSRC_SemiMinorAxisAccuracy (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  SemiMajorAxisOrientation                                  */
/*                                                            */
/**************************************************************/
/*
SemiMajorAxisOrientation ::= INTEGER (0..65535)
*/
typedef OSUINT16 ASN1T_ETSI_DSRC_SemiMajorAxisOrientation;

EXTERN int asn1PE_ETSI_DSRC_SemiMajorAxisOrientation (OSCTXT* pctxt, ASN1T_ETSI_DSRC_SemiMajorAxisOrientation value);

EXTERN int asn1PD_ETSI_DSRC_SemiMajorAxisOrientation (OSCTXT* pctxt, ASN1T_ETSI_DSRC_SemiMajorAxisOrientation* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_SemiMajorAxisOrientation (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_SemiMajorAxisOrientation value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_SemiMajorAxisOrientation (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_SemiMajorAxisOrientation* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_SemiMajorAxisOrientation (OSCTXT *pctxt, ASN1T_ETSI_DSRC_SemiMajorAxisOrientation *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_SemiMajorAxisOrientation (OSCTXT *pctxt, ASN1T_ETSI_DSRC_SemiMajorAxisOrientation *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_SemiMajorAxisOrientation (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_SemiMajorAxisOrientation* pvalue);

EXTERN ASN1T_ETSI_DSRC_SemiMajorAxisOrientation* 
   new_ASN1T_ETSI_DSRC_SemiMajorAxisOrientation (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  PositionalAccuracy                                        */
/*                                                            */
/**************************************************************/
/*
PositionalAccuracy ::= SEQUENCE {
   semiMajor [0] SemiMajorAxisAccuracy,
   semiMinor [1] SemiMinorAxisAccuracy,
   orientation [2] SemiMajorAxisOrientation
}
*/
struct EXTERN ASN1T_ETSI_DSRC_PositionalAccuracy {
   ASN1T_ETSI_DSRC_SemiMajorAxisAccuracy semiMajor;
   ASN1T_ETSI_DSRC_SemiMinorAxisAccuracy semiMinor;
   ASN1T_ETSI_DSRC_SemiMajorAxisOrientation orientation;
} ;

EXTERN int asn1PE_ETSI_DSRC_PositionalAccuracy (OSCTXT* pctxt, ASN1T_ETSI_DSRC_PositionalAccuracy* pvalue);

EXTERN int asn1PD_ETSI_DSRC_PositionalAccuracy (OSCTXT* pctxt, ASN1T_ETSI_DSRC_PositionalAccuracy* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_PositionalAccuracy (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_PositionalAccuracy* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_PositionalAccuracy (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_PositionalAccuracy* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_PositionalAccuracy (OSCTXT *pctxt, ASN1T_ETSI_DSRC_PositionalAccuracy *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_PositionalAccuracy (OSCTXT *pctxt, ASN1T_ETSI_DSRC_PositionalAccuracy *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_PositionalAccuracy (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_PositionalAccuracy* pvalue);

EXTERN ASN1T_ETSI_DSRC_PositionalAccuracy* 
   new_ASN1T_ETSI_DSRC_PositionalAccuracy (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  TimeConfidence                                            */
/*                                                            */
/**************************************************************/
/*
TimeConfidence ::= ENUMERATED { unavailable(0), time-100-000(1), time-050-000(2), time-020-000(3), time-010-000(4), time-002-000(5), time-001-000(6), time-000-500(7), time-000-200(8), time-000-100(9), time-000-050(10), time-000-020(11), time-000-010(12), time-000-005(13), time-000-002(14), time-000-001(15), time-000-000-5(16), time-000-000-2(17), time-000-000-1(18), time-000-000-05(19), time-000-000-02(20), time-000-000-01(21), time-000-000-005(22), time-000-000-002(23), time-000-000-001(24), time-000-000-000-5(25), time-000-000-000-2(26), time-000-000-000-1(27), time-000-000-000-05(28), time-000-000-000-02(29), time-000-000-000-01(30), time-000-000-000-005(31), time-000-000-000-002(32), time-000-000-000-001(33), time-000-000-000-000-5(34), time-000-000-000-000-2(35), time-000-000-000-000-1(36), time-000-000-000-000-05(37), time-000-000-000-000-02(38), time-000-000-000-000-01(39) }
*/
struct EXTERN ETSI_DSRC_TimeConfidence {
   enum Root {
      unavailable = 0,
      time_100_000 = 1,
      time_050_000 = 2,
      time_020_000 = 3,
      time_010_000 = 4,
      time_002_000 = 5,
      time_001_000 = 6,
      time_000_500 = 7,
      time_000_200 = 8,
      time_000_100 = 9,
      time_000_050 = 10,
      time_000_020 = 11,
      time_000_010 = 12,
      time_000_005 = 13,
      time_000_002 = 14,
      time_000_001 = 15,
      time_000_000_5 = 16,
      time_000_000_2 = 17,
      time_000_000_1 = 18,
      time_000_000_05 = 19,
      time_000_000_02 = 20,
      time_000_000_01 = 21,
      time_000_000_005 = 22,
      time_000_000_002 = 23,
      time_000_000_001 = 24,
      time_000_000_000_5 = 25,
      time_000_000_000_2 = 26,
      time_000_000_000_1 = 27,
      time_000_000_000_05 = 28,
      time_000_000_000_02 = 29,
      time_000_000_000_01 = 30,
      time_000_000_000_005 = 31,
      time_000_000_000_002 = 32,
      time_000_000_000_001 = 33,
      time_000_000_000_000_5 = 34,
      time_000_000_000_000_2 = 35,
      time_000_000_000_000_1 = 36,
      time_000_000_000_000_05 = 37,
      time_000_000_000_000_02 = 38,
      time_000_000_000_000_01 = 39
   } ;
} ;

typedef OSUINT32 ASN1T_ETSI_DSRC_TimeConfidence;

EXTERN int asn1PE_ETSI_DSRC_TimeConfidence (OSCTXT* pctxt, ASN1T_ETSI_DSRC_TimeConfidence value);

EXTERN int asn1PD_ETSI_DSRC_TimeConfidence (OSCTXT* pctxt, ASN1T_ETSI_DSRC_TimeConfidence* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_TimeConfidence (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_TimeConfidence value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_TimeConfidence (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_TimeConfidence* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_TimeConfidence (OSCTXT *pctxt, ASN1T_ETSI_DSRC_TimeConfidence *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_TimeConfidence (OSCTXT *pctxt, ASN1T_ETSI_DSRC_TimeConfidence *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_TimeConfidence (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_TimeConfidence* pvalue);

EXTERN ASN1T_ETSI_DSRC_TimeConfidence* 
   new_ASN1T_ETSI_DSRC_TimeConfidence (ASN1CType& ccobj);

EXTERN extern const OSEnumItem ASN1T_ETSI_DSRC_TimeConfidence_ENUMTAB[];
#define ASN1T_ETSI_DSRC_TimeConfidence_ENUMTABSIZE 40

EXTERN const OSUTF8CHAR* ASN1T_ETSI_DSRC_TimeConfidence_ToString (OSINT32 value);

EXTERN int ASN1T_ETSI_DSRC_TimeConfidence_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, ASN1T_ETSI_DSRC_TimeConfidence* pvalue);

EXTERN int ASN1T_ETSI_DSRC_TimeConfidence_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      ASN1T_ETSI_DSRC_TimeConfidence* pvalue);

/**************************************************************/
/*                                                            */
/*  PositionConfidence                                        */
/*                                                            */
/**************************************************************/
/*
PositionConfidence ::= ENUMERATED { unavailable(0), a500m(1), a200m(2), a100m(3), a50m(4), a20m(5), a10m(6), a5m(7), a2m(8), a1m(9), a50cm(10), a20cm(11), a10cm(12), a5cm(13), a2cm(14), a1cm(15) }
*/
struct EXTERN ETSI_DSRC_PositionConfidence {
   enum Root {
      unavailable = 0,
      a500m = 1,
      a200m = 2,
      a100m = 3,
      a50m = 4,
      a20m = 5,
      a10m = 6,
      a5m = 7,
      a2m = 8,
      a1m = 9,
      a50cm = 10,
      a20cm = 11,
      a10cm = 12,
      a5cm = 13,
      a2cm = 14,
      a1cm = 15
   } ;
} ;

typedef OSUINT32 ASN1T_ETSI_DSRC_PositionConfidence;

EXTERN int asn1PE_ETSI_DSRC_PositionConfidence (OSCTXT* pctxt, ASN1T_ETSI_DSRC_PositionConfidence value);

EXTERN int asn1PD_ETSI_DSRC_PositionConfidence (OSCTXT* pctxt, ASN1T_ETSI_DSRC_PositionConfidence* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_PositionConfidence (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_PositionConfidence value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_PositionConfidence (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_PositionConfidence* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_PositionConfidence (OSCTXT *pctxt, ASN1T_ETSI_DSRC_PositionConfidence *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_PositionConfidence (OSCTXT *pctxt, ASN1T_ETSI_DSRC_PositionConfidence *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_PositionConfidence (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_PositionConfidence* pvalue);

EXTERN ASN1T_ETSI_DSRC_PositionConfidence* 
   new_ASN1T_ETSI_DSRC_PositionConfidence (ASN1CType& ccobj);

EXTERN extern const OSEnumItem ASN1T_ETSI_DSRC_PositionConfidence_ENUMTAB[];
#define ASN1T_ETSI_DSRC_PositionConfidence_ENUMTABSIZE 16

EXTERN const OSUTF8CHAR* ASN1T_ETSI_DSRC_PositionConfidence_ToString (OSINT32 value);

EXTERN int ASN1T_ETSI_DSRC_PositionConfidence_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, ASN1T_ETSI_DSRC_PositionConfidence* pvalue);

EXTERN int ASN1T_ETSI_DSRC_PositionConfidence_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      ASN1T_ETSI_DSRC_PositionConfidence* pvalue);

/**************************************************************/
/*                                                            */
/*  ElevationConfidence                                       */
/*                                                            */
/**************************************************************/
/*
ElevationConfidence ::= ENUMERATED { unavailable(0), elev-500-00(1), elev-200-00(2), elev-100-00(3), elev-050-00(4), elev-020-00(5), elev-010-00(6), elev-005-00(7), elev-002-00(8), elev-001-00(9), elev-000-50(10), elev-000-20(11), elev-000-10(12), elev-000-05(13), elev-000-02(14), elev-000-01(15) }
*/
struct EXTERN ETSI_DSRC_ElevationConfidence {
   enum Root {
      unavailable = 0,
      elev_500_00 = 1,
      elev_200_00 = 2,
      elev_100_00 = 3,
      elev_050_00 = 4,
      elev_020_00 = 5,
      elev_010_00 = 6,
      elev_005_00 = 7,
      elev_002_00 = 8,
      elev_001_00 = 9,
      elev_000_50 = 10,
      elev_000_20 = 11,
      elev_000_10 = 12,
      elev_000_05 = 13,
      elev_000_02 = 14,
      elev_000_01 = 15
   } ;
} ;

typedef OSUINT32 ASN1T_ETSI_DSRC_ElevationConfidence;

EXTERN int asn1PE_ETSI_DSRC_ElevationConfidence (OSCTXT* pctxt, ASN1T_ETSI_DSRC_ElevationConfidence value);

EXTERN int asn1PD_ETSI_DSRC_ElevationConfidence (OSCTXT* pctxt, ASN1T_ETSI_DSRC_ElevationConfidence* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_ElevationConfidence (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_ElevationConfidence value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_ElevationConfidence (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_ElevationConfidence* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_ElevationConfidence (OSCTXT *pctxt, ASN1T_ETSI_DSRC_ElevationConfidence *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_ElevationConfidence (OSCTXT *pctxt, ASN1T_ETSI_DSRC_ElevationConfidence *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_ElevationConfidence (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_ElevationConfidence* pvalue);

EXTERN ASN1T_ETSI_DSRC_ElevationConfidence* 
   new_ASN1T_ETSI_DSRC_ElevationConfidence (ASN1CType& ccobj);

EXTERN extern const OSEnumItem ASN1T_ETSI_DSRC_ElevationConfidence_ENUMTAB[];
#define ASN1T_ETSI_DSRC_ElevationConfidence_ENUMTABSIZE 16

EXTERN const OSUTF8CHAR* ASN1T_ETSI_DSRC_ElevationConfidence_ToString (OSINT32 value);

EXTERN int ASN1T_ETSI_DSRC_ElevationConfidence_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, ASN1T_ETSI_DSRC_ElevationConfidence* pvalue);

EXTERN int ASN1T_ETSI_DSRC_ElevationConfidence_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      ASN1T_ETSI_DSRC_ElevationConfidence* pvalue);

/**************************************************************/
/*                                                            */
/*  PositionConfidenceSet                                     */
/*                                                            */
/**************************************************************/
/*
PositionConfidenceSet ::= SEQUENCE {
   pos [0] PositionConfidence, -- for both horizontal directions
   elevation [1] ElevationConfidence
}
*/
struct EXTERN ASN1T_ETSI_DSRC_PositionConfidenceSet {
   ASN1T_ETSI_DSRC_PositionConfidence pos;
   ASN1T_ETSI_DSRC_ElevationConfidence elevation;
} ;

EXTERN int asn1PE_ETSI_DSRC_PositionConfidenceSet (OSCTXT* pctxt, ASN1T_ETSI_DSRC_PositionConfidenceSet* pvalue);

EXTERN int asn1PD_ETSI_DSRC_PositionConfidenceSet (OSCTXT* pctxt, ASN1T_ETSI_DSRC_PositionConfidenceSet* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_PositionConfidenceSet (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_PositionConfidenceSet* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_PositionConfidenceSet (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_PositionConfidenceSet* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_PositionConfidenceSet (OSCTXT *pctxt, ASN1T_ETSI_DSRC_PositionConfidenceSet *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_PositionConfidenceSet (OSCTXT *pctxt, ASN1T_ETSI_DSRC_PositionConfidenceSet *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_PositionConfidenceSet (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_PositionConfidenceSet* pvalue);

EXTERN ASN1T_ETSI_DSRC_PositionConfidenceSet* 
   new_ASN1T_ETSI_DSRC_PositionConfidenceSet (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  HeadingConfidence                                         */
/*                                                            */
/**************************************************************/
/*
HeadingConfidence ::= ENUMERATED { unavailable(0), prec10deg(1), prec05deg(2), prec01deg(3), prec0-1deg(4), prec0-05deg(5), prec0-01deg(6), prec0-0125deg(7) }
*/
struct EXTERN ETSI_DSRC_HeadingConfidence {
   enum Root {
      unavailable = 0,
      prec10deg = 1,
      prec05deg = 2,
      prec01deg = 3,
      prec0_1deg = 4,
      prec0_05deg = 5,
      prec0_01deg = 6,
      prec0_0125deg = 7
   } ;
} ;

typedef OSUINT32 ASN1T_ETSI_DSRC_HeadingConfidence;

EXTERN int asn1PE_ETSI_DSRC_HeadingConfidence (OSCTXT* pctxt, ASN1T_ETSI_DSRC_HeadingConfidence value);

EXTERN int asn1PD_ETSI_DSRC_HeadingConfidence (OSCTXT* pctxt, ASN1T_ETSI_DSRC_HeadingConfidence* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_HeadingConfidence (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_HeadingConfidence value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_HeadingConfidence (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_HeadingConfidence* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_HeadingConfidence (OSCTXT *pctxt, ASN1T_ETSI_DSRC_HeadingConfidence *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_HeadingConfidence (OSCTXT *pctxt, ASN1T_ETSI_DSRC_HeadingConfidence *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_HeadingConfidence (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_HeadingConfidence* pvalue);

EXTERN ASN1T_ETSI_DSRC_HeadingConfidence* 
   new_ASN1T_ETSI_DSRC_HeadingConfidence (ASN1CType& ccobj);

EXTERN extern const OSEnumItem ASN1T_ETSI_DSRC_HeadingConfidence_ENUMTAB[];
#define ASN1T_ETSI_DSRC_HeadingConfidence_ENUMTABSIZE 8

EXTERN const OSUTF8CHAR* ASN1T_ETSI_DSRC_HeadingConfidence_ToString (OSINT32 value);

EXTERN int ASN1T_ETSI_DSRC_HeadingConfidence_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, ASN1T_ETSI_DSRC_HeadingConfidence* pvalue);

EXTERN int ASN1T_ETSI_DSRC_HeadingConfidence_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      ASN1T_ETSI_DSRC_HeadingConfidence* pvalue);

/**************************************************************/
/*                                                            */
/*  SpeedConfidence                                           */
/*                                                            */
/**************************************************************/
/*
SpeedConfidence ::= ENUMERATED { unavailable(0), prec100ms(1), prec10ms(2), prec5ms(3), prec1ms(4), prec0-1ms(5), prec0-05ms(6), prec0-01ms(7) }
*/
struct EXTERN ETSI_DSRC_SpeedConfidence {
   enum Root {
      unavailable = 0,
      prec100ms = 1,
      prec10ms = 2,
      prec5ms = 3,
      prec1ms = 4,
      prec0_1ms = 5,
      prec0_05ms = 6,
      prec0_01ms = 7
   } ;
} ;

typedef OSUINT32 ASN1T_ETSI_DSRC_SpeedConfidence;

EXTERN int asn1PE_ETSI_DSRC_SpeedConfidence (OSCTXT* pctxt, ASN1T_ETSI_DSRC_SpeedConfidence value);

EXTERN int asn1PD_ETSI_DSRC_SpeedConfidence (OSCTXT* pctxt, ASN1T_ETSI_DSRC_SpeedConfidence* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_SpeedConfidence (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_SpeedConfidence value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_SpeedConfidence (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_SpeedConfidence* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_SpeedConfidence (OSCTXT *pctxt, ASN1T_ETSI_DSRC_SpeedConfidence *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_SpeedConfidence (OSCTXT *pctxt, ASN1T_ETSI_DSRC_SpeedConfidence *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_SpeedConfidence (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_SpeedConfidence* pvalue);

EXTERN ASN1T_ETSI_DSRC_SpeedConfidence* 
   new_ASN1T_ETSI_DSRC_SpeedConfidence (ASN1CType& ccobj);

EXTERN extern const OSEnumItem ASN1T_ETSI_DSRC_SpeedConfidence_ENUMTAB[];
#define ASN1T_ETSI_DSRC_SpeedConfidence_ENUMTABSIZE 8

EXTERN const OSUTF8CHAR* ASN1T_ETSI_DSRC_SpeedConfidence_ToString (OSINT32 value);

EXTERN int ASN1T_ETSI_DSRC_SpeedConfidence_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, ASN1T_ETSI_DSRC_SpeedConfidence* pvalue);

EXTERN int ASN1T_ETSI_DSRC_SpeedConfidence_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      ASN1T_ETSI_DSRC_SpeedConfidence* pvalue);

/**************************************************************/
/*                                                            */
/*  ThrottleConfidence                                        */
/*                                                            */
/**************************************************************/
/*
ThrottleConfidence ::= ENUMERATED { unavailable(0), prec10percent(1), prec1percent(2), prec0-5percent(3) }
*/
struct EXTERN ETSI_DSRC_ThrottleConfidence {
   enum Root {
      unavailable = 0,
      prec10percent = 1,
      prec1percent = 2,
      prec0_5percent = 3
   } ;
} ;

typedef OSUINT32 ASN1T_ETSI_DSRC_ThrottleConfidence;

EXTERN int asn1PE_ETSI_DSRC_ThrottleConfidence (OSCTXT* pctxt, ASN1T_ETSI_DSRC_ThrottleConfidence value);

EXTERN int asn1PD_ETSI_DSRC_ThrottleConfidence (OSCTXT* pctxt, ASN1T_ETSI_DSRC_ThrottleConfidence* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_ThrottleConfidence (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_ThrottleConfidence value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_ThrottleConfidence (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_ThrottleConfidence* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_ThrottleConfidence (OSCTXT *pctxt, ASN1T_ETSI_DSRC_ThrottleConfidence *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_ThrottleConfidence (OSCTXT *pctxt, ASN1T_ETSI_DSRC_ThrottleConfidence *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_ThrottleConfidence (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_ThrottleConfidence* pvalue);

EXTERN ASN1T_ETSI_DSRC_ThrottleConfidence* 
   new_ASN1T_ETSI_DSRC_ThrottleConfidence (ASN1CType& ccobj);

EXTERN extern const OSEnumItem ASN1T_ETSI_DSRC_ThrottleConfidence_ENUMTAB[];
#define ASN1T_ETSI_DSRC_ThrottleConfidence_ENUMTABSIZE 4

EXTERN const OSUTF8CHAR* ASN1T_ETSI_DSRC_ThrottleConfidence_ToString (OSINT32 value);

EXTERN int ASN1T_ETSI_DSRC_ThrottleConfidence_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, ASN1T_ETSI_DSRC_ThrottleConfidence* pvalue);

EXTERN int ASN1T_ETSI_DSRC_ThrottleConfidence_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      ASN1T_ETSI_DSRC_ThrottleConfidence* pvalue);

/**************************************************************/
/*                                                            */
/*  SpeedandHeadingandThrottleConfidence                      */
/*                                                            */
/**************************************************************/
/*
SpeedandHeadingandThrottleConfidence ::= SEQUENCE {
   heading [0] HeadingConfidence,
   speed [1] SpeedConfidence,
   throttle [2] ThrottleConfidence
}
*/
struct EXTERN ASN1T_ETSI_DSRC_SpeedandHeadingandThrottleConfidence {
   ASN1T_ETSI_DSRC_HeadingConfidence heading;
   ASN1T_ETSI_DSRC_SpeedConfidence speed;
   ASN1T_ETSI_DSRC_ThrottleConfidence throttle;
} ;

EXTERN int asn1PE_ETSI_DSRC_SpeedandHeadingandThrottleConfidence (OSCTXT* pctxt, ASN1T_ETSI_DSRC_SpeedandHeadingandThrottleConfidence* pvalue);

EXTERN int asn1PD_ETSI_DSRC_SpeedandHeadingandThrottleConfidence (OSCTXT* pctxt, ASN1T_ETSI_DSRC_SpeedandHeadingandThrottleConfidence* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_SpeedandHeadingandThrottleConfidence 
   (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_SpeedandHeadingandThrottleConfidence* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_SpeedandHeadingandThrottleConfidence 
   (OSCTXT* pctxt, ASN1T_ETSI_DSRC_SpeedandHeadingandThrottleConfidence* pvalue
   );

EXTERN int asn1JsonEnc_ETSI_DSRC_SpeedandHeadingandThrottleConfidence (OSCTXT *pctxt, ASN1T_ETSI_DSRC_SpeedandHeadingandThrottleConfidence *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_SpeedandHeadingandThrottleConfidence (OSCTXT *pctxt, ASN1T_ETSI_DSRC_SpeedandHeadingandThrottleConfidence *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_SpeedandHeadingandThrottleConfidence (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_SpeedandHeadingandThrottleConfidence* pvalue);

EXTERN ASN1T_ETSI_DSRC_SpeedandHeadingandThrottleConfidence* 
   new_ASN1T_ETSI_DSRC_SpeedandHeadingandThrottleConfidence (ASN1CType& ccobj)
   ;

/**************************************************************/
/*                                                            */
/*  FullPositionVector                                        */
/*                                                            */
/**************************************************************/
/*
FullPositionVector ::= SEQUENCE {
   utcTime [0] DDateTime OPTIONAL, -- time with mSec precision
   long [1] Longitude,
   lat [2] Latitude,
   elevation [3] Elevation OPTIONAL,
   heading [4] Heading OPTIONAL,
   speed [5] TransmissionAndSpeed OPTIONAL,
   posAccuracy [6] PositionalAccuracy OPTIONAL,
   timeConfidence [7] TimeConfidence OPTIONAL,
   posConfidence [8] PositionConfidenceSet OPTIONAL,
   speedConfidence [9] SpeedandHeadingandThrottleConfidence OPTIONAL,
   ...
}
*/
struct EXTERN ASN1T_ETSI_DSRC_FullPositionVector {
   struct {
      unsigned utcTimePresent : 1;
      unsigned elevationPresent : 1;
      unsigned headingPresent : 1;
      unsigned speedPresent : 1;
      unsigned posAccuracyPresent : 1;
      unsigned timeConfidencePresent : 1;
      unsigned posConfidencePresent : 1;
      unsigned speedConfidencePresent : 1;
   } m;
   ASN1T_ETSI_DSRC_DDateTime utcTime;
   ASN1T_ITS_Longitude long_;
   ASN1T_ITS_Latitude lat;
   ASN1T_ETSI_DSRC_Elevation elevation;
   ASN1T_ETSI_DSRC_Heading heading;
   ASN1T_ETSI_DSRC_TransmissionAndSpeed speed;
   ASN1T_ETSI_DSRC_PositionalAccuracy posAccuracy;
   ASN1T_ETSI_DSRC_TimeConfidence timeConfidence;
   ASN1T_ETSI_DSRC_PositionConfidenceSet posConfidence;
   ASN1T_ETSI_DSRC_SpeedandHeadingandThrottleConfidence speedConfidence;
   ASN1TSeqExt extElem1;
   ASN1T_ETSI_DSRC_FullPositionVector ();
} ;

EXTERN int asn1PE_ETSI_DSRC_FullPositionVector (OSCTXT* pctxt, ASN1T_ETSI_DSRC_FullPositionVector* pvalue);

EXTERN int asn1PD_ETSI_DSRC_FullPositionVector (OSCTXT* pctxt, ASN1T_ETSI_DSRC_FullPositionVector* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_FullPositionVector (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_FullPositionVector* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_FullPositionVector (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_FullPositionVector* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_FullPositionVector (OSCTXT *pctxt, ASN1T_ETSI_DSRC_FullPositionVector *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_FullPositionVector (OSCTXT *pctxt, ASN1T_ETSI_DSRC_FullPositionVector *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_FullPositionVector (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_FullPositionVector* pvalue);

EXTERN ASN1T_ETSI_DSRC_FullPositionVector* 
   new_ASN1T_ETSI_DSRC_FullPositionVector (ASN1CType& ccobj);

EXTERN int asn1Init_ETSI_DSRC_FullPositionVector (
   ASN1T_ETSI_DSRC_FullPositionVector* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_FullPositionVector (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_FullPositionVector* pvalue);

/**************************************************************/
/*                                                            */
/*  GNSSstatus                                                */
/*                                                            */
/**************************************************************/
/*
GNSSstatus ::= BIT STRING  { unavailable(0), isHealthy(1), isMonitored(2), baseStationType(3), aPDOPofUnder5(4), inViewOfUnder5(5), localCorrectionsPresent(6), networkCorrectionsPresent(7) } (SIZE (8))
*/
struct EXTERN ASN1T_ETSI_DSRC_GNSSstatus {
   OSOCTET data[1];
   // ctors
   ASN1T_ETSI_DSRC_GNSSstatus ()  {}
   ASN1T_ETSI_DSRC_GNSSstatus (const OSOCTET* _data) {
      OSCRTLSAFEMEMCPY (data, 1, _data, 1);
   }
} ;

class EXTERN ASN1C_ETSI_DSRC_GNSSstatus :
public ASN1CBitStr
{
protected:
   ASN1T_ETSI_DSRC_GNSSstatus& msgData;
public:
   // named bits
   enum { unavailable = 0, isHealthy = 1, isMonitored = 2, baseStationType = 3, aPDOPofUnder5 = 4, inViewOfUnder5 = 5, localCorrectionsPresent = 6, networkCorrectionsPresent = 7 };

   /**
    * Control class: ASN1C_ETSI_DSRC_GNSSstatus
    * Data class:    ASN1T_ETSI_DSRC_GNSSstatus
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_GNSSstatus (ASN1T_ETSI_DSRC_GNSSstatus& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_GNSSstatus<br/>
    * Data class: ASN1T_ETSI_DSRC_GNSSstatus<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_GNSSstatus (OSRTMessageBufferIF& msgBuf
      , ASN1T_ETSI_DSRC_GNSSstatus& data);

   virtual ~ASN1C_ETSI_DSRC_GNSSstatus () {}

private:
   ASN1C_ETSI_DSRC_GNSSstatus& operator= (const ASN1C_ETSI_DSRC_GNSSstatus&) {return *this;}
} ;

EXTERN int asn1PE_ETSI_DSRC_GNSSstatus (OSCTXT* pctxt, ASN1T_ETSI_DSRC_GNSSstatus* pvalue);

EXTERN int asn1PD_ETSI_DSRC_GNSSstatus (OSCTXT* pctxt, ASN1T_ETSI_DSRC_GNSSstatus* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_GNSSstatus (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_GNSSstatus* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_GNSSstatus (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_GNSSstatus* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_GNSSstatus (OSCTXT *pctxt, ASN1T_ETSI_DSRC_GNSSstatus *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_GNSSstatus (OSCTXT *pctxt, ASN1T_ETSI_DSRC_GNSSstatus *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_GNSSstatus (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_GNSSstatus* pvalue);

extern EXTERN struct OSBitMapItem g_ASN1T_ETSI_DSRC_GNSSstatus_NAMEDBITTAB[9];

EXTERN ASN1T_ETSI_DSRC_GNSSstatus* 
   new_ASN1T_ETSI_DSRC_GNSSstatus (ASN1CType& ccobj);

EXTERN int asn1Init_ETSI_DSRC_GNSSstatus (ASN1T_ETSI_DSRC_GNSSstatus* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

/**************************************************************/
/*                                                            */
/*  Offset_B09                                                */
/*                                                            */
/**************************************************************/
/*
Offset-B09 ::= INTEGER (-256..255)
*/
typedef OSINT16 ASN1T_ETSI_DSRC_Offset_B09;

EXTERN int asn1PE_ETSI_DSRC_Offset_B09 (OSCTXT* pctxt, ASN1T_ETSI_DSRC_Offset_B09 value);

EXTERN int asn1PD_ETSI_DSRC_Offset_B09 (OSCTXT* pctxt, ASN1T_ETSI_DSRC_Offset_B09* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_Offset_B09 (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_Offset_B09 value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_Offset_B09 (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_Offset_B09* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_Offset_B09 (OSCTXT *pctxt, ASN1T_ETSI_DSRC_Offset_B09 *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_Offset_B09 (OSCTXT *pctxt, ASN1T_ETSI_DSRC_Offset_B09 *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_Offset_B09 (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_Offset_B09* pvalue);

EXTERN ASN1T_ETSI_DSRC_Offset_B09* 
   new_ASN1T_ETSI_DSRC_Offset_B09 (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  AntennaOffsetSet                                          */
/*                                                            */
/**************************************************************/
/*
AntennaOffsetSet ::= SEQUENCE {
   antOffsetX [0] Offset-B12,
   antOffsetY [1] Offset-B09,
   antOffsetZ [2] Offset-B10
}
*/
struct EXTERN ASN1T_ETSI_DSRC_AntennaOffsetSet {
   ASN1T_ETSI_DSRC_Offset_B12 antOffsetX;
   ASN1T_ETSI_DSRC_Offset_B09 antOffsetY;
   ASN1T_ETSI_DSRC_Offset_B10 antOffsetZ;
} ;

EXTERN int asn1PE_ETSI_DSRC_AntennaOffsetSet (OSCTXT* pctxt, ASN1T_ETSI_DSRC_AntennaOffsetSet* pvalue);

EXTERN int asn1PD_ETSI_DSRC_AntennaOffsetSet (OSCTXT* pctxt, ASN1T_ETSI_DSRC_AntennaOffsetSet* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_AntennaOffsetSet (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_AntennaOffsetSet* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_AntennaOffsetSet (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_AntennaOffsetSet* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_AntennaOffsetSet (OSCTXT *pctxt, ASN1T_ETSI_DSRC_AntennaOffsetSet *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_AntennaOffsetSet (OSCTXT *pctxt, ASN1T_ETSI_DSRC_AntennaOffsetSet *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_AntennaOffsetSet (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_AntennaOffsetSet* pvalue);

EXTERN ASN1T_ETSI_DSRC_AntennaOffsetSet* 
   new_ASN1T_ETSI_DSRC_AntennaOffsetSet (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  RTCMheader                                                */
/*                                                            */
/**************************************************************/
/*
RTCMheader ::= SEQUENCE {
   status [0] GNSSstatus,
   offsetSet [1] AntennaOffsetSet
}
*/
struct EXTERN ASN1T_ETSI_DSRC_RTCMheader {
   ASN1T_ETSI_DSRC_GNSSstatus status;
   ASN1T_ETSI_DSRC_AntennaOffsetSet offsetSet;
} ;

EXTERN int asn1PE_ETSI_DSRC_RTCMheader (OSCTXT* pctxt, ASN1T_ETSI_DSRC_RTCMheader* pvalue);

EXTERN int asn1PD_ETSI_DSRC_RTCMheader (OSCTXT* pctxt, ASN1T_ETSI_DSRC_RTCMheader* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_RTCMheader (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_RTCMheader* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_RTCMheader (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_RTCMheader* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_RTCMheader (OSCTXT *pctxt, ASN1T_ETSI_DSRC_RTCMheader *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_RTCMheader (OSCTXT *pctxt, ASN1T_ETSI_DSRC_RTCMheader *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_RTCMheader (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_RTCMheader* pvalue);

EXTERN ASN1T_ETSI_DSRC_RTCMheader* 
   new_ASN1T_ETSI_DSRC_RTCMheader (ASN1CType& ccobj);

EXTERN int asn1Init_ETSI_DSRC_RTCMheader (ASN1T_ETSI_DSRC_RTCMheader* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

/**************************************************************/
/*                                                            */
/*  RTCMmessage                                               */
/*                                                            */
/**************************************************************/
/*
RTCMmessage ::= OCTET STRING (SIZE (1..1023))
*/
struct EXTERN ASN1T_ETSI_DSRC_RTCMmessage {
   OSUINT16 numocts;
   OSOCTET data[1023];
   // ctors
   ASN1T_ETSI_DSRC_RTCMmessage () : numocts(0) {}
   ASN1T_ETSI_DSRC_RTCMmessage (OSUINT16 _numocts, const OSOCTET* _data) :
      numocts (_numocts) {
      OSCRTLSAFEMEMCPY (data, sizeof(data), _data, numocts);
   }
   ASN1T_ETSI_DSRC_RTCMmessage (const char* cstring) {
      if (!OS_ISEMPTY (cstring)) {
         numocts = (OSUINT16)(OSRTMIN ((OSCRTLSTRLEN(cstring)+1), sizeof(data)));
         OSCRTLSAFEMEMCPY (data, numocts, cstring, numocts);
      }
      else numocts = 0;
   }
   // assignment operators
   ASN1T_ETSI_DSRC_RTCMmessage& operator= (const char* cstring) {
      if (!OS_ISEMPTY (cstring)) {
         numocts = (OSUINT16)(OSRTMIN ((OSCRTLSTRLEN(cstring)+1), sizeof(data)));
         OSCRTLSAFEMEMCPY (data, numocts, cstring, numocts);
      }
      else numocts = 0;
      return *this;
   }
} ;

EXTERN int asn1PE_ETSI_DSRC_RTCMmessage (OSCTXT* pctxt, ASN1T_ETSI_DSRC_RTCMmessage* pvalue);

EXTERN int asn1PD_ETSI_DSRC_RTCMmessage (OSCTXT* pctxt, ASN1T_ETSI_DSRC_RTCMmessage* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_RTCMmessage (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_RTCMmessage* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_RTCMmessage (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_RTCMmessage* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_RTCMmessage (OSCTXT *pctxt, ASN1T_ETSI_DSRC_RTCMmessage *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_RTCMmessage (OSCTXT *pctxt, ASN1T_ETSI_DSRC_RTCMmessage *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_RTCMmessage (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_RTCMmessage* pvalue);

EXTERN ASN1T_ETSI_DSRC_RTCMmessage* 
   new_ASN1T_ETSI_DSRC_RTCMmessage (ASN1CType& ccobj);

EXTERN int asn1Init_ETSI_DSRC_RTCMmessage (ASN1T_ETSI_DSRC_RTCMmessage* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

/**************************************************************/
/*                                                            */
/*  RTCMmessageList                                           */
/*                                                            */
/**************************************************************/
/*
RTCMmessageList ::= SEQUENCE (SIZE (1..5)) OF RTCMmessage
*/
typedef struct EXTERN ASN1T_ETSI_DSRC_RTCMmessageList {
   OSUINT8 n;
   ASN1T_ETSI_DSRC_RTCMmessage elem[5];
   ASN1T_ETSI_DSRC_RTCMmessageList () : n(0) {}
} ASN1T_ETSI_DSRC_RTCMmessageList;

class EXTERN ASN1C_ETSI_DSRC_RTCMmessageList :
public ASN1CType
{
protected:
   ASN1T_ETSI_DSRC_RTCMmessageList& msgData;
public:
   /**
    * Control class: ASN1C_ETSI_DSRC_RTCMmessageList
    * Data class:    ASN1T_ETSI_DSRC_RTCMmessageList
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_RTCMmessageList (ASN1T_ETSI_DSRC_RTCMmessageList& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_RTCMmessageList<br/>
    * Data class: ASN1T_ETSI_DSRC_RTCMmessageList<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_RTCMmessageList (OSRTMessageBufferIF& msgBuf
      , ASN1T_ETSI_DSRC_RTCMmessageList& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_RTCMmessageList<br/>
    * Data class: ASN1T_ETSI_DSRC_RTCMmessageList<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_ETSI_DSRC_RTCMmessageList (ASN1CType& ccobj
      , ASN1T_ETSI_DSRC_RTCMmessageList& data);

   virtual ~ASN1C_ETSI_DSRC_RTCMmessageList () {}

private:
   ASN1C_ETSI_DSRC_RTCMmessageList& operator= (const ASN1C_ETSI_DSRC_RTCMmessageList&) {return *this;}
} ;

EXTERN int asn1PE_ETSI_DSRC_RTCMmessageList (OSCTXT* pctxt, ASN1T_ETSI_DSRC_RTCMmessageList* pvalue);

EXTERN int asn1PD_ETSI_DSRC_RTCMmessageList (OSCTXT* pctxt, ASN1T_ETSI_DSRC_RTCMmessageList* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_RTCMmessageList (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_RTCMmessageList* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_RTCMmessageList (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_RTCMmessageList* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_RTCMmessageList (OSCTXT *pctxt, ASN1T_ETSI_DSRC_RTCMmessageList *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_RTCMmessageList (OSCTXT *pctxt, ASN1T_ETSI_DSRC_RTCMmessageList *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_RTCMmessageList (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_RTCMmessageList* pvalue);

EXTERN int asn1Init_ETSI_DSRC_RTCMmessageList (
   ASN1T_ETSI_DSRC_RTCMmessageList* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

/**************************************************************/
/*                                                            */
/*  RTCMcorrections_regional_element                          */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'RTCMcorrections'
*/
struct EXTERN ASN1T_ETSI_DSRC_RTCMcorrections_regional_element {
   ASN1T_ETSI_DSRC_RegionId regionId;
   ASN1TOpenType regExtValue;
} ;

EXTERN int asn1PE_ETSI_DSRC_RTCMcorrections_regional_element (OSCTXT* pctxt, ASN1T_ETSI_DSRC_RTCMcorrections_regional_element* pvalue);

EXTERN int asn1PD_ETSI_DSRC_RTCMcorrections_regional_element (OSCTXT* pctxt, ASN1T_ETSI_DSRC_RTCMcorrections_regional_element* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_RTCMcorrections_regional_element (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_RTCMcorrections_regional_element* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_RTCMcorrections_regional_element (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_RTCMcorrections_regional_element* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_RTCMcorrections_regional_element (OSCTXT *pctxt, ASN1T_ETSI_DSRC_RTCMcorrections_regional_element *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_RTCMcorrections_regional_element (OSCTXT *pctxt, ASN1T_ETSI_DSRC_RTCMcorrections_regional_element *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_RTCMcorrections_regional_element (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_RTCMcorrections_regional_element* pvalue);

EXTERN ASN1T_ETSI_DSRC_RTCMcorrections_regional_element* 
   new_ASN1T_ETSI_DSRC_RTCMcorrections_regional_element (ASN1CType& ccobj);

EXTERN int asn1Init_ETSI_DSRC_RTCMcorrections_regional_element (
   ASN1T_ETSI_DSRC_RTCMcorrections_regional_element* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_RTCMcorrections_regional_element (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_RTCMcorrections_regional_element* pvalue);

/**************************************************************/
/*                                                            */
/*  RTCMcorrections_regional                                  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'RTCMcorrections'
*/
/* List of ASN1T_ETSI_DSRC_RTCMcorrections_regional_element */
typedef ASN1TSeqOfList ASN1T_ETSI_DSRC_RTCMcorrections_regional;

class EXTERN ASN1C_ETSI_DSRC_RTCMcorrections_regional :
public ASN1CSeqOfList
{
protected:
   ASN1T_ETSI_DSRC_RTCMcorrections_regional& msgData;
public:
   /**
    * Control class: ASN1C_ETSI_DSRC_RTCMcorrections_regional
    * Data class:    ASN1T_ETSI_DSRC_RTCMcorrections_regional
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_RTCMcorrections_regional
       (ASN1T_ETSI_DSRC_RTCMcorrections_regional& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_RTCMcorrections_regional<br/>
    * Data class: ASN1T_ETSI_DSRC_RTCMcorrections_regional<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_RTCMcorrections_regional (OSRTMessageBufferIF& msgBuf
      , ASN1T_ETSI_DSRC_RTCMcorrections_regional& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_RTCMcorrections_regional<br/>
    * Data class: ASN1T_ETSI_DSRC_RTCMcorrections_regional<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_ETSI_DSRC_RTCMcorrections_regional (ASN1CType& ccobj
      , ASN1T_ETSI_DSRC_RTCMcorrections_regional& data);

   virtual ~ASN1C_ETSI_DSRC_RTCMcorrections_regional () {}

   /**
    * Data class: ASN1T_ETSI_DSRC_RTCMcorrections_regional_element<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_ETSI_DSRC_RTCMcorrections_regional_element* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_ETSI_DSRC_RTCMcorrections_regional_element.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_ETSI_DSRC_RTCMcorrections_regional_element* NewElement ();

   /**
    * Data class: ASN1T_ETSI_DSRC_RTCMcorrections_regional_element.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_ETSI_DSRC_RTCMcorrections_regional_element* AppendNewElement ();

   /* Get IE using regionId key value */
   ASN1T_ETSI_DSRC_RTCMcorrections_regional_element* 
      GetIE (ASN1T_ETSI_DSRC_RegionId regionId);

   /* Get all matching IEs using regionId key value */
   int GetAllIEs (ASN1T_ETSI_DSRC_RegionId regionId, 
      ASN1T_ETSI_DSRC_RTCMcorrections_regional* pmatches);

private:
   ASN1C_ETSI_DSRC_RTCMcorrections_regional& operator= (const ASN1C_ETSI_DSRC_RTCMcorrections_regional&) {return *this;}
} ;

EXTERN int asn1PE_ETSI_DSRC_RTCMcorrections_regional (OSCTXT* pctxt, ASN1T_ETSI_DSRC_RTCMcorrections_regional* pvalue);

EXTERN int asn1PD_ETSI_DSRC_RTCMcorrections_regional (OSCTXT* pctxt, ASN1T_ETSI_DSRC_RTCMcorrections_regional* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_RTCMcorrections_regional (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_RTCMcorrections_regional* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_RTCMcorrections_regional (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_RTCMcorrections_regional* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_RTCMcorrections_regional (OSCTXT *pctxt, ASN1T_ETSI_DSRC_RTCMcorrections_regional *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_RTCMcorrections_regional (OSCTXT *pctxt, ASN1T_ETSI_DSRC_RTCMcorrections_regional *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_RTCMcorrections_regional (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_RTCMcorrections_regional* pvalue);

EXTERN int asn1Init_ETSI_DSRC_RTCMcorrections_regional (
   ASN1T_ETSI_DSRC_RTCMcorrections_regional* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_RTCMcorrections_regional (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_RTCMcorrections_regional* pvalue);

/**************************************************************/
/*                                                            */
/*  RTCMcorrections                                           */
/*                                                            */
/**************************************************************/
/*
RTCMcorrections ::= SEQUENCE {
   msgCnt [0] MsgCount,
   rev [1] RTCM-Revision,
   timeStamp [2] MinuteOfTheYear OPTIONAL,
   anchorPoint [3] FullPositionVector OPTIONAL,
   rtcmHeader [4] RTCMheader OPTIONAL,
   msgs [5] RTCMmessageList,
   regional [6] SEQUENCE (SIZE (1..4)) OF SEQUENCE {
      regionId [0] REG-EXT-ID-AND-TYPE.&id ({Reg-RTCMcorrections}),
      regExtValue [1] EXPLICIT REG-EXT-ID-AND-TYPE.&Type ({Reg-RTCMcorrections}{@regionId})
   } OPTIONAL,
   ...
}
*/
struct EXTERN ASN1T_ETSI_DSRC_RTCMcorrections {
   struct {
      unsigned timeStampPresent : 1;
      unsigned anchorPointPresent : 1;
      unsigned rtcmHeaderPresent : 1;
      unsigned regionalPresent : 1;
   } m;
   ASN1T_ETSI_DSRC_MsgCount msgCnt;
   ASN1T_ETSI_DSRC_RTCM_Revision rev;
   ASN1T_ETSI_DSRC_MinuteOfTheYear timeStamp;
   ASN1T_ETSI_DSRC_FullPositionVector anchorPoint;
   ASN1T_ETSI_DSRC_RTCMheader rtcmHeader;
   ASN1T_ETSI_DSRC_RTCMmessageList msgs;
   ASN1T_ETSI_DSRC_RTCMcorrections_regional regional;
   ASN1TSeqExt extElem1;
   ASN1T_ETSI_DSRC_RTCMcorrections ();
} ;

EXTERN int asn1PE_ETSI_DSRC_RTCMcorrections (OSCTXT* pctxt, ASN1T_ETSI_DSRC_RTCMcorrections* pvalue);

EXTERN int asn1PD_ETSI_DSRC_RTCMcorrections (OSCTXT* pctxt, ASN1T_ETSI_DSRC_RTCMcorrections* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_RTCMcorrections (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_RTCMcorrections* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_RTCMcorrections (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_RTCMcorrections* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_RTCMcorrections (OSCTXT *pctxt, ASN1T_ETSI_DSRC_RTCMcorrections *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_RTCMcorrections (OSCTXT *pctxt, ASN1T_ETSI_DSRC_RTCMcorrections *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_RTCMcorrections (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_RTCMcorrections* pvalue);

EXTERN ASN1T_ETSI_DSRC_RTCMcorrections* 
   new_ASN1T_ETSI_DSRC_RTCMcorrections (ASN1CType& ccobj);

EXTERN int asn1Init_ETSI_DSRC_RTCMcorrections (
   ASN1T_ETSI_DSRC_RTCMcorrections* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_RTCMcorrections (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_RTCMcorrections* pvalue);

/**************************************************************/
/*                                                            */
/*  IntersectionStatusObject                                  */
/*                                                            */
/**************************************************************/
/*
IntersectionStatusObject ::= BIT STRING  { manualControlIsEnabled(0), stopTimeIsActivated(1), failureFlash(2), preemptIsActive(3), signalPriorityIsActive(4), fixedTimeOperation(5), trafficDependentOperation(6), standbyOperation(7), failureMode(8), off(9), recentMAPmessageUpdate(10), recentChangeInMAPassignedLanesIDsUsed(11), noValidMAPisAvailableAtThisTime(12), noValidSPATisAvailableAtThisTime(13) } (SIZE (16))
*/
struct EXTERN ASN1T_ETSI_DSRC_IntersectionStatusObject {
   OSOCTET data[2];
   // ctors
   ASN1T_ETSI_DSRC_IntersectionStatusObject ()  {}
   ASN1T_ETSI_DSRC_IntersectionStatusObject (const OSOCTET* _data) {
      OSCRTLSAFEMEMCPY (data, 2, _data, 2);
   }
} ;

class EXTERN ASN1C_ETSI_DSRC_IntersectionStatusObject :
public ASN1CBitStr
{
protected:
   ASN1T_ETSI_DSRC_IntersectionStatusObject& msgData;
public:
   // named bits
   enum { manualControlIsEnabled = 0, stopTimeIsActivated = 1, failureFlash = 2, preemptIsActive = 3, signalPriorityIsActive = 4, fixedTimeOperation = 5, trafficDependentOperation = 6, standbyOperation = 7, failureMode = 8, off = 9, recentMAPmessageUpdate = 10, recentChangeInMAPassignedLanesIDsUsed = 11, noValidMAPisAvailableAtThisTime = 12, noValidSPATisAvailableAtThisTime = 13 };

   /**
    * Control class: ASN1C_ETSI_DSRC_IntersectionStatusObject
    * Data class:    ASN1T_ETSI_DSRC_IntersectionStatusObject
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_IntersectionStatusObject
       (ASN1T_ETSI_DSRC_IntersectionStatusObject& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_IntersectionStatusObject<br/>
    * Data class: ASN1T_ETSI_DSRC_IntersectionStatusObject<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_IntersectionStatusObject (OSRTMessageBufferIF& msgBuf
      , ASN1T_ETSI_DSRC_IntersectionStatusObject& data);

   virtual ~ASN1C_ETSI_DSRC_IntersectionStatusObject () {}

private:
   ASN1C_ETSI_DSRC_IntersectionStatusObject& operator= (const ASN1C_ETSI_DSRC_IntersectionStatusObject&) {return *this;}
} ;

EXTERN int asn1PE_ETSI_DSRC_IntersectionStatusObject (OSCTXT* pctxt, ASN1T_ETSI_DSRC_IntersectionStatusObject* pvalue);

EXTERN int asn1PD_ETSI_DSRC_IntersectionStatusObject (OSCTXT* pctxt, ASN1T_ETSI_DSRC_IntersectionStatusObject* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_IntersectionStatusObject (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_IntersectionStatusObject* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_IntersectionStatusObject (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_IntersectionStatusObject* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_IntersectionStatusObject (OSCTXT *pctxt, ASN1T_ETSI_DSRC_IntersectionStatusObject *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_IntersectionStatusObject (OSCTXT *pctxt, ASN1T_ETSI_DSRC_IntersectionStatusObject *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_IntersectionStatusObject (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_IntersectionStatusObject* pvalue);

extern EXTERN struct OSBitMapItem g_ASN1T_ETSI_DSRC_IntersectionStatusObject_NAMEDBITTAB[15];

EXTERN ASN1T_ETSI_DSRC_IntersectionStatusObject* 
   new_ASN1T_ETSI_DSRC_IntersectionStatusObject (ASN1CType& ccobj);

EXTERN int asn1Init_ETSI_DSRC_IntersectionStatusObject (
   ASN1T_ETSI_DSRC_IntersectionStatusObject* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

/**************************************************************/
/*                                                            */
/*  EnabledLaneList                                           */
/*                                                            */
/**************************************************************/
/*
EnabledLaneList ::= SEQUENCE (SIZE (1..16)) OF LaneID
*/
typedef struct EXTERN ASN1T_ETSI_DSRC_EnabledLaneList {
   OSUINT8 n;
   ASN1T_ETSI_DSRC_LaneID elem[16];
   ASN1T_ETSI_DSRC_EnabledLaneList () : n(0) {}
} ASN1T_ETSI_DSRC_EnabledLaneList;

class EXTERN ASN1C_ETSI_DSRC_EnabledLaneList :
public ASN1CType
{
protected:
   ASN1T_ETSI_DSRC_EnabledLaneList& msgData;
public:
   /**
    * Control class: ASN1C_ETSI_DSRC_EnabledLaneList
    * Data class:    ASN1T_ETSI_DSRC_EnabledLaneList
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_EnabledLaneList (ASN1T_ETSI_DSRC_EnabledLaneList& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_EnabledLaneList<br/>
    * Data class: ASN1T_ETSI_DSRC_EnabledLaneList<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_EnabledLaneList (OSRTMessageBufferIF& msgBuf
      , ASN1T_ETSI_DSRC_EnabledLaneList& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_EnabledLaneList<br/>
    * Data class: ASN1T_ETSI_DSRC_EnabledLaneList<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_ETSI_DSRC_EnabledLaneList (ASN1CType& ccobj
      , ASN1T_ETSI_DSRC_EnabledLaneList& data);

   virtual ~ASN1C_ETSI_DSRC_EnabledLaneList () {}

private:
   ASN1C_ETSI_DSRC_EnabledLaneList& operator= (const ASN1C_ETSI_DSRC_EnabledLaneList&) {return *this;}
} ;

EXTERN int asn1PE_ETSI_DSRC_EnabledLaneList (OSCTXT* pctxt, ASN1T_ETSI_DSRC_EnabledLaneList* pvalue);

EXTERN int asn1PD_ETSI_DSRC_EnabledLaneList (OSCTXT* pctxt, ASN1T_ETSI_DSRC_EnabledLaneList* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_EnabledLaneList (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_EnabledLaneList* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_EnabledLaneList (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_EnabledLaneList* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_EnabledLaneList (OSCTXT *pctxt, ASN1T_ETSI_DSRC_EnabledLaneList *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_EnabledLaneList (OSCTXT *pctxt, ASN1T_ETSI_DSRC_EnabledLaneList *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_EnabledLaneList (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_EnabledLaneList* pvalue);

EXTERN int asn1Init_ETSI_DSRC_EnabledLaneList (
   ASN1T_ETSI_DSRC_EnabledLaneList* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

/**************************************************************/
/*                                                            */
/*  MovementPhaseState                                        */
/*                                                            */
/**************************************************************/
/*
MovementPhaseState ::= ENUMERATED { unavailable(0), dark(1), stop-Then-Proceed(2), stop-And-Remain(3), pre-Movement(4), permissive-Movement-Allowed(5), protected-Movement-Allowed(6), permissive-clearance(7), protected-clearance(8), caution-Conflicting-Traffic(9) }
*/
struct EXTERN ETSI_DSRC_MovementPhaseState {
   enum Root {
      unavailable = 0,
      dark = 1,
      stop_Then_Proceed = 2,
      stop_And_Remain = 3,
      pre_Movement = 4,
      permissive_Movement_Allowed = 5,
      protected_Movement_Allowed = 6,
      permissive_clearance = 7,
      protected_clearance = 8,
      caution_Conflicting_Traffic = 9
   } ;
} ;

typedef OSUINT32 ASN1T_ETSI_DSRC_MovementPhaseState;

EXTERN int asn1PE_ETSI_DSRC_MovementPhaseState (OSCTXT* pctxt, ASN1T_ETSI_DSRC_MovementPhaseState value);

EXTERN int asn1PD_ETSI_DSRC_MovementPhaseState (OSCTXT* pctxt, ASN1T_ETSI_DSRC_MovementPhaseState* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_MovementPhaseState (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_MovementPhaseState value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_MovementPhaseState (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_MovementPhaseState* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_MovementPhaseState (OSCTXT *pctxt, ASN1T_ETSI_DSRC_MovementPhaseState *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_MovementPhaseState (OSCTXT *pctxt, ASN1T_ETSI_DSRC_MovementPhaseState *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_MovementPhaseState (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_MovementPhaseState* pvalue);

EXTERN ASN1T_ETSI_DSRC_MovementPhaseState* 
   new_ASN1T_ETSI_DSRC_MovementPhaseState (ASN1CType& ccobj);

EXTERN extern const OSEnumItem ASN1T_ETSI_DSRC_MovementPhaseState_ENUMTAB[];
#define ASN1T_ETSI_DSRC_MovementPhaseState_ENUMTABSIZE 10

EXTERN const OSUTF8CHAR* ASN1T_ETSI_DSRC_MovementPhaseState_ToString (OSINT32 value);

EXTERN int ASN1T_ETSI_DSRC_MovementPhaseState_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, ASN1T_ETSI_DSRC_MovementPhaseState* pvalue);

EXTERN int ASN1T_ETSI_DSRC_MovementPhaseState_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      ASN1T_ETSI_DSRC_MovementPhaseState* pvalue);

/**************************************************************/
/*                                                            */
/*  TimeMark                                                  */
/*                                                            */
/**************************************************************/
/*
TimeMark ::= INTEGER (0..36001)
*/
typedef OSUINT16 ASN1T_ETSI_DSRC_TimeMark;

EXTERN int asn1PE_ETSI_DSRC_TimeMark (OSCTXT* pctxt, ASN1T_ETSI_DSRC_TimeMark value);

EXTERN int asn1PD_ETSI_DSRC_TimeMark (OSCTXT* pctxt, ASN1T_ETSI_DSRC_TimeMark* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_TimeMark (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_TimeMark value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_TimeMark (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_TimeMark* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_TimeMark (OSCTXT *pctxt, ASN1T_ETSI_DSRC_TimeMark *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_TimeMark (OSCTXT *pctxt, ASN1T_ETSI_DSRC_TimeMark *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_TimeMark (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_TimeMark* pvalue);

EXTERN ASN1T_ETSI_DSRC_TimeMark* 
   new_ASN1T_ETSI_DSRC_TimeMark (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  TimeIntervalConfidence                                    */
/*                                                            */
/**************************************************************/
/*
TimeIntervalConfidence ::= INTEGER (0..15)
*/
typedef OSUINT8 ASN1T_ETSI_DSRC_TimeIntervalConfidence;

EXTERN int asn1PE_ETSI_DSRC_TimeIntervalConfidence (OSCTXT* pctxt, ASN1T_ETSI_DSRC_TimeIntervalConfidence value);

EXTERN int asn1PD_ETSI_DSRC_TimeIntervalConfidence (OSCTXT* pctxt, ASN1T_ETSI_DSRC_TimeIntervalConfidence* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_TimeIntervalConfidence (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_TimeIntervalConfidence value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_TimeIntervalConfidence (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_TimeIntervalConfidence* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_TimeIntervalConfidence (OSCTXT *pctxt, ASN1T_ETSI_DSRC_TimeIntervalConfidence *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_TimeIntervalConfidence (OSCTXT *pctxt, ASN1T_ETSI_DSRC_TimeIntervalConfidence *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_TimeIntervalConfidence (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_TimeIntervalConfidence* pvalue);

EXTERN ASN1T_ETSI_DSRC_TimeIntervalConfidence* 
   new_ASN1T_ETSI_DSRC_TimeIntervalConfidence (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  TimeChangeDetails                                         */
/*                                                            */
/**************************************************************/
/*
TimeChangeDetails ::= SEQUENCE {
   startTime [0] TimeMark OPTIONAL,
   minEndTime [1] TimeMark,
   maxEndTime [2] TimeMark OPTIONAL,
   likelyTime [3] TimeMark OPTIONAL,
   confidence [4] TimeIntervalConfidence OPTIONAL,
   nextTime [5] TimeMark OPTIONAL
}
*/
struct EXTERN ASN1T_ETSI_DSRC_TimeChangeDetails {
   struct {
      unsigned startTimePresent : 1;
      unsigned maxEndTimePresent : 1;
      unsigned likelyTimePresent : 1;
      unsigned confidencePresent : 1;
      unsigned nextTimePresent : 1;
   } m;
   ASN1T_ETSI_DSRC_TimeMark startTime;
   ASN1T_ETSI_DSRC_TimeMark minEndTime;
   ASN1T_ETSI_DSRC_TimeMark maxEndTime;
   ASN1T_ETSI_DSRC_TimeMark likelyTime;
   ASN1T_ETSI_DSRC_TimeIntervalConfidence confidence;
   ASN1T_ETSI_DSRC_TimeMark nextTime;
   ASN1T_ETSI_DSRC_TimeChangeDetails ();
} ;

EXTERN int asn1PE_ETSI_DSRC_TimeChangeDetails (OSCTXT* pctxt, ASN1T_ETSI_DSRC_TimeChangeDetails* pvalue);

EXTERN int asn1PD_ETSI_DSRC_TimeChangeDetails (OSCTXT* pctxt, ASN1T_ETSI_DSRC_TimeChangeDetails* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_TimeChangeDetails (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_TimeChangeDetails* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_TimeChangeDetails (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_TimeChangeDetails* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_TimeChangeDetails (OSCTXT *pctxt, ASN1T_ETSI_DSRC_TimeChangeDetails *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_TimeChangeDetails (OSCTXT *pctxt, ASN1T_ETSI_DSRC_TimeChangeDetails *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_TimeChangeDetails (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_TimeChangeDetails* pvalue);

EXTERN ASN1T_ETSI_DSRC_TimeChangeDetails* 
   new_ASN1T_ETSI_DSRC_TimeChangeDetails (ASN1CType& ccobj);

EXTERN int asn1Init_ETSI_DSRC_TimeChangeDetails (
   ASN1T_ETSI_DSRC_TimeChangeDetails* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

/**************************************************************/
/*                                                            */
/*  AdvisorySpeedType                                         */
/*                                                            */
/**************************************************************/
/*
 -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_
 data elements
 -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_
AdvisorySpeedType ::= ENUMERATED { none(0), greenwave(1), ecoDrive(2), transit(3), ... }
*/
struct EXTERN ETSI_DSRC_AdvisorySpeedType {
   enum Root {
      none = 0,
      greenwave = 1,
      ecoDrive = 2,
      transit = 3
   } ;
} ;

typedef OSUINT32 ASN1T_ETSI_DSRC_AdvisorySpeedType;

EXTERN int asn1PE_ETSI_DSRC_AdvisorySpeedType (OSCTXT* pctxt, ASN1T_ETSI_DSRC_AdvisorySpeedType value);

EXTERN int asn1PD_ETSI_DSRC_AdvisorySpeedType (OSCTXT* pctxt, ASN1T_ETSI_DSRC_AdvisorySpeedType* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_AdvisorySpeedType (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_AdvisorySpeedType value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_AdvisorySpeedType (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_AdvisorySpeedType* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_AdvisorySpeedType (OSCTXT *pctxt, ASN1T_ETSI_DSRC_AdvisorySpeedType *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_AdvisorySpeedType (OSCTXT *pctxt, ASN1T_ETSI_DSRC_AdvisorySpeedType *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_AdvisorySpeedType (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_AdvisorySpeedType* pvalue);

EXTERN ASN1T_ETSI_DSRC_AdvisorySpeedType* 
   new_ASN1T_ETSI_DSRC_AdvisorySpeedType (ASN1CType& ccobj);

EXTERN extern const OSEnumItem ASN1T_ETSI_DSRC_AdvisorySpeedType_ENUMTAB[];
#define ASN1T_ETSI_DSRC_AdvisorySpeedType_ENUMTABSIZE 4

EXTERN const OSUTF8CHAR* ASN1T_ETSI_DSRC_AdvisorySpeedType_ToString (OSINT32 value);

EXTERN int ASN1T_ETSI_DSRC_AdvisorySpeedType_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, ASN1T_ETSI_DSRC_AdvisorySpeedType* pvalue);

EXTERN int ASN1T_ETSI_DSRC_AdvisorySpeedType_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      ASN1T_ETSI_DSRC_AdvisorySpeedType* pvalue);

/**************************************************************/
/*                                                            */
/*  SpeedAdvice                                               */
/*                                                            */
/**************************************************************/
/*
SpeedAdvice ::= INTEGER (0..500)
*/
typedef OSUINT16 ASN1T_ETSI_DSRC_SpeedAdvice;

EXTERN int asn1PE_ETSI_DSRC_SpeedAdvice (OSCTXT* pctxt, ASN1T_ETSI_DSRC_SpeedAdvice value);

EXTERN int asn1PD_ETSI_DSRC_SpeedAdvice (OSCTXT* pctxt, ASN1T_ETSI_DSRC_SpeedAdvice* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_SpeedAdvice (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_SpeedAdvice value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_SpeedAdvice (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_SpeedAdvice* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_SpeedAdvice (OSCTXT *pctxt, ASN1T_ETSI_DSRC_SpeedAdvice *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_SpeedAdvice (OSCTXT *pctxt, ASN1T_ETSI_DSRC_SpeedAdvice *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_SpeedAdvice (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_SpeedAdvice* pvalue);

EXTERN ASN1T_ETSI_DSRC_SpeedAdvice* 
   new_ASN1T_ETSI_DSRC_SpeedAdvice (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  ZoneLength                                                */
/*                                                            */
/**************************************************************/
/*
ZoneLength ::= INTEGER (0..10000)
*/
typedef OSUINT16 ASN1T_ETSI_DSRC_ZoneLength;

EXTERN int asn1PE_ETSI_DSRC_ZoneLength (OSCTXT* pctxt, ASN1T_ETSI_DSRC_ZoneLength value);

EXTERN int asn1PD_ETSI_DSRC_ZoneLength (OSCTXT* pctxt, ASN1T_ETSI_DSRC_ZoneLength* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_ZoneLength (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_ZoneLength value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_ZoneLength (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_ZoneLength* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_ZoneLength (OSCTXT *pctxt, ASN1T_ETSI_DSRC_ZoneLength *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_ZoneLength (OSCTXT *pctxt, ASN1T_ETSI_DSRC_ZoneLength *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_ZoneLength (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_ZoneLength* pvalue);

EXTERN ASN1T_ETSI_DSRC_ZoneLength* 
   new_ASN1T_ETSI_DSRC_ZoneLength (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  AdvisorySpeed_regional_element                            */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'AdvisorySpeed'
*/
struct EXTERN ASN1T_ETSI_DSRC_AdvisorySpeed_regional_element {
   ASN1T_ETSI_DSRC_RegionId regionId;
   ASN1TOpenType regExtValue;
} ;

EXTERN int asn1PE_ETSI_DSRC_AdvisorySpeed_regional_element (OSCTXT* pctxt, ASN1T_ETSI_DSRC_AdvisorySpeed_regional_element* pvalue);

EXTERN int asn1PD_ETSI_DSRC_AdvisorySpeed_regional_element (OSCTXT* pctxt, ASN1T_ETSI_DSRC_AdvisorySpeed_regional_element* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_AdvisorySpeed_regional_element (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_AdvisorySpeed_regional_element* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_AdvisorySpeed_regional_element (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_AdvisorySpeed_regional_element* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_AdvisorySpeed_regional_element (OSCTXT *pctxt, ASN1T_ETSI_DSRC_AdvisorySpeed_regional_element *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_AdvisorySpeed_regional_element (OSCTXT *pctxt, ASN1T_ETSI_DSRC_AdvisorySpeed_regional_element *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_AdvisorySpeed_regional_element (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_AdvisorySpeed_regional_element* pvalue);

EXTERN ASN1T_ETSI_DSRC_AdvisorySpeed_regional_element* 
   new_ASN1T_ETSI_DSRC_AdvisorySpeed_regional_element (ASN1CType& ccobj);

EXTERN int asn1Init_ETSI_DSRC_AdvisorySpeed_regional_element (
   ASN1T_ETSI_DSRC_AdvisorySpeed_regional_element* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_AdvisorySpeed_regional_element (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_AdvisorySpeed_regional_element* pvalue);

/**************************************************************/
/*                                                            */
/*  AdvisorySpeed_regional                                    */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'AdvisorySpeed'
*/
/* List of ASN1T_ETSI_DSRC_AdvisorySpeed_regional_element */
typedef ASN1TSeqOfList ASN1T_ETSI_DSRC_AdvisorySpeed_regional;

class EXTERN ASN1C_ETSI_DSRC_AdvisorySpeed_regional :
public ASN1CSeqOfList
{
protected:
   ASN1T_ETSI_DSRC_AdvisorySpeed_regional& msgData;
public:
   /**
    * Control class: ASN1C_ETSI_DSRC_AdvisorySpeed_regional
    * Data class:    ASN1T_ETSI_DSRC_AdvisorySpeed_regional
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_AdvisorySpeed_regional
       (ASN1T_ETSI_DSRC_AdvisorySpeed_regional& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_AdvisorySpeed_regional<br/>
    * Data class: ASN1T_ETSI_DSRC_AdvisorySpeed_regional<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_AdvisorySpeed_regional (OSRTMessageBufferIF& msgBuf
      , ASN1T_ETSI_DSRC_AdvisorySpeed_regional& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_AdvisorySpeed_regional<br/>
    * Data class: ASN1T_ETSI_DSRC_AdvisorySpeed_regional<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_ETSI_DSRC_AdvisorySpeed_regional (ASN1CType& ccobj
      , ASN1T_ETSI_DSRC_AdvisorySpeed_regional& data);

   virtual ~ASN1C_ETSI_DSRC_AdvisorySpeed_regional () {}

   /**
    * Data class: ASN1T_ETSI_DSRC_AdvisorySpeed_regional_element<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_ETSI_DSRC_AdvisorySpeed_regional_element* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_ETSI_DSRC_AdvisorySpeed_regional_element.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_ETSI_DSRC_AdvisorySpeed_regional_element* NewElement ();

   /**
    * Data class: ASN1T_ETSI_DSRC_AdvisorySpeed_regional_element.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_ETSI_DSRC_AdvisorySpeed_regional_element* AppendNewElement ();

   /* Get IE using regionId key value */
   ASN1T_ETSI_DSRC_AdvisorySpeed_regional_element* 
      GetIE (ASN1T_ETSI_DSRC_RegionId regionId);

   /* Get all matching IEs using regionId key value */
   int GetAllIEs (ASN1T_ETSI_DSRC_RegionId regionId, 
      ASN1T_ETSI_DSRC_AdvisorySpeed_regional* pmatches);

private:
   ASN1C_ETSI_DSRC_AdvisorySpeed_regional& operator= (const ASN1C_ETSI_DSRC_AdvisorySpeed_regional&) {return *this;}
} ;

EXTERN int asn1PE_ETSI_DSRC_AdvisorySpeed_regional (OSCTXT* pctxt, ASN1T_ETSI_DSRC_AdvisorySpeed_regional* pvalue);

EXTERN int asn1PD_ETSI_DSRC_AdvisorySpeed_regional (OSCTXT* pctxt, ASN1T_ETSI_DSRC_AdvisorySpeed_regional* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_AdvisorySpeed_regional (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_AdvisorySpeed_regional* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_AdvisorySpeed_regional (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_AdvisorySpeed_regional* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_AdvisorySpeed_regional (OSCTXT *pctxt, ASN1T_ETSI_DSRC_AdvisorySpeed_regional *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_AdvisorySpeed_regional (OSCTXT *pctxt, ASN1T_ETSI_DSRC_AdvisorySpeed_regional *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_AdvisorySpeed_regional (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_AdvisorySpeed_regional* pvalue);

EXTERN int asn1Init_ETSI_DSRC_AdvisorySpeed_regional (
   ASN1T_ETSI_DSRC_AdvisorySpeed_regional* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_AdvisorySpeed_regional (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_AdvisorySpeed_regional* pvalue);

/**************************************************************/
/*                                                            */
/*  AdvisorySpeed                                             */
/*                                                            */
/**************************************************************/
/*
 -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_
 Start of entries from table Data_Frames...
 Data frames 
 -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_
AdvisorySpeed ::= SEQUENCE {
   type [0] AdvisorySpeedType,
   speed [1] SpeedAdvice OPTIONAL,
   confidence [2] SpeedConfidence OPTIONAL,
   distance [3] ZoneLength OPTIONAL,
   class [4] RestrictionClassID OPTIONAL,
   regional [5] SEQUENCE (SIZE (1..4)) OF SEQUENCE {
      regionId [0] REG-EXT-ID-AND-TYPE.&id ({Reg-AdvisorySpeed}),
      regExtValue [1] EXPLICIT REG-EXT-ID-AND-TYPE.&Type ({Reg-AdvisorySpeed}{@regionId})
   } OPTIONAL,
   ...
}
*/
struct EXTERN ASN1T_ETSI_DSRC_AdvisorySpeed {
   struct {
      unsigned speedPresent : 1;
      unsigned confidencePresent : 1;
      unsigned distancePresent : 1;
      unsigned class_Present : 1;
      unsigned regionalPresent : 1;
   } m;
   ASN1T_ETSI_DSRC_AdvisorySpeedType type;
   ASN1T_ETSI_DSRC_SpeedAdvice speed;
   ASN1T_ETSI_DSRC_SpeedConfidence confidence;
   ASN1T_ETSI_DSRC_ZoneLength distance;
   ASN1T_ETSI_DSRC_RestrictionClassID class_;
   ASN1T_ETSI_DSRC_AdvisorySpeed_regional regional;
   ASN1TSeqExt extElem1;
   ASN1T_ETSI_DSRC_AdvisorySpeed ();
} ;

EXTERN int asn1PE_ETSI_DSRC_AdvisorySpeed (OSCTXT* pctxt, ASN1T_ETSI_DSRC_AdvisorySpeed* pvalue);

EXTERN int asn1PD_ETSI_DSRC_AdvisorySpeed (OSCTXT* pctxt, ASN1T_ETSI_DSRC_AdvisorySpeed* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_AdvisorySpeed (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_AdvisorySpeed* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_AdvisorySpeed (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_AdvisorySpeed* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_AdvisorySpeed (OSCTXT *pctxt, ASN1T_ETSI_DSRC_AdvisorySpeed *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_AdvisorySpeed (OSCTXT *pctxt, ASN1T_ETSI_DSRC_AdvisorySpeed *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_AdvisorySpeed (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_AdvisorySpeed* pvalue);

EXTERN ASN1T_ETSI_DSRC_AdvisorySpeed* 
   new_ASN1T_ETSI_DSRC_AdvisorySpeed (ASN1CType& ccobj);

EXTERN int asn1Init_ETSI_DSRC_AdvisorySpeed (ASN1T_ETSI_DSRC_AdvisorySpeed* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_AdvisorySpeed (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_AdvisorySpeed* pvalue);

/**************************************************************/
/*                                                            */
/*  AdvisorySpeedList                                         */
/*                                                            */
/**************************************************************/
/*
AdvisorySpeedList ::= SEQUENCE (SIZE (1..16)) OF AdvisorySpeed
*/
/* List of ASN1T_ETSI_DSRC_AdvisorySpeed */
typedef ASN1TSeqOfList ASN1T_ETSI_DSRC_AdvisorySpeedList;

class EXTERN ASN1C_ETSI_DSRC_AdvisorySpeedList :
public ASN1CSeqOfList
{
protected:
   ASN1T_ETSI_DSRC_AdvisorySpeedList& msgData;
public:
   /**
    * Control class: ASN1C_ETSI_DSRC_AdvisorySpeedList
    * Data class:    ASN1T_ETSI_DSRC_AdvisorySpeedList
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_AdvisorySpeedList (ASN1T_ETSI_DSRC_AdvisorySpeedList& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_AdvisorySpeedList<br/>
    * Data class: ASN1T_ETSI_DSRC_AdvisorySpeedList<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_AdvisorySpeedList (OSRTMessageBufferIF& msgBuf
      , ASN1T_ETSI_DSRC_AdvisorySpeedList& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_AdvisorySpeedList<br/>
    * Data class: ASN1T_ETSI_DSRC_AdvisorySpeedList<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_ETSI_DSRC_AdvisorySpeedList (ASN1CType& ccobj
      , ASN1T_ETSI_DSRC_AdvisorySpeedList& data);

   virtual ~ASN1C_ETSI_DSRC_AdvisorySpeedList () {}

   /**
    * Data class: ASN1T_ETSI_DSRC_AdvisorySpeed<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_ETSI_DSRC_AdvisorySpeed* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_ETSI_DSRC_AdvisorySpeed.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_ETSI_DSRC_AdvisorySpeed* NewElement ();

   /**
    * Data class: ASN1T_ETSI_DSRC_AdvisorySpeed.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_ETSI_DSRC_AdvisorySpeed* AppendNewElement ();

private:
   ASN1C_ETSI_DSRC_AdvisorySpeedList& operator= (const ASN1C_ETSI_DSRC_AdvisorySpeedList&) {return *this;}
} ;

EXTERN int asn1PE_ETSI_DSRC_AdvisorySpeedList (OSCTXT* pctxt, ASN1T_ETSI_DSRC_AdvisorySpeedList* pvalue);

EXTERN int asn1PD_ETSI_DSRC_AdvisorySpeedList (OSCTXT* pctxt, ASN1T_ETSI_DSRC_AdvisorySpeedList* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_AdvisorySpeedList (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_AdvisorySpeedList* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_AdvisorySpeedList (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_AdvisorySpeedList* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_AdvisorySpeedList (OSCTXT *pctxt, ASN1T_ETSI_DSRC_AdvisorySpeedList *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_AdvisorySpeedList (OSCTXT *pctxt, ASN1T_ETSI_DSRC_AdvisorySpeedList *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_AdvisorySpeedList (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_AdvisorySpeedList* pvalue);

EXTERN int asn1Init_ETSI_DSRC_AdvisorySpeedList (
   ASN1T_ETSI_DSRC_AdvisorySpeedList* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_AdvisorySpeedList (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_AdvisorySpeedList* pvalue);

/**************************************************************/
/*                                                            */
/*  MovementEvent_regional_element                            */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'MovementEvent'
*/
struct EXTERN ASN1T_ETSI_DSRC_MovementEvent_regional_element {
   ASN1T_ETSI_DSRC_RegionId regionId;
   struct  {
      /**
       * information object selector
       */
      OSUINT16 t;

      /**
       * Reg-MovementEvent information objects
       */
      union {
         /**
          * id: addGrpC
          */
         struct ASN1T_ETSI_GrpC_MovementEvent_addGrpC *_ETSI_REG_Reg_MovementEvent_addGrpC;

         ASN1TOpenType* extElem1;
      } u;
   } regExtValue;
   ASN1T_ETSI_DSRC_MovementEvent_regional_element ();
} ;

EXTERN int asn1PE_ETSI_DSRC_MovementEvent_regional_element (OSCTXT* pctxt, ASN1T_ETSI_DSRC_MovementEvent_regional_element* pvalue);

EXTERN int asn1PD_ETSI_DSRC_MovementEvent_regional_element (OSCTXT* pctxt, ASN1T_ETSI_DSRC_MovementEvent_regional_element* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_MovementEvent_regional_element (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_MovementEvent_regional_element* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_MovementEvent_regional_element (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_MovementEvent_regional_element* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_MovementEvent_regional_element (OSCTXT *pctxt, ASN1T_ETSI_DSRC_MovementEvent_regional_element *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_MovementEvent_regional_element (OSCTXT *pctxt, ASN1T_ETSI_DSRC_MovementEvent_regional_element *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_MovementEvent_regional_element (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_MovementEvent_regional_element* pvalue);

EXTERN ASN1T_ETSI_DSRC_MovementEvent_regional_element* 
   new_ASN1T_ETSI_DSRC_MovementEvent_regional_element (ASN1CType& ccobj);

EXTERN int asn1Init_ETSI_DSRC_MovementEvent_regional_element (
   ASN1T_ETSI_DSRC_MovementEvent_regional_element* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_MovementEvent_regional_element (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_MovementEvent_regional_element* pvalue);

/**************************************************************/
/*                                                            */
/*  MovementEvent_regional                                    */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'MovementEvent'
*/
/* List of ASN1T_ETSI_DSRC_MovementEvent_regional_element */
typedef ASN1TSeqOfList ASN1T_ETSI_DSRC_MovementEvent_regional;

class EXTERN ASN1C_ETSI_DSRC_MovementEvent_regional :
public ASN1CSeqOfList
{
protected:
   ASN1T_ETSI_DSRC_MovementEvent_regional& msgData;
public:
   /**
    * Control class: ASN1C_ETSI_DSRC_MovementEvent_regional
    * Data class:    ASN1T_ETSI_DSRC_MovementEvent_regional
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_MovementEvent_regional
       (ASN1T_ETSI_DSRC_MovementEvent_regional& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_MovementEvent_regional<br/>
    * Data class: ASN1T_ETSI_DSRC_MovementEvent_regional<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_MovementEvent_regional (OSRTMessageBufferIF& msgBuf
      , ASN1T_ETSI_DSRC_MovementEvent_regional& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_MovementEvent_regional<br/>
    * Data class: ASN1T_ETSI_DSRC_MovementEvent_regional<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_ETSI_DSRC_MovementEvent_regional (ASN1CType& ccobj
      , ASN1T_ETSI_DSRC_MovementEvent_regional& data);

   virtual ~ASN1C_ETSI_DSRC_MovementEvent_regional () {}

   /**
    * Data class: ASN1T_ETSI_DSRC_MovementEvent_regional_element<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_ETSI_DSRC_MovementEvent_regional_element* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_ETSI_DSRC_MovementEvent_regional_element.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_ETSI_DSRC_MovementEvent_regional_element* NewElement ();

   /**
    * Data class: ASN1T_ETSI_DSRC_MovementEvent_regional_element.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_ETSI_DSRC_MovementEvent_regional_element* AppendNewElement ();

   /* Get IE using regionId key value */
   ASN1T_ETSI_DSRC_MovementEvent_regional_element* 
      GetIE (ASN1T_ETSI_DSRC_RegionId regionId);

   /* Get all matching IEs using regionId key value */
   int GetAllIEs (ASN1T_ETSI_DSRC_RegionId regionId, 
      ASN1T_ETSI_DSRC_MovementEvent_regional* pmatches);

private:
   ASN1C_ETSI_DSRC_MovementEvent_regional& operator= (const ASN1C_ETSI_DSRC_MovementEvent_regional&) {return *this;}
} ;

EXTERN int asn1PE_ETSI_DSRC_MovementEvent_regional (OSCTXT* pctxt, ASN1T_ETSI_DSRC_MovementEvent_regional* pvalue);

EXTERN int asn1PD_ETSI_DSRC_MovementEvent_regional (OSCTXT* pctxt, ASN1T_ETSI_DSRC_MovementEvent_regional* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_MovementEvent_regional (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_MovementEvent_regional* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_MovementEvent_regional (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_MovementEvent_regional* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_MovementEvent_regional (OSCTXT *pctxt, ASN1T_ETSI_DSRC_MovementEvent_regional *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_MovementEvent_regional (OSCTXT *pctxt, ASN1T_ETSI_DSRC_MovementEvent_regional *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_MovementEvent_regional (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_MovementEvent_regional* pvalue);

EXTERN int asn1Init_ETSI_DSRC_MovementEvent_regional (
   ASN1T_ETSI_DSRC_MovementEvent_regional* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_MovementEvent_regional (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_MovementEvent_regional* pvalue);

/**************************************************************/
/*                                                            */
/*  MovementEvent                                             */
/*                                                            */
/**************************************************************/
/*
MovementEvent ::= SEQUENCE {
   eventState [0] MovementPhaseState,
   timing [1] TimeChangeDetails OPTIONAL,
   speeds [2] AdvisorySpeedList OPTIONAL,
   regional [3] SEQUENCE (SIZE (1..4)) OF SEQUENCE {
      regionId [0] REG-EXT-ID-AND-TYPE.&id ({Reg-MovementEvent}),
      regExtValue [1] EXPLICIT REG-EXT-ID-AND-TYPE.&Type ({Reg-MovementEvent}{@regionId})
   } OPTIONAL,
   ...
}
*/
struct EXTERN ASN1T_ETSI_DSRC_MovementEvent {
   struct {
      unsigned timingPresent : 1;
      unsigned speedsPresent : 1;
      unsigned regionalPresent : 1;
   } m;
   ASN1T_ETSI_DSRC_MovementPhaseState eventState;
   ASN1T_ETSI_DSRC_TimeChangeDetails timing;
   ASN1T_ETSI_DSRC_AdvisorySpeedList speeds;
   ASN1T_ETSI_DSRC_MovementEvent_regional regional;
   ASN1TSeqExt extElem1;
   ASN1T_ETSI_DSRC_MovementEvent ();
} ;

EXTERN int asn1PE_ETSI_DSRC_MovementEvent (OSCTXT* pctxt, ASN1T_ETSI_DSRC_MovementEvent* pvalue);

EXTERN int asn1PD_ETSI_DSRC_MovementEvent (OSCTXT* pctxt, ASN1T_ETSI_DSRC_MovementEvent* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_MovementEvent (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_MovementEvent* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_MovementEvent (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_MovementEvent* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_MovementEvent (OSCTXT *pctxt, ASN1T_ETSI_DSRC_MovementEvent *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_MovementEvent (OSCTXT *pctxt, ASN1T_ETSI_DSRC_MovementEvent *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_MovementEvent (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_MovementEvent* pvalue);

EXTERN ASN1T_ETSI_DSRC_MovementEvent* 
   new_ASN1T_ETSI_DSRC_MovementEvent (ASN1CType& ccobj);

EXTERN int asn1Init_ETSI_DSRC_MovementEvent (ASN1T_ETSI_DSRC_MovementEvent* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_MovementEvent (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_MovementEvent* pvalue);

/**************************************************************/
/*                                                            */
/*  MovementEventList                                         */
/*                                                            */
/**************************************************************/
/*
MovementEventList ::= SEQUENCE (SIZE (1..16)) OF MovementEvent
*/
/* List of ASN1T_ETSI_DSRC_MovementEvent */
typedef ASN1TSeqOfList ASN1T_ETSI_DSRC_MovementEventList;

class EXTERN ASN1C_ETSI_DSRC_MovementEventList :
public ASN1CSeqOfList
{
protected:
   ASN1T_ETSI_DSRC_MovementEventList& msgData;
public:
   /**
    * Control class: ASN1C_ETSI_DSRC_MovementEventList
    * Data class:    ASN1T_ETSI_DSRC_MovementEventList
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_MovementEventList (ASN1T_ETSI_DSRC_MovementEventList& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_MovementEventList<br/>
    * Data class: ASN1T_ETSI_DSRC_MovementEventList<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_MovementEventList (OSRTMessageBufferIF& msgBuf
      , ASN1T_ETSI_DSRC_MovementEventList& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_MovementEventList<br/>
    * Data class: ASN1T_ETSI_DSRC_MovementEventList<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_ETSI_DSRC_MovementEventList (ASN1CType& ccobj
      , ASN1T_ETSI_DSRC_MovementEventList& data);

   virtual ~ASN1C_ETSI_DSRC_MovementEventList () {}

   /**
    * Data class: ASN1T_ETSI_DSRC_MovementEvent<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_ETSI_DSRC_MovementEvent* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_ETSI_DSRC_MovementEvent.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_ETSI_DSRC_MovementEvent* NewElement ();

   /**
    * Data class: ASN1T_ETSI_DSRC_MovementEvent.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_ETSI_DSRC_MovementEvent* AppendNewElement ();

private:
   ASN1C_ETSI_DSRC_MovementEventList& operator= (const ASN1C_ETSI_DSRC_MovementEventList&) {return *this;}
} ;

EXTERN int asn1PE_ETSI_DSRC_MovementEventList (OSCTXT* pctxt, ASN1T_ETSI_DSRC_MovementEventList* pvalue);

EXTERN int asn1PD_ETSI_DSRC_MovementEventList (OSCTXT* pctxt, ASN1T_ETSI_DSRC_MovementEventList* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_MovementEventList (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_MovementEventList* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_MovementEventList (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_MovementEventList* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_MovementEventList (OSCTXT *pctxt, ASN1T_ETSI_DSRC_MovementEventList *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_MovementEventList (OSCTXT *pctxt, ASN1T_ETSI_DSRC_MovementEventList *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_MovementEventList (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_MovementEventList* pvalue);

EXTERN int asn1Init_ETSI_DSRC_MovementEventList (
   ASN1T_ETSI_DSRC_MovementEventList* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_MovementEventList (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_MovementEventList* pvalue);

/**************************************************************/
/*                                                            */
/*  WaitOnStopline                                            */
/*                                                            */
/**************************************************************/
/*
WaitOnStopline ::= BOOLEAN
*/
typedef OSBOOL ASN1T_ETSI_DSRC_WaitOnStopline;

EXTERN int asn1PE_ETSI_DSRC_WaitOnStopline (OSCTXT* pctxt, ASN1T_ETSI_DSRC_WaitOnStopline value);

EXTERN int asn1PD_ETSI_DSRC_WaitOnStopline (OSCTXT* pctxt, ASN1T_ETSI_DSRC_WaitOnStopline* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_WaitOnStopline (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_WaitOnStopline value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_WaitOnStopline (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_WaitOnStopline* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_WaitOnStopline (OSCTXT *pctxt, ASN1T_ETSI_DSRC_WaitOnStopline *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_WaitOnStopline (OSCTXT *pctxt, ASN1T_ETSI_DSRC_WaitOnStopline *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_WaitOnStopline (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_WaitOnStopline* pvalue);

EXTERN ASN1T_ETSI_DSRC_WaitOnStopline* 
   new_ASN1T_ETSI_DSRC_WaitOnStopline (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  PedestrianBicycleDetect                                   */
/*                                                            */
/**************************************************************/
/*
PedestrianBicycleDetect ::= BOOLEAN
*/
typedef OSBOOL ASN1T_ETSI_DSRC_PedestrianBicycleDetect;

EXTERN int asn1PE_ETSI_DSRC_PedestrianBicycleDetect (OSCTXT* pctxt, ASN1T_ETSI_DSRC_PedestrianBicycleDetect value);

EXTERN int asn1PD_ETSI_DSRC_PedestrianBicycleDetect (OSCTXT* pctxt, ASN1T_ETSI_DSRC_PedestrianBicycleDetect* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_PedestrianBicycleDetect (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_PedestrianBicycleDetect value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_PedestrianBicycleDetect (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_PedestrianBicycleDetect* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_PedestrianBicycleDetect (OSCTXT *pctxt, ASN1T_ETSI_DSRC_PedestrianBicycleDetect *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_PedestrianBicycleDetect (OSCTXT *pctxt, ASN1T_ETSI_DSRC_PedestrianBicycleDetect *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_PedestrianBicycleDetect (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_PedestrianBicycleDetect* pvalue);

EXTERN ASN1T_ETSI_DSRC_PedestrianBicycleDetect* 
   new_ASN1T_ETSI_DSRC_PedestrianBicycleDetect (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  ConnectionManeuverAssist_regional_element                 */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ConnectionManeuverAssist'
*/
struct EXTERN ASN1T_ETSI_DSRC_ConnectionManeuverAssist_regional_element {
   ASN1T_ETSI_DSRC_RegionId regionId;
   struct  {
      /**
       * information object selector
       */
      OSUINT16 t;

      /**
       * Reg-ConnectionManeuverAssist information objects
       */
      union {
         /**
          * id: addGrpC
          */
         struct ASN1T_ETSI_GrpC_ConnectionManeuverAssist_addGrpC *_ETSI_REG_Reg_ConnectionManeuverAssist_addGrpC;

         ASN1TOpenType* extElem1;
      } u;
   } regExtValue;
   ASN1T_ETSI_DSRC_ConnectionManeuverAssist_regional_element ();
} ;

EXTERN int asn1PE_ETSI_DSRC_ConnectionManeuverAssist_regional_element (OSCTXT* pctxt, ASN1T_ETSI_DSRC_ConnectionManeuverAssist_regional_element* pvalue);

EXTERN int asn1PD_ETSI_DSRC_ConnectionManeuverAssist_regional_element (OSCTXT* pctxt, ASN1T_ETSI_DSRC_ConnectionManeuverAssist_regional_element* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_ConnectionManeuverAssist_regional_element 
   (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_ConnectionManeuverAssist_regional_element* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_ConnectionManeuverAssist_regional_element 
   (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_ConnectionManeuverAssist_regional_element* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_ConnectionManeuverAssist_regional_element (OSCTXT *pctxt, ASN1T_ETSI_DSRC_ConnectionManeuverAssist_regional_element *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_ConnectionManeuverAssist_regional_element (OSCTXT *pctxt, ASN1T_ETSI_DSRC_ConnectionManeuverAssist_regional_element *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_ConnectionManeuverAssist_regional_element (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_ConnectionManeuverAssist_regional_element* pvalue);

EXTERN ASN1T_ETSI_DSRC_ConnectionManeuverAssist_regional_element* 
   new_ASN1T_ETSI_DSRC_ConnectionManeuverAssist_regional_element (ASN1CType& ccobj)
   ;

EXTERN int asn1Init_ETSI_DSRC_ConnectionManeuverAssist_regional_element (
   ASN1T_ETSI_DSRC_ConnectionManeuverAssist_regional_element* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_ConnectionManeuverAssist_regional_element (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_ConnectionManeuverAssist_regional_element* pvalue);

/**************************************************************/
/*                                                            */
/*  ConnectionManeuverAssist_regional                         */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ConnectionManeuverAssist'
*/
/* List of ASN1T_ETSI_DSRC_ConnectionManeuverAssist_regional_element */
typedef ASN1TSeqOfList ASN1T_ETSI_DSRC_ConnectionManeuverAssist_regional;

class EXTERN ASN1C_ETSI_DSRC_ConnectionManeuverAssist_regional :
public ASN1CSeqOfList
{
protected:
   ASN1T_ETSI_DSRC_ConnectionManeuverAssist_regional& msgData;
public:
   /**
    * Control class: ASN1C_ETSI_DSRC_ConnectionManeuverAssist_regional
    * Data class:    ASN1T_ETSI_DSRC_ConnectionManeuverAssist_regional
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_ConnectionManeuverAssist_regional
       (ASN1T_ETSI_DSRC_ConnectionManeuverAssist_regional& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_ConnectionManeuverAssist_regional<br/>
    * Data class: ASN1T_ETSI_DSRC_ConnectionManeuverAssist_regional<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_ConnectionManeuverAssist_regional (
      OSRTMessageBufferIF& msgBuf
      , ASN1T_ETSI_DSRC_ConnectionManeuverAssist_regional& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_ConnectionManeuverAssist_regional<br/>
    * Data class: ASN1T_ETSI_DSRC_ConnectionManeuverAssist_regional<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_ETSI_DSRC_ConnectionManeuverAssist_regional (ASN1CType& ccobj
      , ASN1T_ETSI_DSRC_ConnectionManeuverAssist_regional& data);

   virtual ~ASN1C_ETSI_DSRC_ConnectionManeuverAssist_regional () {}

   /**
    * Data class: ASN1T_ETSI_DSRC_ConnectionManeuverAssist_regional_element<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_ETSI_DSRC_ConnectionManeuverAssist_regional_element* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_ETSI_DSRC_ConnectionManeuverAssist_regional_element.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_ETSI_DSRC_ConnectionManeuverAssist_regional_element* NewElement ();

   /**
    * Data class: ASN1T_ETSI_DSRC_ConnectionManeuverAssist_regional_element.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_ETSI_DSRC_ConnectionManeuverAssist_regional_element* AppendNewElement ();

   /* Get IE using regionId key value */
   ASN1T_ETSI_DSRC_ConnectionManeuverAssist_regional_element* 
      GetIE (ASN1T_ETSI_DSRC_RegionId regionId);

   /* Get all matching IEs using regionId key value */
   int GetAllIEs (ASN1T_ETSI_DSRC_RegionId regionId, 
      ASN1T_ETSI_DSRC_ConnectionManeuverAssist_regional* pmatches);

private:
   ASN1C_ETSI_DSRC_ConnectionManeuverAssist_regional& operator= (const ASN1C_ETSI_DSRC_ConnectionManeuverAssist_regional&) {return *this;}
} ;

EXTERN int asn1PE_ETSI_DSRC_ConnectionManeuverAssist_regional (OSCTXT* pctxt, ASN1T_ETSI_DSRC_ConnectionManeuverAssist_regional* pvalue);

EXTERN int asn1PD_ETSI_DSRC_ConnectionManeuverAssist_regional (OSCTXT* pctxt, ASN1T_ETSI_DSRC_ConnectionManeuverAssist_regional* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_ConnectionManeuverAssist_regional (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_ConnectionManeuverAssist_regional* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_ConnectionManeuverAssist_regional (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_ConnectionManeuverAssist_regional* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_ConnectionManeuverAssist_regional (OSCTXT *pctxt, ASN1T_ETSI_DSRC_ConnectionManeuverAssist_regional *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_ConnectionManeuverAssist_regional (OSCTXT *pctxt, ASN1T_ETSI_DSRC_ConnectionManeuverAssist_regional *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_ConnectionManeuverAssist_regional (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_ConnectionManeuverAssist_regional* pvalue);

EXTERN int asn1Init_ETSI_DSRC_ConnectionManeuverAssist_regional (
   ASN1T_ETSI_DSRC_ConnectionManeuverAssist_regional* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_ConnectionManeuverAssist_regional (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_ConnectionManeuverAssist_regional* pvalue);

/**************************************************************/
/*                                                            */
/*  ConnectionManeuverAssist                                  */
/*                                                            */
/**************************************************************/
/*
ConnectionManeuverAssist ::= SEQUENCE {
   connectionID [0] LaneConnectionID,
   queueLength [1] ZoneLength OPTIONAL,
   availableStorageLength [2] ZoneLength OPTIONAL,
   waitOnStop [3] WaitOnStopline OPTIONAL,
   pedBicycleDetect [4] PedestrianBicycleDetect OPTIONAL,
   regional [5] SEQUENCE (SIZE (1..4)) OF SEQUENCE {
      regionId [0] REG-EXT-ID-AND-TYPE.&id ({Reg-ConnectionManeuverAssist}),
      regExtValue [1] EXPLICIT REG-EXT-ID-AND-TYPE.&Type ({Reg-ConnectionManeuverAssist}{@regionId})
   } OPTIONAL,
   ...
}
*/
struct EXTERN ASN1T_ETSI_DSRC_ConnectionManeuverAssist {
   struct {
      unsigned queueLengthPresent : 1;
      unsigned availableStorageLengthPresent : 1;
      unsigned waitOnStopPresent : 1;
      unsigned pedBicycleDetectPresent : 1;
      unsigned regionalPresent : 1;
   } m;
   ASN1T_ETSI_DSRC_LaneConnectionID connectionID;
   ASN1T_ETSI_DSRC_ZoneLength queueLength;
   ASN1T_ETSI_DSRC_ZoneLength availableStorageLength;
   ASN1T_ETSI_DSRC_WaitOnStopline waitOnStop;
   ASN1T_ETSI_DSRC_PedestrianBicycleDetect pedBicycleDetect;
   ASN1T_ETSI_DSRC_ConnectionManeuverAssist_regional regional;
   ASN1TSeqExt extElem1;
   ASN1T_ETSI_DSRC_ConnectionManeuverAssist ();
} ;

EXTERN int asn1PE_ETSI_DSRC_ConnectionManeuverAssist (OSCTXT* pctxt, ASN1T_ETSI_DSRC_ConnectionManeuverAssist* pvalue);

EXTERN int asn1PD_ETSI_DSRC_ConnectionManeuverAssist (OSCTXT* pctxt, ASN1T_ETSI_DSRC_ConnectionManeuverAssist* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_ConnectionManeuverAssist (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_ConnectionManeuverAssist* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_ConnectionManeuverAssist (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_ConnectionManeuverAssist* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_ConnectionManeuverAssist (OSCTXT *pctxt, ASN1T_ETSI_DSRC_ConnectionManeuverAssist *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_ConnectionManeuverAssist (OSCTXT *pctxt, ASN1T_ETSI_DSRC_ConnectionManeuverAssist *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_ConnectionManeuverAssist (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_ConnectionManeuverAssist* pvalue);

EXTERN ASN1T_ETSI_DSRC_ConnectionManeuverAssist* 
   new_ASN1T_ETSI_DSRC_ConnectionManeuverAssist (ASN1CType& ccobj);

EXTERN int asn1Init_ETSI_DSRC_ConnectionManeuverAssist (
   ASN1T_ETSI_DSRC_ConnectionManeuverAssist* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_ConnectionManeuverAssist (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_ConnectionManeuverAssist* pvalue);

/**************************************************************/
/*                                                            */
/*  ManeuverAssistList                                        */
/*                                                            */
/**************************************************************/
/*
ManeuverAssistList ::= SEQUENCE (SIZE (1..16)) OF ConnectionManeuverAssist
*/
/* List of ASN1T_ETSI_DSRC_ConnectionManeuverAssist */
typedef ASN1TSeqOfList ASN1T_ETSI_DSRC_ManeuverAssistList;

class EXTERN ASN1C_ETSI_DSRC_ManeuverAssistList :
public ASN1CSeqOfList
{
protected:
   ASN1T_ETSI_DSRC_ManeuverAssistList& msgData;
public:
   /**
    * Control class: ASN1C_ETSI_DSRC_ManeuverAssistList
    * Data class:    ASN1T_ETSI_DSRC_ManeuverAssistList
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_ManeuverAssistList
       (ASN1T_ETSI_DSRC_ManeuverAssistList& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_ManeuverAssistList<br/>
    * Data class: ASN1T_ETSI_DSRC_ManeuverAssistList<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_ManeuverAssistList (OSRTMessageBufferIF& msgBuf
      , ASN1T_ETSI_DSRC_ManeuverAssistList& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_ManeuverAssistList<br/>
    * Data class: ASN1T_ETSI_DSRC_ManeuverAssistList<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_ETSI_DSRC_ManeuverAssistList (ASN1CType& ccobj
      , ASN1T_ETSI_DSRC_ManeuverAssistList& data);

   virtual ~ASN1C_ETSI_DSRC_ManeuverAssistList () {}

   /**
    * Data class: ASN1T_ETSI_DSRC_ConnectionManeuverAssist<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_ETSI_DSRC_ConnectionManeuverAssist* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_ETSI_DSRC_ConnectionManeuverAssist.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_ETSI_DSRC_ConnectionManeuverAssist* NewElement ();

   /**
    * Data class: ASN1T_ETSI_DSRC_ConnectionManeuverAssist.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_ETSI_DSRC_ConnectionManeuverAssist* AppendNewElement ();

private:
   ASN1C_ETSI_DSRC_ManeuverAssistList& operator= (const ASN1C_ETSI_DSRC_ManeuverAssistList&) {return *this;}
} ;

EXTERN int asn1PE_ETSI_DSRC_ManeuverAssistList (OSCTXT* pctxt, ASN1T_ETSI_DSRC_ManeuverAssistList* pvalue);

EXTERN int asn1PD_ETSI_DSRC_ManeuverAssistList (OSCTXT* pctxt, ASN1T_ETSI_DSRC_ManeuverAssistList* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_ManeuverAssistList (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_ManeuverAssistList* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_ManeuverAssistList (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_ManeuverAssistList* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_ManeuverAssistList (OSCTXT *pctxt, ASN1T_ETSI_DSRC_ManeuverAssistList *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_ManeuverAssistList (OSCTXT *pctxt, ASN1T_ETSI_DSRC_ManeuverAssistList *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_ManeuverAssistList (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_ManeuverAssistList* pvalue);

EXTERN int asn1Init_ETSI_DSRC_ManeuverAssistList (
   ASN1T_ETSI_DSRC_ManeuverAssistList* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_ManeuverAssistList (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_ManeuverAssistList* pvalue);

/**************************************************************/
/*                                                            */
/*  MovementState_regional_element                            */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'MovementState'
*/
struct EXTERN ASN1T_ETSI_DSRC_MovementState_regional_element {
   ASN1T_ETSI_DSRC_RegionId regionId;
   ASN1TOpenType regExtValue;
} ;

EXTERN int asn1PE_ETSI_DSRC_MovementState_regional_element (OSCTXT* pctxt, ASN1T_ETSI_DSRC_MovementState_regional_element* pvalue);

EXTERN int asn1PD_ETSI_DSRC_MovementState_regional_element (OSCTXT* pctxt, ASN1T_ETSI_DSRC_MovementState_regional_element* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_MovementState_regional_element (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_MovementState_regional_element* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_MovementState_regional_element (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_MovementState_regional_element* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_MovementState_regional_element (OSCTXT *pctxt, ASN1T_ETSI_DSRC_MovementState_regional_element *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_MovementState_regional_element (OSCTXT *pctxt, ASN1T_ETSI_DSRC_MovementState_regional_element *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_MovementState_regional_element (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_MovementState_regional_element* pvalue);

EXTERN ASN1T_ETSI_DSRC_MovementState_regional_element* 
   new_ASN1T_ETSI_DSRC_MovementState_regional_element (ASN1CType& ccobj);

EXTERN int asn1Init_ETSI_DSRC_MovementState_regional_element (
   ASN1T_ETSI_DSRC_MovementState_regional_element* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_MovementState_regional_element (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_MovementState_regional_element* pvalue);

/**************************************************************/
/*                                                            */
/*  MovementState_regional                                    */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'MovementState'
*/
/* List of ASN1T_ETSI_DSRC_MovementState_regional_element */
typedef ASN1TSeqOfList ASN1T_ETSI_DSRC_MovementState_regional;

class EXTERN ASN1C_ETSI_DSRC_MovementState_regional :
public ASN1CSeqOfList
{
protected:
   ASN1T_ETSI_DSRC_MovementState_regional& msgData;
public:
   /**
    * Control class: ASN1C_ETSI_DSRC_MovementState_regional
    * Data class:    ASN1T_ETSI_DSRC_MovementState_regional
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_MovementState_regional
       (ASN1T_ETSI_DSRC_MovementState_regional& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_MovementState_regional<br/>
    * Data class: ASN1T_ETSI_DSRC_MovementState_regional<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_MovementState_regional (OSRTMessageBufferIF& msgBuf
      , ASN1T_ETSI_DSRC_MovementState_regional& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_MovementState_regional<br/>
    * Data class: ASN1T_ETSI_DSRC_MovementState_regional<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_ETSI_DSRC_MovementState_regional (ASN1CType& ccobj
      , ASN1T_ETSI_DSRC_MovementState_regional& data);

   virtual ~ASN1C_ETSI_DSRC_MovementState_regional () {}

   /**
    * Data class: ASN1T_ETSI_DSRC_MovementState_regional_element<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_ETSI_DSRC_MovementState_regional_element* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_ETSI_DSRC_MovementState_regional_element.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_ETSI_DSRC_MovementState_regional_element* NewElement ();

   /**
    * Data class: ASN1T_ETSI_DSRC_MovementState_regional_element.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_ETSI_DSRC_MovementState_regional_element* AppendNewElement ();

   /* Get IE using regionId key value */
   ASN1T_ETSI_DSRC_MovementState_regional_element* 
      GetIE (ASN1T_ETSI_DSRC_RegionId regionId);

   /* Get all matching IEs using regionId key value */
   int GetAllIEs (ASN1T_ETSI_DSRC_RegionId regionId, 
      ASN1T_ETSI_DSRC_MovementState_regional* pmatches);

private:
   ASN1C_ETSI_DSRC_MovementState_regional& operator= (const ASN1C_ETSI_DSRC_MovementState_regional&) {return *this;}
} ;

EXTERN int asn1PE_ETSI_DSRC_MovementState_regional (OSCTXT* pctxt, ASN1T_ETSI_DSRC_MovementState_regional* pvalue);

EXTERN int asn1PD_ETSI_DSRC_MovementState_regional (OSCTXT* pctxt, ASN1T_ETSI_DSRC_MovementState_regional* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_MovementState_regional (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_MovementState_regional* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_MovementState_regional (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_MovementState_regional* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_MovementState_regional (OSCTXT *pctxt, ASN1T_ETSI_DSRC_MovementState_regional *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_MovementState_regional (OSCTXT *pctxt, ASN1T_ETSI_DSRC_MovementState_regional *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_MovementState_regional (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_MovementState_regional* pvalue);

EXTERN int asn1Init_ETSI_DSRC_MovementState_regional (
   ASN1T_ETSI_DSRC_MovementState_regional* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_MovementState_regional (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_MovementState_regional* pvalue);

/**************************************************************/
/*                                                            */
/*  MovementState                                             */
/*                                                            */
/**************************************************************/
/*
MovementState ::= SEQUENCE {
   movementName [0] DescriptiveName OPTIONAL,
   signalGroup [1] SignalGroupID,
   state-time-speed [2] MovementEventList,
   maneuverAssistList [3] ManeuverAssistList OPTIONAL,
   regional [4] SEQUENCE (SIZE (1..4)) OF SEQUENCE {
      regionId [0] REG-EXT-ID-AND-TYPE.&id ({Reg-MovementState}),
      regExtValue [1] EXPLICIT REG-EXT-ID-AND-TYPE.&Type ({Reg-MovementState}{@regionId})
   } OPTIONAL,
   ...
}
*/
struct EXTERN ASN1T_ETSI_DSRC_MovementState {
   struct {
      unsigned movementNamePresent : 1;
      unsigned maneuverAssistListPresent : 1;
      unsigned regionalPresent : 1;
   } m;
   ASN1T_ETSI_DSRC_DescriptiveName movementName;
   ASN1T_ETSI_DSRC_SignalGroupID signalGroup;
   ASN1T_ETSI_DSRC_MovementEventList state_time_speed;
   ASN1T_ETSI_DSRC_ManeuverAssistList maneuverAssistList;
   ASN1T_ETSI_DSRC_MovementState_regional regional;
   ASN1TSeqExt extElem1;
   ASN1T_ETSI_DSRC_MovementState ();
} ;

EXTERN int asn1PE_ETSI_DSRC_MovementState (OSCTXT* pctxt, ASN1T_ETSI_DSRC_MovementState* pvalue);

EXTERN int asn1PD_ETSI_DSRC_MovementState (OSCTXT* pctxt, ASN1T_ETSI_DSRC_MovementState* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_MovementState (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_MovementState* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_MovementState (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_MovementState* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_MovementState (OSCTXT *pctxt, ASN1T_ETSI_DSRC_MovementState *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_MovementState (OSCTXT *pctxt, ASN1T_ETSI_DSRC_MovementState *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_MovementState (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_MovementState* pvalue);

EXTERN ASN1T_ETSI_DSRC_MovementState* 
   new_ASN1T_ETSI_DSRC_MovementState (ASN1CType& ccobj);

EXTERN int asn1Init_ETSI_DSRC_MovementState (ASN1T_ETSI_DSRC_MovementState* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_MovementState (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_MovementState* pvalue);

/**************************************************************/
/*                                                            */
/*  MovementList                                              */
/*                                                            */
/**************************************************************/
/*
MovementList ::= SEQUENCE (SIZE (1..255)) OF MovementState
*/
/* List of ASN1T_ETSI_DSRC_MovementState */
typedef ASN1TSeqOfList ASN1T_ETSI_DSRC_MovementList;

class EXTERN ASN1C_ETSI_DSRC_MovementList :
public ASN1CSeqOfList
{
protected:
   ASN1T_ETSI_DSRC_MovementList& msgData;
public:
   /**
    * Control class: ASN1C_ETSI_DSRC_MovementList
    * Data class:    ASN1T_ETSI_DSRC_MovementList
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_MovementList (ASN1T_ETSI_DSRC_MovementList& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_MovementList<br/>
    * Data class: ASN1T_ETSI_DSRC_MovementList<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_MovementList (OSRTMessageBufferIF& msgBuf
      , ASN1T_ETSI_DSRC_MovementList& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_MovementList<br/>
    * Data class: ASN1T_ETSI_DSRC_MovementList<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_ETSI_DSRC_MovementList (ASN1CType& ccobj
      , ASN1T_ETSI_DSRC_MovementList& data);

   virtual ~ASN1C_ETSI_DSRC_MovementList () {}

   /**
    * Data class: ASN1T_ETSI_DSRC_MovementState<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_ETSI_DSRC_MovementState* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_ETSI_DSRC_MovementState.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_ETSI_DSRC_MovementState* NewElement ();

   /**
    * Data class: ASN1T_ETSI_DSRC_MovementState.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_ETSI_DSRC_MovementState* AppendNewElement ();

private:
   ASN1C_ETSI_DSRC_MovementList& operator= (const ASN1C_ETSI_DSRC_MovementList&) {return *this;}
} ;

EXTERN int asn1PE_ETSI_DSRC_MovementList (OSCTXT* pctxt, ASN1T_ETSI_DSRC_MovementList* pvalue);

EXTERN int asn1PD_ETSI_DSRC_MovementList (OSCTXT* pctxt, ASN1T_ETSI_DSRC_MovementList* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_MovementList (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_MovementList* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_MovementList (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_MovementList* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_MovementList (OSCTXT *pctxt, ASN1T_ETSI_DSRC_MovementList *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_MovementList (OSCTXT *pctxt, ASN1T_ETSI_DSRC_MovementList *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_MovementList (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_MovementList* pvalue);

EXTERN int asn1Init_ETSI_DSRC_MovementList (ASN1T_ETSI_DSRC_MovementList* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_MovementList (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_MovementList* pvalue);

/**************************************************************/
/*                                                            */
/*  PrioritizationResponseStatus                              */
/*                                                            */
/**************************************************************/
/*
PrioritizationResponseStatus ::= ENUMERATED { unknown(0), requested(1), processing(2), watchOtherTraffic(3), granted(4), rejected(5), maxPresence(6), reserviceLocked(7), ... }
*/
struct EXTERN ETSI_DSRC_PrioritizationResponseStatus {
   enum Root {
      unknown = 0,
      requested = 1,
      processing = 2,
      watchOtherTraffic = 3,
      granted = 4,
      rejected = 5,
      maxPresence = 6,
      reserviceLocked = 7
   } ;
} ;

typedef OSUINT32 ASN1T_ETSI_DSRC_PrioritizationResponseStatus;

EXTERN int asn1PE_ETSI_DSRC_PrioritizationResponseStatus (OSCTXT* pctxt, ASN1T_ETSI_DSRC_PrioritizationResponseStatus value);

EXTERN int asn1PD_ETSI_DSRC_PrioritizationResponseStatus (OSCTXT* pctxt, ASN1T_ETSI_DSRC_PrioritizationResponseStatus* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_PrioritizationResponseStatus (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_PrioritizationResponseStatus value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_PrioritizationResponseStatus (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_PrioritizationResponseStatus* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_PrioritizationResponseStatus (OSCTXT *pctxt, ASN1T_ETSI_DSRC_PrioritizationResponseStatus *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_PrioritizationResponseStatus (OSCTXT *pctxt, ASN1T_ETSI_DSRC_PrioritizationResponseStatus *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_PrioritizationResponseStatus (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_PrioritizationResponseStatus* pvalue);

EXTERN ASN1T_ETSI_DSRC_PrioritizationResponseStatus* 
   new_ASN1T_ETSI_DSRC_PrioritizationResponseStatus (ASN1CType& ccobj);

EXTERN extern const OSEnumItem ASN1T_ETSI_DSRC_PrioritizationResponseStatus_ENUMTAB[];
#define ASN1T_ETSI_DSRC_PrioritizationResponseStatus_ENUMTABSIZE 8

EXTERN const OSUTF8CHAR* ASN1T_ETSI_DSRC_PrioritizationResponseStatus_ToString (OSINT32 value);

EXTERN int ASN1T_ETSI_DSRC_PrioritizationResponseStatus_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, 
      ASN1T_ETSI_DSRC_PrioritizationResponseStatus* pvalue);

EXTERN 
   int ASN1T_ETSI_DSRC_PrioritizationResponseStatus_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      ASN1T_ETSI_DSRC_PrioritizationResponseStatus* pvalue);

/**************************************************************/
/*                                                            */
/*  IntersectionState_regional_element                        */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'IntersectionState'
*/
struct EXTERN ASN1T_ETSI_DSRC_IntersectionState_regional_element {
   ASN1T_ETSI_DSRC_RegionId regionId;
   struct  {
      /**
       * information object selector
       */
      OSUINT16 t;

      /**
       * Reg-IntersectionState information objects
       */
      union {
         /**
          * id: addGrpC
          */
         struct ASN1T_ETSI_GrpC_IntersectionState_addGrpC *_ETSI_REG_Reg_IntersectionState_addGrpC;

         ASN1TOpenType* extElem1;
      } u;
   } regExtValue;
   ASN1T_ETSI_DSRC_IntersectionState_regional_element ();
} ;

EXTERN int asn1PE_ETSI_DSRC_IntersectionState_regional_element (OSCTXT* pctxt, ASN1T_ETSI_DSRC_IntersectionState_regional_element* pvalue);

EXTERN int asn1PD_ETSI_DSRC_IntersectionState_regional_element (OSCTXT* pctxt, ASN1T_ETSI_DSRC_IntersectionState_regional_element* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_IntersectionState_regional_element (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_IntersectionState_regional_element* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_IntersectionState_regional_element (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_IntersectionState_regional_element* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_IntersectionState_regional_element (OSCTXT *pctxt, ASN1T_ETSI_DSRC_IntersectionState_regional_element *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_IntersectionState_regional_element (OSCTXT *pctxt, ASN1T_ETSI_DSRC_IntersectionState_regional_element *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_IntersectionState_regional_element (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_IntersectionState_regional_element* pvalue);

EXTERN ASN1T_ETSI_DSRC_IntersectionState_regional_element* 
   new_ASN1T_ETSI_DSRC_IntersectionState_regional_element (ASN1CType& ccobj);

EXTERN int asn1Init_ETSI_DSRC_IntersectionState_regional_element (
   ASN1T_ETSI_DSRC_IntersectionState_regional_element* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_IntersectionState_regional_element (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_IntersectionState_regional_element* pvalue);

/**************************************************************/
/*                                                            */
/*  IntersectionState_regional                                */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'IntersectionState'
*/
/* List of ASN1T_ETSI_DSRC_IntersectionState_regional_element */
typedef ASN1TSeqOfList ASN1T_ETSI_DSRC_IntersectionState_regional;

class EXTERN ASN1C_ETSI_DSRC_IntersectionState_regional :
public ASN1CSeqOfList
{
protected:
   ASN1T_ETSI_DSRC_IntersectionState_regional& msgData;
public:
   /**
    * Control class: ASN1C_ETSI_DSRC_IntersectionState_regional
    * Data class:    ASN1T_ETSI_DSRC_IntersectionState_regional
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_IntersectionState_regional
       (ASN1T_ETSI_DSRC_IntersectionState_regional& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_IntersectionState_regional<br/>
    * Data class: ASN1T_ETSI_DSRC_IntersectionState_regional<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_IntersectionState_regional (OSRTMessageBufferIF& msgBuf
      , ASN1T_ETSI_DSRC_IntersectionState_regional& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_IntersectionState_regional<br/>
    * Data class: ASN1T_ETSI_DSRC_IntersectionState_regional<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_ETSI_DSRC_IntersectionState_regional (ASN1CType& ccobj
      , ASN1T_ETSI_DSRC_IntersectionState_regional& data);

   virtual ~ASN1C_ETSI_DSRC_IntersectionState_regional () {}

   /**
    * Data class: ASN1T_ETSI_DSRC_IntersectionState_regional_element<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_ETSI_DSRC_IntersectionState_regional_element* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_ETSI_DSRC_IntersectionState_regional_element.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_ETSI_DSRC_IntersectionState_regional_element* NewElement ();

   /**
    * Data class: ASN1T_ETSI_DSRC_IntersectionState_regional_element.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_ETSI_DSRC_IntersectionState_regional_element* AppendNewElement ();

   /* Get IE using regionId key value */
   ASN1T_ETSI_DSRC_IntersectionState_regional_element* 
      GetIE (ASN1T_ETSI_DSRC_RegionId regionId);

   /* Get all matching IEs using regionId key value */
   int GetAllIEs (ASN1T_ETSI_DSRC_RegionId regionId, 
      ASN1T_ETSI_DSRC_IntersectionState_regional* pmatches);

private:
   ASN1C_ETSI_DSRC_IntersectionState_regional& operator= (const ASN1C_ETSI_DSRC_IntersectionState_regional&) {return *this;}
} ;

EXTERN int asn1PE_ETSI_DSRC_IntersectionState_regional (OSCTXT* pctxt, ASN1T_ETSI_DSRC_IntersectionState_regional* pvalue);

EXTERN int asn1PD_ETSI_DSRC_IntersectionState_regional (OSCTXT* pctxt, ASN1T_ETSI_DSRC_IntersectionState_regional* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_IntersectionState_regional (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_IntersectionState_regional* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_IntersectionState_regional (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_IntersectionState_regional* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_IntersectionState_regional (OSCTXT *pctxt, ASN1T_ETSI_DSRC_IntersectionState_regional *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_IntersectionState_regional (OSCTXT *pctxt, ASN1T_ETSI_DSRC_IntersectionState_regional *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_IntersectionState_regional (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_IntersectionState_regional* pvalue);

EXTERN int asn1Init_ETSI_DSRC_IntersectionState_regional (
   ASN1T_ETSI_DSRC_IntersectionState_regional* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_IntersectionState_regional (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_IntersectionState_regional* pvalue);

/**************************************************************/
/*                                                            */
/*  IntersectionState                                         */
/*                                                            */
/**************************************************************/
/*
IntersectionState ::= SEQUENCE {
   name [0] DescriptiveName OPTIONAL,
   id [1] IntersectionReferenceID,
   revision [2] MsgCount,
   status [3] IntersectionStatusObject,
   moy [4] MinuteOfTheYear OPTIONAL,
   timeStamp [5] DSecond OPTIONAL,
   enabledLanes [6] EnabledLaneList OPTIONAL,
   states [7] MovementList,
   maneuverAssistList [8] ManeuverAssistList OPTIONAL,
   regional [9] SEQUENCE (SIZE (1..4)) OF SEQUENCE {
      regionId [0] REG-EXT-ID-AND-TYPE.&id ({Reg-IntersectionState}),
      regExtValue [1] EXPLICIT REG-EXT-ID-AND-TYPE.&Type ({Reg-IntersectionState}{@regionId})
   } OPTIONAL,
   ...
}
*/
struct EXTERN ASN1T_ETSI_DSRC_IntersectionState {
   struct {
      unsigned namePresent : 1;
      unsigned moyPresent : 1;
      unsigned timeStampPresent : 1;
      unsigned enabledLanesPresent : 1;
      unsigned maneuverAssistListPresent : 1;
      unsigned regionalPresent : 1;
   } m;
   ASN1T_ETSI_DSRC_DescriptiveName name;
   ASN1T_ETSI_DSRC_IntersectionReferenceID id;
   ASN1T_ETSI_DSRC_MsgCount revision;
   ASN1T_ETSI_DSRC_IntersectionStatusObject status;
   ASN1T_ETSI_DSRC_MinuteOfTheYear moy;
   ASN1T_ETSI_DSRC_DSecond timeStamp;
   ASN1T_ETSI_DSRC_EnabledLaneList enabledLanes;
   ASN1T_ETSI_DSRC_MovementList states;
   ASN1T_ETSI_DSRC_ManeuverAssistList maneuverAssistList;
   ASN1T_ETSI_DSRC_IntersectionState_regional regional;
   ASN1TSeqExt extElem1;
   ASN1T_ETSI_DSRC_IntersectionState ();
} ;

EXTERN int asn1PE_ETSI_DSRC_IntersectionState (OSCTXT* pctxt, ASN1T_ETSI_DSRC_IntersectionState* pvalue);

EXTERN int asn1PD_ETSI_DSRC_IntersectionState (OSCTXT* pctxt, ASN1T_ETSI_DSRC_IntersectionState* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_IntersectionState (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_IntersectionState* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_IntersectionState (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_IntersectionState* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_IntersectionState (OSCTXT *pctxt, ASN1T_ETSI_DSRC_IntersectionState *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_IntersectionState (OSCTXT *pctxt, ASN1T_ETSI_DSRC_IntersectionState *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_IntersectionState (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_IntersectionState* pvalue);

EXTERN ASN1T_ETSI_DSRC_IntersectionState* 
   new_ASN1T_ETSI_DSRC_IntersectionState (ASN1CType& ccobj);

EXTERN int asn1Init_ETSI_DSRC_IntersectionState (
   ASN1T_ETSI_DSRC_IntersectionState* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_IntersectionState (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_IntersectionState* pvalue);

/**************************************************************/
/*                                                            */
/*  IntersectionStateList                                     */
/*                                                            */
/**************************************************************/
/*
IntersectionStateList ::= SEQUENCE (SIZE (1..32)) OF IntersectionState
*/
/* List of ASN1T_ETSI_DSRC_IntersectionState */
typedef ASN1TSeqOfList ASN1T_ETSI_DSRC_IntersectionStateList;

class EXTERN ASN1C_ETSI_DSRC_IntersectionStateList :
public ASN1CSeqOfList
{
protected:
   ASN1T_ETSI_DSRC_IntersectionStateList& msgData;
public:
   /**
    * Control class: ASN1C_ETSI_DSRC_IntersectionStateList
    * Data class:    ASN1T_ETSI_DSRC_IntersectionStateList
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_IntersectionStateList
       (ASN1T_ETSI_DSRC_IntersectionStateList& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_IntersectionStateList<br/>
    * Data class: ASN1T_ETSI_DSRC_IntersectionStateList<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_IntersectionStateList (OSRTMessageBufferIF& msgBuf
      , ASN1T_ETSI_DSRC_IntersectionStateList& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_IntersectionStateList<br/>
    * Data class: ASN1T_ETSI_DSRC_IntersectionStateList<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_ETSI_DSRC_IntersectionStateList (ASN1CType& ccobj
      , ASN1T_ETSI_DSRC_IntersectionStateList& data);

   virtual ~ASN1C_ETSI_DSRC_IntersectionStateList () {}

   /**
    * Data class: ASN1T_ETSI_DSRC_IntersectionState<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_ETSI_DSRC_IntersectionState* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_ETSI_DSRC_IntersectionState.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_ETSI_DSRC_IntersectionState* NewElement ();

   /**
    * Data class: ASN1T_ETSI_DSRC_IntersectionState.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_ETSI_DSRC_IntersectionState* AppendNewElement ();

private:
   ASN1C_ETSI_DSRC_IntersectionStateList& operator= (const ASN1C_ETSI_DSRC_IntersectionStateList&) {return *this;}
} ;

EXTERN int asn1PE_ETSI_DSRC_IntersectionStateList (OSCTXT* pctxt, ASN1T_ETSI_DSRC_IntersectionStateList* pvalue);

EXTERN int asn1PD_ETSI_DSRC_IntersectionStateList (OSCTXT* pctxt, ASN1T_ETSI_DSRC_IntersectionStateList* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_IntersectionStateList (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_IntersectionStateList* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_IntersectionStateList (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_IntersectionStateList* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_IntersectionStateList (OSCTXT *pctxt, ASN1T_ETSI_DSRC_IntersectionStateList *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_IntersectionStateList (OSCTXT *pctxt, ASN1T_ETSI_DSRC_IntersectionStateList *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_IntersectionStateList (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_IntersectionStateList* pvalue);

EXTERN int asn1Init_ETSI_DSRC_IntersectionStateList (
   ASN1T_ETSI_DSRC_IntersectionStateList* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_IntersectionStateList (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_IntersectionStateList* pvalue);

/**************************************************************/
/*                                                            */
/*  SPAT_regional_element                                     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'SPAT'
*/
struct EXTERN ASN1T_ETSI_DSRC_SPAT_regional_element {
   ASN1T_ETSI_DSRC_RegionId regionId;
   ASN1TOpenType regExtValue;
} ;

EXTERN int asn1PE_ETSI_DSRC_SPAT_regional_element (OSCTXT* pctxt, ASN1T_ETSI_DSRC_SPAT_regional_element* pvalue);

EXTERN int asn1PD_ETSI_DSRC_SPAT_regional_element (OSCTXT* pctxt, ASN1T_ETSI_DSRC_SPAT_regional_element* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_SPAT_regional_element (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_SPAT_regional_element* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_SPAT_regional_element (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_SPAT_regional_element* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_SPAT_regional_element (OSCTXT *pctxt, ASN1T_ETSI_DSRC_SPAT_regional_element *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_SPAT_regional_element (OSCTXT *pctxt, ASN1T_ETSI_DSRC_SPAT_regional_element *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_SPAT_regional_element (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_SPAT_regional_element* pvalue);

EXTERN ASN1T_ETSI_DSRC_SPAT_regional_element* 
   new_ASN1T_ETSI_DSRC_SPAT_regional_element (ASN1CType& ccobj);

EXTERN int asn1Init_ETSI_DSRC_SPAT_regional_element (
   ASN1T_ETSI_DSRC_SPAT_regional_element* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_SPAT_regional_element (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_SPAT_regional_element* pvalue);

/**************************************************************/
/*                                                            */
/*  SPAT_regional                                             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'SPAT'
*/
/* List of ASN1T_ETSI_DSRC_SPAT_regional_element */
typedef ASN1TSeqOfList ASN1T_ETSI_DSRC_SPAT_regional;

class EXTERN ASN1C_ETSI_DSRC_SPAT_regional :
public ASN1CSeqOfList
{
protected:
   ASN1T_ETSI_DSRC_SPAT_regional& msgData;
public:
   /**
    * Control class: ASN1C_ETSI_DSRC_SPAT_regional
    * Data class:    ASN1T_ETSI_DSRC_SPAT_regional
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_SPAT_regional (ASN1T_ETSI_DSRC_SPAT_regional& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_SPAT_regional<br/>
    * Data class: ASN1T_ETSI_DSRC_SPAT_regional<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_SPAT_regional (OSRTMessageBufferIF& msgBuf
      , ASN1T_ETSI_DSRC_SPAT_regional& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_SPAT_regional<br/>
    * Data class: ASN1T_ETSI_DSRC_SPAT_regional<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_ETSI_DSRC_SPAT_regional (ASN1CType& ccobj
      , ASN1T_ETSI_DSRC_SPAT_regional& data);

   virtual ~ASN1C_ETSI_DSRC_SPAT_regional () {}

   /**
    * Data class: ASN1T_ETSI_DSRC_SPAT_regional_element<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_ETSI_DSRC_SPAT_regional_element* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_ETSI_DSRC_SPAT_regional_element.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_ETSI_DSRC_SPAT_regional_element* NewElement ();

   /**
    * Data class: ASN1T_ETSI_DSRC_SPAT_regional_element.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_ETSI_DSRC_SPAT_regional_element* AppendNewElement ();

   /* Get IE using regionId key value */
   ASN1T_ETSI_DSRC_SPAT_regional_element* 
      GetIE (ASN1T_ETSI_DSRC_RegionId regionId);

   /* Get all matching IEs using regionId key value */
   int GetAllIEs (ASN1T_ETSI_DSRC_RegionId regionId, 
      ASN1T_ETSI_DSRC_SPAT_regional* pmatches);

private:
   ASN1C_ETSI_DSRC_SPAT_regional& operator= (const ASN1C_ETSI_DSRC_SPAT_regional&) {return *this;}
} ;

EXTERN int asn1PE_ETSI_DSRC_SPAT_regional (OSCTXT* pctxt, ASN1T_ETSI_DSRC_SPAT_regional* pvalue);

EXTERN int asn1PD_ETSI_DSRC_SPAT_regional (OSCTXT* pctxt, ASN1T_ETSI_DSRC_SPAT_regional* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_SPAT_regional (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_SPAT_regional* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_SPAT_regional (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_SPAT_regional* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_SPAT_regional (OSCTXT *pctxt, ASN1T_ETSI_DSRC_SPAT_regional *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_SPAT_regional (OSCTXT *pctxt, ASN1T_ETSI_DSRC_SPAT_regional *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_SPAT_regional (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_SPAT_regional* pvalue);

EXTERN int asn1Init_ETSI_DSRC_SPAT_regional (ASN1T_ETSI_DSRC_SPAT_regional* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_SPAT_regional (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_SPAT_regional* pvalue);

/**************************************************************/
/*                                                            */
/*  SPAT                                                      */
/*                                                            */
/**************************************************************/
/*
SPAT ::= SEQUENCE {
   timeStamp [0] MinuteOfTheYear OPTIONAL,
   name [1] DescriptiveName OPTIONAL,
   intersections [2] IntersectionStateList,
   regional [3] SEQUENCE (SIZE (1..4)) OF SEQUENCE {
      regionId [0] REG-EXT-ID-AND-TYPE.&id ({Reg-SPAT}),
      regExtValue [1] EXPLICIT REG-EXT-ID-AND-TYPE.&Type ({Reg-SPAT}{@regionId})
   } OPTIONAL,
   ...
}
*/
struct EXTERN ASN1T_ETSI_DSRC_SPAT {
   struct {
      unsigned timeStampPresent : 1;
      unsigned namePresent : 1;
      unsigned regionalPresent : 1;
   } m;
   ASN1T_ETSI_DSRC_MinuteOfTheYear timeStamp;
   ASN1T_ETSI_DSRC_DescriptiveName name;
   ASN1T_ETSI_DSRC_IntersectionStateList intersections;
   ASN1T_ETSI_DSRC_SPAT_regional regional;
   ASN1TSeqExt extElem1;
   ASN1T_ETSI_DSRC_SPAT ();
} ;

EXTERN int asn1PE_ETSI_DSRC_SPAT (OSCTXT* pctxt, ASN1T_ETSI_DSRC_SPAT* pvalue);

EXTERN int asn1PD_ETSI_DSRC_SPAT (OSCTXT* pctxt, ASN1T_ETSI_DSRC_SPAT* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_SPAT (OSCTXT* pctxt, ASN1T_ETSI_DSRC_SPAT* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_SPAT (OSCTXT* pctxt, ASN1T_ETSI_DSRC_SPAT* pvalue)
   ;

EXTERN int asn1JsonEnc_ETSI_DSRC_SPAT (OSCTXT *pctxt, ASN1T_ETSI_DSRC_SPAT *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_SPAT (OSCTXT *pctxt, ASN1T_ETSI_DSRC_SPAT *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_SPAT (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_SPAT* pvalue);

EXTERN ASN1T_ETSI_DSRC_SPAT* new_ASN1T_ETSI_DSRC_SPAT (ASN1CType& ccobj);

EXTERN int asn1Init_ETSI_DSRC_SPAT (ASN1T_ETSI_DSRC_SPAT* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_SPAT (OSCTXT *pctxt, ASN1T_ETSI_DSRC_SPAT* pvalue);

/**************************************************************/
/*                                                            */
/*  RequestID                                                 */
/*                                                            */
/**************************************************************/
/*
RequestID ::= INTEGER (0..255)
*/
typedef OSUINT8 ASN1T_ETSI_DSRC_RequestID;

EXTERN int asn1PE_ETSI_DSRC_RequestID (OSCTXT* pctxt, ASN1T_ETSI_DSRC_RequestID value);

EXTERN int asn1PD_ETSI_DSRC_RequestID (OSCTXT* pctxt, ASN1T_ETSI_DSRC_RequestID* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_RequestID (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_RequestID value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_RequestID (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_RequestID* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_RequestID (OSCTXT *pctxt, ASN1T_ETSI_DSRC_RequestID *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_RequestID (OSCTXT *pctxt, ASN1T_ETSI_DSRC_RequestID *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_RequestID (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_RequestID* pvalue);

EXTERN ASN1T_ETSI_DSRC_RequestID* 
   new_ASN1T_ETSI_DSRC_RequestID (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  PriorityRequestType                                       */
/*                                                            */
/**************************************************************/
/*
PriorityRequestType ::= ENUMERATED { priorityRequestTypeReserved(0), priorityRequest(1), priorityRequestUpdate(2), priorityCancellation(3), ... }
*/
struct EXTERN ETSI_DSRC_PriorityRequestType {
   enum Root {
      priorityRequestTypeReserved = 0,
      priorityRequest = 1,
      priorityRequestUpdate = 2,
      priorityCancellation = 3
   } ;
} ;

typedef OSUINT32 ASN1T_ETSI_DSRC_PriorityRequestType;

EXTERN int asn1PE_ETSI_DSRC_PriorityRequestType (OSCTXT* pctxt, ASN1T_ETSI_DSRC_PriorityRequestType value);

EXTERN int asn1PD_ETSI_DSRC_PriorityRequestType (OSCTXT* pctxt, ASN1T_ETSI_DSRC_PriorityRequestType* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_PriorityRequestType (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_PriorityRequestType value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_PriorityRequestType (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_PriorityRequestType* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_PriorityRequestType (OSCTXT *pctxt, ASN1T_ETSI_DSRC_PriorityRequestType *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_PriorityRequestType (OSCTXT *pctxt, ASN1T_ETSI_DSRC_PriorityRequestType *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_PriorityRequestType (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_PriorityRequestType* pvalue);

EXTERN ASN1T_ETSI_DSRC_PriorityRequestType* 
   new_ASN1T_ETSI_DSRC_PriorityRequestType (ASN1CType& ccobj);

EXTERN extern const OSEnumItem ASN1T_ETSI_DSRC_PriorityRequestType_ENUMTAB[];
#define ASN1T_ETSI_DSRC_PriorityRequestType_ENUMTABSIZE 4

EXTERN const OSUTF8CHAR* ASN1T_ETSI_DSRC_PriorityRequestType_ToString (OSINT32 value);

EXTERN int ASN1T_ETSI_DSRC_PriorityRequestType_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, ASN1T_ETSI_DSRC_PriorityRequestType* pvalue);

EXTERN int ASN1T_ETSI_DSRC_PriorityRequestType_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      ASN1T_ETSI_DSRC_PriorityRequestType* pvalue);

/**************************************************************/
/*                                                            */
/*  IntersectionAccessPoint                                   */
/*                                                            */
/**************************************************************/
/*
IntersectionAccessPoint ::= CHOICE {
   lane [0] LaneID,
   approach [1] ApproachID,
   connection [2] LaneConnectionID,
   ...
}
*/
/* Choice tag constants */

#define T_ETSI_DSRC_IntersectionAccessPoint_lane 1
#define T_ETSI_DSRC_IntersectionAccessPoint_approach 2
#define T_ETSI_DSRC_IntersectionAccessPoint_connection 3
#define T_ETSI_DSRC_IntersectionAccessPoint_extElem1 4

struct EXTERN ASN1T_ETSI_DSRC_IntersectionAccessPoint {
   OSINT32 t;
   union {
      /* t = 1 */
      ASN1T_ETSI_DSRC_LaneID lane;
      /* t = 2 */
      ASN1T_ETSI_DSRC_ApproachID approach;
      /* t = 3 */
      ASN1T_ETSI_DSRC_LaneConnectionID connection;
      /* t = 4 */
      ASN1TOpenType *extElem1;
   } u;
   ASN1T_ETSI_DSRC_IntersectionAccessPoint () { t = 0; OSCRTLMEMSET (&u, 0, sizeof(u)); }
} ;

EXTERN int asn1PE_ETSI_DSRC_IntersectionAccessPoint (OSCTXT* pctxt, ASN1T_ETSI_DSRC_IntersectionAccessPoint* pvalue);

EXTERN int asn1PD_ETSI_DSRC_IntersectionAccessPoint (OSCTXT* pctxt, ASN1T_ETSI_DSRC_IntersectionAccessPoint* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_IntersectionAccessPoint (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_IntersectionAccessPoint* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_IntersectionAccessPoint (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_IntersectionAccessPoint* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_IntersectionAccessPoint (OSCTXT *pctxt, ASN1T_ETSI_DSRC_IntersectionAccessPoint *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_IntersectionAccessPoint (OSCTXT *pctxt, ASN1T_ETSI_DSRC_IntersectionAccessPoint *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_IntersectionAccessPoint (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_IntersectionAccessPoint* pvalue);

EXTERN ASN1T_ETSI_DSRC_IntersectionAccessPoint* 
   new_ASN1T_ETSI_DSRC_IntersectionAccessPoint (ASN1CType& ccobj);

EXTERN int asn1Init_ETSI_DSRC_IntersectionAccessPoint (
   ASN1T_ETSI_DSRC_IntersectionAccessPoint* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_IntersectionAccessPoint (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_IntersectionAccessPoint* pvalue);

/**************************************************************/
/*                                                            */
/*  SignalRequest_regional_element                            */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'SignalRequest'
*/
struct EXTERN ASN1T_ETSI_DSRC_SignalRequest_regional_element {
   ASN1T_ETSI_DSRC_RegionId regionId;
   ASN1TOpenType regExtValue;
} ;

EXTERN int asn1PE_ETSI_DSRC_SignalRequest_regional_element (OSCTXT* pctxt, ASN1T_ETSI_DSRC_SignalRequest_regional_element* pvalue);

EXTERN int asn1PD_ETSI_DSRC_SignalRequest_regional_element (OSCTXT* pctxt, ASN1T_ETSI_DSRC_SignalRequest_regional_element* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_SignalRequest_regional_element (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_SignalRequest_regional_element* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_SignalRequest_regional_element (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_SignalRequest_regional_element* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_SignalRequest_regional_element (OSCTXT *pctxt, ASN1T_ETSI_DSRC_SignalRequest_regional_element *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_SignalRequest_regional_element (OSCTXT *pctxt, ASN1T_ETSI_DSRC_SignalRequest_regional_element *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_SignalRequest_regional_element (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_SignalRequest_regional_element* pvalue);

EXTERN ASN1T_ETSI_DSRC_SignalRequest_regional_element* 
   new_ASN1T_ETSI_DSRC_SignalRequest_regional_element (ASN1CType& ccobj);

EXTERN int asn1Init_ETSI_DSRC_SignalRequest_regional_element (
   ASN1T_ETSI_DSRC_SignalRequest_regional_element* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_SignalRequest_regional_element (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_SignalRequest_regional_element* pvalue);

/**************************************************************/
/*                                                            */
/*  SignalRequest_regional                                    */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'SignalRequest'
*/
/* List of ASN1T_ETSI_DSRC_SignalRequest_regional_element */
typedef ASN1TSeqOfList ASN1T_ETSI_DSRC_SignalRequest_regional;

class EXTERN ASN1C_ETSI_DSRC_SignalRequest_regional :
public ASN1CSeqOfList
{
protected:
   ASN1T_ETSI_DSRC_SignalRequest_regional& msgData;
public:
   /**
    * Control class: ASN1C_ETSI_DSRC_SignalRequest_regional
    * Data class:    ASN1T_ETSI_DSRC_SignalRequest_regional
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_SignalRequest_regional
       (ASN1T_ETSI_DSRC_SignalRequest_regional& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_SignalRequest_regional<br/>
    * Data class: ASN1T_ETSI_DSRC_SignalRequest_regional<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_SignalRequest_regional (OSRTMessageBufferIF& msgBuf
      , ASN1T_ETSI_DSRC_SignalRequest_regional& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_SignalRequest_regional<br/>
    * Data class: ASN1T_ETSI_DSRC_SignalRequest_regional<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_ETSI_DSRC_SignalRequest_regional (ASN1CType& ccobj
      , ASN1T_ETSI_DSRC_SignalRequest_regional& data);

   virtual ~ASN1C_ETSI_DSRC_SignalRequest_regional () {}

   /**
    * Data class: ASN1T_ETSI_DSRC_SignalRequest_regional_element<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_ETSI_DSRC_SignalRequest_regional_element* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_ETSI_DSRC_SignalRequest_regional_element.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_ETSI_DSRC_SignalRequest_regional_element* NewElement ();

   /**
    * Data class: ASN1T_ETSI_DSRC_SignalRequest_regional_element.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_ETSI_DSRC_SignalRequest_regional_element* AppendNewElement ();

   /* Get IE using regionId key value */
   ASN1T_ETSI_DSRC_SignalRequest_regional_element* 
      GetIE (ASN1T_ETSI_DSRC_RegionId regionId);

   /* Get all matching IEs using regionId key value */
   int GetAllIEs (ASN1T_ETSI_DSRC_RegionId regionId, 
      ASN1T_ETSI_DSRC_SignalRequest_regional* pmatches);

private:
   ASN1C_ETSI_DSRC_SignalRequest_regional& operator= (const ASN1C_ETSI_DSRC_SignalRequest_regional&) {return *this;}
} ;

EXTERN int asn1PE_ETSI_DSRC_SignalRequest_regional (OSCTXT* pctxt, ASN1T_ETSI_DSRC_SignalRequest_regional* pvalue);

EXTERN int asn1PD_ETSI_DSRC_SignalRequest_regional (OSCTXT* pctxt, ASN1T_ETSI_DSRC_SignalRequest_regional* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_SignalRequest_regional (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_SignalRequest_regional* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_SignalRequest_regional (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_SignalRequest_regional* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_SignalRequest_regional (OSCTXT *pctxt, ASN1T_ETSI_DSRC_SignalRequest_regional *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_SignalRequest_regional (OSCTXT *pctxt, ASN1T_ETSI_DSRC_SignalRequest_regional *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_SignalRequest_regional (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_SignalRequest_regional* pvalue);

EXTERN int asn1Init_ETSI_DSRC_SignalRequest_regional (
   ASN1T_ETSI_DSRC_SignalRequest_regional* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_SignalRequest_regional (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_SignalRequest_regional* pvalue);

/**************************************************************/
/*                                                            */
/*  SignalRequest                                             */
/*                                                            */
/**************************************************************/
/*
SignalRequest ::= SEQUENCE {
   id [0] IntersectionReferenceID,
   requestID [1] RequestID,
   requestType [2] PriorityRequestType,
   inBoundLane [3] EXPLICIT IntersectionAccessPoint,
   outBoundLane [4] EXPLICIT IntersectionAccessPoint OPTIONAL,
   regional [5] SEQUENCE (SIZE (1..4)) OF SEQUENCE {
      regionId [0] REG-EXT-ID-AND-TYPE.&id ({Reg-SignalRequest}),
      regExtValue [1] EXPLICIT REG-EXT-ID-AND-TYPE.&Type ({Reg-SignalRequest}{@regionId})
   } OPTIONAL,
   ...
}
*/
struct EXTERN ASN1T_ETSI_DSRC_SignalRequest {
   struct {
      unsigned outBoundLanePresent : 1;
      unsigned regionalPresent : 1;
   } m;
   ASN1T_ETSI_DSRC_IntersectionReferenceID id;
   ASN1T_ETSI_DSRC_RequestID requestID;
   ASN1T_ETSI_DSRC_PriorityRequestType requestType;
   ASN1T_ETSI_DSRC_IntersectionAccessPoint inBoundLane;
   ASN1T_ETSI_DSRC_IntersectionAccessPoint outBoundLane;
   ASN1T_ETSI_DSRC_SignalRequest_regional regional;
   ASN1TSeqExt extElem1;
   ASN1T_ETSI_DSRC_SignalRequest ();
} ;

EXTERN int asn1PE_ETSI_DSRC_SignalRequest (OSCTXT* pctxt, ASN1T_ETSI_DSRC_SignalRequest* pvalue);

EXTERN int asn1PD_ETSI_DSRC_SignalRequest (OSCTXT* pctxt, ASN1T_ETSI_DSRC_SignalRequest* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_SignalRequest (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_SignalRequest* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_SignalRequest (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_SignalRequest* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_SignalRequest (OSCTXT *pctxt, ASN1T_ETSI_DSRC_SignalRequest *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_SignalRequest (OSCTXT *pctxt, ASN1T_ETSI_DSRC_SignalRequest *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_SignalRequest (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_SignalRequest* pvalue);

EXTERN ASN1T_ETSI_DSRC_SignalRequest* 
   new_ASN1T_ETSI_DSRC_SignalRequest (ASN1CType& ccobj);

EXTERN int asn1Init_ETSI_DSRC_SignalRequest (ASN1T_ETSI_DSRC_SignalRequest* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_SignalRequest (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_SignalRequest* pvalue);

/**************************************************************/
/*                                                            */
/*  SignalRequestPackage_regional_element                     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'SignalRequestPackage'
*/
struct EXTERN ASN1T_ETSI_DSRC_SignalRequestPackage_regional_element {
   ASN1T_ETSI_DSRC_RegionId regionId;
   ASN1TOpenType regExtValue;
} ;

EXTERN int asn1PE_ETSI_DSRC_SignalRequestPackage_regional_element (OSCTXT* pctxt, ASN1T_ETSI_DSRC_SignalRequestPackage_regional_element* pvalue);

EXTERN int asn1PD_ETSI_DSRC_SignalRequestPackage_regional_element (OSCTXT* pctxt, ASN1T_ETSI_DSRC_SignalRequestPackage_regional_element* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_SignalRequestPackage_regional_element 
   (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_SignalRequestPackage_regional_element* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_SignalRequestPackage_regional_element 
   (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_SignalRequestPackage_regional_element* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_SignalRequestPackage_regional_element (OSCTXT *pctxt, ASN1T_ETSI_DSRC_SignalRequestPackage_regional_element *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_SignalRequestPackage_regional_element (OSCTXT *pctxt, ASN1T_ETSI_DSRC_SignalRequestPackage_regional_element *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_SignalRequestPackage_regional_element (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_SignalRequestPackage_regional_element* pvalue);

EXTERN ASN1T_ETSI_DSRC_SignalRequestPackage_regional_element* 
   new_ASN1T_ETSI_DSRC_SignalRequestPackage_regional_element (ASN1CType& ccobj)
   ;

EXTERN int asn1Init_ETSI_DSRC_SignalRequestPackage_regional_element (
   ASN1T_ETSI_DSRC_SignalRequestPackage_regional_element* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_SignalRequestPackage_regional_element (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_SignalRequestPackage_regional_element* pvalue);

/**************************************************************/
/*                                                            */
/*  SignalRequestPackage_regional                             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'SignalRequestPackage'
*/
/* List of ASN1T_ETSI_DSRC_SignalRequestPackage_regional_element */
typedef ASN1TSeqOfList ASN1T_ETSI_DSRC_SignalRequestPackage_regional;

class EXTERN ASN1C_ETSI_DSRC_SignalRequestPackage_regional :
public ASN1CSeqOfList
{
protected:
   ASN1T_ETSI_DSRC_SignalRequestPackage_regional& msgData;
public:
   /**
    * Control class: ASN1C_ETSI_DSRC_SignalRequestPackage_regional
    * Data class:    ASN1T_ETSI_DSRC_SignalRequestPackage_regional
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_SignalRequestPackage_regional
       (ASN1T_ETSI_DSRC_SignalRequestPackage_regional& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_SignalRequestPackage_regional<br/>
    * Data class: ASN1T_ETSI_DSRC_SignalRequestPackage_regional<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_SignalRequestPackage_regional (OSRTMessageBufferIF& msgBuf
      , ASN1T_ETSI_DSRC_SignalRequestPackage_regional& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_SignalRequestPackage_regional<br/>
    * Data class: ASN1T_ETSI_DSRC_SignalRequestPackage_regional<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_ETSI_DSRC_SignalRequestPackage_regional (ASN1CType& ccobj
      , ASN1T_ETSI_DSRC_SignalRequestPackage_regional& data);

   virtual ~ASN1C_ETSI_DSRC_SignalRequestPackage_regional () {}

   /**
    * Data class: ASN1T_ETSI_DSRC_SignalRequestPackage_regional_element<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_ETSI_DSRC_SignalRequestPackage_regional_element* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_ETSI_DSRC_SignalRequestPackage_regional_element.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_ETSI_DSRC_SignalRequestPackage_regional_element* NewElement ();

   /**
    * Data class: ASN1T_ETSI_DSRC_SignalRequestPackage_regional_element.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_ETSI_DSRC_SignalRequestPackage_regional_element* AppendNewElement ();

   /* Get IE using regionId key value */
   ASN1T_ETSI_DSRC_SignalRequestPackage_regional_element* 
      GetIE (ASN1T_ETSI_DSRC_RegionId regionId);

   /* Get all matching IEs using regionId key value */
   int GetAllIEs (ASN1T_ETSI_DSRC_RegionId regionId, 
      ASN1T_ETSI_DSRC_SignalRequestPackage_regional* pmatches);

private:
   ASN1C_ETSI_DSRC_SignalRequestPackage_regional& operator= (const ASN1C_ETSI_DSRC_SignalRequestPackage_regional&) {return *this;}
} ;

EXTERN int asn1PE_ETSI_DSRC_SignalRequestPackage_regional (OSCTXT* pctxt, ASN1T_ETSI_DSRC_SignalRequestPackage_regional* pvalue);

EXTERN int asn1PD_ETSI_DSRC_SignalRequestPackage_regional (OSCTXT* pctxt, ASN1T_ETSI_DSRC_SignalRequestPackage_regional* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_SignalRequestPackage_regional (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_SignalRequestPackage_regional* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_SignalRequestPackage_regional (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_SignalRequestPackage_regional* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_SignalRequestPackage_regional (OSCTXT *pctxt, ASN1T_ETSI_DSRC_SignalRequestPackage_regional *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_SignalRequestPackage_regional (OSCTXT *pctxt, ASN1T_ETSI_DSRC_SignalRequestPackage_regional *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_SignalRequestPackage_regional (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_SignalRequestPackage_regional* pvalue);

EXTERN int asn1Init_ETSI_DSRC_SignalRequestPackage_regional (
   ASN1T_ETSI_DSRC_SignalRequestPackage_regional* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_SignalRequestPackage_regional (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_SignalRequestPackage_regional* pvalue);

/**************************************************************/
/*                                                            */
/*  SignalRequestPackage                                      */
/*                                                            */
/**************************************************************/
/*
SignalRequestPackage ::= SEQUENCE {
   request [0] SignalRequest,
   minute [1] MinuteOfTheYear OPTIONAL,
   second [2] DSecond OPTIONAL,
   duration [3] DSecond OPTIONAL,
   regional [4] SEQUENCE (SIZE (1..4)) OF SEQUENCE {
      regionId [0] REG-EXT-ID-AND-TYPE.&id ({Reg-SignalRequestPackage}),
      regExtValue [1] EXPLICIT REG-EXT-ID-AND-TYPE.&Type ({Reg-SignalRequestPackage}{@regionId})
   } OPTIONAL,
   ...
}
*/
struct EXTERN ASN1T_ETSI_DSRC_SignalRequestPackage {
   struct {
      unsigned minutePresent : 1;
      unsigned secondPresent : 1;
      unsigned durationPresent : 1;
      unsigned regionalPresent : 1;
   } m;
   ASN1T_ETSI_DSRC_SignalRequest request;
   ASN1T_ETSI_DSRC_MinuteOfTheYear minute;
   ASN1T_ETSI_DSRC_DSecond second;
   ASN1T_ETSI_DSRC_DSecond duration;
   ASN1T_ETSI_DSRC_SignalRequestPackage_regional regional;
   ASN1TSeqExt extElem1;
   ASN1T_ETSI_DSRC_SignalRequestPackage ();
} ;

EXTERN int asn1PE_ETSI_DSRC_SignalRequestPackage (OSCTXT* pctxt, ASN1T_ETSI_DSRC_SignalRequestPackage* pvalue);

EXTERN int asn1PD_ETSI_DSRC_SignalRequestPackage (OSCTXT* pctxt, ASN1T_ETSI_DSRC_SignalRequestPackage* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_SignalRequestPackage (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_SignalRequestPackage* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_SignalRequestPackage (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_SignalRequestPackage* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_SignalRequestPackage (OSCTXT *pctxt, ASN1T_ETSI_DSRC_SignalRequestPackage *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_SignalRequestPackage (OSCTXT *pctxt, ASN1T_ETSI_DSRC_SignalRequestPackage *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_SignalRequestPackage (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_SignalRequestPackage* pvalue);

EXTERN ASN1T_ETSI_DSRC_SignalRequestPackage* 
   new_ASN1T_ETSI_DSRC_SignalRequestPackage (ASN1CType& ccobj);

EXTERN int asn1Init_ETSI_DSRC_SignalRequestPackage (
   ASN1T_ETSI_DSRC_SignalRequestPackage* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_SignalRequestPackage (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_SignalRequestPackage* pvalue);

/**************************************************************/
/*                                                            */
/*  SignalRequestList                                         */
/*                                                            */
/**************************************************************/
/*
SignalRequestList ::= SEQUENCE (SIZE (1..32)) OF SignalRequestPackage
*/
/* List of ASN1T_ETSI_DSRC_SignalRequestPackage */
typedef ASN1TSeqOfList ASN1T_ETSI_DSRC_SignalRequestList;

class EXTERN ASN1C_ETSI_DSRC_SignalRequestList :
public ASN1CSeqOfList
{
protected:
   ASN1T_ETSI_DSRC_SignalRequestList& msgData;
public:
   /**
    * Control class: ASN1C_ETSI_DSRC_SignalRequestList
    * Data class:    ASN1T_ETSI_DSRC_SignalRequestList
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_SignalRequestList (ASN1T_ETSI_DSRC_SignalRequestList& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_SignalRequestList<br/>
    * Data class: ASN1T_ETSI_DSRC_SignalRequestList<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_SignalRequestList (OSRTMessageBufferIF& msgBuf
      , ASN1T_ETSI_DSRC_SignalRequestList& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_SignalRequestList<br/>
    * Data class: ASN1T_ETSI_DSRC_SignalRequestList<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_ETSI_DSRC_SignalRequestList (ASN1CType& ccobj
      , ASN1T_ETSI_DSRC_SignalRequestList& data);

   virtual ~ASN1C_ETSI_DSRC_SignalRequestList () {}

   /**
    * Data class: ASN1T_ETSI_DSRC_SignalRequestPackage<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_ETSI_DSRC_SignalRequestPackage* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_ETSI_DSRC_SignalRequestPackage.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_ETSI_DSRC_SignalRequestPackage* NewElement ();

   /**
    * Data class: ASN1T_ETSI_DSRC_SignalRequestPackage.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_ETSI_DSRC_SignalRequestPackage* AppendNewElement ();

private:
   ASN1C_ETSI_DSRC_SignalRequestList& operator= (const ASN1C_ETSI_DSRC_SignalRequestList&) {return *this;}
} ;

EXTERN int asn1PE_ETSI_DSRC_SignalRequestList (OSCTXT* pctxt, ASN1T_ETSI_DSRC_SignalRequestList* pvalue);

EXTERN int asn1PD_ETSI_DSRC_SignalRequestList (OSCTXT* pctxt, ASN1T_ETSI_DSRC_SignalRequestList* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_SignalRequestList (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_SignalRequestList* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_SignalRequestList (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_SignalRequestList* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_SignalRequestList (OSCTXT *pctxt, ASN1T_ETSI_DSRC_SignalRequestList *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_SignalRequestList (OSCTXT *pctxt, ASN1T_ETSI_DSRC_SignalRequestList *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_SignalRequestList (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_SignalRequestList* pvalue);

EXTERN int asn1Init_ETSI_DSRC_SignalRequestList (
   ASN1T_ETSI_DSRC_SignalRequestList* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_SignalRequestList (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_SignalRequestList* pvalue);

/**************************************************************/
/*                                                            */
/*  TemporaryID                                               */
/*                                                            */
/**************************************************************/
/*
TemporaryID ::= OCTET STRING (SIZE (4))
*/
struct EXTERN ASN1T_ETSI_DSRC_TemporaryID {
   OSOCTET data[4];
   // ctors
   ASN1T_ETSI_DSRC_TemporaryID () {}
   ASN1T_ETSI_DSRC_TemporaryID (const OSOCTET* _data) {
      OSCRTLSAFEMEMCPY (data, sizeof(data), _data, 4);
   }
   ASN1T_ETSI_DSRC_TemporaryID (const char* cstring) {
      if (!OS_ISEMPTY (cstring)) {
         OSCRTLSAFEMEMCPY (data, sizeof(data), cstring, sizeof(data));
      }
   }
   // assignment operators
   ASN1T_ETSI_DSRC_TemporaryID& operator= (const char* cstring) {
      if (!OS_ISEMPTY (cstring)) {
         OSCRTLSAFEMEMCPY (data, sizeof(data), cstring, sizeof(data));
      }
      return *this;
   }
} ;

EXTERN int asn1PE_ETSI_DSRC_TemporaryID (OSCTXT* pctxt, ASN1T_ETSI_DSRC_TemporaryID* pvalue);

EXTERN int asn1PD_ETSI_DSRC_TemporaryID (OSCTXT* pctxt, ASN1T_ETSI_DSRC_TemporaryID* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_TemporaryID (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_TemporaryID* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_TemporaryID (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_TemporaryID* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_TemporaryID (OSCTXT *pctxt, ASN1T_ETSI_DSRC_TemporaryID *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_TemporaryID (OSCTXT *pctxt, ASN1T_ETSI_DSRC_TemporaryID *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_TemporaryID (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_TemporaryID* pvalue);

EXTERN ASN1T_ETSI_DSRC_TemporaryID* 
   new_ASN1T_ETSI_DSRC_TemporaryID (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  VehicleID                                                 */
/*                                                            */
/**************************************************************/
/*
VehicleID ::= CHOICE {
   entityID [0] TemporaryID,
   stationID [1] StationID
}
*/
/* Choice tag constants */

#define T_ETSI_DSRC_VehicleID_entityID  1
#define T_ETSI_DSRC_VehicleID_stationID 2

struct EXTERN ASN1T_ETSI_DSRC_VehicleID {
   OSINT32 t;
   union {
      /* t = 1 */
      ASN1T_ETSI_DSRC_TemporaryID *entityID;
      /* t = 2 */
      ASN1T_ITS_StationID stationID;
   } u;
   ASN1T_ETSI_DSRC_VehicleID () { t = 0; OSCRTLMEMSET (&u, 0, sizeof(u)); }
} ;

EXTERN int asn1PE_ETSI_DSRC_VehicleID (OSCTXT* pctxt, ASN1T_ETSI_DSRC_VehicleID* pvalue);

EXTERN int asn1PD_ETSI_DSRC_VehicleID (OSCTXT* pctxt, ASN1T_ETSI_DSRC_VehicleID* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_VehicleID (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_VehicleID* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_VehicleID (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_VehicleID* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_VehicleID (OSCTXT *pctxt, ASN1T_ETSI_DSRC_VehicleID *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_VehicleID (OSCTXT *pctxt, ASN1T_ETSI_DSRC_VehicleID *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_VehicleID (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_VehicleID* pvalue);

EXTERN ASN1T_ETSI_DSRC_VehicleID* 
   new_ASN1T_ETSI_DSRC_VehicleID (ASN1CType& ccobj);

EXTERN int asn1Init_ETSI_DSRC_VehicleID (ASN1T_ETSI_DSRC_VehicleID* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_VehicleID (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_VehicleID* pvalue);

/**************************************************************/
/*                                                            */
/*  BasicVehicleRole                                          */
/*                                                            */
/**************************************************************/
/*
BasicVehicleRole ::= ENUMERATED { basicVehicle(0), publicTransport(1), specialTransport(2), dangerousGoods(3), roadWork(4), roadRescue(5), emergency(6), safetyCar(7), none-unknown(8), truck(9), motorcycle(10), roadSideSource(11), police(12), fire(13), ambulance(14), dot(15), transit(16), slowMoving(17), stopNgo(18), cyclist(19), pedestrian(20), nonMotorized(21), military(22), ... }
*/
struct EXTERN ETSI_DSRC_BasicVehicleRole {
   enum Root {
      basicVehicle = 0,
      publicTransport = 1,
      specialTransport = 2,
      dangerousGoods = 3,
      roadWork = 4,
      roadRescue = 5,
      emergency = 6,
      safetyCar = 7,
      none_unknown = 8,
      truck = 9,
      motorcycle = 10,
      roadSideSource = 11,
      police = 12,
      fire = 13,
      ambulance = 14,
      dot = 15,
      transit = 16,
      slowMoving = 17,
      stopNgo = 18,
      cyclist = 19,
      pedestrian = 20,
      nonMotorized = 21,
      military = 22
   } ;
} ;

typedef OSUINT32 ASN1T_ETSI_DSRC_BasicVehicleRole;

EXTERN int asn1PE_ETSI_DSRC_BasicVehicleRole (OSCTXT* pctxt, ASN1T_ETSI_DSRC_BasicVehicleRole value);

EXTERN int asn1PD_ETSI_DSRC_BasicVehicleRole (OSCTXT* pctxt, ASN1T_ETSI_DSRC_BasicVehicleRole* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_BasicVehicleRole (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_BasicVehicleRole value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_BasicVehicleRole (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_BasicVehicleRole* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_BasicVehicleRole (OSCTXT *pctxt, ASN1T_ETSI_DSRC_BasicVehicleRole *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_BasicVehicleRole (OSCTXT *pctxt, ASN1T_ETSI_DSRC_BasicVehicleRole *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_BasicVehicleRole (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_BasicVehicleRole* pvalue);

EXTERN ASN1T_ETSI_DSRC_BasicVehicleRole* 
   new_ASN1T_ETSI_DSRC_BasicVehicleRole (ASN1CType& ccobj);

EXTERN extern const OSEnumItem ASN1T_ETSI_DSRC_BasicVehicleRole_ENUMTAB[];
#define ASN1T_ETSI_DSRC_BasicVehicleRole_ENUMTABSIZE 23

EXTERN const OSUTF8CHAR* ASN1T_ETSI_DSRC_BasicVehicleRole_ToString (OSINT32 value);

EXTERN int ASN1T_ETSI_DSRC_BasicVehicleRole_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, ASN1T_ETSI_DSRC_BasicVehicleRole* pvalue);

EXTERN int ASN1T_ETSI_DSRC_BasicVehicleRole_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      ASN1T_ETSI_DSRC_BasicVehicleRole* pvalue);

/**************************************************************/
/*                                                            */
/*  RequestSubRole                                            */
/*                                                            */
/**************************************************************/
/*
RequestSubRole ::= ENUMERATED { requestSubRoleUnKnown(0), requestSubRole1(1), requestSubRole2(2), requestSubRole3(3), requestSubRole4(4), requestSubRole5(5), requestSubRole6(6), requestSubRole7(7), requestSubRole8(8), requestSubRole9(9), requestSubRole10(10), requestSubRole11(11), requestSubRole12(12), requestSubRole13(13), requestSubRole14(14), requestSubRoleReserved(15) }
*/
struct EXTERN ETSI_DSRC_RequestSubRole {
   enum Root {
      requestSubRoleUnKnown = 0,
      requestSubRole1 = 1,
      requestSubRole2 = 2,
      requestSubRole3 = 3,
      requestSubRole4 = 4,
      requestSubRole5 = 5,
      requestSubRole6 = 6,
      requestSubRole7 = 7,
      requestSubRole8 = 8,
      requestSubRole9 = 9,
      requestSubRole10 = 10,
      requestSubRole11 = 11,
      requestSubRole12 = 12,
      requestSubRole13 = 13,
      requestSubRole14 = 14,
      requestSubRoleReserved = 15
   } ;
} ;

typedef OSUINT32 ASN1T_ETSI_DSRC_RequestSubRole;

EXTERN int asn1PE_ETSI_DSRC_RequestSubRole (OSCTXT* pctxt, ASN1T_ETSI_DSRC_RequestSubRole value);

EXTERN int asn1PD_ETSI_DSRC_RequestSubRole (OSCTXT* pctxt, ASN1T_ETSI_DSRC_RequestSubRole* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_RequestSubRole (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_RequestSubRole value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_RequestSubRole (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_RequestSubRole* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_RequestSubRole (OSCTXT *pctxt, ASN1T_ETSI_DSRC_RequestSubRole *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_RequestSubRole (OSCTXT *pctxt, ASN1T_ETSI_DSRC_RequestSubRole *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_RequestSubRole (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_RequestSubRole* pvalue);

EXTERN ASN1T_ETSI_DSRC_RequestSubRole* 
   new_ASN1T_ETSI_DSRC_RequestSubRole (ASN1CType& ccobj);

EXTERN extern const OSEnumItem ASN1T_ETSI_DSRC_RequestSubRole_ENUMTAB[];
#define ASN1T_ETSI_DSRC_RequestSubRole_ENUMTABSIZE 16

EXTERN const OSUTF8CHAR* ASN1T_ETSI_DSRC_RequestSubRole_ToString (OSINT32 value);

EXTERN int ASN1T_ETSI_DSRC_RequestSubRole_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, ASN1T_ETSI_DSRC_RequestSubRole* pvalue);

EXTERN int ASN1T_ETSI_DSRC_RequestSubRole_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      ASN1T_ETSI_DSRC_RequestSubRole* pvalue);

/**************************************************************/
/*                                                            */
/*  RequestImportanceLevel                                    */
/*                                                            */
/**************************************************************/
/*
RequestImportanceLevel ::= ENUMERATED { requestImportanceLevelUnKnown(0), requestImportanceLevel1(1), requestImportanceLevel2(2), requestImportanceLevel3(3), requestImportanceLevel4(4), requestImportanceLevel5(5), requestImportanceLevel6(6), requestImportanceLevel7(7), requestImportanceLevel8(8), requestImportanceLevel9(9), requestImportanceLevel10(10), requestImportanceLevel11(11), requestImportanceLevel12(12), requestImportanceLevel13(13), requestImportanceLevel14(14), requestImportanceReserved(15) }
*/
struct EXTERN ETSI_DSRC_RequestImportanceLevel {
   enum Root {
      requestImportanceLevelUnKnown = 0,
      requestImportanceLevel1 = 1,
      requestImportanceLevel2 = 2,
      requestImportanceLevel3 = 3,
      requestImportanceLevel4 = 4,
      requestImportanceLevel5 = 5,
      requestImportanceLevel6 = 6,
      requestImportanceLevel7 = 7,
      requestImportanceLevel8 = 8,
      requestImportanceLevel9 = 9,
      requestImportanceLevel10 = 10,
      requestImportanceLevel11 = 11,
      requestImportanceLevel12 = 12,
      requestImportanceLevel13 = 13,
      requestImportanceLevel14 = 14,
      requestImportanceReserved = 15
   } ;
} ;

typedef OSUINT32 ASN1T_ETSI_DSRC_RequestImportanceLevel;

EXTERN int asn1PE_ETSI_DSRC_RequestImportanceLevel (OSCTXT* pctxt, ASN1T_ETSI_DSRC_RequestImportanceLevel value);

EXTERN int asn1PD_ETSI_DSRC_RequestImportanceLevel (OSCTXT* pctxt, ASN1T_ETSI_DSRC_RequestImportanceLevel* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_RequestImportanceLevel (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_RequestImportanceLevel value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_RequestImportanceLevel (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_RequestImportanceLevel* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_RequestImportanceLevel (OSCTXT *pctxt, ASN1T_ETSI_DSRC_RequestImportanceLevel *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_RequestImportanceLevel (OSCTXT *pctxt, ASN1T_ETSI_DSRC_RequestImportanceLevel *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_RequestImportanceLevel (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_RequestImportanceLevel* pvalue);

EXTERN ASN1T_ETSI_DSRC_RequestImportanceLevel* 
   new_ASN1T_ETSI_DSRC_RequestImportanceLevel (ASN1CType& ccobj);

EXTERN extern const OSEnumItem ASN1T_ETSI_DSRC_RequestImportanceLevel_ENUMTAB[];
#define ASN1T_ETSI_DSRC_RequestImportanceLevel_ENUMTABSIZE 16

EXTERN const OSUTF8CHAR* ASN1T_ETSI_DSRC_RequestImportanceLevel_ToString (OSINT32 value);

EXTERN int ASN1T_ETSI_DSRC_RequestImportanceLevel_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, ASN1T_ETSI_DSRC_RequestImportanceLevel* pvalue);

EXTERN int ASN1T_ETSI_DSRC_RequestImportanceLevel_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      ASN1T_ETSI_DSRC_RequestImportanceLevel* pvalue);

/**************************************************************/
/*                                                            */
/*  VehicleType                                               */
/*                                                            */
/**************************************************************/
/*
VehicleType ::= ENUMERATED { none(0), unknown(1), special(2), moto(3), car(4), carOther(5), bus(6), axleCnt2(7), axleCnt3(8), axleCnt4(9), axleCnt4Trailer(10), axleCnt5Trailer(11), axleCnt6Trailer(12), axleCnt5MultiTrailer(13), axleCnt6MultiTrailer(14), axleCnt7MultiTrailer(15), ... }
*/
struct EXTERN ETSI_DSRC_VehicleType {
   enum Root {
      none = 0,
      unknown = 1,
      special = 2,
      moto = 3,
      car = 4,
      carOther = 5,
      bus = 6,
      axleCnt2 = 7,
      axleCnt3 = 8,
      axleCnt4 = 9,
      axleCnt4Trailer = 10,
      axleCnt5Trailer = 11,
      axleCnt6Trailer = 12,
      axleCnt5MultiTrailer = 13,
      axleCnt6MultiTrailer = 14,
      axleCnt7MultiTrailer = 15
   } ;
} ;

typedef OSUINT32 ASN1T_ETSI_DSRC_VehicleType;

EXTERN int asn1PE_ETSI_DSRC_VehicleType (OSCTXT* pctxt, ASN1T_ETSI_DSRC_VehicleType value);

EXTERN int asn1PD_ETSI_DSRC_VehicleType (OSCTXT* pctxt, ASN1T_ETSI_DSRC_VehicleType* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_VehicleType (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_VehicleType value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_VehicleType (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_VehicleType* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_VehicleType (OSCTXT *pctxt, ASN1T_ETSI_DSRC_VehicleType *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_VehicleType (OSCTXT *pctxt, ASN1T_ETSI_DSRC_VehicleType *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_VehicleType (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_VehicleType* pvalue);

EXTERN ASN1T_ETSI_DSRC_VehicleType* 
   new_ASN1T_ETSI_DSRC_VehicleType (ASN1CType& ccobj);

EXTERN extern const OSEnumItem ASN1T_ETSI_DSRC_VehicleType_ENUMTAB[];
#define ASN1T_ETSI_DSRC_VehicleType_ENUMTABSIZE 16

EXTERN const OSUTF8CHAR* ASN1T_ETSI_DSRC_VehicleType_ToString (OSINT32 value);

EXTERN int ASN1T_ETSI_DSRC_VehicleType_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, ASN1T_ETSI_DSRC_VehicleType* pvalue);

EXTERN int ASN1T_ETSI_DSRC_VehicleType_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      ASN1T_ETSI_DSRC_VehicleType* pvalue);

/**************************************************************/
/*                                                            */
/*  RequestorType_regional                                    */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'RequestorType'
*/
struct EXTERN ASN1T_ETSI_DSRC_RequestorType_regional {
   ASN1T_ETSI_DSRC_RegionId regionId;
   ASN1TOpenType regExtValue;
} ;

EXTERN int asn1PE_ETSI_DSRC_RequestorType_regional (OSCTXT* pctxt, ASN1T_ETSI_DSRC_RequestorType_regional* pvalue);

EXTERN int asn1PD_ETSI_DSRC_RequestorType_regional (OSCTXT* pctxt, ASN1T_ETSI_DSRC_RequestorType_regional* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_RequestorType_regional (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_RequestorType_regional* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_RequestorType_regional (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_RequestorType_regional* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_RequestorType_regional (OSCTXT *pctxt, ASN1T_ETSI_DSRC_RequestorType_regional *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_RequestorType_regional (OSCTXT *pctxt, ASN1T_ETSI_DSRC_RequestorType_regional *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_RequestorType_regional (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_RequestorType_regional* pvalue);

EXTERN ASN1T_ETSI_DSRC_RequestorType_regional* 
   new_ASN1T_ETSI_DSRC_RequestorType_regional (ASN1CType& ccobj);

EXTERN int asn1Init_ETSI_DSRC_RequestorType_regional (
   ASN1T_ETSI_DSRC_RequestorType_regional* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_RequestorType_regional (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_RequestorType_regional* pvalue);

/**************************************************************/
/*                                                            */
/*  RequestorType                                             */
/*                                                            */
/**************************************************************/
/*
RequestorType ::= SEQUENCE {
   role [0] BasicVehicleRole,
   subrole [1] RequestSubRole OPTIONAL,
   request [2] RequestImportanceLevel OPTIONAL,
   iso3883 [3] Iso3833VehicleType OPTIONAL,
   hpmsType [4] VehicleType OPTIONAL,
   regional [5] SEQUENCE {
      regionId [0] REG-EXT-ID-AND-TYPE.&id ({Reg-RequestorType}),
      regExtValue [1] EXPLICIT REG-EXT-ID-AND-TYPE.&Type ({Reg-RequestorType}{@regionId})
   } OPTIONAL,
   ...
}
*/
struct EXTERN ASN1T_ETSI_DSRC_RequestorType {
   struct {
      unsigned subrolePresent : 1;
      unsigned requestPresent : 1;
      unsigned iso3883Present : 1;
      unsigned hpmsTypePresent : 1;
      unsigned regionalPresent : 1;
   } m;
   ASN1T_ETSI_DSRC_BasicVehicleRole role;
   ASN1T_ETSI_DSRC_RequestSubRole subrole;
   ASN1T_ETSI_DSRC_RequestImportanceLevel request;
   ASN1T_Iso3833VehicleType iso3883;
   ASN1T_ETSI_DSRC_VehicleType hpmsType;
   ASN1T_ETSI_DSRC_RequestorType_regional regional;
   ASN1TSeqExt extElem1;
   ASN1T_ETSI_DSRC_RequestorType ();
} ;

EXTERN int asn1PE_ETSI_DSRC_RequestorType (OSCTXT* pctxt, ASN1T_ETSI_DSRC_RequestorType* pvalue);

EXTERN int asn1PD_ETSI_DSRC_RequestorType (OSCTXT* pctxt, ASN1T_ETSI_DSRC_RequestorType* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_RequestorType (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_RequestorType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_RequestorType (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_RequestorType* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_RequestorType (OSCTXT *pctxt, ASN1T_ETSI_DSRC_RequestorType *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_RequestorType (OSCTXT *pctxt, ASN1T_ETSI_DSRC_RequestorType *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_RequestorType (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_RequestorType* pvalue);

EXTERN ASN1T_ETSI_DSRC_RequestorType* 
   new_ASN1T_ETSI_DSRC_RequestorType (ASN1CType& ccobj);

EXTERN int asn1Init_ETSI_DSRC_RequestorType (ASN1T_ETSI_DSRC_RequestorType* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_RequestorType (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_RequestorType* pvalue);

/**************************************************************/
/*                                                            */
/*  RequestorPositionVector                                   */
/*                                                            */
/**************************************************************/
/*
RequestorPositionVector ::= SEQUENCE {
   position [0] Position3D,
   heading [1] Angle OPTIONAL,
   speed [2] TransmissionAndSpeed OPTIONAL,
   ...
}
*/
struct EXTERN ASN1T_ETSI_DSRC_RequestorPositionVector {
   struct {
      unsigned headingPresent : 1;
      unsigned speedPresent : 1;
   } m;
   ASN1T_ETSI_DSRC_Position3D position;
   ASN1T_ETSI_DSRC_Angle heading;
   ASN1T_ETSI_DSRC_TransmissionAndSpeed speed;
   ASN1TSeqExt extElem1;
   ASN1T_ETSI_DSRC_RequestorPositionVector ();
} ;

EXTERN int asn1PE_ETSI_DSRC_RequestorPositionVector (OSCTXT* pctxt, ASN1T_ETSI_DSRC_RequestorPositionVector* pvalue);

EXTERN int asn1PD_ETSI_DSRC_RequestorPositionVector (OSCTXT* pctxt, ASN1T_ETSI_DSRC_RequestorPositionVector* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_RequestorPositionVector (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_RequestorPositionVector* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_RequestorPositionVector (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_RequestorPositionVector* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_RequestorPositionVector (OSCTXT *pctxt, ASN1T_ETSI_DSRC_RequestorPositionVector *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_RequestorPositionVector (OSCTXT *pctxt, ASN1T_ETSI_DSRC_RequestorPositionVector *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_RequestorPositionVector (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_RequestorPositionVector* pvalue);

EXTERN ASN1T_ETSI_DSRC_RequestorPositionVector* 
   new_ASN1T_ETSI_DSRC_RequestorPositionVector (ASN1CType& ccobj);

EXTERN int asn1Init_ETSI_DSRC_RequestorPositionVector (
   ASN1T_ETSI_DSRC_RequestorPositionVector* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_RequestorPositionVector (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_RequestorPositionVector* pvalue);

/**************************************************************/
/*                                                            */
/*  TransitVehicleStatus                                      */
/*                                                            */
/**************************************************************/
/*
TransitVehicleStatus ::= BIT STRING  { loading(0), anADAuse(1), aBikeLoad(2), doorOpen(3), charging(4), atStopLine(5) } (SIZE (8))
*/
struct EXTERN ASN1T_ETSI_DSRC_TransitVehicleStatus {
   OSOCTET data[1];
   // ctors
   ASN1T_ETSI_DSRC_TransitVehicleStatus ()  {}
   ASN1T_ETSI_DSRC_TransitVehicleStatus (const OSOCTET* _data) {
      OSCRTLSAFEMEMCPY (data, 1, _data, 1);
   }
} ;

class EXTERN ASN1C_ETSI_DSRC_TransitVehicleStatus :
public ASN1CBitStr
{
protected:
   ASN1T_ETSI_DSRC_TransitVehicleStatus& msgData;
public:
   // named bits
   enum { loading = 0, anADAuse = 1, aBikeLoad = 2, doorOpen = 3, charging = 4, atStopLine = 5 };

   /**
    * Control class: ASN1C_ETSI_DSRC_TransitVehicleStatus
    * Data class:    ASN1T_ETSI_DSRC_TransitVehicleStatus
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_TransitVehicleStatus
       (ASN1T_ETSI_DSRC_TransitVehicleStatus& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_TransitVehicleStatus<br/>
    * Data class: ASN1T_ETSI_DSRC_TransitVehicleStatus<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_TransitVehicleStatus (OSRTMessageBufferIF& msgBuf
      , ASN1T_ETSI_DSRC_TransitVehicleStatus& data);

   virtual ~ASN1C_ETSI_DSRC_TransitVehicleStatus () {}

private:
   ASN1C_ETSI_DSRC_TransitVehicleStatus& operator= (const ASN1C_ETSI_DSRC_TransitVehicleStatus&) {return *this;}
} ;

EXTERN int asn1PE_ETSI_DSRC_TransitVehicleStatus (OSCTXT* pctxt, ASN1T_ETSI_DSRC_TransitVehicleStatus* pvalue);

EXTERN int asn1PD_ETSI_DSRC_TransitVehicleStatus (OSCTXT* pctxt, ASN1T_ETSI_DSRC_TransitVehicleStatus* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_TransitVehicleStatus (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_TransitVehicleStatus* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_TransitVehicleStatus (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_TransitVehicleStatus* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_TransitVehicleStatus (OSCTXT *pctxt, ASN1T_ETSI_DSRC_TransitVehicleStatus *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_TransitVehicleStatus (OSCTXT *pctxt, ASN1T_ETSI_DSRC_TransitVehicleStatus *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_TransitVehicleStatus (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_TransitVehicleStatus* pvalue);

extern EXTERN struct OSBitMapItem g_ASN1T_ETSI_DSRC_TransitVehicleStatus_NAMEDBITTAB[7];

EXTERN ASN1T_ETSI_DSRC_TransitVehicleStatus* 
   new_ASN1T_ETSI_DSRC_TransitVehicleStatus (ASN1CType& ccobj);

EXTERN int asn1Init_ETSI_DSRC_TransitVehicleStatus (
   ASN1T_ETSI_DSRC_TransitVehicleStatus* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

/**************************************************************/
/*                                                            */
/*  TransitVehicleOccupancy                                   */
/*                                                            */
/**************************************************************/
/*
TransitVehicleOccupancy ::= ENUMERATED { occupancyUnknown(0), occupancyEmpty(1), occupancyVeryLow(2), occupancyLow(3), occupancyMed(4), occupancyHigh(5), occupancyNearlyFull(6), occupancyFull(7) }
*/
struct EXTERN ETSI_DSRC_TransitVehicleOccupancy {
   enum Root {
      occupancyUnknown = 0,
      occupancyEmpty = 1,
      occupancyVeryLow = 2,
      occupancyLow = 3,
      occupancyMed = 4,
      occupancyHigh = 5,
      occupancyNearlyFull = 6,
      occupancyFull = 7
   } ;
} ;

typedef OSUINT32 ASN1T_ETSI_DSRC_TransitVehicleOccupancy;

EXTERN int asn1PE_ETSI_DSRC_TransitVehicleOccupancy (OSCTXT* pctxt, ASN1T_ETSI_DSRC_TransitVehicleOccupancy value);

EXTERN int asn1PD_ETSI_DSRC_TransitVehicleOccupancy (OSCTXT* pctxt, ASN1T_ETSI_DSRC_TransitVehicleOccupancy* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_TransitVehicleOccupancy (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_TransitVehicleOccupancy value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_TransitVehicleOccupancy (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_TransitVehicleOccupancy* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_TransitVehicleOccupancy (OSCTXT *pctxt, ASN1T_ETSI_DSRC_TransitVehicleOccupancy *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_TransitVehicleOccupancy (OSCTXT *pctxt, ASN1T_ETSI_DSRC_TransitVehicleOccupancy *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_TransitVehicleOccupancy (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_TransitVehicleOccupancy* pvalue);

EXTERN ASN1T_ETSI_DSRC_TransitVehicleOccupancy* 
   new_ASN1T_ETSI_DSRC_TransitVehicleOccupancy (ASN1CType& ccobj);

EXTERN extern const OSEnumItem ASN1T_ETSI_DSRC_TransitVehicleOccupancy_ENUMTAB[];
#define ASN1T_ETSI_DSRC_TransitVehicleOccupancy_ENUMTABSIZE 8

EXTERN const OSUTF8CHAR* ASN1T_ETSI_DSRC_TransitVehicleOccupancy_ToString (OSINT32 value);

EXTERN int ASN1T_ETSI_DSRC_TransitVehicleOccupancy_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, ASN1T_ETSI_DSRC_TransitVehicleOccupancy* pvalue);

EXTERN int ASN1T_ETSI_DSRC_TransitVehicleOccupancy_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      ASN1T_ETSI_DSRC_TransitVehicleOccupancy* pvalue);

/**************************************************************/
/*                                                            */
/*  DeltaTime                                                 */
/*                                                            */
/**************************************************************/
/*
DeltaTime ::= INTEGER (-122..121)
*/
typedef OSINT8 ASN1T_ETSI_DSRC_DeltaTime;

EXTERN int asn1PE_ETSI_DSRC_DeltaTime (OSCTXT* pctxt, ASN1T_ETSI_DSRC_DeltaTime value);

EXTERN int asn1PD_ETSI_DSRC_DeltaTime (OSCTXT* pctxt, ASN1T_ETSI_DSRC_DeltaTime* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_DeltaTime (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_DeltaTime value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_DeltaTime (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_DeltaTime* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_DeltaTime (OSCTXT *pctxt, ASN1T_ETSI_DSRC_DeltaTime *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_DeltaTime (OSCTXT *pctxt, ASN1T_ETSI_DSRC_DeltaTime *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_DeltaTime (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_DeltaTime* pvalue);

EXTERN ASN1T_ETSI_DSRC_DeltaTime* 
   new_ASN1T_ETSI_DSRC_DeltaTime (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  RequestorDescription_regional_element                     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'RequestorDescription'
*/
struct EXTERN ASN1T_ETSI_DSRC_RequestorDescription_regional_element {
   ASN1T_ETSI_DSRC_RegionId regionId;
   struct  {
      /**
       * information object selector
       */
      OSUINT16 t;

      /**
       * Reg-RequestorDescription information objects
       */
      union {
         /**
          * id: addGrpC
          */
         struct ASN1T_ETSI_GrpC_RequestorDescription_addGrpC *_ETSI_REG_Reg_RequestorDescription_addGrpC;

         ASN1TOpenType* extElem1;
      } u;
   } regExtValue;
   ASN1T_ETSI_DSRC_RequestorDescription_regional_element ();
} ;

EXTERN int asn1PE_ETSI_DSRC_RequestorDescription_regional_element (OSCTXT* pctxt, ASN1T_ETSI_DSRC_RequestorDescription_regional_element* pvalue);

EXTERN int asn1PD_ETSI_DSRC_RequestorDescription_regional_element (OSCTXT* pctxt, ASN1T_ETSI_DSRC_RequestorDescription_regional_element* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_RequestorDescription_regional_element 
   (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_RequestorDescription_regional_element* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_RequestorDescription_regional_element 
   (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_RequestorDescription_regional_element* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_RequestorDescription_regional_element (OSCTXT *pctxt, ASN1T_ETSI_DSRC_RequestorDescription_regional_element *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_RequestorDescription_regional_element (OSCTXT *pctxt, ASN1T_ETSI_DSRC_RequestorDescription_regional_element *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_RequestorDescription_regional_element (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_RequestorDescription_regional_element* pvalue);

EXTERN ASN1T_ETSI_DSRC_RequestorDescription_regional_element* 
   new_ASN1T_ETSI_DSRC_RequestorDescription_regional_element (ASN1CType& ccobj)
   ;

EXTERN int asn1Init_ETSI_DSRC_RequestorDescription_regional_element (
   ASN1T_ETSI_DSRC_RequestorDescription_regional_element* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_RequestorDescription_regional_element (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_RequestorDescription_regional_element* pvalue);

/**************************************************************/
/*                                                            */
/*  RequestorDescription_regional                             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'RequestorDescription'
*/
/* List of ASN1T_ETSI_DSRC_RequestorDescription_regional_element */
typedef ASN1TSeqOfList ASN1T_ETSI_DSRC_RequestorDescription_regional;

class EXTERN ASN1C_ETSI_DSRC_RequestorDescription_regional :
public ASN1CSeqOfList
{
protected:
   ASN1T_ETSI_DSRC_RequestorDescription_regional& msgData;
public:
   /**
    * Control class: ASN1C_ETSI_DSRC_RequestorDescription_regional
    * Data class:    ASN1T_ETSI_DSRC_RequestorDescription_regional
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_RequestorDescription_regional
       (ASN1T_ETSI_DSRC_RequestorDescription_regional& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_RequestorDescription_regional<br/>
    * Data class: ASN1T_ETSI_DSRC_RequestorDescription_regional<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_RequestorDescription_regional (OSRTMessageBufferIF& msgBuf
      , ASN1T_ETSI_DSRC_RequestorDescription_regional& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_RequestorDescription_regional<br/>
    * Data class: ASN1T_ETSI_DSRC_RequestorDescription_regional<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_ETSI_DSRC_RequestorDescription_regional (ASN1CType& ccobj
      , ASN1T_ETSI_DSRC_RequestorDescription_regional& data);

   virtual ~ASN1C_ETSI_DSRC_RequestorDescription_regional () {}

   /**
    * Data class: ASN1T_ETSI_DSRC_RequestorDescription_regional_element<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_ETSI_DSRC_RequestorDescription_regional_element* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_ETSI_DSRC_RequestorDescription_regional_element.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_ETSI_DSRC_RequestorDescription_regional_element* NewElement ();

   /**
    * Data class: ASN1T_ETSI_DSRC_RequestorDescription_regional_element.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_ETSI_DSRC_RequestorDescription_regional_element* AppendNewElement ();

   /* Get IE using regionId key value */
   ASN1T_ETSI_DSRC_RequestorDescription_regional_element* 
      GetIE (ASN1T_ETSI_DSRC_RegionId regionId);

   /* Get all matching IEs using regionId key value */
   int GetAllIEs (ASN1T_ETSI_DSRC_RegionId regionId, 
      ASN1T_ETSI_DSRC_RequestorDescription_regional* pmatches);

private:
   ASN1C_ETSI_DSRC_RequestorDescription_regional& operator= (const ASN1C_ETSI_DSRC_RequestorDescription_regional&) {return *this;}
} ;

EXTERN int asn1PE_ETSI_DSRC_RequestorDescription_regional (OSCTXT* pctxt, ASN1T_ETSI_DSRC_RequestorDescription_regional* pvalue);

EXTERN int asn1PD_ETSI_DSRC_RequestorDescription_regional (OSCTXT* pctxt, ASN1T_ETSI_DSRC_RequestorDescription_regional* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_RequestorDescription_regional (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_RequestorDescription_regional* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_RequestorDescription_regional (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_RequestorDescription_regional* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_RequestorDescription_regional (OSCTXT *pctxt, ASN1T_ETSI_DSRC_RequestorDescription_regional *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_RequestorDescription_regional (OSCTXT *pctxt, ASN1T_ETSI_DSRC_RequestorDescription_regional *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_RequestorDescription_regional (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_RequestorDescription_regional* pvalue);

EXTERN int asn1Init_ETSI_DSRC_RequestorDescription_regional (
   ASN1T_ETSI_DSRC_RequestorDescription_regional* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_RequestorDescription_regional (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_RequestorDescription_regional* pvalue);

/**************************************************************/
/*                                                            */
/*  RequestorDescription                                      */
/*                                                            */
/**************************************************************/
/*
RequestorDescription ::= SEQUENCE {
   id [0] EXPLICIT VehicleID,
   type [1] RequestorType OPTIONAL,
   position [2] RequestorPositionVector OPTIONAL,
   name [3] DescriptiveName OPTIONAL,
   routeName [4] DescriptiveName OPTIONAL,
   transitStatus [5] TransitVehicleStatus OPTIONAL,
   transitOccupancy [6] TransitVehicleOccupancy OPTIONAL,
   transitSchedule [7] DeltaTime OPTIONAL,
   regional [8] SEQUENCE (SIZE (1..4)) OF SEQUENCE {
      regionId [0] REG-EXT-ID-AND-TYPE.&id ({Reg-RequestorDescription}),
      regExtValue [1] EXPLICIT REG-EXT-ID-AND-TYPE.&Type ({Reg-RequestorDescription}{@regionId})
   } OPTIONAL,
   ...
}
*/
struct EXTERN ASN1T_ETSI_DSRC_RequestorDescription {
   struct {
      unsigned typePresent : 1;
      unsigned positionPresent : 1;
      unsigned namePresent : 1;
      unsigned routeNamePresent : 1;
      unsigned transitStatusPresent : 1;
      unsigned transitOccupancyPresent : 1;
      unsigned transitSchedulePresent : 1;
      unsigned regionalPresent : 1;
   } m;
   ASN1T_ETSI_DSRC_VehicleID id;
   ASN1T_ETSI_DSRC_RequestorType type;
   ASN1T_ETSI_DSRC_RequestorPositionVector position;
   ASN1T_ETSI_DSRC_DescriptiveName name;
   ASN1T_ETSI_DSRC_DescriptiveName routeName;
   ASN1T_ETSI_DSRC_TransitVehicleStatus transitStatus;
   ASN1T_ETSI_DSRC_TransitVehicleOccupancy transitOccupancy;
   ASN1T_ETSI_DSRC_DeltaTime transitSchedule;
   ASN1T_ETSI_DSRC_RequestorDescription_regional regional;
   ASN1TSeqExt extElem1;
   ASN1T_ETSI_DSRC_RequestorDescription ();
} ;

EXTERN int asn1PE_ETSI_DSRC_RequestorDescription (OSCTXT* pctxt, ASN1T_ETSI_DSRC_RequestorDescription* pvalue);

EXTERN int asn1PD_ETSI_DSRC_RequestorDescription (OSCTXT* pctxt, ASN1T_ETSI_DSRC_RequestorDescription* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_RequestorDescription (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_RequestorDescription* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_RequestorDescription (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_RequestorDescription* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_RequestorDescription (OSCTXT *pctxt, ASN1T_ETSI_DSRC_RequestorDescription *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_RequestorDescription (OSCTXT *pctxt, ASN1T_ETSI_DSRC_RequestorDescription *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_RequestorDescription (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_RequestorDescription* pvalue);

EXTERN ASN1T_ETSI_DSRC_RequestorDescription* 
   new_ASN1T_ETSI_DSRC_RequestorDescription (ASN1CType& ccobj);

EXTERN int asn1Init_ETSI_DSRC_RequestorDescription (
   ASN1T_ETSI_DSRC_RequestorDescription* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_RequestorDescription (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_RequestorDescription* pvalue);

/**************************************************************/
/*                                                            */
/*  SignalRequestMessage_regional_element                     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'SignalRequestMessage'
*/
struct EXTERN ASN1T_ETSI_DSRC_SignalRequestMessage_regional_element {
   ASN1T_ETSI_DSRC_RegionId regionId;
   ASN1TOpenType regExtValue;
} ;

EXTERN int asn1PE_ETSI_DSRC_SignalRequestMessage_regional_element (OSCTXT* pctxt, ASN1T_ETSI_DSRC_SignalRequestMessage_regional_element* pvalue);

EXTERN int asn1PD_ETSI_DSRC_SignalRequestMessage_regional_element (OSCTXT* pctxt, ASN1T_ETSI_DSRC_SignalRequestMessage_regional_element* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_SignalRequestMessage_regional_element 
   (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_SignalRequestMessage_regional_element* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_SignalRequestMessage_regional_element 
   (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_SignalRequestMessage_regional_element* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_SignalRequestMessage_regional_element (OSCTXT *pctxt, ASN1T_ETSI_DSRC_SignalRequestMessage_regional_element *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_SignalRequestMessage_regional_element (OSCTXT *pctxt, ASN1T_ETSI_DSRC_SignalRequestMessage_regional_element *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_SignalRequestMessage_regional_element (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_SignalRequestMessage_regional_element* pvalue);

EXTERN ASN1T_ETSI_DSRC_SignalRequestMessage_regional_element* 
   new_ASN1T_ETSI_DSRC_SignalRequestMessage_regional_element (ASN1CType& ccobj)
   ;

EXTERN int asn1Init_ETSI_DSRC_SignalRequestMessage_regional_element (
   ASN1T_ETSI_DSRC_SignalRequestMessage_regional_element* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_SignalRequestMessage_regional_element (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_SignalRequestMessage_regional_element* pvalue);

/**************************************************************/
/*                                                            */
/*  SignalRequestMessage_regional                             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'SignalRequestMessage'
*/
/* List of ASN1T_ETSI_DSRC_SignalRequestMessage_regional_element */
typedef ASN1TSeqOfList ASN1T_ETSI_DSRC_SignalRequestMessage_regional;

class EXTERN ASN1C_ETSI_DSRC_SignalRequestMessage_regional :
public ASN1CSeqOfList
{
protected:
   ASN1T_ETSI_DSRC_SignalRequestMessage_regional& msgData;
public:
   /**
    * Control class: ASN1C_ETSI_DSRC_SignalRequestMessage_regional
    * Data class:    ASN1T_ETSI_DSRC_SignalRequestMessage_regional
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_SignalRequestMessage_regional
       (ASN1T_ETSI_DSRC_SignalRequestMessage_regional& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_SignalRequestMessage_regional<br/>
    * Data class: ASN1T_ETSI_DSRC_SignalRequestMessage_regional<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_SignalRequestMessage_regional (OSRTMessageBufferIF& msgBuf
      , ASN1T_ETSI_DSRC_SignalRequestMessage_regional& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_SignalRequestMessage_regional<br/>
    * Data class: ASN1T_ETSI_DSRC_SignalRequestMessage_regional<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_ETSI_DSRC_SignalRequestMessage_regional (ASN1CType& ccobj
      , ASN1T_ETSI_DSRC_SignalRequestMessage_regional& data);

   virtual ~ASN1C_ETSI_DSRC_SignalRequestMessage_regional () {}

   /**
    * Data class: ASN1T_ETSI_DSRC_SignalRequestMessage_regional_element<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_ETSI_DSRC_SignalRequestMessage_regional_element* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_ETSI_DSRC_SignalRequestMessage_regional_element.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_ETSI_DSRC_SignalRequestMessage_regional_element* NewElement ();

   /**
    * Data class: ASN1T_ETSI_DSRC_SignalRequestMessage_regional_element.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_ETSI_DSRC_SignalRequestMessage_regional_element* AppendNewElement ();

   /* Get IE using regionId key value */
   ASN1T_ETSI_DSRC_SignalRequestMessage_regional_element* 
      GetIE (ASN1T_ETSI_DSRC_RegionId regionId);

   /* Get all matching IEs using regionId key value */
   int GetAllIEs (ASN1T_ETSI_DSRC_RegionId regionId, 
      ASN1T_ETSI_DSRC_SignalRequestMessage_regional* pmatches);

private:
   ASN1C_ETSI_DSRC_SignalRequestMessage_regional& operator= (const ASN1C_ETSI_DSRC_SignalRequestMessage_regional&) {return *this;}
} ;

EXTERN int asn1PE_ETSI_DSRC_SignalRequestMessage_regional (OSCTXT* pctxt, ASN1T_ETSI_DSRC_SignalRequestMessage_regional* pvalue);

EXTERN int asn1PD_ETSI_DSRC_SignalRequestMessage_regional (OSCTXT* pctxt, ASN1T_ETSI_DSRC_SignalRequestMessage_regional* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_SignalRequestMessage_regional (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_SignalRequestMessage_regional* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_SignalRequestMessage_regional (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_SignalRequestMessage_regional* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_SignalRequestMessage_regional (OSCTXT *pctxt, ASN1T_ETSI_DSRC_SignalRequestMessage_regional *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_SignalRequestMessage_regional (OSCTXT *pctxt, ASN1T_ETSI_DSRC_SignalRequestMessage_regional *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_SignalRequestMessage_regional (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_SignalRequestMessage_regional* pvalue);

EXTERN int asn1Init_ETSI_DSRC_SignalRequestMessage_regional (
   ASN1T_ETSI_DSRC_SignalRequestMessage_regional* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_SignalRequestMessage_regional (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_SignalRequestMessage_regional* pvalue);

/**************************************************************/
/*                                                            */
/*  SignalRequestMessage                                      */
/*                                                            */
/**************************************************************/
/*
SignalRequestMessage ::= SEQUENCE {
   timeStamp [0] MinuteOfTheYear OPTIONAL,
   second [1] DSecond,
   sequenceNumber [2] MsgCount OPTIONAL,
   requests [3] SignalRequestList OPTIONAL,
   requestor [4] RequestorDescription,
   regional [5] SEQUENCE (SIZE (1..4)) OF SEQUENCE {
      regionId [0] REG-EXT-ID-AND-TYPE.&id ({Reg-SignalRequestMessage}),
      regExtValue [1] EXPLICIT REG-EXT-ID-AND-TYPE.&Type ({Reg-SignalRequestMessage}{@regionId})
   } OPTIONAL,
   ...
}
*/
struct EXTERN ASN1T_ETSI_DSRC_SignalRequestMessage {
   struct {
      unsigned timeStampPresent : 1;
      unsigned sequenceNumberPresent : 1;
      unsigned requestsPresent : 1;
      unsigned regionalPresent : 1;
   } m;
   ASN1T_ETSI_DSRC_MinuteOfTheYear timeStamp;
   ASN1T_ETSI_DSRC_DSecond second;
   ASN1T_ETSI_DSRC_MsgCount sequenceNumber;
   ASN1T_ETSI_DSRC_SignalRequestList requests;
   ASN1T_ETSI_DSRC_RequestorDescription requestor;
   ASN1T_ETSI_DSRC_SignalRequestMessage_regional regional;
   ASN1TSeqExt extElem1;
   ASN1T_ETSI_DSRC_SignalRequestMessage ();
} ;

EXTERN int asn1PE_ETSI_DSRC_SignalRequestMessage (OSCTXT* pctxt, ASN1T_ETSI_DSRC_SignalRequestMessage* pvalue);

EXTERN int asn1PD_ETSI_DSRC_SignalRequestMessage (OSCTXT* pctxt, ASN1T_ETSI_DSRC_SignalRequestMessage* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_SignalRequestMessage (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_SignalRequestMessage* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_SignalRequestMessage (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_SignalRequestMessage* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_SignalRequestMessage (OSCTXT *pctxt, ASN1T_ETSI_DSRC_SignalRequestMessage *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_SignalRequestMessage (OSCTXT *pctxt, ASN1T_ETSI_DSRC_SignalRequestMessage *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_SignalRequestMessage (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_SignalRequestMessage* pvalue);

EXTERN ASN1T_ETSI_DSRC_SignalRequestMessage* 
   new_ASN1T_ETSI_DSRC_SignalRequestMessage (ASN1CType& ccobj);

EXTERN int asn1Init_ETSI_DSRC_SignalRequestMessage (
   ASN1T_ETSI_DSRC_SignalRequestMessage* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_SignalRequestMessage (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_SignalRequestMessage* pvalue);

/**************************************************************/
/*                                                            */
/*  SignalRequesterInfo                                       */
/*                                                            */
/**************************************************************/
/*
SignalRequesterInfo ::= SEQUENCE {
   id [0] EXPLICIT VehicleID,
   request [1] RequestID,
   sequenceNumber [2] MsgCount,
   role [3] BasicVehicleRole OPTIONAL,
   typeData [4] RequestorType OPTIONAL,
   ...
}
*/
struct EXTERN ASN1T_ETSI_DSRC_SignalRequesterInfo {
   struct {
      unsigned rolePresent : 1;
      unsigned typeDataPresent : 1;
   } m;
   ASN1T_ETSI_DSRC_VehicleID id;
   ASN1T_ETSI_DSRC_RequestID request;
   ASN1T_ETSI_DSRC_MsgCount sequenceNumber;
   ASN1T_ETSI_DSRC_BasicVehicleRole role;
   ASN1T_ETSI_DSRC_RequestorType typeData;
   ASN1TSeqExt extElem1;
   ASN1T_ETSI_DSRC_SignalRequesterInfo ();
} ;

EXTERN int asn1PE_ETSI_DSRC_SignalRequesterInfo (OSCTXT* pctxt, ASN1T_ETSI_DSRC_SignalRequesterInfo* pvalue);

EXTERN int asn1PD_ETSI_DSRC_SignalRequesterInfo (OSCTXT* pctxt, ASN1T_ETSI_DSRC_SignalRequesterInfo* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_SignalRequesterInfo (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_SignalRequesterInfo* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_SignalRequesterInfo (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_SignalRequesterInfo* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_SignalRequesterInfo (OSCTXT *pctxt, ASN1T_ETSI_DSRC_SignalRequesterInfo *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_SignalRequesterInfo (OSCTXT *pctxt, ASN1T_ETSI_DSRC_SignalRequesterInfo *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_SignalRequesterInfo (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_SignalRequesterInfo* pvalue);

EXTERN ASN1T_ETSI_DSRC_SignalRequesterInfo* 
   new_ASN1T_ETSI_DSRC_SignalRequesterInfo (ASN1CType& ccobj);

EXTERN int asn1Init_ETSI_DSRC_SignalRequesterInfo (
   ASN1T_ETSI_DSRC_SignalRequesterInfo* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_SignalRequesterInfo (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_SignalRequesterInfo* pvalue);

/**************************************************************/
/*                                                            */
/*  SignalStatusPackage_regional_element                      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'SignalStatusPackage'
*/
struct EXTERN ASN1T_ETSI_DSRC_SignalStatusPackage_regional_element {
   ASN1T_ETSI_DSRC_RegionId regionId;
   struct  {
      /**
       * information object selector
       */
      OSUINT16 t;

      /**
       * Reg-SignalStatusPackage information objects
       */
      union {
         /**
          * id: addGrpC
          */
         struct ASN1T_ETSI_GrpC_SignalStatusPackage_addGrpC *_ETSI_REG_Reg_SignalStatusPackage_addGrpC;

         ASN1TOpenType* extElem1;
      } u;
   } regExtValue;
   ASN1T_ETSI_DSRC_SignalStatusPackage_regional_element ();
} ;

EXTERN int asn1PE_ETSI_DSRC_SignalStatusPackage_regional_element (OSCTXT* pctxt, ASN1T_ETSI_DSRC_SignalStatusPackage_regional_element* pvalue);

EXTERN int asn1PD_ETSI_DSRC_SignalStatusPackage_regional_element (OSCTXT* pctxt, ASN1T_ETSI_DSRC_SignalStatusPackage_regional_element* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_SignalStatusPackage_regional_element 
   (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_SignalStatusPackage_regional_element* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_SignalStatusPackage_regional_element 
   (OSCTXT* pctxt, ASN1T_ETSI_DSRC_SignalStatusPackage_regional_element* pvalue
   );

EXTERN int asn1JsonEnc_ETSI_DSRC_SignalStatusPackage_regional_element (OSCTXT *pctxt, ASN1T_ETSI_DSRC_SignalStatusPackage_regional_element *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_SignalStatusPackage_regional_element (OSCTXT *pctxt, ASN1T_ETSI_DSRC_SignalStatusPackage_regional_element *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_SignalStatusPackage_regional_element (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_SignalStatusPackage_regional_element* pvalue);

EXTERN ASN1T_ETSI_DSRC_SignalStatusPackage_regional_element* 
   new_ASN1T_ETSI_DSRC_SignalStatusPackage_regional_element (ASN1CType& ccobj)
   ;

EXTERN int asn1Init_ETSI_DSRC_SignalStatusPackage_regional_element (
   ASN1T_ETSI_DSRC_SignalStatusPackage_regional_element* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_SignalStatusPackage_regional_element (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_SignalStatusPackage_regional_element* pvalue);

/**************************************************************/
/*                                                            */
/*  SignalStatusPackage_regional                              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'SignalStatusPackage'
*/
/* List of ASN1T_ETSI_DSRC_SignalStatusPackage_regional_element */
typedef ASN1TSeqOfList ASN1T_ETSI_DSRC_SignalStatusPackage_regional;

class EXTERN ASN1C_ETSI_DSRC_SignalStatusPackage_regional :
public ASN1CSeqOfList
{
protected:
   ASN1T_ETSI_DSRC_SignalStatusPackage_regional& msgData;
public:
   /**
    * Control class: ASN1C_ETSI_DSRC_SignalStatusPackage_regional
    * Data class:    ASN1T_ETSI_DSRC_SignalStatusPackage_regional
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_SignalStatusPackage_regional
       (ASN1T_ETSI_DSRC_SignalStatusPackage_regional& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_SignalStatusPackage_regional<br/>
    * Data class: ASN1T_ETSI_DSRC_SignalStatusPackage_regional<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_SignalStatusPackage_regional (OSRTMessageBufferIF& msgBuf
      , ASN1T_ETSI_DSRC_SignalStatusPackage_regional& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_SignalStatusPackage_regional<br/>
    * Data class: ASN1T_ETSI_DSRC_SignalStatusPackage_regional<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_ETSI_DSRC_SignalStatusPackage_regional (ASN1CType& ccobj
      , ASN1T_ETSI_DSRC_SignalStatusPackage_regional& data);

   virtual ~ASN1C_ETSI_DSRC_SignalStatusPackage_regional () {}

   /**
    * Data class: ASN1T_ETSI_DSRC_SignalStatusPackage_regional_element<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_ETSI_DSRC_SignalStatusPackage_regional_element* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_ETSI_DSRC_SignalStatusPackage_regional_element.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_ETSI_DSRC_SignalStatusPackage_regional_element* NewElement ();

   /**
    * Data class: ASN1T_ETSI_DSRC_SignalStatusPackage_regional_element.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_ETSI_DSRC_SignalStatusPackage_regional_element* AppendNewElement ();

   /* Get IE using regionId key value */
   ASN1T_ETSI_DSRC_SignalStatusPackage_regional_element* 
      GetIE (ASN1T_ETSI_DSRC_RegionId regionId);

   /* Get all matching IEs using regionId key value */
   int GetAllIEs (ASN1T_ETSI_DSRC_RegionId regionId, 
      ASN1T_ETSI_DSRC_SignalStatusPackage_regional* pmatches);

private:
   ASN1C_ETSI_DSRC_SignalStatusPackage_regional& operator= (const ASN1C_ETSI_DSRC_SignalStatusPackage_regional&) {return *this;}
} ;

EXTERN int asn1PE_ETSI_DSRC_SignalStatusPackage_regional (OSCTXT* pctxt, ASN1T_ETSI_DSRC_SignalStatusPackage_regional* pvalue);

EXTERN int asn1PD_ETSI_DSRC_SignalStatusPackage_regional (OSCTXT* pctxt, ASN1T_ETSI_DSRC_SignalStatusPackage_regional* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_SignalStatusPackage_regional (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_SignalStatusPackage_regional* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_SignalStatusPackage_regional (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_SignalStatusPackage_regional* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_SignalStatusPackage_regional (OSCTXT *pctxt, ASN1T_ETSI_DSRC_SignalStatusPackage_regional *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_SignalStatusPackage_regional (OSCTXT *pctxt, ASN1T_ETSI_DSRC_SignalStatusPackage_regional *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_SignalStatusPackage_regional (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_SignalStatusPackage_regional* pvalue);

EXTERN int asn1Init_ETSI_DSRC_SignalStatusPackage_regional (
   ASN1T_ETSI_DSRC_SignalStatusPackage_regional* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_SignalStatusPackage_regional (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_SignalStatusPackage_regional* pvalue);

/**************************************************************/
/*                                                            */
/*  SignalStatusPackage                                       */
/*                                                            */
/**************************************************************/
/*
SignalStatusPackage ::= SEQUENCE {
   requester [0] SignalRequesterInfo OPTIONAL,
   inboundOn [1] EXPLICIT IntersectionAccessPoint,
   outboundOn [2] EXPLICIT IntersectionAccessPoint OPTIONAL,
   minute [3] MinuteOfTheYear OPTIONAL,
   second [4] DSecond OPTIONAL,
   duration [5] DSecond OPTIONAL,
   status [6] PrioritizationResponseStatus,
   regional [7] SEQUENCE (SIZE (1..4)) OF SEQUENCE {
      regionId [0] REG-EXT-ID-AND-TYPE.&id ({Reg-SignalStatusPackage}),
      regExtValue [1] EXPLICIT REG-EXT-ID-AND-TYPE.&Type ({Reg-SignalStatusPackage}{@regionId})
   } OPTIONAL,
   ...
}
*/
struct EXTERN ASN1T_ETSI_DSRC_SignalStatusPackage {
   struct {
      unsigned requesterPresent : 1;
      unsigned outboundOnPresent : 1;
      unsigned minutePresent : 1;
      unsigned secondPresent : 1;
      unsigned durationPresent : 1;
      unsigned regionalPresent : 1;
   } m;
   ASN1T_ETSI_DSRC_SignalRequesterInfo requester;
   ASN1T_ETSI_DSRC_IntersectionAccessPoint inboundOn;
   ASN1T_ETSI_DSRC_IntersectionAccessPoint outboundOn;
   ASN1T_ETSI_DSRC_MinuteOfTheYear minute;
   ASN1T_ETSI_DSRC_DSecond second;
   ASN1T_ETSI_DSRC_DSecond duration;
   ASN1T_ETSI_DSRC_PrioritizationResponseStatus status;
   ASN1T_ETSI_DSRC_SignalStatusPackage_regional regional;
   ASN1TSeqExt extElem1;
   ASN1T_ETSI_DSRC_SignalStatusPackage ();
} ;

EXTERN int asn1PE_ETSI_DSRC_SignalStatusPackage (OSCTXT* pctxt, ASN1T_ETSI_DSRC_SignalStatusPackage* pvalue);

EXTERN int asn1PD_ETSI_DSRC_SignalStatusPackage (OSCTXT* pctxt, ASN1T_ETSI_DSRC_SignalStatusPackage* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_SignalStatusPackage (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_SignalStatusPackage* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_SignalStatusPackage (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_SignalStatusPackage* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_SignalStatusPackage (OSCTXT *pctxt, ASN1T_ETSI_DSRC_SignalStatusPackage *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_SignalStatusPackage (OSCTXT *pctxt, ASN1T_ETSI_DSRC_SignalStatusPackage *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_SignalStatusPackage (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_SignalStatusPackage* pvalue);

EXTERN ASN1T_ETSI_DSRC_SignalStatusPackage* 
   new_ASN1T_ETSI_DSRC_SignalStatusPackage (ASN1CType& ccobj);

EXTERN int asn1Init_ETSI_DSRC_SignalStatusPackage (
   ASN1T_ETSI_DSRC_SignalStatusPackage* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_SignalStatusPackage (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_SignalStatusPackage* pvalue);

/**************************************************************/
/*                                                            */
/*  SignalStatusPackageList                                   */
/*                                                            */
/**************************************************************/
/*
SignalStatusPackageList ::= SEQUENCE (SIZE (1..32)) OF SignalStatusPackage
*/
/* List of ASN1T_ETSI_DSRC_SignalStatusPackage */
typedef ASN1TSeqOfList ASN1T_ETSI_DSRC_SignalStatusPackageList;

class EXTERN ASN1C_ETSI_DSRC_SignalStatusPackageList :
public ASN1CSeqOfList
{
protected:
   ASN1T_ETSI_DSRC_SignalStatusPackageList& msgData;
public:
   /**
    * Control class: ASN1C_ETSI_DSRC_SignalStatusPackageList
    * Data class:    ASN1T_ETSI_DSRC_SignalStatusPackageList
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_SignalStatusPackageList
       (ASN1T_ETSI_DSRC_SignalStatusPackageList& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_SignalStatusPackageList<br/>
    * Data class: ASN1T_ETSI_DSRC_SignalStatusPackageList<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_SignalStatusPackageList (OSRTMessageBufferIF& msgBuf
      , ASN1T_ETSI_DSRC_SignalStatusPackageList& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_SignalStatusPackageList<br/>
    * Data class: ASN1T_ETSI_DSRC_SignalStatusPackageList<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_ETSI_DSRC_SignalStatusPackageList (ASN1CType& ccobj
      , ASN1T_ETSI_DSRC_SignalStatusPackageList& data);

   virtual ~ASN1C_ETSI_DSRC_SignalStatusPackageList () {}

   /**
    * Data class: ASN1T_ETSI_DSRC_SignalStatusPackage<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_ETSI_DSRC_SignalStatusPackage* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_ETSI_DSRC_SignalStatusPackage.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_ETSI_DSRC_SignalStatusPackage* NewElement ();

   /**
    * Data class: ASN1T_ETSI_DSRC_SignalStatusPackage.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_ETSI_DSRC_SignalStatusPackage* AppendNewElement ();

private:
   ASN1C_ETSI_DSRC_SignalStatusPackageList& operator= (const ASN1C_ETSI_DSRC_SignalStatusPackageList&) {return *this;}
} ;

EXTERN int asn1PE_ETSI_DSRC_SignalStatusPackageList (OSCTXT* pctxt, ASN1T_ETSI_DSRC_SignalStatusPackageList* pvalue);

EXTERN int asn1PD_ETSI_DSRC_SignalStatusPackageList (OSCTXT* pctxt, ASN1T_ETSI_DSRC_SignalStatusPackageList* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_SignalStatusPackageList (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_SignalStatusPackageList* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_SignalStatusPackageList (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_SignalStatusPackageList* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_SignalStatusPackageList (OSCTXT *pctxt, ASN1T_ETSI_DSRC_SignalStatusPackageList *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_SignalStatusPackageList (OSCTXT *pctxt, ASN1T_ETSI_DSRC_SignalStatusPackageList *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_SignalStatusPackageList (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_SignalStatusPackageList* pvalue);

EXTERN int asn1Init_ETSI_DSRC_SignalStatusPackageList (
   ASN1T_ETSI_DSRC_SignalStatusPackageList* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_SignalStatusPackageList (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_SignalStatusPackageList* pvalue);

/**************************************************************/
/*                                                            */
/*  SignalStatus_regional_element                             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'SignalStatus'
*/
struct EXTERN ASN1T_ETSI_DSRC_SignalStatus_regional_element {
   ASN1T_ETSI_DSRC_RegionId regionId;
   ASN1TOpenType regExtValue;
} ;

EXTERN int asn1PE_ETSI_DSRC_SignalStatus_regional_element (OSCTXT* pctxt, ASN1T_ETSI_DSRC_SignalStatus_regional_element* pvalue);

EXTERN int asn1PD_ETSI_DSRC_SignalStatus_regional_element (OSCTXT* pctxt, ASN1T_ETSI_DSRC_SignalStatus_regional_element* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_SignalStatus_regional_element (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_SignalStatus_regional_element* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_SignalStatus_regional_element (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_SignalStatus_regional_element* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_SignalStatus_regional_element (OSCTXT *pctxt, ASN1T_ETSI_DSRC_SignalStatus_regional_element *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_SignalStatus_regional_element (OSCTXT *pctxt, ASN1T_ETSI_DSRC_SignalStatus_regional_element *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_SignalStatus_regional_element (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_SignalStatus_regional_element* pvalue);

EXTERN ASN1T_ETSI_DSRC_SignalStatus_regional_element* 
   new_ASN1T_ETSI_DSRC_SignalStatus_regional_element (ASN1CType& ccobj);

EXTERN int asn1Init_ETSI_DSRC_SignalStatus_regional_element (
   ASN1T_ETSI_DSRC_SignalStatus_regional_element* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_SignalStatus_regional_element (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_SignalStatus_regional_element* pvalue);

/**************************************************************/
/*                                                            */
/*  SignalStatus_regional                                     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'SignalStatus'
*/
/* List of ASN1T_ETSI_DSRC_SignalStatus_regional_element */
typedef ASN1TSeqOfList ASN1T_ETSI_DSRC_SignalStatus_regional;

class EXTERN ASN1C_ETSI_DSRC_SignalStatus_regional :
public ASN1CSeqOfList
{
protected:
   ASN1T_ETSI_DSRC_SignalStatus_regional& msgData;
public:
   /**
    * Control class: ASN1C_ETSI_DSRC_SignalStatus_regional
    * Data class:    ASN1T_ETSI_DSRC_SignalStatus_regional
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_SignalStatus_regional
       (ASN1T_ETSI_DSRC_SignalStatus_regional& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_SignalStatus_regional<br/>
    * Data class: ASN1T_ETSI_DSRC_SignalStatus_regional<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_SignalStatus_regional (OSRTMessageBufferIF& msgBuf
      , ASN1T_ETSI_DSRC_SignalStatus_regional& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_SignalStatus_regional<br/>
    * Data class: ASN1T_ETSI_DSRC_SignalStatus_regional<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_ETSI_DSRC_SignalStatus_regional (ASN1CType& ccobj
      , ASN1T_ETSI_DSRC_SignalStatus_regional& data);

   virtual ~ASN1C_ETSI_DSRC_SignalStatus_regional () {}

   /**
    * Data class: ASN1T_ETSI_DSRC_SignalStatus_regional_element<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_ETSI_DSRC_SignalStatus_regional_element* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_ETSI_DSRC_SignalStatus_regional_element.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_ETSI_DSRC_SignalStatus_regional_element* NewElement ();

   /**
    * Data class: ASN1T_ETSI_DSRC_SignalStatus_regional_element.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_ETSI_DSRC_SignalStatus_regional_element* AppendNewElement ();

   /* Get IE using regionId key value */
   ASN1T_ETSI_DSRC_SignalStatus_regional_element* 
      GetIE (ASN1T_ETSI_DSRC_RegionId regionId);

   /* Get all matching IEs using regionId key value */
   int GetAllIEs (ASN1T_ETSI_DSRC_RegionId regionId, 
      ASN1T_ETSI_DSRC_SignalStatus_regional* pmatches);

private:
   ASN1C_ETSI_DSRC_SignalStatus_regional& operator= (const ASN1C_ETSI_DSRC_SignalStatus_regional&) {return *this;}
} ;

EXTERN int asn1PE_ETSI_DSRC_SignalStatus_regional (OSCTXT* pctxt, ASN1T_ETSI_DSRC_SignalStatus_regional* pvalue);

EXTERN int asn1PD_ETSI_DSRC_SignalStatus_regional (OSCTXT* pctxt, ASN1T_ETSI_DSRC_SignalStatus_regional* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_SignalStatus_regional (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_SignalStatus_regional* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_SignalStatus_regional (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_SignalStatus_regional* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_SignalStatus_regional (OSCTXT *pctxt, ASN1T_ETSI_DSRC_SignalStatus_regional *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_SignalStatus_regional (OSCTXT *pctxt, ASN1T_ETSI_DSRC_SignalStatus_regional *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_SignalStatus_regional (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_SignalStatus_regional* pvalue);

EXTERN int asn1Init_ETSI_DSRC_SignalStatus_regional (
   ASN1T_ETSI_DSRC_SignalStatus_regional* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_SignalStatus_regional (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_SignalStatus_regional* pvalue);

/**************************************************************/
/*                                                            */
/*  SignalStatus                                              */
/*                                                            */
/**************************************************************/
/*
SignalStatus ::= SEQUENCE {
   sequenceNumber [0] MsgCount,
   id [1] IntersectionReferenceID,
   sigStatus [2] SignalStatusPackageList,
   regional [3] SEQUENCE (SIZE (1..4)) OF SEQUENCE {
      regionId [0] REG-EXT-ID-AND-TYPE.&id ({Reg-SignalStatus}),
      regExtValue [1] EXPLICIT REG-EXT-ID-AND-TYPE.&Type ({Reg-SignalStatus}{@regionId})
   } OPTIONAL,
   ...
}
*/
struct EXTERN ASN1T_ETSI_DSRC_SignalStatus {
   struct {
      unsigned regionalPresent : 1;
   } m;
   ASN1T_ETSI_DSRC_MsgCount sequenceNumber;
   ASN1T_ETSI_DSRC_IntersectionReferenceID id;
   ASN1T_ETSI_DSRC_SignalStatusPackageList sigStatus;
   ASN1T_ETSI_DSRC_SignalStatus_regional regional;
   ASN1TSeqExt extElem1;
   ASN1T_ETSI_DSRC_SignalStatus ();
} ;

EXTERN int asn1PE_ETSI_DSRC_SignalStatus (OSCTXT* pctxt, ASN1T_ETSI_DSRC_SignalStatus* pvalue);

EXTERN int asn1PD_ETSI_DSRC_SignalStatus (OSCTXT* pctxt, ASN1T_ETSI_DSRC_SignalStatus* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_SignalStatus (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_SignalStatus* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_SignalStatus (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_SignalStatus* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_SignalStatus (OSCTXT *pctxt, ASN1T_ETSI_DSRC_SignalStatus *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_SignalStatus (OSCTXT *pctxt, ASN1T_ETSI_DSRC_SignalStatus *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_SignalStatus (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_SignalStatus* pvalue);

EXTERN ASN1T_ETSI_DSRC_SignalStatus* 
   new_ASN1T_ETSI_DSRC_SignalStatus (ASN1CType& ccobj);

EXTERN int asn1Init_ETSI_DSRC_SignalStatus (ASN1T_ETSI_DSRC_SignalStatus* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_SignalStatus (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_SignalStatus* pvalue);

/**************************************************************/
/*                                                            */
/*  SignalStatusList                                          */
/*                                                            */
/**************************************************************/
/*
SignalStatusList ::= SEQUENCE (SIZE (1..32)) OF SignalStatus
*/
/* List of ASN1T_ETSI_DSRC_SignalStatus */
typedef ASN1TSeqOfList ASN1T_ETSI_DSRC_SignalStatusList;

class EXTERN ASN1C_ETSI_DSRC_SignalStatusList :
public ASN1CSeqOfList
{
protected:
   ASN1T_ETSI_DSRC_SignalStatusList& msgData;
public:
   /**
    * Control class: ASN1C_ETSI_DSRC_SignalStatusList
    * Data class:    ASN1T_ETSI_DSRC_SignalStatusList
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_SignalStatusList (ASN1T_ETSI_DSRC_SignalStatusList& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_SignalStatusList<br/>
    * Data class: ASN1T_ETSI_DSRC_SignalStatusList<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_SignalStatusList (OSRTMessageBufferIF& msgBuf
      , ASN1T_ETSI_DSRC_SignalStatusList& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_SignalStatusList<br/>
    * Data class: ASN1T_ETSI_DSRC_SignalStatusList<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_ETSI_DSRC_SignalStatusList (ASN1CType& ccobj
      , ASN1T_ETSI_DSRC_SignalStatusList& data);

   virtual ~ASN1C_ETSI_DSRC_SignalStatusList () {}

   /**
    * Data class: ASN1T_ETSI_DSRC_SignalStatus<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_ETSI_DSRC_SignalStatus* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_ETSI_DSRC_SignalStatus.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_ETSI_DSRC_SignalStatus* NewElement ();

   /**
    * Data class: ASN1T_ETSI_DSRC_SignalStatus.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_ETSI_DSRC_SignalStatus* AppendNewElement ();

private:
   ASN1C_ETSI_DSRC_SignalStatusList& operator= (const ASN1C_ETSI_DSRC_SignalStatusList&) {return *this;}
} ;

EXTERN int asn1PE_ETSI_DSRC_SignalStatusList (OSCTXT* pctxt, ASN1T_ETSI_DSRC_SignalStatusList* pvalue);

EXTERN int asn1PD_ETSI_DSRC_SignalStatusList (OSCTXT* pctxt, ASN1T_ETSI_DSRC_SignalStatusList* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_SignalStatusList (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_SignalStatusList* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_SignalStatusList (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_SignalStatusList* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_SignalStatusList (OSCTXT *pctxt, ASN1T_ETSI_DSRC_SignalStatusList *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_SignalStatusList (OSCTXT *pctxt, ASN1T_ETSI_DSRC_SignalStatusList *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_SignalStatusList (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_SignalStatusList* pvalue);

EXTERN int asn1Init_ETSI_DSRC_SignalStatusList (
   ASN1T_ETSI_DSRC_SignalStatusList* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_SignalStatusList (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_SignalStatusList* pvalue);

/**************************************************************/
/*                                                            */
/*  SignalStatusMessage_regional_element                      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'SignalStatusMessage'
*/
struct EXTERN ASN1T_ETSI_DSRC_SignalStatusMessage_regional_element {
   ASN1T_ETSI_DSRC_RegionId regionId;
   ASN1TOpenType regExtValue;
} ;

EXTERN int asn1PE_ETSI_DSRC_SignalStatusMessage_regional_element (OSCTXT* pctxt, ASN1T_ETSI_DSRC_SignalStatusMessage_regional_element* pvalue);

EXTERN int asn1PD_ETSI_DSRC_SignalStatusMessage_regional_element (OSCTXT* pctxt, ASN1T_ETSI_DSRC_SignalStatusMessage_regional_element* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_SignalStatusMessage_regional_element 
   (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_SignalStatusMessage_regional_element* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_SignalStatusMessage_regional_element 
   (OSCTXT* pctxt, ASN1T_ETSI_DSRC_SignalStatusMessage_regional_element* pvalue
   );

EXTERN int asn1JsonEnc_ETSI_DSRC_SignalStatusMessage_regional_element (OSCTXT *pctxt, ASN1T_ETSI_DSRC_SignalStatusMessage_regional_element *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_SignalStatusMessage_regional_element (OSCTXT *pctxt, ASN1T_ETSI_DSRC_SignalStatusMessage_regional_element *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_SignalStatusMessage_regional_element (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_SignalStatusMessage_regional_element* pvalue);

EXTERN ASN1T_ETSI_DSRC_SignalStatusMessage_regional_element* 
   new_ASN1T_ETSI_DSRC_SignalStatusMessage_regional_element (ASN1CType& ccobj)
   ;

EXTERN int asn1Init_ETSI_DSRC_SignalStatusMessage_regional_element (
   ASN1T_ETSI_DSRC_SignalStatusMessage_regional_element* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_SignalStatusMessage_regional_element (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_SignalStatusMessage_regional_element* pvalue);

/**************************************************************/
/*                                                            */
/*  SignalStatusMessage_regional                              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'SignalStatusMessage'
*/
/* List of ASN1T_ETSI_DSRC_SignalStatusMessage_regional_element */
typedef ASN1TSeqOfList ASN1T_ETSI_DSRC_SignalStatusMessage_regional;

class EXTERN ASN1C_ETSI_DSRC_SignalStatusMessage_regional :
public ASN1CSeqOfList
{
protected:
   ASN1T_ETSI_DSRC_SignalStatusMessage_regional& msgData;
public:
   /**
    * Control class: ASN1C_ETSI_DSRC_SignalStatusMessage_regional
    * Data class:    ASN1T_ETSI_DSRC_SignalStatusMessage_regional
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_SignalStatusMessage_regional
       (ASN1T_ETSI_DSRC_SignalStatusMessage_regional& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_SignalStatusMessage_regional<br/>
    * Data class: ASN1T_ETSI_DSRC_SignalStatusMessage_regional<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_SignalStatusMessage_regional (OSRTMessageBufferIF& msgBuf
      , ASN1T_ETSI_DSRC_SignalStatusMessage_regional& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_SignalStatusMessage_regional<br/>
    * Data class: ASN1T_ETSI_DSRC_SignalStatusMessage_regional<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_ETSI_DSRC_SignalStatusMessage_regional (ASN1CType& ccobj
      , ASN1T_ETSI_DSRC_SignalStatusMessage_regional& data);

   virtual ~ASN1C_ETSI_DSRC_SignalStatusMessage_regional () {}

   /**
    * Data class: ASN1T_ETSI_DSRC_SignalStatusMessage_regional_element<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_ETSI_DSRC_SignalStatusMessage_regional_element* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_ETSI_DSRC_SignalStatusMessage_regional_element.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_ETSI_DSRC_SignalStatusMessage_regional_element* NewElement ();

   /**
    * Data class: ASN1T_ETSI_DSRC_SignalStatusMessage_regional_element.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_ETSI_DSRC_SignalStatusMessage_regional_element* AppendNewElement ();

   /* Get IE using regionId key value */
   ASN1T_ETSI_DSRC_SignalStatusMessage_regional_element* 
      GetIE (ASN1T_ETSI_DSRC_RegionId regionId);

   /* Get all matching IEs using regionId key value */
   int GetAllIEs (ASN1T_ETSI_DSRC_RegionId regionId, 
      ASN1T_ETSI_DSRC_SignalStatusMessage_regional* pmatches);

private:
   ASN1C_ETSI_DSRC_SignalStatusMessage_regional& operator= (const ASN1C_ETSI_DSRC_SignalStatusMessage_regional&) {return *this;}
} ;

EXTERN int asn1PE_ETSI_DSRC_SignalStatusMessage_regional (OSCTXT* pctxt, ASN1T_ETSI_DSRC_SignalStatusMessage_regional* pvalue);

EXTERN int asn1PD_ETSI_DSRC_SignalStatusMessage_regional (OSCTXT* pctxt, ASN1T_ETSI_DSRC_SignalStatusMessage_regional* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_SignalStatusMessage_regional (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_SignalStatusMessage_regional* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_SignalStatusMessage_regional (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_SignalStatusMessage_regional* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_SignalStatusMessage_regional (OSCTXT *pctxt, ASN1T_ETSI_DSRC_SignalStatusMessage_regional *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_SignalStatusMessage_regional (OSCTXT *pctxt, ASN1T_ETSI_DSRC_SignalStatusMessage_regional *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_SignalStatusMessage_regional (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_SignalStatusMessage_regional* pvalue);

EXTERN int asn1Init_ETSI_DSRC_SignalStatusMessage_regional (
   ASN1T_ETSI_DSRC_SignalStatusMessage_regional* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_SignalStatusMessage_regional (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_SignalStatusMessage_regional* pvalue);

/**************************************************************/
/*                                                            */
/*  SignalStatusMessage                                       */
/*                                                            */
/**************************************************************/
/*
SignalStatusMessage ::= SEQUENCE {
   timeStamp [0] MinuteOfTheYear OPTIONAL,
   second [1] DSecond,
   sequenceNumber [2] MsgCount OPTIONAL,
   status [3] SignalStatusList,
   regional [4] SEQUENCE (SIZE (1..4)) OF SEQUENCE {
      regionId [0] REG-EXT-ID-AND-TYPE.&id ({Reg-SignalStatusMessage}),
      regExtValue [1] EXPLICIT REG-EXT-ID-AND-TYPE.&Type ({Reg-SignalStatusMessage}{@regionId})
   } OPTIONAL,
   ...
}
*/
struct EXTERN ASN1T_ETSI_DSRC_SignalStatusMessage {
   struct {
      unsigned timeStampPresent : 1;
      unsigned sequenceNumberPresent : 1;
      unsigned regionalPresent : 1;
   } m;
   ASN1T_ETSI_DSRC_MinuteOfTheYear timeStamp;
   ASN1T_ETSI_DSRC_DSecond second;
   ASN1T_ETSI_DSRC_MsgCount sequenceNumber;
   ASN1T_ETSI_DSRC_SignalStatusList status;
   ASN1T_ETSI_DSRC_SignalStatusMessage_regional regional;
   ASN1TSeqExt extElem1;
   ASN1T_ETSI_DSRC_SignalStatusMessage ();
} ;

EXTERN int asn1PE_ETSI_DSRC_SignalStatusMessage (OSCTXT* pctxt, ASN1T_ETSI_DSRC_SignalStatusMessage* pvalue);

EXTERN int asn1PD_ETSI_DSRC_SignalStatusMessage (OSCTXT* pctxt, ASN1T_ETSI_DSRC_SignalStatusMessage* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_SignalStatusMessage (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_SignalStatusMessage* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_SignalStatusMessage (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_SignalStatusMessage* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_SignalStatusMessage (OSCTXT *pctxt, ASN1T_ETSI_DSRC_SignalStatusMessage *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_SignalStatusMessage (OSCTXT *pctxt, ASN1T_ETSI_DSRC_SignalStatusMessage *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_SignalStatusMessage (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_SignalStatusMessage* pvalue);

EXTERN ASN1T_ETSI_DSRC_SignalStatusMessage* 
   new_ASN1T_ETSI_DSRC_SignalStatusMessage (ASN1CType& ccobj);

EXTERN int asn1Init_ETSI_DSRC_SignalStatusMessage (
   ASN1T_ETSI_DSRC_SignalStatusMessage* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_ETSI_DSRC_SignalStatusMessage (OSCTXT *pctxt, 
   ASN1T_ETSI_DSRC_SignalStatusMessage* pvalue);

/**************************************************************/
/*                                                            */
/*  DSRCmsgID                                                 */
/*                                                            */
/**************************************************************/
/*
DSRCmsgID ::= INTEGER (0..32767)
*/
typedef OSUINT16 ASN1T_ETSI_DSRC_DSRCmsgID;

class EXTERN ASN1C_ETSI_DSRC_DSRCmsgID :
public ASN1CType
{
protected:
   ASN1T_ETSI_DSRC_DSRCmsgID& msgData;
public:
   /**
    * Control class: ASN1C_ETSI_DSRC_DSRCmsgID
    * Data class:    ASN1T_ETSI_DSRC_DSRCmsgID
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_DSRCmsgID (ASN1T_ETSI_DSRC_DSRCmsgID& data);

   /**
    * Control class: ASN1C_ETSI_DSRC_DSRCmsgID<br/>
    * Data class: ASN1T_ETSI_DSRC_DSRCmsgID<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_ETSI_DSRC_DSRCmsgID (OSRTMessageBufferIF& msgBuf
      , ASN1T_ETSI_DSRC_DSRCmsgID& data);

   virtual ~ASN1C_ETSI_DSRC_DSRCmsgID () {}

   /**
    * Data class: ASN1T_ETSI_DSRC_DSRCmsgID<br/>
    *
    * Gets a mutable instance of the data class.
    *
    * @return Reference to a mutable instance of data class ASN1T_ETSI_DSRC_DSRCmsgID.
    */
   inline ASN1T_ETSI_DSRC_DSRCmsgID& getData () { return msgData; }

   /**
    * Data class: ASN1T_ETSI_DSRC_DSRCmsgID<br/>
    * Gets a non-mutable instance of the data class.
    *
    * @return Reference to a non-mutable instance of data class ASN1T_ETSI_DSRC_DSRCmsgID.
    */
   inline const ASN1T_ETSI_DSRC_DSRCmsgID& getData () const { return msgData; }

   // standard encode/decode methods (defined in ASN1CType base class):
   // int Encode ();
   // int Decode ();

   // stream encode/decode methods:
   /**
    * Encodes into a specified encode buffer.
    *
    * @param msgBuf Reference to an encode buffer.
    * @return A status value (0 indicates success).
    */
   int EncodeTo (OSRTMessageBufferIF& msgBuf);

   /**
    * Decodes from a specified decode buffer.
    *
    * @param msgBuf Reference to a decode buffer.
    * @return A status value (0 indicates success).
    */
   int DecodeFrom (OSRTMessageBufferIF& msgBuf, OSBOOL free = FALSE);

   /**
    * Writes the contents of the object to a user-defined stream using
    * a user-defined print callback function.  See the documentation for
    * the setPrintStream() method.
    *
    * @param name A name for the object's contents.  If not specified,
    *             DSRCmsgID will be used for the name.
    * @return Always returns 0.
    */
   int toStream (const char* name = "DSRCmsgID");
   /**
    * Declares a print stream handler function.
    *
    * @param strmCallback Pointer to a function defined according to the
    *                     rtxPrintCallback signature.
    * @return A status value (0 indicates success).
    */
   int setPrintStream (rtxPrintCallback strmCallback, void* pStrmInfo);
private:
   ASN1C_ETSI_DSRC_DSRCmsgID& operator= (const ASN1C_ETSI_DSRC_DSRCmsgID&) {return *this;}
} ;

EXTERN int asn1PE_ETSI_DSRC_DSRCmsgID (OSCTXT* pctxt, ASN1T_ETSI_DSRC_DSRCmsgID value);

EXTERN int asn1PD_ETSI_DSRC_DSRCmsgID (OSCTXT* pctxt, ASN1T_ETSI_DSRC_DSRCmsgID* pvalue);

EXTERN int XmlEnc_ETSI_DSRC_DSRCmsgID (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_DSRCmsgID value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ETSI_DSRC_DSRCmsgID (OSCTXT* pctxt, 
   ASN1T_ETSI_DSRC_DSRCmsgID* pvalue);

EXTERN int asn1JsonEnc_ETSI_DSRC_DSRCmsgID (OSCTXT *pctxt, ASN1T_ETSI_DSRC_DSRCmsgID *pvalue);

EXTERN int asn1JsonDec_ETSI_DSRC_DSRCmsgID (OSCTXT *pctxt, ASN1T_ETSI_DSRC_DSRCmsgID *pvalue);

EXTERN int asn1PrtToStrm_ETSI_DSRC_DSRCmsgID (OSCTXT *pctxt, 
   const char* name, const ASN1T_ETSI_DSRC_DSRCmsgID* pvalue);

EXTERN ASN1T_ETSI_DSRC_DSRCmsgID* 
   new_ASN1T_ETSI_DSRC_DSRCmsgID (ASN1CType& ccobj);

/**
 * Global element functions.  These functions encode or decode complete
 * XML documents.  They are generated for XSD global elements and/or
 * ASN.1 type definitions that are either:
 *
 * 1) not referenced by any other types, or
 * 2) explicitly declared to be a PDU using the -pdu command line
 *    option, or
 * 3) explicitly declared to be a PDU using the <isPDU/> 
 *    configuration file element.
 */
/* Value definitions */

#define ASN1V_ETSI_DSRC_mapData 18
#define ASN1V_ETSI_DSRC_rtcmCorrections 28
#define ASN1V_ETSI_DSRC_signalPhaseAndTimingMessage 19
#define ASN1V_ETSI_DSRC_signalRequestMessage 29
#define ASN1V_ETSI_DSRC_signalStatusMessage 30
#define ASN1V_ETSI_DSRC_unknownFuel 0
#define ASN1V_ETSI_DSRC_gasoline 1
#define ASN1V_ETSI_DSRC_ethanol 2
#define ASN1V_ETSI_DSRC_diesel 3
#define ASN1V_ETSI_DSRC_electric 4
#define ASN1V_ETSI_DSRC_hybrid 5
#define ASN1V_ETSI_DSRC_hydrogen 6
#define ASN1V_ETSI_DSRC_natGasLiquid 7
#define ASN1V_ETSI_DSRC_natGasComp 8
#define ASN1V_ETSI_DSRC_propane 9
#define ASN1V_ETSI_DSRC_noRegion 0
#define ASN1V_ETSI_DSRC_addGrpA 1
#define ASN1V_ETSI_DSRC_addGrpB 2
#define ASN1V_ETSI_DSRC_addGrpC 3

#endif
