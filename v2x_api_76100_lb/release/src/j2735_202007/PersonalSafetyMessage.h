/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).
 */
#ifndef PERSONALSAFETYMESSAGE_H
#define PERSONALSAFETYMESSAGE_H

#include <stdio.h>
#include <stdlib.h>
#include "rtpersrc/asn1PerCppTypes.h"
#include "rtsrc/asn1CppTypes.h"
#include "rtsrc/rtPrintToStream.h"
#include "rtsrc/asn1type.h"
#include "rtxmlsrc/asn1xml.h"
#include "rtxmlsrc/rtXmlCppMsgBuf.h"
#include "rtsrc/asn1type.h"
#include "rtjsonsrc/asn1json.h"
#include "rtjsonsrc/rtJsonCppMsgBuf.h"

#include "rtsrc/ASN1CBitStr.h"
#include "rtsrc/ASN1CSeqOfList.h"

/**
 * Header file for ASN.1 module PersonalSafetyMessage
 */
/**************************************************************/
/*                                                            */
/*  PersonalDeviceUserType                                    */
/*                                                            */
/**************************************************************/
/*
PersonalDeviceUserType ::= ENUMERATED { unavailable(0), aPEDESTRIAN(1), aPEDALCYCLIST(2), aPUBLICSAFETYWORKER(3), anANIMAL(4), ... }
*/
struct EXTERN PersonalDeviceUserType {
   enum Root {
      unavailable = 0,
      aPEDESTRIAN = 1,
      aPEDALCYCLIST = 2,
      aPUBLICSAFETYWORKER = 3,
      anANIMAL = 4
   } ;
} ;

typedef OSUINT32 ASN1T_PersonalDeviceUserType;

EXTERN int asn1PE_PersonalDeviceUserType (OSCTXT* pctxt, ASN1T_PersonalDeviceUserType value);

EXTERN int asn1PD_PersonalDeviceUserType (OSCTXT* pctxt, ASN1T_PersonalDeviceUserType* pvalue);

EXTERN int XmlEnc_PersonalDeviceUserType (OSCTXT* pctxt, 
   ASN1T_PersonalDeviceUserType value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_PersonalDeviceUserType (OSCTXT* pctxt, 
   ASN1T_PersonalDeviceUserType* pvalue);

EXTERN int asn1JsonEnc_PersonalDeviceUserType (OSCTXT *pctxt, ASN1T_PersonalDeviceUserType *pvalue);

EXTERN int asn1JsonDec_PersonalDeviceUserType (OSCTXT *pctxt, ASN1T_PersonalDeviceUserType *pvalue);

EXTERN int asn1PrtToStrm_PersonalDeviceUserType (OSCTXT *pctxt, 
   const char* name, const ASN1T_PersonalDeviceUserType* pvalue);

EXTERN ASN1T_PersonalDeviceUserType* 
   new_ASN1T_PersonalDeviceUserType (ASN1CType& ccobj);

EXTERN extern const OSEnumItem ASN1T_PersonalDeviceUserType_ENUMTAB[];
#define ASN1T_PersonalDeviceUserType_ENUMTABSIZE 5

EXTERN const OSUTF8CHAR* ASN1T_PersonalDeviceUserType_ToString (OSINT32 value);

EXTERN int ASN1T_PersonalDeviceUserType_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, ASN1T_PersonalDeviceUserType* pvalue);

EXTERN int ASN1T_PersonalDeviceUserType_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      ASN1T_PersonalDeviceUserType* pvalue);

/**************************************************************/
/*                                                            */
/*  HumanPropelledType                                        */
/*                                                            */
/**************************************************************/
/*
HumanPropelledType ::= ENUMERATED { unavailable(0), otherTypes(1), onFoot(2), skateboard(3), pushOrKickScooter(4), wheelchair(5), ... }
*/
struct EXTERN HumanPropelledType {
   enum Root {
      unavailable = 0,
      otherTypes = 1,
      onFoot = 2,
      skateboard = 3,
      pushOrKickScooter = 4,
      wheelchair = 5
   } ;
} ;

typedef OSUINT32 ASN1T_HumanPropelledType;

EXTERN int asn1PE_HumanPropelledType (OSCTXT* pctxt, ASN1T_HumanPropelledType value);

EXTERN int asn1PD_HumanPropelledType (OSCTXT* pctxt, ASN1T_HumanPropelledType* pvalue);

EXTERN int XmlEnc_HumanPropelledType (OSCTXT* pctxt, 
   ASN1T_HumanPropelledType value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_HumanPropelledType (OSCTXT* pctxt, 
   ASN1T_HumanPropelledType* pvalue);

EXTERN int asn1JsonEnc_HumanPropelledType (OSCTXT *pctxt, ASN1T_HumanPropelledType *pvalue);

EXTERN int asn1JsonDec_HumanPropelledType (OSCTXT *pctxt, ASN1T_HumanPropelledType *pvalue);

EXTERN int asn1PrtToStrm_HumanPropelledType (OSCTXT *pctxt, 
   const char* name, const ASN1T_HumanPropelledType* pvalue);

EXTERN ASN1T_HumanPropelledType* 
   new_ASN1T_HumanPropelledType (ASN1CType& ccobj);

EXTERN extern const OSEnumItem ASN1T_HumanPropelledType_ENUMTAB[];
#define ASN1T_HumanPropelledType_ENUMTABSIZE 6

EXTERN const OSUTF8CHAR* ASN1T_HumanPropelledType_ToString (OSINT32 value);

EXTERN int ASN1T_HumanPropelledType_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, ASN1T_HumanPropelledType* pvalue);

EXTERN int ASN1T_HumanPropelledType_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, ASN1T_HumanPropelledType* pvalue)
      ;

/**************************************************************/
/*                                                            */
/*  AnimalPropelledType                                       */
/*                                                            */
/**************************************************************/
/*
AnimalPropelledType ::= ENUMERATED { unavailable(0), otherTypes(1), animalMounted(2), animalDrawnCarriage(3), ... }
*/
struct EXTERN AnimalPropelledType {
   enum Root {
      unavailable = 0,
      otherTypes = 1,
      animalMounted = 2,
      animalDrawnCarriage = 3
   } ;
} ;

typedef OSUINT32 ASN1T_AnimalPropelledType;

EXTERN int asn1PE_AnimalPropelledType (OSCTXT* pctxt, ASN1T_AnimalPropelledType value);

EXTERN int asn1PD_AnimalPropelledType (OSCTXT* pctxt, ASN1T_AnimalPropelledType* pvalue);

EXTERN int XmlEnc_AnimalPropelledType (OSCTXT* pctxt, 
   ASN1T_AnimalPropelledType value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_AnimalPropelledType (OSCTXT* pctxt, 
   ASN1T_AnimalPropelledType* pvalue);

EXTERN int asn1JsonEnc_AnimalPropelledType (OSCTXT *pctxt, ASN1T_AnimalPropelledType *pvalue);

EXTERN int asn1JsonDec_AnimalPropelledType (OSCTXT *pctxt, ASN1T_AnimalPropelledType *pvalue);

EXTERN int asn1PrtToStrm_AnimalPropelledType (OSCTXT *pctxt, 
   const char* name, const ASN1T_AnimalPropelledType* pvalue);

EXTERN ASN1T_AnimalPropelledType* 
   new_ASN1T_AnimalPropelledType (ASN1CType& ccobj);

EXTERN extern const OSEnumItem ASN1T_AnimalPropelledType_ENUMTAB[];
#define ASN1T_AnimalPropelledType_ENUMTABSIZE 4

EXTERN const OSUTF8CHAR* ASN1T_AnimalPropelledType_ToString (OSINT32 value);

EXTERN int ASN1T_AnimalPropelledType_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, ASN1T_AnimalPropelledType* pvalue);

EXTERN int ASN1T_AnimalPropelledType_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, ASN1T_AnimalPropelledType* pvalue)
      ;

/**************************************************************/
/*                                                            */
/*  MotorizedPropelledType                                    */
/*                                                            */
/**************************************************************/
/*
MotorizedPropelledType ::= ENUMERATED { unavailable(0), otherTypes(1), wheelChair(2), bicycle(3), scooter(4), selfBalancingDevice(5), ... }
*/
struct EXTERN MotorizedPropelledType {
   enum Root {
      unavailable = 0,
      otherTypes = 1,
      wheelChair = 2,
      bicycle = 3,
      scooter = 4,
      selfBalancingDevice = 5
   } ;
} ;

typedef OSUINT32 ASN1T_MotorizedPropelledType;

EXTERN int asn1PE_MotorizedPropelledType (OSCTXT* pctxt, ASN1T_MotorizedPropelledType value);

EXTERN int asn1PD_MotorizedPropelledType (OSCTXT* pctxt, ASN1T_MotorizedPropelledType* pvalue);

EXTERN int XmlEnc_MotorizedPropelledType (OSCTXT* pctxt, 
   ASN1T_MotorizedPropelledType value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_MotorizedPropelledType (OSCTXT* pctxt, 
   ASN1T_MotorizedPropelledType* pvalue);

EXTERN int asn1JsonEnc_MotorizedPropelledType (OSCTXT *pctxt, ASN1T_MotorizedPropelledType *pvalue);

EXTERN int asn1JsonDec_MotorizedPropelledType (OSCTXT *pctxt, ASN1T_MotorizedPropelledType *pvalue);

EXTERN int asn1PrtToStrm_MotorizedPropelledType (OSCTXT *pctxt, 
   const char* name, const ASN1T_MotorizedPropelledType* pvalue);

EXTERN ASN1T_MotorizedPropelledType* 
   new_ASN1T_MotorizedPropelledType (ASN1CType& ccobj);

EXTERN extern const OSEnumItem ASN1T_MotorizedPropelledType_ENUMTAB[];
#define ASN1T_MotorizedPropelledType_ENUMTABSIZE 6

EXTERN const OSUTF8CHAR* ASN1T_MotorizedPropelledType_ToString (OSINT32 value);

EXTERN int ASN1T_MotorizedPropelledType_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, ASN1T_MotorizedPropelledType* pvalue);

EXTERN int ASN1T_MotorizedPropelledType_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      ASN1T_MotorizedPropelledType* pvalue);

/**************************************************************/
/*                                                            */
/*  PropelledInformation                                      */
/*                                                            */
/**************************************************************/
/*
PropelledInformation ::= CHOICE {
   human [0] HumanPropelledType, -- PersonalDeviceUserType would be a aPEDESTRIAN
   animal [1] AnimalPropelledType,
   motor [2] MotorizedPropelledType,
   ...
}
*/
/* Choice tag constants */

#define T_PropelledInformation_human    1
#define T_PropelledInformation_animal   2
#define T_PropelledInformation_motor    3
#define T_PropelledInformation_extElem1 4

struct EXTERN ASN1T_PropelledInformation {
   OSINT32 t;
   union {
      /* t = 1 */
      ASN1T_HumanPropelledType human;
      /* t = 2 */
      ASN1T_AnimalPropelledType animal;
      /* t = 3 */
      ASN1T_MotorizedPropelledType motor;
      /* t = 4 */
      ASN1TOpenType *extElem1;
   } u;
   ASN1T_PropelledInformation () { t = 0; OSCRTLMEMSET (&u, 0, sizeof(u)); }
} ;

EXTERN int asn1PE_PropelledInformation (OSCTXT* pctxt, ASN1T_PropelledInformation* pvalue);

EXTERN int asn1PD_PropelledInformation (OSCTXT* pctxt, ASN1T_PropelledInformation* pvalue);

EXTERN int XmlEnc_PropelledInformation (OSCTXT* pctxt, 
   ASN1T_PropelledInformation* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_PropelledInformation (OSCTXT* pctxt, 
   ASN1T_PropelledInformation* pvalue);

EXTERN int asn1JsonEnc_PropelledInformation (OSCTXT *pctxt, ASN1T_PropelledInformation *pvalue);

EXTERN int asn1JsonDec_PropelledInformation (OSCTXT *pctxt, ASN1T_PropelledInformation *pvalue);

EXTERN int asn1PrtToStrm_PropelledInformation (OSCTXT *pctxt, 
   const char* name, const ASN1T_PropelledInformation* pvalue);

EXTERN ASN1T_PropelledInformation* 
   new_ASN1T_PropelledInformation (ASN1CType& ccobj);

EXTERN int asn1Init_PropelledInformation (ASN1T_PropelledInformation* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_PropelledInformation (OSCTXT *pctxt, 
   ASN1T_PropelledInformation* pvalue);

/**************************************************************/
/*                                                            */
/*  PersonalDeviceUsageState                                  */
/*                                                            */
/**************************************************************/
/*
PersonalDeviceUsageState ::= BIT STRING  { unavailable(0), other(1), idle(2), listeningToAudio(3), typing(4), calling(5), playingGames(6), reading(7), viewing(8) } (SIZE (9, ...))
    All bits shall be set to zero when unknown state

*/
struct EXTERN ASN1T_PersonalDeviceUsageState {
   OSUINT8 numbits;
   OSOCTET data[2];
   OSOCTET* extdata;
   // ctors
   ASN1T_PersonalDeviceUsageState () : numbits(0), extdata(0) {}
} ;

class EXTERN ASN1C_PersonalDeviceUsageState :
public ASN1CBitStr
{
protected:
   ASN1T_PersonalDeviceUsageState& msgData;
public:
   // named bits
   enum { unavailable = 0, other = 1, idle = 2, listeningToAudio = 3, typing = 4, calling = 5, playingGames = 6, reading = 7, viewing = 8 };

   /**
    * Control class: ASN1C_PersonalDeviceUsageState
    * Data class:    ASN1T_PersonalDeviceUsageState
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_PersonalDeviceUsageState (ASN1T_PersonalDeviceUsageState& data);

   /**
    * Control class: ASN1C_PersonalDeviceUsageState<br/>
    * Data class: ASN1T_PersonalDeviceUsageState<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_PersonalDeviceUsageState (OSRTMessageBufferIF& msgBuf
      , ASN1T_PersonalDeviceUsageState& data);

   virtual ~ASN1C_PersonalDeviceUsageState () {}

private:
   ASN1C_PersonalDeviceUsageState& operator= (const ASN1C_PersonalDeviceUsageState&) {return *this;}
} ;

EXTERN int asn1PE_PersonalDeviceUsageState (OSCTXT* pctxt, ASN1T_PersonalDeviceUsageState* pvalue);

EXTERN int asn1PD_PersonalDeviceUsageState (OSCTXT* pctxt, ASN1T_PersonalDeviceUsageState* pvalue);

EXTERN int XmlEnc_PersonalDeviceUsageState (OSCTXT* pctxt, 
   ASN1T_PersonalDeviceUsageState* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_PersonalDeviceUsageState (OSCTXT* pctxt, 
   ASN1T_PersonalDeviceUsageState* pvalue);

EXTERN int asn1JsonEnc_PersonalDeviceUsageState (OSCTXT *pctxt, ASN1T_PersonalDeviceUsageState *pvalue);

EXTERN int asn1JsonDec_PersonalDeviceUsageState (OSCTXT *pctxt, ASN1T_PersonalDeviceUsageState *pvalue);

EXTERN int asn1PrtToStrm_PersonalDeviceUsageState (OSCTXT *pctxt, 
   const char* name, const ASN1T_PersonalDeviceUsageState* pvalue);

extern EXTERN struct OSBitMapItem g_ASN1T_PersonalDeviceUsageState_NAMEDBITTAB[10];

EXTERN ASN1T_PersonalDeviceUsageState* 
   new_ASN1T_PersonalDeviceUsageState (ASN1CType& ccobj);

EXTERN int asn1Init_PersonalDeviceUsageState (ASN1T_PersonalDeviceUsageState* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

/**************************************************************/
/*                                                            */
/*  PersonalCrossingRequest                                   */
/*                                                            */
/**************************************************************/
/*
PersonalCrossingRequest ::= BOOLEAN
    Use:
    True  = On  (request crossing)
    False = Off (no request)

*/
typedef OSBOOL ASN1T_PersonalCrossingRequest;

EXTERN int asn1PE_PersonalCrossingRequest (OSCTXT* pctxt, ASN1T_PersonalCrossingRequest value);

EXTERN int asn1PD_PersonalCrossingRequest (OSCTXT* pctxt, ASN1T_PersonalCrossingRequest* pvalue);

EXTERN int XmlEnc_PersonalCrossingRequest (OSCTXT* pctxt, 
   ASN1T_PersonalCrossingRequest value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_PersonalCrossingRequest (OSCTXT* pctxt, 
   ASN1T_PersonalCrossingRequest* pvalue);

EXTERN int asn1JsonEnc_PersonalCrossingRequest (OSCTXT *pctxt, ASN1T_PersonalCrossingRequest *pvalue);

EXTERN int asn1JsonDec_PersonalCrossingRequest (OSCTXT *pctxt, ASN1T_PersonalCrossingRequest *pvalue);

EXTERN int asn1PrtToStrm_PersonalCrossingRequest (OSCTXT *pctxt, 
   const char* name, const ASN1T_PersonalCrossingRequest* pvalue);

EXTERN ASN1T_PersonalCrossingRequest* 
   new_ASN1T_PersonalCrossingRequest (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  PersonalCrossingInProgress                                */
/*                                                            */
/**************************************************************/
/*
PersonalCrossingInProgress ::= BOOLEAN
                                        Use:
    True  = Yes, is in maneuver
    False = No

*/
typedef OSBOOL ASN1T_PersonalCrossingInProgress;

EXTERN int asn1PE_PersonalCrossingInProgress (OSCTXT* pctxt, ASN1T_PersonalCrossingInProgress value);

EXTERN int asn1PD_PersonalCrossingInProgress (OSCTXT* pctxt, ASN1T_PersonalCrossingInProgress* pvalue);

EXTERN int XmlEnc_PersonalCrossingInProgress (OSCTXT* pctxt, 
   ASN1T_PersonalCrossingInProgress value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_PersonalCrossingInProgress (OSCTXT* pctxt, 
   ASN1T_PersonalCrossingInProgress* pvalue);

EXTERN int asn1JsonEnc_PersonalCrossingInProgress (OSCTXT *pctxt, ASN1T_PersonalCrossingInProgress *pvalue);

EXTERN int asn1JsonDec_PersonalCrossingInProgress (OSCTXT *pctxt, ASN1T_PersonalCrossingInProgress *pvalue);

EXTERN int asn1PrtToStrm_PersonalCrossingInProgress (OSCTXT *pctxt, 
   const char* name, const ASN1T_PersonalCrossingInProgress* pvalue);

EXTERN ASN1T_PersonalCrossingInProgress* 
   new_ASN1T_PersonalCrossingInProgress (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  NumberOfParticipantsInCluster                             */
/*                                                            */
/**************************************************************/
/*
NumberOfParticipantsInCluster ::= ENUMERATED { unavailable(0), small(1), medium(2), large(3), ... }
*/
struct EXTERN NumberOfParticipantsInCluster {
   enum Root {
      unavailable = 0,
      small_ = 1,
      medium = 2,
      large_ = 3
   } ;
} ;

typedef OSUINT32 ASN1T_NumberOfParticipantsInCluster;

EXTERN int asn1PE_NumberOfParticipantsInCluster (OSCTXT* pctxt, ASN1T_NumberOfParticipantsInCluster value);

EXTERN int asn1PD_NumberOfParticipantsInCluster (OSCTXT* pctxt, ASN1T_NumberOfParticipantsInCluster* pvalue);

EXTERN int XmlEnc_NumberOfParticipantsInCluster (OSCTXT* pctxt, 
   ASN1T_NumberOfParticipantsInCluster value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_NumberOfParticipantsInCluster (OSCTXT* pctxt, 
   ASN1T_NumberOfParticipantsInCluster* pvalue);

EXTERN int asn1JsonEnc_NumberOfParticipantsInCluster (OSCTXT *pctxt, ASN1T_NumberOfParticipantsInCluster *pvalue);

EXTERN int asn1JsonDec_NumberOfParticipantsInCluster (OSCTXT *pctxt, ASN1T_NumberOfParticipantsInCluster *pvalue);

EXTERN int asn1PrtToStrm_NumberOfParticipantsInCluster (OSCTXT *pctxt, 
   const char* name, const ASN1T_NumberOfParticipantsInCluster* pvalue);

EXTERN ASN1T_NumberOfParticipantsInCluster* 
   new_ASN1T_NumberOfParticipantsInCluster (ASN1CType& ccobj);

EXTERN extern const OSEnumItem ASN1T_NumberOfParticipantsInCluster_ENUMTAB[];
#define ASN1T_NumberOfParticipantsInCluster_ENUMTABSIZE 4

EXTERN const OSUTF8CHAR* ASN1T_NumberOfParticipantsInCluster_ToString (OSINT32 value);

EXTERN int ASN1T_NumberOfParticipantsInCluster_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, ASN1T_NumberOfParticipantsInCluster* pvalue);

EXTERN int ASN1T_NumberOfParticipantsInCluster_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      ASN1T_NumberOfParticipantsInCluster* pvalue);

/**************************************************************/
/*                                                            */
/*  PersonalClusterRadius                                     */
/*                                                            */
/**************************************************************/
/*
PersonalClusterRadius ::= INTEGER (0..100)
                                            units of meters

*/
typedef OSUINT8 ASN1T_PersonalClusterRadius;

EXTERN int asn1PE_PersonalClusterRadius (OSCTXT* pctxt, ASN1T_PersonalClusterRadius value);

EXTERN int asn1PD_PersonalClusterRadius (OSCTXT* pctxt, ASN1T_PersonalClusterRadius* pvalue);

EXTERN int XmlEnc_PersonalClusterRadius (OSCTXT* pctxt, 
   ASN1T_PersonalClusterRadius value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_PersonalClusterRadius (OSCTXT* pctxt, 
   ASN1T_PersonalClusterRadius* pvalue);

EXTERN int asn1JsonEnc_PersonalClusterRadius (OSCTXT *pctxt, ASN1T_PersonalClusterRadius *pvalue);

EXTERN int asn1JsonDec_PersonalClusterRadius (OSCTXT *pctxt, ASN1T_PersonalClusterRadius *pvalue);

EXTERN int asn1PrtToStrm_PersonalClusterRadius (OSCTXT *pctxt, 
   const char* name, const ASN1T_PersonalClusterRadius* pvalue);

EXTERN ASN1T_PersonalClusterRadius* 
   new_ASN1T_PersonalClusterRadius (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  PublicSafetyEventResponderWorkerType                      */
/*                                                            */
/**************************************************************/
/*
PublicSafetyEventResponderWorkerType ::= ENUMERATED { unavailable(0), towOperater(1), fireAndEMSWorker(2), aDOTWorker(3), lawEnforcement(4), hazmatResponder(5), animalControlWorker(6), otherPersonnel(7), ... }
*/
struct EXTERN PublicSafetyEventResponderWorkerType {
   enum Root {
      unavailable = 0,
      towOperater = 1,
      fireAndEMSWorker = 2,
      aDOTWorker = 3,
      lawEnforcement = 4,
      hazmatResponder = 5,
      animalControlWorker = 6,
      otherPersonnel = 7
   } ;
} ;

typedef OSUINT32 ASN1T_PublicSafetyEventResponderWorkerType;

EXTERN int asn1PE_PublicSafetyEventResponderWorkerType (OSCTXT* pctxt, ASN1T_PublicSafetyEventResponderWorkerType value);

EXTERN int asn1PD_PublicSafetyEventResponderWorkerType (OSCTXT* pctxt, ASN1T_PublicSafetyEventResponderWorkerType* pvalue);

EXTERN int XmlEnc_PublicSafetyEventResponderWorkerType (OSCTXT* pctxt, 
   ASN1T_PublicSafetyEventResponderWorkerType value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_PublicSafetyEventResponderWorkerType (OSCTXT* pctxt, 
   ASN1T_PublicSafetyEventResponderWorkerType* pvalue);

EXTERN int asn1JsonEnc_PublicSafetyEventResponderWorkerType (OSCTXT *pctxt, ASN1T_PublicSafetyEventResponderWorkerType *pvalue);

EXTERN int asn1JsonDec_PublicSafetyEventResponderWorkerType (OSCTXT *pctxt, ASN1T_PublicSafetyEventResponderWorkerType *pvalue);

EXTERN int asn1PrtToStrm_PublicSafetyEventResponderWorkerType (OSCTXT *pctxt, 
   const char* name, const ASN1T_PublicSafetyEventResponderWorkerType* pvalue);

EXTERN ASN1T_PublicSafetyEventResponderWorkerType* 
   new_ASN1T_PublicSafetyEventResponderWorkerType (ASN1CType& ccobj);

EXTERN extern const OSEnumItem ASN1T_PublicSafetyEventResponderWorkerType_ENUMTAB[];
#define ASN1T_PublicSafetyEventResponderWorkerType_ENUMTABSIZE 8

EXTERN const OSUTF8CHAR* ASN1T_PublicSafetyEventResponderWorkerType_ToString (OSINT32 value);

EXTERN int ASN1T_PublicSafetyEventResponderWorkerType_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, ASN1T_PublicSafetyEventResponderWorkerType* pvalue)
      ;

EXTERN int ASN1T_PublicSafetyEventResponderWorkerType_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      ASN1T_PublicSafetyEventResponderWorkerType* pvalue);

/**************************************************************/
/*                                                            */
/*  PublicSafetyAndRoadWorkerActivity                         */
/*                                                            */
/**************************************************************/
/*
PublicSafetyAndRoadWorkerActivity ::= BIT STRING  { unavailable(0), workingOnRoad(1), settingUpClosures(2), respondingToEvents(3), directingTraffic(4), otherActivities(5) } (SIZE (6, ...))
*/
struct EXTERN ASN1T_PublicSafetyAndRoadWorkerActivity {
   OSUINT8 numbits;
   OSOCTET data[1];
   OSOCTET* extdata;
   // ctors
   ASN1T_PublicSafetyAndRoadWorkerActivity () : numbits(0), extdata(0) {}
} ;

class EXTERN ASN1C_PublicSafetyAndRoadWorkerActivity :
public ASN1CBitStr
{
protected:
   ASN1T_PublicSafetyAndRoadWorkerActivity& msgData;
public:
   // named bits
   enum { unavailable = 0, workingOnRoad = 1, settingUpClosures = 2, respondingToEvents = 3, directingTraffic = 4, otherActivities = 5 };

   /**
    * Control class: ASN1C_PublicSafetyAndRoadWorkerActivity
    * Data class:    ASN1T_PublicSafetyAndRoadWorkerActivity
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_PublicSafetyAndRoadWorkerActivity
       (ASN1T_PublicSafetyAndRoadWorkerActivity& data);

   /**
    * Control class: ASN1C_PublicSafetyAndRoadWorkerActivity<br/>
    * Data class: ASN1T_PublicSafetyAndRoadWorkerActivity<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_PublicSafetyAndRoadWorkerActivity (OSRTMessageBufferIF& msgBuf
      , ASN1T_PublicSafetyAndRoadWorkerActivity& data);

   virtual ~ASN1C_PublicSafetyAndRoadWorkerActivity () {}

private:
   ASN1C_PublicSafetyAndRoadWorkerActivity& operator= (const ASN1C_PublicSafetyAndRoadWorkerActivity&) {return *this;}
} ;

EXTERN int asn1PE_PublicSafetyAndRoadWorkerActivity (OSCTXT* pctxt, ASN1T_PublicSafetyAndRoadWorkerActivity* pvalue);

EXTERN int asn1PD_PublicSafetyAndRoadWorkerActivity (OSCTXT* pctxt, ASN1T_PublicSafetyAndRoadWorkerActivity* pvalue);

EXTERN int XmlEnc_PublicSafetyAndRoadWorkerActivity (OSCTXT* pctxt, 
   ASN1T_PublicSafetyAndRoadWorkerActivity* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_PublicSafetyAndRoadWorkerActivity (OSCTXT* pctxt, 
   ASN1T_PublicSafetyAndRoadWorkerActivity* pvalue);

EXTERN int asn1JsonEnc_PublicSafetyAndRoadWorkerActivity (OSCTXT *pctxt, ASN1T_PublicSafetyAndRoadWorkerActivity *pvalue);

EXTERN int asn1JsonDec_PublicSafetyAndRoadWorkerActivity (OSCTXT *pctxt, ASN1T_PublicSafetyAndRoadWorkerActivity *pvalue);

EXTERN int asn1PrtToStrm_PublicSafetyAndRoadWorkerActivity (OSCTXT *pctxt, 
   const char* name, const ASN1T_PublicSafetyAndRoadWorkerActivity* pvalue);

extern EXTERN struct OSBitMapItem g_ASN1T_PublicSafetyAndRoadWorkerActivity_NAMEDBITTAB[7];

EXTERN ASN1T_PublicSafetyAndRoadWorkerActivity* 
   new_ASN1T_PublicSafetyAndRoadWorkerActivity (ASN1CType& ccobj);

EXTERN int asn1Init_PublicSafetyAndRoadWorkerActivity (
   ASN1T_PublicSafetyAndRoadWorkerActivity* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

/**************************************************************/
/*                                                            */
/*  PublicSafetyDirectingTrafficSubType                       */
/*                                                            */
/**************************************************************/
/*
PublicSafetyDirectingTrafficSubType ::= BIT STRING  { unavailable(0), policeAndTrafficOfficers(1), trafficControlPersons(2), railroadCrossingGuards(3), civilDefenseNationalGuardMilitaryPolice(4), emergencyOrganizationPersonnel(5), highwayServiceVehiclePersonnel(6) } (SIZE (7, ...))
*/
struct EXTERN ASN1T_PublicSafetyDirectingTrafficSubType {
   OSUINT8 numbits;
   OSOCTET data[1];
   OSOCTET* extdata;
   // ctors
   ASN1T_PublicSafetyDirectingTrafficSubType () : numbits(0), extdata(0) {}
} ;

class EXTERN ASN1C_PublicSafetyDirectingTrafficSubType :
public ASN1CBitStr
{
protected:
   ASN1T_PublicSafetyDirectingTrafficSubType& msgData;
public:
   // named bits
   enum { unavailable = 0, policeAndTrafficOfficers = 1, trafficControlPersons = 2, railroadCrossingGuards = 3, civilDefenseNationalGuardMilitaryPolice = 4, emergencyOrganizationPersonnel = 5, highwayServiceVehiclePersonnel = 6 };

   /**
    * Control class: ASN1C_PublicSafetyDirectingTrafficSubType
    * Data class:    ASN1T_PublicSafetyDirectingTrafficSubType
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_PublicSafetyDirectingTrafficSubType
       (ASN1T_PublicSafetyDirectingTrafficSubType& data);

   /**
    * Control class: ASN1C_PublicSafetyDirectingTrafficSubType<br/>
    * Data class: ASN1T_PublicSafetyDirectingTrafficSubType<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_PublicSafetyDirectingTrafficSubType (OSRTMessageBufferIF& msgBuf
      , ASN1T_PublicSafetyDirectingTrafficSubType& data);

   virtual ~ASN1C_PublicSafetyDirectingTrafficSubType () {}

private:
   ASN1C_PublicSafetyDirectingTrafficSubType& operator= (const ASN1C_PublicSafetyDirectingTrafficSubType&) {return *this;}
} ;

EXTERN int asn1PE_PublicSafetyDirectingTrafficSubType (OSCTXT* pctxt, ASN1T_PublicSafetyDirectingTrafficSubType* pvalue);

EXTERN int asn1PD_PublicSafetyDirectingTrafficSubType (OSCTXT* pctxt, ASN1T_PublicSafetyDirectingTrafficSubType* pvalue);

EXTERN int XmlEnc_PublicSafetyDirectingTrafficSubType (OSCTXT* pctxt, 
   ASN1T_PublicSafetyDirectingTrafficSubType* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_PublicSafetyDirectingTrafficSubType (OSCTXT* pctxt, 
   ASN1T_PublicSafetyDirectingTrafficSubType* pvalue);

EXTERN int asn1JsonEnc_PublicSafetyDirectingTrafficSubType (OSCTXT *pctxt, ASN1T_PublicSafetyDirectingTrafficSubType *pvalue);

EXTERN int asn1JsonDec_PublicSafetyDirectingTrafficSubType (OSCTXT *pctxt, ASN1T_PublicSafetyDirectingTrafficSubType *pvalue);

EXTERN int asn1PrtToStrm_PublicSafetyDirectingTrafficSubType (OSCTXT *pctxt, 
   const char* name, const ASN1T_PublicSafetyDirectingTrafficSubType* pvalue);

extern EXTERN struct OSBitMapItem g_ASN1T_PublicSafetyDirectingTrafficSubType_NAMEDBITTAB[8];

EXTERN ASN1T_PublicSafetyDirectingTrafficSubType* 
   new_ASN1T_PublicSafetyDirectingTrafficSubType (ASN1CType& ccobj);

EXTERN int asn1Init_PublicSafetyDirectingTrafficSubType (
   ASN1T_PublicSafetyDirectingTrafficSubType* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

/**************************************************************/
/*                                                            */
/*  PersonalAssistive                                         */
/*                                                            */
/**************************************************************/
/*
PersonalAssistive ::= BIT STRING  { unavailable(0), otherType(1), vision(2), hearing(3), movement(4), cognition(5) } (SIZE (6, ...))
*/
struct EXTERN ASN1T_PersonalAssistive {
   OSUINT8 numbits;
   OSOCTET data[1];
   OSOCTET* extdata;
   // ctors
   ASN1T_PersonalAssistive () : numbits(0), extdata(0) {}
} ;

class EXTERN ASN1C_PersonalAssistive :
public ASN1CBitStr
{
protected:
   ASN1T_PersonalAssistive& msgData;
public:
   // named bits
   enum { unavailable = 0, otherType = 1, vision = 2, hearing = 3, movement = 4, cognition = 5 };

   /**
    * Control class: ASN1C_PersonalAssistive
    * Data class:    ASN1T_PersonalAssistive
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_PersonalAssistive (ASN1T_PersonalAssistive& data);

   /**
    * Control class: ASN1C_PersonalAssistive<br/>
    * Data class: ASN1T_PersonalAssistive<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_PersonalAssistive (OSRTMessageBufferIF& msgBuf
      , ASN1T_PersonalAssistive& data);

   virtual ~ASN1C_PersonalAssistive () {}

private:
   ASN1C_PersonalAssistive& operator= (const ASN1C_PersonalAssistive&) {return *this;}
} ;

EXTERN int asn1PE_PersonalAssistive (OSCTXT* pctxt, ASN1T_PersonalAssistive* pvalue);

EXTERN int asn1PD_PersonalAssistive (OSCTXT* pctxt, ASN1T_PersonalAssistive* pvalue);

EXTERN int XmlEnc_PersonalAssistive (OSCTXT* pctxt, 
   ASN1T_PersonalAssistive* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_PersonalAssistive (OSCTXT* pctxt, 
   ASN1T_PersonalAssistive* pvalue);

EXTERN int asn1JsonEnc_PersonalAssistive (OSCTXT *pctxt, ASN1T_PersonalAssistive *pvalue);

EXTERN int asn1JsonDec_PersonalAssistive (OSCTXT *pctxt, ASN1T_PersonalAssistive *pvalue);

EXTERN int asn1PrtToStrm_PersonalAssistive (OSCTXT *pctxt, 
   const char* name, const ASN1T_PersonalAssistive* pvalue);

extern EXTERN struct OSBitMapItem g_ASN1T_PersonalAssistive_NAMEDBITTAB[7];

EXTERN ASN1T_PersonalAssistive* new_ASN1T_PersonalAssistive (ASN1CType& ccobj)
   ;

EXTERN int asn1Init_PersonalAssistive (ASN1T_PersonalAssistive* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

/**************************************************************/
/*                                                            */
/*  UserSizeAndBehaviour                                      */
/*                                                            */
/**************************************************************/
/*
UserSizeAndBehaviour ::= BIT STRING  { unavailable(0), smallStature(1), largeStature(2), erraticMoving(3), slowMoving(4) } (SIZE (5, ...))
*/
struct EXTERN ASN1T_UserSizeAndBehaviour {
   OSUINT8 numbits;
   OSOCTET data[1];
   OSOCTET* extdata;
   // ctors
   ASN1T_UserSizeAndBehaviour () : numbits(0), extdata(0) {}
} ;

class EXTERN ASN1C_UserSizeAndBehaviour :
public ASN1CBitStr
{
protected:
   ASN1T_UserSizeAndBehaviour& msgData;
public:
   // named bits
   enum { unavailable = 0, smallStature = 1, largeStature = 2, erraticMoving = 3, slowMoving = 4 };

   /**
    * Control class: ASN1C_UserSizeAndBehaviour
    * Data class:    ASN1T_UserSizeAndBehaviour
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_UserSizeAndBehaviour (ASN1T_UserSizeAndBehaviour& data);

   /**
    * Control class: ASN1C_UserSizeAndBehaviour<br/>
    * Data class: ASN1T_UserSizeAndBehaviour<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_UserSizeAndBehaviour (OSRTMessageBufferIF& msgBuf
      , ASN1T_UserSizeAndBehaviour& data);

   virtual ~ASN1C_UserSizeAndBehaviour () {}

private:
   ASN1C_UserSizeAndBehaviour& operator= (const ASN1C_UserSizeAndBehaviour&) {return *this;}
} ;

EXTERN int asn1PE_UserSizeAndBehaviour (OSCTXT* pctxt, ASN1T_UserSizeAndBehaviour* pvalue);

EXTERN int asn1PD_UserSizeAndBehaviour (OSCTXT* pctxt, ASN1T_UserSizeAndBehaviour* pvalue);

EXTERN int XmlEnc_UserSizeAndBehaviour (OSCTXT* pctxt, 
   ASN1T_UserSizeAndBehaviour* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_UserSizeAndBehaviour (OSCTXT* pctxt, 
   ASN1T_UserSizeAndBehaviour* pvalue);

EXTERN int asn1JsonEnc_UserSizeAndBehaviour (OSCTXT *pctxt, ASN1T_UserSizeAndBehaviour *pvalue);

EXTERN int asn1JsonDec_UserSizeAndBehaviour (OSCTXT *pctxt, ASN1T_UserSizeAndBehaviour *pvalue);

EXTERN int asn1PrtToStrm_UserSizeAndBehaviour (OSCTXT *pctxt, 
   const char* name, const ASN1T_UserSizeAndBehaviour* pvalue);

extern EXTERN struct OSBitMapItem g_ASN1T_UserSizeAndBehaviour_NAMEDBITTAB[6];

EXTERN ASN1T_UserSizeAndBehaviour* 
   new_ASN1T_UserSizeAndBehaviour (ASN1CType& ccobj);

EXTERN int asn1Init_UserSizeAndBehaviour (ASN1T_UserSizeAndBehaviour* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

/**************************************************************/
/*                                                            */
/*  Attachment                                                */
/*                                                            */
/**************************************************************/
/*
Attachment ::= ENUMERATED { unavailable(0), stroller(1), bicycleTrailer(2), cart(3), wheelchair(4), otherWalkAssistAttachments(5), pet(6), ... }
*/
struct EXTERN Attachment {
   enum Root {
      unavailable = 0,
      stroller = 1,
      bicycleTrailer = 2,
      cart = 3,
      wheelchair = 4,
      otherWalkAssistAttachments = 5,
      pet = 6
   } ;
} ;

typedef OSUINT32 ASN1T_Attachment;

EXTERN int asn1PE_Attachment (OSCTXT* pctxt, ASN1T_Attachment value);

EXTERN int asn1PD_Attachment (OSCTXT* pctxt, ASN1T_Attachment* pvalue);

EXTERN int XmlEnc_Attachment (OSCTXT* pctxt, ASN1T_Attachment value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Attachment (OSCTXT* pctxt, ASN1T_Attachment* pvalue);

EXTERN int asn1JsonEnc_Attachment (OSCTXT *pctxt, ASN1T_Attachment *pvalue);

EXTERN int asn1JsonDec_Attachment (OSCTXT *pctxt, ASN1T_Attachment *pvalue);

EXTERN int asn1PrtToStrm_Attachment (OSCTXT *pctxt, 
   const char* name, const ASN1T_Attachment* pvalue);

EXTERN ASN1T_Attachment* new_ASN1T_Attachment (ASN1CType& ccobj);

EXTERN extern const OSEnumItem ASN1T_Attachment_ENUMTAB[];
#define ASN1T_Attachment_ENUMTABSIZE 7

EXTERN const OSUTF8CHAR* ASN1T_Attachment_ToString (OSINT32 value);

EXTERN int ASN1T_Attachment_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, ASN1T_Attachment* pvalue);

EXTERN int ASN1T_Attachment_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, ASN1T_Attachment* pvalue);

/**************************************************************/
/*                                                            */
/*  AttachmentRadius                                          */
/*                                                            */
/**************************************************************/
/*
AttachmentRadius ::= INTEGER (0..200)
                                       In LSB units of one decimeter

*/
typedef OSUINT8 ASN1T_AttachmentRadius;

EXTERN int asn1PE_AttachmentRadius (OSCTXT* pctxt, ASN1T_AttachmentRadius value);

EXTERN int asn1PD_AttachmentRadius (OSCTXT* pctxt, ASN1T_AttachmentRadius* pvalue);

EXTERN int XmlEnc_AttachmentRadius (OSCTXT* pctxt, 
   ASN1T_AttachmentRadius value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_AttachmentRadius (OSCTXT* pctxt, 
   ASN1T_AttachmentRadius* pvalue);

EXTERN int asn1JsonEnc_AttachmentRadius (OSCTXT *pctxt, ASN1T_AttachmentRadius *pvalue);

EXTERN int asn1JsonDec_AttachmentRadius (OSCTXT *pctxt, ASN1T_AttachmentRadius *pvalue);

EXTERN int asn1PrtToStrm_AttachmentRadius (OSCTXT *pctxt, 
   const char* name, const ASN1T_AttachmentRadius* pvalue);

EXTERN ASN1T_AttachmentRadius* new_ASN1T_AttachmentRadius (ASN1CType& ccobj);

/**************************************************************/
/*                                                            */
/*  AnimalType                                                */
/*                                                            */
/**************************************************************/
/*
AnimalType ::= ENUMERATED { unavailable(0), serviceUse(1), pet(2), farm(3), ... }
*/
struct EXTERN AnimalType {
   enum Root {
      unavailable = 0,
      serviceUse = 1,
      pet = 2,
      farm = 3
   } ;
} ;

typedef OSUINT32 ASN1T_AnimalType;

EXTERN int asn1PE_AnimalType (OSCTXT* pctxt, ASN1T_AnimalType value);

EXTERN int asn1PD_AnimalType (OSCTXT* pctxt, ASN1T_AnimalType* pvalue);

EXTERN int XmlEnc_AnimalType (OSCTXT* pctxt, ASN1T_AnimalType value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_AnimalType (OSCTXT* pctxt, ASN1T_AnimalType* pvalue);

EXTERN int asn1JsonEnc_AnimalType (OSCTXT *pctxt, ASN1T_AnimalType *pvalue);

EXTERN int asn1JsonDec_AnimalType (OSCTXT *pctxt, ASN1T_AnimalType *pvalue);

EXTERN int asn1PrtToStrm_AnimalType (OSCTXT *pctxt, 
   const char* name, const ASN1T_AnimalType* pvalue);

EXTERN ASN1T_AnimalType* new_ASN1T_AnimalType (ASN1CType& ccobj);

EXTERN extern const OSEnumItem ASN1T_AnimalType_ENUMTAB[];
#define ASN1T_AnimalType_ENUMTABSIZE 4

EXTERN const OSUTF8CHAR* ASN1T_AnimalType_ToString (OSINT32 value);

EXTERN int ASN1T_AnimalType_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, ASN1T_AnimalType* pvalue);

EXTERN int ASN1T_AnimalType_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, ASN1T_AnimalType* pvalue);

/**************************************************************/
/*                                                            */
/*  PersonalSafetyMessage_regional_element                    */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PersonalSafetyMessage'
*/
struct EXTERN ASN1T_PersonalSafetyMessage_regional_element {
   OSUINT8 regionId;
   ASN1TOpenType regExtValue;
} ;

EXTERN int asn1PE_PersonalSafetyMessage_regional_element (OSCTXT* pctxt, ASN1T_PersonalSafetyMessage_regional_element* pvalue);

EXTERN int asn1PD_PersonalSafetyMessage_regional_element (OSCTXT* pctxt, ASN1T_PersonalSafetyMessage_regional_element* pvalue);

EXTERN int XmlEnc_PersonalSafetyMessage_regional_element (OSCTXT* pctxt, 
   ASN1T_PersonalSafetyMessage_regional_element* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_PersonalSafetyMessage_regional_element (OSCTXT* pctxt, 
   ASN1T_PersonalSafetyMessage_regional_element* pvalue);

EXTERN int asn1JsonEnc_PersonalSafetyMessage_regional_element (OSCTXT *pctxt, ASN1T_PersonalSafetyMessage_regional_element *pvalue);

EXTERN int asn1JsonDec_PersonalSafetyMessage_regional_element (OSCTXT *pctxt, ASN1T_PersonalSafetyMessage_regional_element *pvalue);

EXTERN int asn1PrtToStrm_PersonalSafetyMessage_regional_element (OSCTXT *pctxt, 
   const char* name, const ASN1T_PersonalSafetyMessage_regional_element* pvalue);

EXTERN ASN1T_PersonalSafetyMessage_regional_element* 
   new_ASN1T_PersonalSafetyMessage_regional_element (ASN1CType& ccobj);

EXTERN int asn1Init_PersonalSafetyMessage_regional_element (
   ASN1T_PersonalSafetyMessage_regional_element* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_PersonalSafetyMessage_regional_element (OSCTXT *pctxt, 
   ASN1T_PersonalSafetyMessage_regional_element* pvalue);

/**************************************************************/
/*                                                            */
/*  PersonalSafetyMessage_regional                            */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PersonalSafetyMessage'
*/
/* List of ASN1T_PersonalSafetyMessage_regional_element */
typedef ASN1TSeqOfList ASN1T_PersonalSafetyMessage_regional;

class EXTERN ASN1C_PersonalSafetyMessage_regional :
public ASN1CSeqOfList
{
protected:
   ASN1T_PersonalSafetyMessage_regional& msgData;
public:
   /**
    * Control class: ASN1C_PersonalSafetyMessage_regional
    * Data class:    ASN1T_PersonalSafetyMessage_regional
    *
    * Constructs an instance of the control class given an instance of
    * the data class.
    *
    * WARNING: this creates an internal context to use for memory
    * allocations which will be deleted when the object goes out of
    * scope. This object must be used in the same method in which the
    * data class object is being used.
    *
    * @param data    A reference to an instance of the data class.
    */
   ASN1C_PersonalSafetyMessage_regional
       (ASN1T_PersonalSafetyMessage_regional& data);

   /**
    * Control class: ASN1C_PersonalSafetyMessage_regional<br/>
    * Data class: ASN1T_PersonalSafetyMessage_regional<br/>
    *
    * Constructs an instance of the control class given an instance
    * of an encode or decode buffer and an instance of
    * the data class.
    *
    * @param msgBuf Reference to an instance of an encode or
    *                  decode buffer.
    * @param data   Reference to an instance of the data class.
    */
   ASN1C_PersonalSafetyMessage_regional (OSRTMessageBufferIF& msgBuf
      , ASN1T_PersonalSafetyMessage_regional& data);

   /**
    * Control class: ASN1C_PersonalSafetyMessage_regional<br/>
    * Data class: ASN1T_PersonalSafetyMessage_regional<br/>
    *
    * Constructs an instance of the control class given an instance of
    * an \c ASN1CType control class and an instance of the
    * given data class.
    *
    * @param ccobj  Reference to a control class instance.
    * @param data   Reference to an instance of the data class. */
   ASN1C_PersonalSafetyMessage_regional (ASN1CType& ccobj
      , ASN1T_PersonalSafetyMessage_regional& data);

   virtual ~ASN1C_PersonalSafetyMessage_regional () {}

   /**
    * Data class: ASN1T_PersonalSafetyMessage_regional_element<br/>
    *
    * Appends an instance of the data class to the end of the list.
    *
    * @param  elem     Pointer to an instance of the data class.
    */
   void Append (ASN1T_PersonalSafetyMessage_regional_element* elem);

   void freeMemory();
   /**
    * Data class: ASN1T_PersonalSafetyMessage_regional_element.<br/>
    *
    * Creates a new instance of the data class.
    *
    * @return    Pointer to the new instance of the data class.
    */
   ASN1T_PersonalSafetyMessage_regional_element* NewElement ();

   /**
    * Data class: ASN1T_PersonalSafetyMessage_regional_element.<br/>
    *
    * Creates a new instance of the data class and appends it
    * to the end of the list.
    *
    * @return    Pointer to a new instance of the data class.
    */
   ASN1T_PersonalSafetyMessage_regional_element* AppendNewElement ();

   /* Get IE using regionId key value */
   /* index element type is forward referenced */
   ASN1T_PersonalSafetyMessage_regional_element* GetIE (OSUINT8 regionId);

   /* Get all matching IEs using regionId key value */
   int GetAllIEs (OSUINT8 regionId, 
      ASN1T_PersonalSafetyMessage_regional* pmatches);

private:
   ASN1C_PersonalSafetyMessage_regional& operator= (const ASN1C_PersonalSafetyMessage_regional&) {return *this;}
} ;

EXTERN int asn1PE_PersonalSafetyMessage_regional (OSCTXT* pctxt, ASN1T_PersonalSafetyMessage_regional* pvalue);

EXTERN int asn1PD_PersonalSafetyMessage_regional (OSCTXT* pctxt, ASN1T_PersonalSafetyMessage_regional* pvalue);

EXTERN int XmlEnc_PersonalSafetyMessage_regional (OSCTXT* pctxt, 
   ASN1T_PersonalSafetyMessage_regional* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_PersonalSafetyMessage_regional (OSCTXT* pctxt, 
   ASN1T_PersonalSafetyMessage_regional* pvalue);

EXTERN int asn1JsonEnc_PersonalSafetyMessage_regional (OSCTXT *pctxt, ASN1T_PersonalSafetyMessage_regional *pvalue);

EXTERN int asn1JsonDec_PersonalSafetyMessage_regional (OSCTXT *pctxt, ASN1T_PersonalSafetyMessage_regional *pvalue);

EXTERN int asn1PrtToStrm_PersonalSafetyMessage_regional (OSCTXT *pctxt, 
   const char* name, const ASN1T_PersonalSafetyMessage_regional* pvalue);

EXTERN int asn1Init_PersonalSafetyMessage_regional (
   ASN1T_PersonalSafetyMessage_regional* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_PersonalSafetyMessage_regional (OSCTXT *pctxt, 
   ASN1T_PersonalSafetyMessage_regional* pvalue);

/**************************************************************/
/*                                                            */
/*  PersonalSafetyMessage                                     */
/*                                                            */
/**************************************************************/
/*
PersonalSafetyMessage ::= SEQUENCE {
   basicType [0] PersonalDeviceUserType,
   secMark [1] DSecond,
   msgCnt [2] MsgCount,
   id [3] TemporaryID,
   position [4] Position3D, --  Lat, Long, Elevation     
   accuracy [5] PositionalAccuracy,
   speed [6] Velocity,
   heading [7] Heading,
   accelSet [8] AccelerationSet4Way OPTIONAL,
   pathHistory [9] PathHistory OPTIONAL,
   pathPrediction [10] PathPrediction OPTIONAL,
   propulsion [11] EXPLICIT PropelledInformation OPTIONAL,
   useState [12] PersonalDeviceUsageState OPTIONAL,
   crossRequest [13] PersonalCrossingRequest OPTIONAL,
   crossState [14] PersonalCrossingInProgress OPTIONAL,
   clusterSize [15] NumberOfParticipantsInCluster OPTIONAL,
   clusterRadius [16] PersonalClusterRadius OPTIONAL,
   eventResponderType [17] PublicSafetyEventResponderWorkerType OPTIONAL,
   activityType [18] PublicSafetyAndRoadWorkerActivity OPTIONAL,
   activitySubType [19] PublicSafetyDirectingTrafficSubType OPTIONAL,
   assistType [20] PersonalAssistive OPTIONAL,
   sizing [21] UserSizeAndBehaviour OPTIONAL,
   attachment [22] Attachment OPTIONAL,
   attachmentRadius [23] AttachmentRadius OPTIONAL,
   animalType [24] AnimalType OPTIONAL,
   regional [25] SEQUENCE (SIZE (1..4)) OF SEQUENCE {
      regionId [0] REG-EXT-ID-AND-TYPE.&id ({Reg-PersonalSafetyMessage}),
      regExtValue [1] EXPLICIT REG-EXT-ID-AND-TYPE.&Type ({Reg-PersonalSafetyMessage}{@regionId})
   } OPTIONAL,
   ...
}
*/
struct EXTERN ASN1T_PersonalSafetyMessage {
   struct {
      unsigned accelSetPresent : 1;
      unsigned pathHistoryPresent : 1;
      unsigned pathPredictionPresent : 1;
      unsigned propulsionPresent : 1;
      unsigned useStatePresent : 1;
      unsigned crossRequestPresent : 1;
      unsigned crossStatePresent : 1;
      unsigned clusterSizePresent : 1;
      unsigned clusterRadiusPresent : 1;
      unsigned eventResponderTypePresent : 1;
      unsigned activityTypePresent : 1;
      unsigned activitySubTypePresent : 1;
      unsigned assistTypePresent : 1;
      unsigned sizingPresent : 1;
      unsigned attachmentPresent : 1;
      unsigned attachmentRadiusPresent : 1;
      unsigned animalTypePresent : 1;
      unsigned regionalPresent : 1;
   } m;
   ASN1T_PersonalDeviceUserType basicType;
   OSUINT16 secMark;
   OSUINT8 msgCnt;
   struct ASN1T_TemporaryID *id;
   struct ASN1T_Position3D *position;
   struct ASN1T_PositionalAccuracy *accuracy;
   OSUINT16 speed;
   OSUINT16 heading;
   struct ASN1T_AccelerationSet4Way *accelSet;
   struct ASN1T_PathHistory *pathHistory;
   struct ASN1T_PathPrediction *pathPrediction;
   ASN1T_PropelledInformation propulsion;
   ASN1T_PersonalDeviceUsageState useState;
   ASN1T_PersonalCrossingRequest crossRequest;
   ASN1T_PersonalCrossingInProgress crossState;
   ASN1T_NumberOfParticipantsInCluster clusterSize;
   ASN1T_PersonalClusterRadius clusterRadius;
   ASN1T_PublicSafetyEventResponderWorkerType eventResponderType;
   ASN1T_PublicSafetyAndRoadWorkerActivity activityType;
   ASN1T_PublicSafetyDirectingTrafficSubType activitySubType;
   ASN1T_PersonalAssistive assistType;
   ASN1T_UserSizeAndBehaviour sizing;
   ASN1T_Attachment attachment;
   ASN1T_AttachmentRadius attachmentRadius;
   ASN1T_AnimalType animalType;
   ASN1T_PersonalSafetyMessage_regional regional;
   ASN1TSeqExt extElem1;
   ASN1T_PersonalSafetyMessage ();
} ;

EXTERN int asn1PE_PersonalSafetyMessage (OSCTXT* pctxt, ASN1T_PersonalSafetyMessage* pvalue);

EXTERN int asn1PD_PersonalSafetyMessage (OSCTXT* pctxt, ASN1T_PersonalSafetyMessage* pvalue);

EXTERN int XmlEnc_PersonalSafetyMessage (OSCTXT* pctxt, 
   ASN1T_PersonalSafetyMessage* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_PersonalSafetyMessage (OSCTXT* pctxt, 
   ASN1T_PersonalSafetyMessage* pvalue);

EXTERN int asn1JsonEnc_PersonalSafetyMessage (OSCTXT *pctxt, ASN1T_PersonalSafetyMessage *pvalue);

EXTERN int asn1JsonDec_PersonalSafetyMessage (OSCTXT *pctxt, ASN1T_PersonalSafetyMessage *pvalue);

EXTERN int asn1PrtToStrm_PersonalSafetyMessage (OSCTXT *pctxt, 
   const char* name, const ASN1T_PersonalSafetyMessage* pvalue);

EXTERN ASN1T_PersonalSafetyMessage* 
   new_ASN1T_PersonalSafetyMessage (ASN1CType& ccobj);

EXTERN int asn1Init_PersonalSafetyMessage (ASN1T_PersonalSafetyMessage* pvalue, 
   OSBOOL free = FALSE, OSCTXT *pctxt = 0);

EXTERN void asn1Free_PersonalSafetyMessage (OSCTXT *pctxt, 
   ASN1T_PersonalSafetyMessage* pvalue);

#endif
