/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).
 */
#include "DENM-PDU-Descriptions.h"

#include <stdio.h>
#include <stdlib.h>
#include "rtxsrc/rtxFile.h"
#include "rtxsrc/rtxPrint.h"

class ASN1C_DENM_Test : public ASN1C_DENM
{
public:
   ASN1C_DENM_Test (OSRTMessageBufferIF& msgBuf, ASN1T_DENM& data) :
      ASN1C_DENM(msgBuf, data) {}

   /**
    * Populates an instance of data class ASN1T_DENM with random test data.
    *
    * @param pctxt Pointer to an instance of the OSCTXT structure.
    * @return Pointer to an instance of data class ASN1T_DENM.
    */
   ASN1T_DENM* genTestInstance (OSCTXT* pctxt=0, OSBOOL free = FALSE);
} ;

int main (int argc, char** argv)
{
   int        i, stat;
   OSSIZE     len;
   OSBOOL     aligned = !TRUE;
   OSBOOL     trace = TRUE;
   OSBOOL     verbose = FALSE;
   const char* filename = "message.dat";
   const OSOCTET* msgptr;

   /* Process command line arguments */
   if (argc > 1) {
      for (i = 1; i < argc; i++) {
         if (!strcmp (argv[i], "-v")) verbose = TRUE;
         else if (!strcmp (argv[i], "-o")) filename = argv[++i];
         else if (!strcmp (argv[i], "-notrace")) trace = FALSE;
         else {
            printf ("usage: writer [-v] [-o <filename>]  [-notrace]\n");
            printf ("   -v  verbose mode: print trace info\n");
            printf ("   -o <filename>  write encoded msg to <filename>\n");
            printf ("   -notrace  do not display trace info\n");
            return 1;
         }
      }
   }

   /* Create an instance of the compiler generated class.
      This example uses a dynamic message buffer..*/
   ASN1PEREncodeBuffer encodeBuffer (aligned);
   ASN1T_DENM data;
   ASN1C_DENM_Test DENMPDU (encodeBuffer, data);

   // Populate structure of generated type
   DENMPDU.genTestInstance();

   /* Encode */
   encodeBuffer.setTrace (trace);
   encodeBuffer.setDiag (verbose);

   if ((stat = DENMPDU.Encode ()) == 0)
   {
      if (trace) {
         printf ("Encoding was successful\n");
         printf ("Hex dump of encoded record:\n");
         encodeBuffer.hexDump ();
         printf ("Binary dump:\n");
         encodeBuffer.binDump ("Data");
      }
      msgptr = encodeBuffer.getMsgPtr ();
      len = encodeBuffer.getMsgLen ();
   }
   else
   {
      printf ("Encoding failed\n");
      encodeBuffer.printErrorInfo ();
      return (-1);
   }
   /* Write the encoded message out to the output file */
   stat = rtxFileWriteBinary (filename, msgptr, len);
   if (stat < 0) {
      printf ("Write to file failed\n");
      encodeBuffer.printErrorInfo();
      return stat;
   }

   return 0;
}

ASN1T_DENM* ASN1C_DENM_Test::genTestInstance(OSCTXT *pctxt, OSBOOL free)
{
   if (0 == pctxt) pctxt = getCtxtPtr();
   ASN1T_DENM* pvalue = (ASN1T_DENM*)&msgData;
   asn1Init_DENM (pvalue, free, pctxt);

   pvalue->header.protocolVersion = 103;

   pvalue->header.messageID = 51;

   pvalue->header.stationID = 6989;

   pvalue->denm.management.actionID.originatingStationID = 29081;

   pvalue->denm.management.actionID.sequenceNumber = 19886;

   pvalue->denm.management.detectionTime = OSUI64CONST(513532698624);

   pvalue->denm.management.referenceTime = OSUI64CONST(1762869436416);

   pvalue->denm.management.m.terminationPresent = 1;
   pvalue->denm.management.termination = Termination::isCancellation;

   pvalue->denm.management.eventPosition.latitude = -899994961;

   pvalue->denm.management.eventPosition.longitude = -1799985572;

   pvalue->denm.management.eventPosition.positionConfidenceEllipse.semiMajorConfidence = 3675;

   pvalue->denm.management.eventPosition.positionConfidenceEllipse.semiMinorConfidence = 9;

   pvalue->denm.management.eventPosition.positionConfidenceEllipse.semiMajorOrientation = 758;

   pvalue->denm.management.eventPosition.altitude.altitudeValue = -89472;

   pvalue->denm.management.eventPosition.altitude.altitudeConfidence = ITS_AltitudeConfidence::alt_000_01;

   pvalue->denm.management.m.relevanceDistancePresent = 1;
   pvalue->denm.management.relevanceDistance = ITS_RelevanceDistance::lessThan50m;

   pvalue->denm.management.m.relevanceTrafficDirectionPresent = 1;
   pvalue->denm.management.relevanceTrafficDirection = ITS_RelevanceTrafficDirection::allTrafficDirections;

   pvalue->denm.management.validityDuration = 10215;

   pvalue->denm.management.m.transmissionIntervalPresent = 1;
   pvalue->denm.management.transmissionInterval = 3823;

   pvalue->denm.management.stationType = 117;

   pvalue->denm.m.situationPresent = 1;

   pvalue->denm.situation.informationQuality = 4;

   pvalue->denm.situation.eventType.causeCode = 15;

   pvalue->denm.situation.eventType.subCauseCode = 69;

   pvalue->denm.situation.m.linkedCausePresent = 1;

   pvalue->denm.situation.linkedCause.causeCode = 88;

   pvalue->denm.situation.linkedCause.subCauseCode = 188;

   pvalue->denm.situation.m.eventHistoryPresent = 1;
   {
      ASN1C_ITS_EventHistory llist4 (*this, pvalue->denm.situation.eventHistory);
      llist4.init ();
      ASN1T_ITS_EventPoint* pdata;

      pdata = llist4.NewElement ();

      pdata->eventPosition.deltaLatitude = -104099;

      pdata->eventPosition.deltaLongitude = -99425;

      pdata->eventPosition.deltaAltitude = 2936;

      pdata->m.eventDeltaTimePresent = 1;
      pdata->eventDeltaTime = 6702;

      pdata->informationQuality = 5;

      llist4.Append (pdata);

   }

   pvalue->denm.m.locationPresent = 1;

   pvalue->denm.location.m.eventSpeedPresent = 1;

   pvalue->denm.location.eventSpeed.speedValue = 13157;

   pvalue->denm.location.eventSpeed.speedConfidence = 67;

   pvalue->denm.location.m.eventPositionHeadingPresent = 1;

   pvalue->denm.location.eventPositionHeading.headingValue = 2689;

   pvalue->denm.location.eventPositionHeading.headingConfidence = 11;

   {
      ASN1C_ITS_Traces llist4 (*this, pvalue->denm.location.traces);
      llist4.init ();
      ASN1T_ITS_PathHistory* pdata;

      pdata = llist4.NewElement ();

      ASN1C_ITS_PathHistory pathHistoryC (*this, *pdata);
      ASN1T_ITS_PathPoint* pPathPoint = pathHistoryC. AppendNewElement();
      pPathPoint->m.pathDeltaTimePresent = 0;
      pPathPoint->pathPosition.deltaLatitude = ITS_DeltaLatitude::oneMicrodegreeNorth;
      pPathPoint->pathPosition.deltaLongitude = ITS_DeltaLongitude::oneMicrodegreeEast;
      pPathPoint->pathPosition.deltaAltitude = ITS_DeltaAltitude::oneCentimeterUp;

      llist4.Append (pdata);

   }

   pvalue->denm.location.m.roadTypePresent = 1;
   pvalue->denm.location.roadType = ITS_RoadType::urban_NoStructuralSeparationToOppositeLanes;

   pvalue->denm.m.alacartePresent = 1;

   pvalue->denm.alacarte.m.lanePositionPresent = 1;
   pvalue->denm.alacarte.lanePosition = 0;

   pvalue->denm.alacarte.m.impactReductionPresent = 1;

   pvalue->denm.alacarte.impactReduction.heightLonCarrLeft = 4;

   pvalue->denm.alacarte.impactReduction.heightLonCarrRight = 72;

   pvalue->denm.alacarte.impactReduction.posLonCarrLeft = 43;

   pvalue->denm.alacarte.impactReduction.posLonCarrRight = 78;

   pvalue->denm.alacarte.impactReduction.positionOfPillars.n = 2;
   pvalue->denm.alacarte.impactReduction.positionOfPillars.elem = rtxMemAllocArrayZ (pctxt, 2, ASN1T_ITS_PosPillar);
   pvalue->denm.alacarte.impactReduction.positionOfPillars.elem[0] = 23;

   pvalue->denm.alacarte.impactReduction.positionOfPillars.elem[1] = 22;

   pvalue->denm.alacarte.impactReduction.posCentMass = 22;

   pvalue->denm.alacarte.impactReduction.wheelBaseVehicle = 23;

   pvalue->denm.alacarte.impactReduction.turningRadius = 90;

   pvalue->denm.alacarte.impactReduction.posFrontAx = 3;

   pvalue->denm.alacarte.impactReduction.positionOfOccupants.data[0] = 0x61;
   pvalue->denm.alacarte.impactReduction.positionOfOccupants.data[1] = 0x35;
   pvalue->denm.alacarte.impactReduction.positionOfOccupants.data[2] = 0x6c;

   pvalue->denm.alacarte.impactReduction.vehicleMass = 863;

   pvalue->denm.alacarte.impactReduction.requestResponseIndication = ITS_RequestResponseIndication::request;

   pvalue->denm.alacarte.m.externalTemperaturePresent = 1;
   pvalue->denm.alacarte.externalTemperature = 54;

   pvalue->denm.alacarte.m.roadWorksPresent = 1;

   pvalue->denm.alacarte.roadWorks.m.lightBarSirenInUsePresent = 1;
   pvalue->denm.alacarte.roadWorks.lightBarSirenInUse.data[0] = 0x52;

   pvalue->denm.alacarte.roadWorks.m.closedLanesPresent = 1;

   pvalue->denm.alacarte.roadWorks.closedLanes.m.innerhardShoulderStatusPresent = 1;
   pvalue->denm.alacarte.roadWorks.closedLanes.innerhardShoulderStatus = ITS_HardShoulderStatus::availableForStopping;

   pvalue->denm.alacarte.roadWorks.closedLanes.drivingLaneStatus.numbits = 9;
   pvalue->denm.alacarte.roadWorks.closedLanes.drivingLaneStatus.data[0] = 0x64;
   pvalue->denm.alacarte.roadWorks.closedLanes.drivingLaneStatus.data[1] = 0x57;

   pvalue->denm.alacarte.roadWorks.m.restrictionPresent = 1;
   pvalue->denm.alacarte.roadWorks.restriction.n = 2;
   pvalue->denm.alacarte.roadWorks.restriction.elem = rtxMemAllocArrayZ (pctxt, 2, ASN1T_ITS_StationType);
   pvalue->denm.alacarte.roadWorks.restriction.elem[0] = 247;

   pvalue->denm.alacarte.roadWorks.restriction.elem[1] = 186;

   pvalue->denm.alacarte.roadWorks.m.speedLimitPresent = 1;
   pvalue->denm.alacarte.roadWorks.speedLimit = 165;

   pvalue->denm.alacarte.roadWorks.m.incidentIndicationPresent = 1;

   pvalue->denm.alacarte.roadWorks.incidentIndication.causeCode = 55;

   pvalue->denm.alacarte.roadWorks.incidentIndication.subCauseCode = 121;

   pvalue->denm.alacarte.roadWorks.m.recommendedPathPresent = 1;
   {
      ASN1C_ITS_ItineraryPath llist5 (*this, pvalue->denm.alacarte.roadWorks.recommendedPath);
      llist5.init ();
      ASN1T_ITS_ReferencePosition* pdata;

      pdata = llist5.NewElement ();

      pdata->latitude = -899996993;

      pdata->longitude = -1799983415;

      pdata->positionConfidenceEllipse.semiMajorConfidence = 3799;

      pdata->positionConfidenceEllipse.semiMinorConfidence = 3680;

      pdata->positionConfidenceEllipse.semiMajorOrientation = 148;

      pdata->altitude.altitudeValue = -93523;

      pdata->altitude.altitudeConfidence = ITS_AltitudeConfidence::alt_000_01;

      llist5.Append (pdata);

   }

   pvalue->denm.alacarte.roadWorks.m.startingPointSpeedLimitPresent = 1;

   pvalue->denm.alacarte.roadWorks.startingPointSpeedLimit.deltaLatitude = -125659;

   pvalue->denm.alacarte.roadWorks.startingPointSpeedLimit.deltaLongitude = -126164;

   pvalue->denm.alacarte.roadWorks.startingPointSpeedLimit.deltaAltitude = -7613;

   pvalue->denm.alacarte.roadWorks.m.trafficFlowRulePresent = 1;
   pvalue->denm.alacarte.roadWorks.trafficFlowRule = ITS_TrafficRule::noPassing;

   pvalue->denm.alacarte.roadWorks.m.referenceDenmsPresent = 1;
   {
      ASN1C_ReferenceDenms llist5 (*this, pvalue->denm.alacarte.roadWorks.referenceDenms);
      llist5.init ();
      ASN1T_ITS_ActionID* pdata;

      pdata = llist5.NewElement ();

      pdata->originatingStationID = 29465;

      pdata->sequenceNumber = 31833;

      llist5.Append (pdata);

   }

   pvalue->denm.alacarte.m.positioningSolutionPresent = 1;
   pvalue->denm.alacarte.positioningSolution = ITS_PositioningSolutionType::noPositioningSolution;

   pvalue->denm.alacarte.m.stationaryVehiclePresent = 1;

   pvalue->denm.alacarte.stationaryVehicle.m.stationarySincePresent = 1;
   pvalue->denm.alacarte.stationaryVehicle.stationarySince = ITS_StationarySince::lessThan1Minute;

   pvalue->denm.alacarte.stationaryVehicle.m.stationaryCausePresent = 1;

   pvalue->denm.alacarte.stationaryVehicle.stationaryCause.causeCode = 73;

   pvalue->denm.alacarte.stationaryVehicle.stationaryCause.subCauseCode = 144;

   pvalue->denm.alacarte.stationaryVehicle.m.carryingDangerousGoodsPresent = 1;

   pvalue->denm.alacarte.stationaryVehicle.carryingDangerousGoods.dangerousGoodsType = ITS_DangerousGoodsBasic::explosives1;

   pvalue->denm.alacarte.stationaryVehicle.carryingDangerousGoods.unNumber = 2900;

   pvalue->denm.alacarte.stationaryVehicle.carryingDangerousGoods.elevatedTemperature = 0;

   pvalue->denm.alacarte.stationaryVehicle.carryingDangerousGoods.tunnelsRestricted = 1;

   pvalue->denm.alacarte.stationaryVehicle.carryingDangerousGoods.limitedQuantity = 1;

   pvalue->denm.alacarte.stationaryVehicle.carryingDangerousGoods.m.emergencyActionCodePresent = 1;
   pvalue->denm.alacarte.stationaryVehicle.carryingDangerousGoods.emergencyActionCode = "rso";

   pvalue->denm.alacarte.stationaryVehicle.carryingDangerousGoods.m.phoneNumberPresent = 1;
   pvalue->denm.alacarte.stationaryVehicle.carryingDangerousGoods.phoneNumber = "8885551212";

   pvalue->denm.alacarte.stationaryVehicle.carryingDangerousGoods.m.companyNamePresent = 1;
   pvalue->denm.alacarte.stationaryVehicle.carryingDangerousGoods.companyName = OSUTF8("@jKc");

   pvalue->denm.alacarte.stationaryVehicle.m.numberOfOccupantsPresent = 1;
   pvalue->denm.alacarte.stationaryVehicle.numberOfOccupants = 52;

   pvalue->denm.alacarte.stationaryVehicle.m.vehicleIdentificationPresent = 1;

   pvalue->denm.alacarte.stationaryVehicle.vehicleIdentification.m.wMInumberPresent = 1;
   pvalue->denm.alacarte.stationaryVehicle.vehicleIdentification.wMInumber = "6p";

   pvalue->denm.alacarte.stationaryVehicle.vehicleIdentification.m.vDSPresent = 1;
   pvalue->denm.alacarte.stationaryVehicle.vehicleIdentification.vDS = "J03Kso";

   pvalue->denm.alacarte.stationaryVehicle.m.energyStorageTypePresent = 1;
   pvalue->denm.alacarte.stationaryVehicle.energyStorageType.data[0] = 0x65;
   return (pvalue);
}

